{"docstore/metadata": {"be98e7c9-4e90-49e2-81a7-07ac1fd35d92": {"doc_hash": "9bfba3d745c57038220add04b880fbbd0733ccbd7c64b3ee04251b3a89326609"}, "85e9bb06-be74-4639-94a1-004a8b9b2b54": {"doc_hash": "8d3b7a98d76a526cf325d8e9cd691e697fc4e70e8f708ac83e144368abdec0cc"}, "8caffd14-0d92-4254-89fc-270d4d4cb2d2": {"doc_hash": "6cef4f165b3e4c5c2f73e7f895592f1c47deef002af779bd73f7ffc62556e8e2"}, "aca655d4-48d0-4906-a1fc-59144bf88ae8": {"doc_hash": "0dca8c2d979a2f3c3f239cb16e7997f0d6b3877f4fea6043d17a9991d7318880"}, "5c79bfac-d660-49e6-8f49-a015b188b969": {"doc_hash": "bad59bddc70e6fc4cf1de6c6e55cb6110fdba4c33c0112bc39f65b1242b1ff36"}, "443aa579-8127-466b-bef0-cd9b6fca9960": {"doc_hash": "d19e4f3e7d6f951dbf6be0d75325739d301d75574ef8b643b84a7ed70e240d8b"}, "97e4f35f-6bde-4b6f-8236-be5d706a4e46": {"doc_hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285"}, "7c561a0f-20f0-4cf6-b335-25671c5887d6": {"doc_hash": "f1abf830633499ceb94d3c8224a67dddd145209e16b9b76a9658426418e5b7ab"}, "be3c6b3a-b65e-4d4e-9879-6d718864d880": {"doc_hash": "7090eaf69d87fc7ab5db7863e175f7a11fc584193e8947dfa32fa3eacd25f0de"}, "970fd705-2008-4368-9952-0b7a299d5685": {"doc_hash": "d199782ba01b5f5e1d802bcb908ef9e910bc64b7459945f393926466057acd2e"}, "6427ff42-612f-4121-b8a4-7a5f7c7ec8f5": {"doc_hash": "5a518643069dce450a2cea05749cebcd714105fc61b56f80733f1c7ab7ffdf99"}, "c3cab94f-0603-47d2-b3f3-4bc826e427c8": {"doc_hash": "40fd484fa3f43c4e34460b463ea7ed2e5d27ac6b517a91b6514369942d6d9ef5"}, "7349417f-d273-4fbb-a8e2-7d73519004aa": {"doc_hash": "af281357de40999493a733dd171b18be97bf03e8489e322b58150aa76a724ca4"}, "f0898c9a-75ce-4de5-afef-397043b63c8d": {"doc_hash": "2d2da2c9bc3f085cf4280bb21d1edab1abaf39328c1de0abfa9ffb3a3d4befd3"}, "56e374f9-fc73-4572-916f-51bc5f6974af": {"doc_hash": "eb465aa458287114ae6e23dcf1237f51ffbf72bf41615ae686bd51eab3a83fc9"}, "fcff91c8-cebe-4135-8865-ef4a8daf384b": {"doc_hash": "9938ed5bc11fe5871587dcbe6d3dc4901b9e8664bf345bbf9a1e16d067a66371"}, "db920cb1-1c33-4ffd-ab8d-42d6ded0b6b8": {"doc_hash": "59a92129b252d843d1e98b9857cf87e54f6ac5c2d616808d992e020943480328"}, "2c6a9a9d-f5fc-4890-9cb8-cbee687e04f7": {"doc_hash": "eb00a041a0cc8a0238fda604cdf00143b4abdebc0a6920e7d3a183cabcaacd87"}, "7f1f4b0d-1fd3-4fca-b61f-4bd7d2ff7ee0": {"doc_hash": "c7ab9d7c790ea277589c976dd8aa11242f9ffba6c34044ee0178c147efddf4bd"}, "c7eb5e16-a4b3-45d2-979d-0f0c763eff50": {"doc_hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8"}, "4bb52ffe-b46f-49f5-ba16-28fae42cda91": {"doc_hash": "2a0f1442e457e6c3953ac9cfab265843ce6aedfa1530ba3a76fbf0aa2993b320"}, "4f32464f-b65e-41e6-9a92-cdce7ff313ea": {"doc_hash": "e4225998885746169a1b178fd6fdc12ca0bf6cadde6b74155f06d6f7bbf8a606"}, "5b06faa0-7f52-4c18-bd34-af9b4a9ea686": {"doc_hash": "deae3f2702c68fb55a1c2e58ef4c5795f9b980d301e244f90a1cb6c3dbcd08b0"}, "4546f37a-6116-4f95-b1cc-d1c1c6d3c197": {"doc_hash": "f6fbe03a9abd15d7e0b974dad5d3fca8061a50213aba41802d067292533bf06e"}, "78cd45b9-c648-4b06-9121-1454b4a0e872": {"doc_hash": "d930ea6153b3d60cc2393590da00e149d44276e89d5222f9812b72640ccc6898"}, "28b6e132-69f6-4b82-9ce8-0c6ddaa3101b": {"doc_hash": "5bcd5a619ec5ea1b6c74ae9a30c7a8596b0ef24b8d3988b0746a4e1b61502174"}, "9714bf0e-f68a-4e29-acbb-2f45b68e1e31": {"doc_hash": "819747f1039d3d8fba7c122de0199c55c7d08ecd90b2c0eab58e1a974f2b6d1c"}, "1650a337-55f4-4296-afe0-5724ee00fa47": {"doc_hash": "b4f8b01d7f79d15a323ea1a2b16d3e9e489dbdbdaae33d78debec6d90faf9f03"}, "eddce048-724b-46f1-a817-d0c000e9602e": {"doc_hash": "45e27a36dc612fb311f21924dd794a0cd21b4aec0b494e25ef63b2e1024e8d76"}, "5847923f-bb29-473f-8b21-c5af1b9aef7c": {"doc_hash": "cb4b0b8f349201e7d57ada650ce2ebc8ce256f1102833c3bc020560cf5a4828a"}, "409be0c4-4d7c-4334-be34-033907d218ef": {"doc_hash": "7650a3268912e139f8b9d679d1cb33de81ac932f35e602989a77dc8896f420cc"}, "d59aaf51-68ba-445a-a31e-9207cef6e3a4": {"doc_hash": "9d6bb4086248d06accae3c1baaa34cc477186c85167706eb476daddada9f70dc"}, "72b8515f-4297-416b-a83b-786bb0e9a763": {"doc_hash": "31bbf03643d0ad19d58fe8ec945eaa893bf004124d3aaa3858b61be6070ab3b5"}, "55b6eb42-fb70-4251-b568-5f1336d0823d": {"doc_hash": "a738d920a21a7cc7eab708e0581a204e156c8a54b1a74e10e7c4894f0e2866de"}, "498c0339-c99b-46c6-9da7-f40bb8231d16": {"doc_hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a"}, "12ee5ab1-82af-4906-a4b0-a17830a35dc1": {"doc_hash": "d84013fee861369e164a15d86fea703b4c2dcc498618677bb000a02170fb7b16"}, "c1f53172-b5b2-4faa-b806-d55395f24284": {"doc_hash": "fdafa2d4f69026fa03004cd0a8297be7080a7d7a837b7055677fa9f701d931c8"}, "7647f46b-342e-4dd8-b042-3bfaf2bc0717": {"doc_hash": "6a83066bf527405de68601ca93192c62fe6c2e800e123b38f028abddd33e678c"}, "a52aba7f-2f91-44e4-bb88-604b60435ad9": {"doc_hash": "5365d082cca8306f08753ad43aaf1783cf41951ab52ed8d98b616ca36b8f24ad"}, "5b0a8fa8-6d08-4e30-acae-7b22be6c937d": {"doc_hash": "69d45480ee13be1cfcb65b4360d6d4e683505ccb36d8489c7f28e09a3e036a0a"}, "24935a9d-0ae4-440b-b953-5d217bec2e89": {"doc_hash": "39685a06d9f21c2c036df8e1d12a5b0487e9986526eff724e46214bdc6b20a6b"}, "8e61ef0d-2fc3-4c00-9d0a-821514a1aebd": {"doc_hash": "355b8426e1df6cf9116d365ca6767aca6205f9062921341e4398e1874d08ca13"}, "1d3ffb40-bad4-4f35-a5b3-443cfe14b6b3": {"doc_hash": "126c74d9f1c2ccdc9b532c96143e9cdb0844769497aed56d1171619827b26afc"}, "178a7c9a-6b41-4b42-bf7b-00921368bae5": {"doc_hash": "4151233ddf21b29f4c80a606ce3be0ee085e9fe704477342d12123872d7ce891"}, "398510a7-0b3f-4e24-ae6c-f3a4180f833e": {"doc_hash": "2a1384b24e22f818ea4b6c30803270c2ab99c5548c068412f1ae12dd19662ef0"}, "ce30f5c1-8d7b-483a-b46a-35dcad801512": {"doc_hash": "3e6e555f085feeb1496cedc9c4ff65378ffb24ef6099eb6bcff0373f8e8ab95b"}, "ce76623c-be70-411d-b117-ebb37e1f2f47": {"doc_hash": "2b12fa953e3f76380a6ab9b6b5451b798cc3a07e155f47f5bcc1710dd16d266c"}, "44ff65cc-54ff-45ff-a0f4-6dd31e0426a2": {"doc_hash": "204ec5e36a6738c85fb637621109e18392555c2b6ac120bc2eed32b0d3b60207"}, "939b4bde-b0f8-40eb-aae3-6b09cb3a29a8": {"doc_hash": "c06b0ff8adad7b63823fba5a91599f9768916489241864cc9c91f6ea0c335e9f"}, "98e65e4e-7f3e-4748-9516-6d8f8da866a0": {"doc_hash": "b0a6576f863e04ecf27fa3c502fdd7e2283bd5dc493d2c067ed830afd9dc5eda"}, "9adfac0b-d555-4e13-ae0c-95797fa3df22": {"doc_hash": "78014355356023a815c144998dd98101b73e0bc5382a1f544b100baadb692f6b"}, "ae0cec2c-5c1e-4056-925b-037774210e3e": {"doc_hash": "a6bc117841d7202b1a67dcd2da9e6cf37b009ce590e030a174fc92a09ce4f326"}, "b515e0f6-863c-4266-9a76-df6068f22897": {"doc_hash": "22ca61817ca2c2acb89be483adee4f0dedd9283e9c49bc8cfbd44a2f28a81fad"}, "23ee1484-af0d-48e5-bab2-814c7ca349fc": {"doc_hash": "38ba9ab13249535ff12316a5fac71c69ad041a8e92181a5948c5519a348ac337"}, "d87903c7-0fdd-425c-86cd-8ab5350884a0": {"doc_hash": "7be8a7a70ae569ebc86e83fa8059a2b77d488c155110e84879fad6f46564c20c"}, "b307c9d7-d78e-4ad4-95d3-414e7a7d1834": {"doc_hash": "02af12b27552f13ccf8846a6513f366f9cdb4cb877fc43b5d50c665543b0a49e"}, "004fa39f-8aa7-4f4e-9a1c-39d8241d7259": {"doc_hash": "34c37b6b3da7bd79fc0ac492c2f10ddbf9c03a4160f4c97edbc939b8f6265336"}, "ee3206c5-4ad5-4890-a5c9-36b47c327d9c": {"doc_hash": "e13dc53b0fb3c01e0320d0026a3441b4c6cd6d62a95b65bdb9705e34e6e48eee"}, "9ac152c5-f50f-4a6d-835d-0d01b9276191": {"doc_hash": "aa4f925dc95ef6d82a243261e5b8b2f0833a51fe11f1f48e03f53183a90f6dcd"}, "bdb922e5-53be-45b0-a527-1a61b598b632": {"doc_hash": "140d473982f60d7f94a78df9b761aa135d567172f4c04e97739ee16805c21d47"}, "261e5497-18e7-48ce-862b-4095551c0cd0": {"doc_hash": "90f5a40d2bbe54987fb5377cbf79c50f937b9878d14b9e005c54b1aba3721c33"}, "39d7a9b3-1e56-4cfe-bb94-659ac50e28d7": {"doc_hash": "4ccbffcffef01a93159b700f2ab1158281e6d478a02257e535a8b0eb10f649c0"}, "f947c0c7-a296-4e50-a8aa-3fe254075d68": {"doc_hash": "fd0dd43ef9a6ac9b24d8f1a60582a137f54f04ffd848b0825833b74e4283e491"}, "82875dee-f7cd-435d-bbf7-b4de07fbb1f5": {"doc_hash": "6c5f43340bc9e0187691e5b436f78f19bfadcca1585084387badb7e69ab14405"}, "1f108b07-b30d-48cc-ad09-75f3ac65eb06": {"doc_hash": "56ca2fff4248543c51114fa5fc0463b9a076e29e7b352620b87b0ea4d520db36"}, "2517957b-aaed-4bc5-9a18-99e9c29716f1": {"doc_hash": "2cdac9838e5c499839513c753f4516740d7ebfdf9d8bef75736ade43d7cff746"}, "3b0d5bc4-34b4-42e2-8b8e-14c8562acff3": {"doc_hash": "4642013ee644c6f4e00d304ce775e9613f001ccd632a1643d940c3d8a4d4975e"}, "c0158aed-8723-4d76-aa49-eadd831d5ab5": {"doc_hash": "0caee5db7bb4119bf1a70f19311b14a29fc775f6f4784f3e95150a8a48c14c31"}, "677d6e97-90eb-447f-8058-b9482ea54f95": {"doc_hash": "eacb6cbf1434f10ca0d11bbf5cb3c7b93f26c39a168de46dc6d0b314b82371c6"}, "a3c16477-2926-4c75-b592-4cef083158db": {"doc_hash": "d0c9ef07ffdfcc69d555c6a122304486c5e485e9b4bd34173df0f9349188cd9e"}, "39b547bb-804f-4f7a-8031-79b9b52f27be": {"doc_hash": "202d7e6747de18131be0a2da64c25ba3c731fd52002e9044259b7818482c7b9d"}, "ea0d6271-e730-4ee7-9b0f-4bfe425c7d0c": {"doc_hash": "fadae49c7ce9b600182615fdf08b0ac889b0a0fd12bbde631e0724655b21df31"}, "8f0bbc13-f09e-4868-b5e0-828f7d848621": {"doc_hash": "183735031b6aecc928e4571aa638758b3584af2787aa4db77744a4a70e515c05"}, "2c130b57-4957-4ad1-b83c-79aa855d2c71": {"doc_hash": "b46b7d6c699b77c4dc10d10ae82b33e9fef81f053933d1ca7215d924a8657997"}, "0c57a3ae-ce77-4b6b-a420-599c800e0cd3": {"doc_hash": "2b5be6ac31bcc85d062ee50f3323dbb7cab319411b58be46cb7aed7c68211486"}, "2598f875-b30b-4020-b43b-9616f916613f": {"doc_hash": "d0e303bbd4d23d17b2a9e7220f85e67c3ea9f539fc55ea6900551105501ad035"}, "5852d18e-8e7d-4d5f-b076-8498e9714b1f": {"doc_hash": "157a8125a3b214169b4862cc2da2305204c77b3cd6d912860edf3ceb2d42b5dc"}, "928e68cc-7792-4256-a025-c53311bf60a6": {"doc_hash": "dc3cee809814716872256b6457757f864e333380df4dafa5f5d9dd196344b02b"}, "99274421-20d3-4808-8fd2-a4e9b82076fe": {"doc_hash": "a2572d6c1fcb48249171a165a728153131da7931ca33790749211b64508f3094"}, "b224aa5d-5b20-4e74-ab95-37413dc20c6d": {"doc_hash": "713cc826d373dc6b429bf00137574345701c3302349f15a720e603279b630d69", "ref_doc_id": "be98e7c9-4e90-49e2-81a7-07ac1fd35d92"}, "16f92de5-2f38-4718-89d2-8d64f2d07972": {"doc_hash": "b420ddcefa2d5a25a512149aafec5eb3a7876325787b9ab0ef6da48296bab1b8", "ref_doc_id": "be98e7c9-4e90-49e2-81a7-07ac1fd35d92"}, "f3d3b81d-a2f6-4ccd-8c4b-1736bc161d29": {"doc_hash": "1e77ca84d5e82d6eab23c6f1b7b36a42ee3e91db552706996102858879eccc3b", "ref_doc_id": "be98e7c9-4e90-49e2-81a7-07ac1fd35d92"}, "36e68ddb-d1a2-4f07-b231-a2cdee5be55e": {"doc_hash": "71f3d2f8a54217bea42491916d30954e7f7aa7413690631d059c2efd50bf5025", "ref_doc_id": "be98e7c9-4e90-49e2-81a7-07ac1fd35d92"}, "fa9f2621-dda8-4a65-9b71-e888083c5ff2": {"doc_hash": "226fb0ff620a95158efdc53b519abe90dd2d926ba1836baf75369de233ca8baa", "ref_doc_id": "be98e7c9-4e90-49e2-81a7-07ac1fd35d92"}, "c0615ec3-8c73-4e9b-9aad-e41283170e40": {"doc_hash": "c000ff87a67b683dd56d85049f90f4a41463ca2f824a735358b871a61b1dc8df", "ref_doc_id": "be98e7c9-4e90-49e2-81a7-07ac1fd35d92"}, "ebdd7bdf-e134-4f1c-9463-bb9ba5c5c79c": {"doc_hash": "80ad1d07d18b8b2f253b594246420a1d650704d49b666bf62ad3bfa187be5136", "ref_doc_id": "be98e7c9-4e90-49e2-81a7-07ac1fd35d92"}, "2a65a7c7-a69f-45fd-abac-11a4a7c5746d": {"doc_hash": "926be63ce558fc50f2ef290f9cfd66c18ac4235825b1be2504867f0474c3600c", "ref_doc_id": "be98e7c9-4e90-49e2-81a7-07ac1fd35d92"}, "d9b04687-a1c6-43f5-bff3-7c99035b91fa": {"doc_hash": "b550fc044e6980d14311fef8524fa5ab87bed0812b67b45322af42b03c02dbe0", "ref_doc_id": "85e9bb06-be74-4639-94a1-004a8b9b2b54"}, "449b824c-79ea-42ee-bf70-601f801ac3e7": {"doc_hash": "e5bc3ff4cf8910af4523b67baf131e048a8d03ef07a119ab5028cb33f2d0e1aa", "ref_doc_id": "8caffd14-0d92-4254-89fc-270d4d4cb2d2"}, "e40006b3-5094-4355-87aa-c3b4887ff2c8": {"doc_hash": "6d92cbcc32aaad5d3df728e41db1c06d7c10624b46003c09fcba0aa8e2f04095", "ref_doc_id": "aca655d4-48d0-4906-a1fc-59144bf88ae8"}, "e9472573-a72d-4cee-ac87-b5ada35366ab": {"doc_hash": "503bfaaf2120b7448b6b03c8f1f6a76cf545b8188071587639dc9dc93bb1bd9c", "ref_doc_id": "aca655d4-48d0-4906-a1fc-59144bf88ae8"}, "361611d3-d56e-4d79-a530-97066895fcbe": {"doc_hash": "290dc76a857d41671a66127e2429e192dfd387dd84c10e7d414bfb6aab6cdb97", "ref_doc_id": "aca655d4-48d0-4906-a1fc-59144bf88ae8"}, "dce3b43e-cc8b-4818-98b4-f0917ca105e4": {"doc_hash": "93e3d01e6b4028032afa0553f8731d3954cbc2ff3d056bdb461dbd0ed95966b5", "ref_doc_id": "5c79bfac-d660-49e6-8f49-a015b188b969"}, "300c928a-fe98-41f3-93aa-668b157e538d": {"doc_hash": "678a779879f58ac66d7851d74fc7a340bd1e9c06e30c7deaf0cb5ea9ff0670d0", "ref_doc_id": "5c79bfac-d660-49e6-8f49-a015b188b969"}, "9ab4a477-50a9-4d85-83af-cc895aeeef6c": {"doc_hash": "2145ba315a21653eb95f6d258de4049079564c35295d3becdedec87a5a3002ce", "ref_doc_id": "5c79bfac-d660-49e6-8f49-a015b188b969"}, "1df83d59-40b9-4e72-8ada-9a603f3666a1": {"doc_hash": "ab0735d51d3aea3e6ce15ebb5ca62e92629571fcf4bf181acace571444fabb88", "ref_doc_id": "5c79bfac-d660-49e6-8f49-a015b188b969"}, "ae886e43-6248-4087-b0ef-e8205269e673": {"doc_hash": "7fa873dc7f78cdfa2216c468c024bd224bef181aa10953e76783321550ed042b", "ref_doc_id": "5c79bfac-d660-49e6-8f49-a015b188b969"}, "02b7d698-8726-4538-9623-eb5a6341c6d6": {"doc_hash": "5a01469c17ca45efb0d6e977483c277fc2771bab2f0d90473a8eb9566d956f7d", "ref_doc_id": "443aa579-8127-466b-bef0-cd9b6fca9960"}, "97453c33-303a-478d-aa29-607143ed13a3": {"doc_hash": "dcba0c51f7e7f30d803a97e67c39a9f79202cf6f89704cd21cdcc34d9e7a1083", "ref_doc_id": "443aa579-8127-466b-bef0-cd9b6fca9960"}, "ea6047f5-dbcd-47cf-b040-3522d14d5587": {"doc_hash": "571e5fb6e4e01cd509a095479707c1586871a0526090796c49a8ac64dd565cf9", "ref_doc_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46"}, "c3a62793-b06e-4cb7-adf6-bf2b4160b111": {"doc_hash": "4aad713754e7c3add359b9539e444563aad3d1c1f7ac294e2ebfb3c1046d8d52", "ref_doc_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46"}, "ce4084df-57d8-4cc7-b3a3-7696cb2de52e": {"doc_hash": "8cd9c3b9a04787ee1afa73f507cc44ed6167ce1bd96790e4357281a08e19ea28", "ref_doc_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46"}, "54f00328-43e3-454d-91b3-e244c7acc80b": {"doc_hash": "45e6aaee74bb678ca7fdce60ad285e2650e04765951647df433aa6c21a62b739", "ref_doc_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46"}, "a63ed03c-d6e8-4c7c-b828-c6add4a972f2": {"doc_hash": "b329683ef81d8203a6faacebe75da3540793a0e8268f8af88411b5bd9068a0c9", "ref_doc_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46"}, "edaba920-c91f-48ac-9994-a9501d25cd35": {"doc_hash": "e0cdd447ec5afe60c9fe36741dc4f0e7528c09b13bb0f8ef7ec8f0f1e3ca7810", "ref_doc_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46"}, "4b9888f2-14c8-489a-b83e-98d23f3c1337": {"doc_hash": "90ef2100e09723a062bd4b40eddcc454988f3e0dc5b9d2043b22ef76685a1b0a", "ref_doc_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46"}, "dc64fef6-7908-4b23-8a41-f042fe7e53ba": {"doc_hash": "e4b9fa2120e03b7899c2692ea4a9aa67d685f6fa597c3206f00e2023f2484541", "ref_doc_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46"}, "6e503e99-4014-42f3-a6ab-5708251a44da": {"doc_hash": "92decbbee6cef7fc89af1c558699a718239a86f7053fde5592912cb33f82068a", "ref_doc_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46"}, "78938bf8-8cfe-4976-b8e3-1cbf6629b05f": {"doc_hash": "6f4034a233f50e85c6e150e0722d7d86f613a23f0fcd68d295694cbfc4750f51", "ref_doc_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46"}, "af4ccb0d-414f-420a-a190-d362b3bfca08": {"doc_hash": "496f571170585863dd806529127a8e6d09110cad9b14d88e19f38aa1b3169809", "ref_doc_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46"}, "bf76fe7b-669d-4672-abaa-cfe6307cb06a": {"doc_hash": "70b1f4a49f21f96a4060da45dd32f2169dd4835b239ebc56aba796c8fe9c1a6a", "ref_doc_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46"}, "99e2ccae-6fbf-4b97-8d02-ff9238de3550": {"doc_hash": "b2c40ea16baa96afc350ce6bbfb17914330fc76d310b6667dd6bcfecd3826f9b", "ref_doc_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46"}, "d846f23e-2fc8-4086-993c-23bea8419b19": {"doc_hash": "db12a45a656ad1836495e9c6157a6befac93c9aecd2a79ed089ea907d91f7e20", "ref_doc_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46"}, "8f7856d3-6413-4de0-95c2-779a72cbe8a3": {"doc_hash": "c0b0a9e1e6590bd183ed81949a88d2b74a81491dc4ae7e13cd76d615fb4e1879", "ref_doc_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46"}, "0a2fe23e-55db-4de5-ac08-4cbe339f6379": {"doc_hash": "383aa26d50f2a96d2a5b8ed8ccc71328a242068ada953bbe03c256ab9a576739", "ref_doc_id": "7c561a0f-20f0-4cf6-b335-25671c5887d6"}, "36f25646-dabd-46c1-9f0d-25bf77fe6187": {"doc_hash": "cc8548258934723b1e6cb0479894f3fb237f8d7db09aaa7c265e551f7b72970d", "ref_doc_id": "be3c6b3a-b65e-4d4e-9879-6d718864d880"}, "ed2494eb-0d36-4fe7-8496-ae6052bc5fcd": {"doc_hash": "d7f6e0ac4a6adb7579ab83f97d1c0fa1a600196d153a1e7960afb9a0e98177c4", "ref_doc_id": "be3c6b3a-b65e-4d4e-9879-6d718864d880"}, "2504c661-7fb9-40d3-8573-8833b6268ebf": {"doc_hash": "16a30937f2539ec30369663bd94ed46aac1126029ebdc1d035c45497e3d955ac", "ref_doc_id": "970fd705-2008-4368-9952-0b7a299d5685"}, "99bdedcc-0a82-458a-8f21-0586be08b627": {"doc_hash": "7114dbd616268edf0c9ab410eee2182a534de521ef624066bff9a8149b02e2f7", "ref_doc_id": "970fd705-2008-4368-9952-0b7a299d5685"}, "af4a8db1-7dd2-4463-a81c-1ca8f6cc5894": {"doc_hash": "d815a7b10eecdbe0881f8bec7150e2c4c89c5b8dda6efd7ed44f1f1ed8a03660", "ref_doc_id": "6427ff42-612f-4121-b8a4-7a5f7c7ec8f5"}, "a8585373-f66e-4eb1-808d-e85a03b1d4f2": {"doc_hash": "69b51b3df9f723a0ae65e4207e134c422e45bd4bf14f6ffb0461d3ec0097e71e", "ref_doc_id": "6427ff42-612f-4121-b8a4-7a5f7c7ec8f5"}, "dde33635-f890-485b-bc29-a16db7f32c5f": {"doc_hash": "0f11fecaf115a2ed56e8a517ebcd1a63837f5f5602360aece4b6cfd1b7602e44", "ref_doc_id": "6427ff42-612f-4121-b8a4-7a5f7c7ec8f5"}, "e64cab35-80ea-4c3b-8391-72913438ba57": {"doc_hash": "543ea2384bbb94de3aa9fd0fd02c4e215de8c209729aad51642d3a09a6eda8b7", "ref_doc_id": "6427ff42-612f-4121-b8a4-7a5f7c7ec8f5"}, "8fa46231-328a-4413-82ed-5f65454f935c": {"doc_hash": "5a9392a5e5beada8dcf1213618505d7441f4b9aac7c6be1bd4c4f2a0857d6e8f", "ref_doc_id": "6427ff42-612f-4121-b8a4-7a5f7c7ec8f5"}, "476fc01b-a1b5-4be5-98d9-91f66f73b672": {"doc_hash": "f7f91477edffd125d1532ef2c755d34e47fd44d3921d66f0d86a6ada2266df8f", "ref_doc_id": "6427ff42-612f-4121-b8a4-7a5f7c7ec8f5"}, "cc756a10-eb5d-494f-a34a-2ffcf12fd13c": {"doc_hash": "8414d0e6f6015754c8c0d1e4d3177f0bd98cc23f2cb697f58fafbd3e855ca6ab", "ref_doc_id": "6427ff42-612f-4121-b8a4-7a5f7c7ec8f5"}, "d23bbf72-3cf5-4aa5-acdb-8969bb0e612a": {"doc_hash": "62967373ca8f8ac5203a63e5b6b7c8e84ff8f0268ee150433567235ff25e5b34", "ref_doc_id": "c3cab94f-0603-47d2-b3f3-4bc826e427c8"}, "8fef941d-185d-4680-bcd2-77516555320c": {"doc_hash": "d678a7a8c11432b7aabe399a9b6646ef1f25b2716962e66f4c55af474b0611a6", "ref_doc_id": "c3cab94f-0603-47d2-b3f3-4bc826e427c8"}, "c4fbab3c-c9ec-4704-bfd1-4cafc598f478": {"doc_hash": "b652d2c29aec1afd173b9a3b6b590b52778d364efcf0b9d0ba7c4cf3828bec82", "ref_doc_id": "7349417f-d273-4fbb-a8e2-7d73519004aa"}, "a2de6d7d-1cb7-4035-ae88-2c1b2c0a9303": {"doc_hash": "ddb6fc0a1ec75881121ca81ada1c932caa3d0b8b12e61049e4322e8a057bf301", "ref_doc_id": "f0898c9a-75ce-4de5-afef-397043b63c8d"}, "8487b2ec-4ed4-4a3a-bc75-28c74824a03f": {"doc_hash": "4e6802d30be29b40377099edd1c13a5a923cc809c71e83c75a95a4d6200dd29e", "ref_doc_id": "56e374f9-fc73-4572-916f-51bc5f6974af"}, "1ed5b15b-7cf2-4d09-aace-cd8961c532d8": {"doc_hash": "373c079ed30420d91bc12adac33ea3f1ffbd304348f31a7a801308522554d58d", "ref_doc_id": "fcff91c8-cebe-4135-8865-ef4a8daf384b"}, "838cd609-dd26-4182-b8b5-0ed34a33cf33": {"doc_hash": "b72bbeb0bd56b74ddcf86ef010d51fa86ac022e56f631daecd50a1914eec16ee", "ref_doc_id": "fcff91c8-cebe-4135-8865-ef4a8daf384b"}, "329808fb-56a2-4f27-9675-89f8c8aa5ad8": {"doc_hash": "534df87b0a01a6fecb0d0dafc54a821d4ffdf2342801b0c812919182ff91d2e6", "ref_doc_id": "db920cb1-1c33-4ffd-ab8d-42d6ded0b6b8"}, "209ca758-f17d-4099-bd02-53e2124c728b": {"doc_hash": "170977be7132fd2a70779b19be99bd72c5e5868a532f9985f8cb526d93999a8a", "ref_doc_id": "db920cb1-1c33-4ffd-ab8d-42d6ded0b6b8"}, "1a750fa4-5467-4b6f-aa77-b3fb347c3883": {"doc_hash": "fd710d7ff1b8f84eddbc35810bb882274b09be2b462aef2ff2e1b386b8551ca3", "ref_doc_id": "db920cb1-1c33-4ffd-ab8d-42d6ded0b6b8"}, "76015408-5fc2-4ab0-a11a-c9b7a2f2aff3": {"doc_hash": "d8036a0260de1481d2aeab1d7bf0f6fd0015a6897873ea9f6902659106ec1ad4", "ref_doc_id": "db920cb1-1c33-4ffd-ab8d-42d6ded0b6b8"}, "e511f9a2-156d-44a3-9a9d-2304c96b45e7": {"doc_hash": "6ca09aa3731ce55a4d12490e4d5ac235c4c31578f3f864cb8464144d88f9d193", "ref_doc_id": "db920cb1-1c33-4ffd-ab8d-42d6ded0b6b8"}, "4c459735-9a34-449b-8a47-a07a20f5f886": {"doc_hash": "a842b11a0067dc32b10c57bc0e9b77b95b9575a956f59f9df0e1b08a240fc48f", "ref_doc_id": "db920cb1-1c33-4ffd-ab8d-42d6ded0b6b8"}, "f7bddc7e-e3c5-4a55-9917-591a47a19856": {"doc_hash": "b92fd749b5a9f3f08926dd2d786a7ed9f50671d5e60bf81dabb794855f7f2515", "ref_doc_id": "db920cb1-1c33-4ffd-ab8d-42d6ded0b6b8"}, "89d7b5ed-84ad-4b4c-9789-6ba5849ef3c0": {"doc_hash": "fc71e8abd5ed607a7a381df3c982121c741e4d2df668346fd837eb1afd47f169", "ref_doc_id": "2c6a9a9d-f5fc-4890-9cb8-cbee687e04f7"}, "bb5efd40-d06e-4010-a220-bc57f425958d": {"doc_hash": "89b4bf35e7c596a369466f0d4f0240e93d95d14129561926e40b7198dd1fd65c", "ref_doc_id": "2c6a9a9d-f5fc-4890-9cb8-cbee687e04f7"}, "578dda64-2bfc-49d7-b8ca-12d89609831f": {"doc_hash": "bdc032fc8a5a5b5e7189102f29509745b0bf2ee8b46602cf6b94afd0b5d753d5", "ref_doc_id": "7f1f4b0d-1fd3-4fca-b61f-4bd7d2ff7ee0"}, "bff4348a-86a9-43f9-9503-e1453bb23bfc": {"doc_hash": "456f88fa5eeea249d6ec811635fd12e264902b0cb5744022280f709be40d622b", "ref_doc_id": "7f1f4b0d-1fd3-4fca-b61f-4bd7d2ff7ee0"}, "724f114f-6068-4305-a7b3-f415690422b7": {"doc_hash": "076ab89f512fe15b85a616d8aa594887899c3e53d92cab0b7fa03ba1a7e55823", "ref_doc_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50"}, "b1f07189-9788-4c79-961a-e896ed1ac29a": {"doc_hash": "13aa0d0d9dd76a4f698da0afbe22c1106129376d0691003ef8f74a6a6b2c9284", "ref_doc_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50"}, "a4d85283-3289-40b7-8059-61b7046a09e5": {"doc_hash": "d1f948cdf5b7836008df9be03e38203ff9629e98e151cd2fa63a2269c141b7d3", "ref_doc_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50"}, "393eac91-abe3-4c7c-ad6e-bc26e724b24e": {"doc_hash": "21b02e0e17c9477b540f3635cb376ee4cf508bb1629f13b650e9d7817ed929b6", "ref_doc_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50"}, "28fcd9f8-7f9c-4293-94a6-9e91d99f6702": {"doc_hash": "084aaad31d78498051a287d1f6406d8e817a5a65d7751301b8de7ff6bb13b8db", "ref_doc_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50"}, "dfd27381-05c0-423d-bdad-60abfd0471c7": {"doc_hash": "f3ec1d760487ad381ee5cfaa4cedf0e14c84ee0b1fe8b185f173816b065b6bce", "ref_doc_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50"}, "ad23e2ff-0ade-4b91-8c39-339296e76fe3": {"doc_hash": "0aac5b81e8fb9685170c21eead06a156b73963354aa41432afa82440ea732d24", "ref_doc_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50"}, "08140ac0-279e-4826-a4bf-739384ab10ae": {"doc_hash": "a90e47cd6e5394304467cb2f5e7dd92019136927049a99f4965f1f164b016eba", "ref_doc_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50"}, "4240b43c-62d3-4648-b5c5-bc8349c41798": {"doc_hash": "3f6bee1db98c968354fc2c182ff928b3a10169156976b0c2769975dd1bb50774", "ref_doc_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50"}, "25727a6b-2815-45e8-b262-bdfc5d8fe609": {"doc_hash": "02aeea8c90d46b119c623ff8a1614cd9ff15f2c5324e8cb7b1b9d759c1674d91", "ref_doc_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50"}, "2c7e82ec-d3da-4848-918d-22da95052611": {"doc_hash": "df12ece78ee8bf74e206f6b44ce27b6779e70bd2bfe57cc2af0e308eb1876db7", "ref_doc_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50"}, "e913814e-a95d-4e7c-b918-d8567b4b1ef1": {"doc_hash": "966491657fbd755ce1001aaefc187495e43fc812c588005fbf812f87bef1ab10", "ref_doc_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50"}, "479063a9-72b2-4fef-a8fd-9837d6a5853c": {"doc_hash": "d0ac3cbd8b4d0f705dc2a66ab9289032f329ef7d4e2c463a25bdb6e2d68e4d3b", "ref_doc_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50"}, "8ca47cd8-b5de-4f52-a529-3c05633f6625": {"doc_hash": "8e9fbfe512bef585e1cbb159162501b13cae86e9793d9dba4da045ebe54f0ccf", "ref_doc_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50"}, "91d28c67-874e-4318-a623-c86cf5ecc401": {"doc_hash": "462b6212b9cac8e94acd5602f033600bdf942e081cbcf77866e2a5d1e036b1d0", "ref_doc_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50"}, "5020c5c5-bcf8-4620-bba9-a1b6b1fc9cbb": {"doc_hash": "939eba3a823db2cea0a6ce532cd64cc9bc7768352d63984c8b162da2cb4bb8a9", "ref_doc_id": "4bb52ffe-b46f-49f5-ba16-28fae42cda91"}, "975fbbfe-c223-4437-bed8-3199a07b3478": {"doc_hash": "3e5d45f632948a48c5fe0b241a0f9539d2d54992962a841f03ac18f95740a037", "ref_doc_id": "4f32464f-b65e-41e6-9a92-cdce7ff313ea"}, "a433ea1b-c232-4793-b983-6465f268cc7d": {"doc_hash": "373c8865109b46a1bc664795b2b3b23ce21cfeafc66b58d7ffce6ce115e271df", "ref_doc_id": "4f32464f-b65e-41e6-9a92-cdce7ff313ea"}, "9d320dac-f938-4a5e-8e74-5313e3f70bb4": {"doc_hash": "c0e2815393e3962297c0fb597b36ce37a86a29b564a00dea88b0e25f94d571cc", "ref_doc_id": "4f32464f-b65e-41e6-9a92-cdce7ff313ea"}, "b156501d-6ff0-4ea1-a023-742be0cebd2d": {"doc_hash": "028f0120f9bb7b23dff3019c7dbe42fbf4f8f974489db072333276bb34bb40e3", "ref_doc_id": "4f32464f-b65e-41e6-9a92-cdce7ff313ea"}, "a5c075f8-2c2a-4b8b-afb3-77cc5b42ae03": {"doc_hash": "e2397fe6c60ca3b865a3270134859059f1c2a9a6ba4092c3942114defa993473", "ref_doc_id": "5b06faa0-7f52-4c18-bd34-af9b4a9ea686"}, "50e9e701-b63a-4adb-a9b9-13401b0a6950": {"doc_hash": "02f0ae0c02954a5b0854eaff6d6c93616d07993e22cb1111a95a998770143c44", "ref_doc_id": "5b06faa0-7f52-4c18-bd34-af9b4a9ea686"}, "63169379-b403-4430-a4da-98f0ddcda751": {"doc_hash": "af6cba188555cf007d42e11cef64f5e5cb8624a18688c75b89d79085767e4548", "ref_doc_id": "5b06faa0-7f52-4c18-bd34-af9b4a9ea686"}, "0b292042-67de-4ed2-a1b8-539b4fcad411": {"doc_hash": "7c4d72e17ddc6e437ce27043f8e6e59d95b8589807bb9eb4a8c9d2a0eb6abf38", "ref_doc_id": "5b06faa0-7f52-4c18-bd34-af9b4a9ea686"}, "c453bb53-2b3f-4417-ac8d-aebe97791352": {"doc_hash": "ab786e565eee507bcbccb1507f26710646d22ef2d9cf7ee2fc4b4731305761f9", "ref_doc_id": "5b06faa0-7f52-4c18-bd34-af9b4a9ea686"}, "50da09b0-e801-4283-8c10-f121c4c90b43": {"doc_hash": "8ab300ee1a65d302bbde19f58f424ef43a3016ce920ce4c4678600db2b08406d", "ref_doc_id": "5b06faa0-7f52-4c18-bd34-af9b4a9ea686"}, "bef25572-2a77-4ab6-b4e0-3dece54b4e8f": {"doc_hash": "6247f2419a45683a54349f31b7f6cd2a94d68fe2c326ec9790c59d6f57b1953f", "ref_doc_id": "5b06faa0-7f52-4c18-bd34-af9b4a9ea686"}, "2d229f0f-d836-4864-859f-1618decc0d2d": {"doc_hash": "e5b4289089c7bee54b0c31495d9021e0f1cf2097808ddb9114bd516edc2617a6", "ref_doc_id": "4546f37a-6116-4f95-b1cc-d1c1c6d3c197"}, "d42d3feb-9822-4239-a18c-b93c98854906": {"doc_hash": "2c4a7be2421f32c932c38e73de896b174feaca1a9298f4167b3520524b79f6f6", "ref_doc_id": "4546f37a-6116-4f95-b1cc-d1c1c6d3c197"}, "da90dd0f-d760-4850-bfa0-19742a9d2edb": {"doc_hash": "a99550a8ba1059c78944e2a5dc08f895a4f41bd7c614b772e408aaf91e1c4994", "ref_doc_id": "4546f37a-6116-4f95-b1cc-d1c1c6d3c197"}, "590a69e2-5038-4c8b-82ca-0cf17add0c62": {"doc_hash": "fb7c7b6bc8dbceebbe8a9f6c4c6151a30079be91c1358ef064b34b46a5366a9c", "ref_doc_id": "4546f37a-6116-4f95-b1cc-d1c1c6d3c197"}, "b4ac11c7-bc93-4130-b165-415f6fb267e2": {"doc_hash": "f021fa437b15f3fc990dfa2168ac6bfa91ac40a2f054f732937e061e803461fc", "ref_doc_id": "4546f37a-6116-4f95-b1cc-d1c1c6d3c197"}, "5b2b2af8-231f-4e26-870e-7921a12475b9": {"doc_hash": "ce5762ff340df80cdbd91fbdb1fdbdac818e982eea54188bbe168d8de2b54ad7", "ref_doc_id": "4546f37a-6116-4f95-b1cc-d1c1c6d3c197"}, "c98eade1-b599-440c-845c-bb0465015e8f": {"doc_hash": "3c9f9d9565e13f3dd913da0d26474deac11f7ff6e3f6d01b1fad8fd7fab42004", "ref_doc_id": "4546f37a-6116-4f95-b1cc-d1c1c6d3c197"}, "2c08892d-dfc3-4c5c-9fe9-3c7138c3f002": {"doc_hash": "de2429d79304ab384a58c8eb2806905a3f0d68db356b1d72160f06d76bbc1d2b", "ref_doc_id": "78cd45b9-c648-4b06-9121-1454b4a0e872"}, "049d6fc5-8010-4b03-82cc-a85533ab751f": {"doc_hash": "8f22a4f8766e9037f5db8ea550043082d20a6f3c8a411cac0a8ad46c9bc2fdb7", "ref_doc_id": "78cd45b9-c648-4b06-9121-1454b4a0e872"}, "c36628eb-7882-41e5-abf9-8cef42e679b5": {"doc_hash": "b61791ace7c4e2bee630850177e4fa8574c4127ead85c2127e44b45e84914c0b", "ref_doc_id": "78cd45b9-c648-4b06-9121-1454b4a0e872"}, "d7b5ab21-d2ad-430d-868b-4259eb7aba03": {"doc_hash": "c07993fa0b19a4d7ac56a219150cf84d8a5fe0d926df409e66061de2b62bd3a8", "ref_doc_id": "78cd45b9-c648-4b06-9121-1454b4a0e872"}, "64f46dab-e7fe-4d9d-8c8d-04240ea453b6": {"doc_hash": "6a42959a2d922b4338c53634c96e3755a57df27aa5bd9f0078180dc6e7b0a15e", "ref_doc_id": "78cd45b9-c648-4b06-9121-1454b4a0e872"}, "90652fc0-d472-4c4d-a6be-01d3e0014b28": {"doc_hash": "6224239158f81489ab50fab5d420f2dac68ef5246c8ab42a171b8d1ffaa5908e", "ref_doc_id": "78cd45b9-c648-4b06-9121-1454b4a0e872"}, "42136b28-94d0-4d61-aae9-d32c8e1e6250": {"doc_hash": "3d09151ec5c360a8e98ba50bc6b4acd2563958679a753566834c88e33bbabf41", "ref_doc_id": "78cd45b9-c648-4b06-9121-1454b4a0e872"}, "97874739-7d53-4d23-a10d-29028a6a3200": {"doc_hash": "6d80cbd8e4509be63a0e313b40575f08d3aa4ff796379d57391e0e343509e6cc", "ref_doc_id": "28b6e132-69f6-4b82-9ce8-0c6ddaa3101b"}, "1db1089f-1035-4da4-8b88-10ed656a8316": {"doc_hash": "09b240af26a8ce0c173b60ed28b8d5142c08a8819605514539c6fa108797fa46", "ref_doc_id": "28b6e132-69f6-4b82-9ce8-0c6ddaa3101b"}, "33ce1143-6f92-4d54-8d25-376555ecdb34": {"doc_hash": "8e6f90294b3a813b8649e3c85b814c4eb985af4dcdb90917ffc0b5425f325d14", "ref_doc_id": "28b6e132-69f6-4b82-9ce8-0c6ddaa3101b"}, "e714b8eb-c5e0-495d-aed2-a60465a79271": {"doc_hash": "e70f239e227b8e07d0f28da47a79279af7dc7d774453bd21aef8c9892273569d", "ref_doc_id": "28b6e132-69f6-4b82-9ce8-0c6ddaa3101b"}, "0426bcea-336d-470b-9440-df98d4d105fc": {"doc_hash": "d51f5d1835c37147b36cda98d8412ebe071a2c1510cf207761eaff098b9d27a9", "ref_doc_id": "28b6e132-69f6-4b82-9ce8-0c6ddaa3101b"}, "e23f2fcb-b6e0-42a3-b5a9-21ea48728623": {"doc_hash": "59a251404c8597f0f337685c9eccb4350904564f4975b02bc0a846b1731bb54e", "ref_doc_id": "28b6e132-69f6-4b82-9ce8-0c6ddaa3101b"}, "1689833e-32a1-4be9-b4a8-d174b80077cd": {"doc_hash": "288a9f9ee73bd9044c75866cb57bdd166d723dfc036a6b425b5de2d414a02b56", "ref_doc_id": "28b6e132-69f6-4b82-9ce8-0c6ddaa3101b"}, "8cf394a7-e640-4d55-97bd-1571a7fc5c83": {"doc_hash": "2077ee7872a5d8093f51b53b2761376412a0f1e2edf43faae72cb458310c2154", "ref_doc_id": "28b6e132-69f6-4b82-9ce8-0c6ddaa3101b"}, "47bb9e4f-32a6-42ea-9997-178a75ea05db": {"doc_hash": "014a05976a84078371438541ca8fe176e3a12c02e2cc813a35c58751af427e90", "ref_doc_id": "9714bf0e-f68a-4e29-acbb-2f45b68e1e31"}, "8c140788-68ec-40e4-b5d7-84c3bd80e9b9": {"doc_hash": "feaa0dc07b30bd3810e557ee6f6d1b6f79027b0ae69a239d9be3d7253b022c16", "ref_doc_id": "9714bf0e-f68a-4e29-acbb-2f45b68e1e31"}, "bec31f46-6982-4be1-a58b-a1cf99eac827": {"doc_hash": "31579bbb620e573e6c2a94dc134d02e3051897a139b2bfb5371c6082a25b447e", "ref_doc_id": "1650a337-55f4-4296-afe0-5724ee00fa47"}, "6198d3d5-c02f-4fc7-bf30-833d439a8fbb": {"doc_hash": "700f9e7316b603febedf0c79dbec50c94b3243f5156c311bbcd88680f45f3986", "ref_doc_id": "1650a337-55f4-4296-afe0-5724ee00fa47"}, "b3e0828a-e7cb-4f05-aaac-b629359bee45": {"doc_hash": "344b596bc1bad71a0e1ce835da46a05aefc0b74ff19b55da4fc32621c7ca3afd", "ref_doc_id": "eddce048-724b-46f1-a817-d0c000e9602e"}, "a4d7874d-d430-4ee0-8b08-985e55df4388": {"doc_hash": "5955b3e0afdb5a4ecf017e79e2cda815299239923dc653f7252f4abc0eb54d94", "ref_doc_id": "5847923f-bb29-473f-8b21-c5af1b9aef7c"}, "4739ad3a-9681-4601-9197-1a2a94eb5ec3": {"doc_hash": "db5798aff96bb80860dcf4f787e697d46b5dff596c5b37eda107de1cabd56fab", "ref_doc_id": "5847923f-bb29-473f-8b21-c5af1b9aef7c"}, "c49e60a3-7542-41c9-a573-ae7963a37c56": {"doc_hash": "421f1c454a57fb64e80dc49e90a076e7f46ea2007de20e57fb2db1b8b82c54bf", "ref_doc_id": "409be0c4-4d7c-4334-be34-033907d218ef"}, "3064e34f-6016-4870-83db-8f9f3a49ffd6": {"doc_hash": "bc7d5ae5e37239b89fc7b7b2246f9a5715f57ae201371babcaaf4e3cd75c7968", "ref_doc_id": "409be0c4-4d7c-4334-be34-033907d218ef"}, "ec1e0243-7f36-4785-aa1f-601ad31bdf75": {"doc_hash": "b4d4d676fea1663863c7db8cdf5a53da4ad20be089e7fcc578d84a6951bdf791", "ref_doc_id": "409be0c4-4d7c-4334-be34-033907d218ef"}, "aef21a3f-44e6-45b0-9e8e-e69d1d55a215": {"doc_hash": "19744f615a962097667a3fe99e6dcf0edfe51766201a4da60138ad6a2246538e", "ref_doc_id": "409be0c4-4d7c-4334-be34-033907d218ef"}, "f4ee5b94-c677-4e76-8c2c-1b8b13908cb9": {"doc_hash": "26ea7987028f86ac8780131cb18497cc925b7695fc14b865532ec037cf18cfbd", "ref_doc_id": "409be0c4-4d7c-4334-be34-033907d218ef"}, "24946620-e2bd-4be8-9bfd-1fbe94d0e901": {"doc_hash": "242606254a774ddb2ec8169c0d155bbd67b9d1c876417173742341016e130ebb", "ref_doc_id": "409be0c4-4d7c-4334-be34-033907d218ef"}, "cd0c2d95-ba59-4763-8828-359496f9279a": {"doc_hash": "031c3d699b1a888bef20d0a9a70e3eed768af9458143ef6b5e3ed8fdace681d9", "ref_doc_id": "409be0c4-4d7c-4334-be34-033907d218ef"}, "f50412a1-0676-4321-a320-b2ba079598ed": {"doc_hash": "446e2bd9dfd34c29881f03ad994d2e1e28b97283ffad468107317138939055ca", "ref_doc_id": "d59aaf51-68ba-445a-a31e-9207cef6e3a4"}, "4a871066-1cfd-4eed-980d-77e5e22d3ac6": {"doc_hash": "1588ba4d50466597075f0323fc620c5cbfe6e1c2fb9e70e869d86d338ba8e7fe", "ref_doc_id": "d59aaf51-68ba-445a-a31e-9207cef6e3a4"}, "1e3ffdca-8c7e-4652-8791-7e38af3e8b39": {"doc_hash": "d65963fe7c466b915389a72474fcefd487de59479f2c689de2008f3b5a74ba82", "ref_doc_id": "72b8515f-4297-416b-a83b-786bb0e9a763"}, "a0d95bc1-11dd-44ae-a852-97091b102b26": {"doc_hash": "bb782eac1dbf3649366f65c9abf953114688ed7987b6baff50ea566f5a07bfce", "ref_doc_id": "55b6eb42-fb70-4251-b568-5f1336d0823d"}, "8554bc4b-e62e-4a32-a490-d887fe491494": {"doc_hash": "2267d4b6d33886182c15f6fa56b209fa2a7528b2f18d88e7a66879ceb989c792", "ref_doc_id": "498c0339-c99b-46c6-9da7-f40bb8231d16"}, "b8e9c05a-3ec2-44bf-83e3-40e6eafcf646": {"doc_hash": "9605cb97cd7d172a2557456279d15cb894db72c7d3d0d3f32619473824a647db", "ref_doc_id": "498c0339-c99b-46c6-9da7-f40bb8231d16"}, "117d8be0-a941-469e-b96d-b1f41e5be856": {"doc_hash": "c71f27b24a46626082ebe097b9e37445c88f6a113b3da9344c6fa272b56b30f9", "ref_doc_id": "498c0339-c99b-46c6-9da7-f40bb8231d16"}, "46d45469-0c91-4159-aa8c-eccf9f71eca1": {"doc_hash": "94fadc0f6ec0d2b1b20065421dfdb1cdb4ad42027cc2f6dbd72cc540aeddaa25", "ref_doc_id": "498c0339-c99b-46c6-9da7-f40bb8231d16"}, "e8bed4e1-1032-4ddf-bc44-8086a16dedba": {"doc_hash": "aff92ff5e6948930a1afad962f1347a4c02cddf970cce9fb032af8507a911376", "ref_doc_id": "498c0339-c99b-46c6-9da7-f40bb8231d16"}, "fb919233-5614-4352-889f-b2e98a96fb4a": {"doc_hash": "dec44d95e6c43af2a7e944aca9518a6a4861766710f5f9037f4f8dfce61a5214", "ref_doc_id": "498c0339-c99b-46c6-9da7-f40bb8231d16"}, "6b5210ac-6af6-413c-8c27-616a5abb1127": {"doc_hash": "7b3c360ec9c7ba6d0aab82b3244425ac7bb100a5df6d15f3261b87eee7042954", "ref_doc_id": "498c0339-c99b-46c6-9da7-f40bb8231d16"}, "9e5438a6-3abb-4d15-9195-20bf71b5d581": {"doc_hash": "b5756fa4b192511859e6088452543c2f8494db6a4a490549887cf21e75ebb81f", "ref_doc_id": "498c0339-c99b-46c6-9da7-f40bb8231d16"}, "faef0c51-e77a-441b-b857-35f17aa1ee2e": {"doc_hash": "cb89b007697b1b3a8127d9d5e2d8b8e02c1aee7873ef6706a894e0fe926bf824", "ref_doc_id": "498c0339-c99b-46c6-9da7-f40bb8231d16"}, "13f0b994-59d6-4167-a3b0-9136cec76a3e": {"doc_hash": "7811a0d3ba7fa1e952e5c74c8822a8b4d6839f50a741e114c75b44a5545e1c51", "ref_doc_id": "498c0339-c99b-46c6-9da7-f40bb8231d16"}, "96d9ca5f-1e72-4008-ad58-017d5f8c0a5a": {"doc_hash": "d2cfb7fc054518eebd07efabb1439f033ff4a16638739d728bc829fcc3aa71ca", "ref_doc_id": "498c0339-c99b-46c6-9da7-f40bb8231d16"}, "ede76c0e-c452-4365-b09c-d192bac32b0b": {"doc_hash": "ff4f4725c09b111a3d0d42c80c4c53eae5d72e5e7e2401176a734348699ff163", "ref_doc_id": "498c0339-c99b-46c6-9da7-f40bb8231d16"}, "4e31c8ec-a3d6-46b1-bab2-6b187c82b25c": {"doc_hash": "9f66aeb086ccad5a1046516df5cd7d6e58c2659ad3b2d941e2155a559ea6c66b", "ref_doc_id": "498c0339-c99b-46c6-9da7-f40bb8231d16"}, "1ccdcbb8-b5dc-4faa-a112-ecf3c980be9e": {"doc_hash": "a31823ddca2eaab7681669a233404014faaf42d64f951a1227b9b7d4697b423a", "ref_doc_id": "498c0339-c99b-46c6-9da7-f40bb8231d16"}, "ea493015-5381-427d-a81b-b8e1ff449a68": {"doc_hash": "e2973a3899636cb15071c2d3092c050e8c0087798345cee63285c0c246c63bdb", "ref_doc_id": "498c0339-c99b-46c6-9da7-f40bb8231d16"}, "203ff23a-d255-406b-9940-b506e1f33b0d": {"doc_hash": "af590976ba77d7b1d579be96de02a7f2cd2eaa4586e1868fce2c48da7e2e5ca5", "ref_doc_id": "12ee5ab1-82af-4906-a4b0-a17830a35dc1"}, "ada81e08-098b-4692-8bf7-b8bc75640550": {"doc_hash": "9c080156e30cd79652c3fb5df97ac6c04424fdd9da33c0d5b00dccb410700cb9", "ref_doc_id": "12ee5ab1-82af-4906-a4b0-a17830a35dc1"}, "71dcad2d-3f94-4729-a722-115b9c441890": {"doc_hash": "575fefe8b9e961d40bc34ce6a36cbee170efcf251b36dff0587cd17ddca55895", "ref_doc_id": "12ee5ab1-82af-4906-a4b0-a17830a35dc1"}, "9deb15f4-7e25-4ab3-8cac-6cf14fb7d9b4": {"doc_hash": "31c7775dae63404646a584ac69b190fc32f418026e8aeb4749818201c3f0f8db", "ref_doc_id": "12ee5ab1-82af-4906-a4b0-a17830a35dc1"}, "5265d51a-ca90-4b1c-a5ce-c53bd7202d8d": {"doc_hash": "7de0ac51b4a9fc0f622d65b01973b01491c49080db802afd7823a3981a67d799", "ref_doc_id": "12ee5ab1-82af-4906-a4b0-a17830a35dc1"}, "0998f06f-797f-4c4e-bd23-65a669e1087d": {"doc_hash": "cc55e965d801514bafc9643a32b9d2deeb393bbc8d7c2e86fd59e1f064551ff2", "ref_doc_id": "12ee5ab1-82af-4906-a4b0-a17830a35dc1"}, "69516814-07a2-4e11-b12e-19f7699e6a82": {"doc_hash": "880da6557b028548944ce273508ebe60d5cf6aa0afb094c5f9666c1e69d8732f", "ref_doc_id": "12ee5ab1-82af-4906-a4b0-a17830a35dc1"}, "ec2801d3-b041-4b73-a415-d9cf13e15153": {"doc_hash": "511eb11ac5e030b4676e522be5c61c93ab57a2fed861175b4e8bac000bb05b50", "ref_doc_id": "c1f53172-b5b2-4faa-b806-d55395f24284"}, "18850c5c-ef6d-4824-b7a1-b25d617032d2": {"doc_hash": "a05306c22b3fe39e1b5db4ce41e1aac62ae25f0a09ecb8ca46c84bdd0bbfdc0a", "ref_doc_id": "7647f46b-342e-4dd8-b042-3bfaf2bc0717"}, "faba5244-e35b-4022-ae99-d77817f348aa": {"doc_hash": "bf93c3f523517a05056d230874d438d94b77529b05b66be4e74091622b7c1bae", "ref_doc_id": "7647f46b-342e-4dd8-b042-3bfaf2bc0717"}, "084f86b0-d2c2-4ecc-9b6d-49db3f53bdf8": {"doc_hash": "4591a6357f976f5b7d1b8b6fedb8400ecffd87e5dfe5f55f8924ed01923433ad", "ref_doc_id": "a52aba7f-2f91-44e4-bb88-604b60435ad9"}, "16577123-accf-4c68-9a73-5c47b6905071": {"doc_hash": "d152e3d68f7b037aade3e4558f7d550272ea888cd877db4e1d1b49c49665bd37", "ref_doc_id": "a52aba7f-2f91-44e4-bb88-604b60435ad9"}, "93cb844f-bbe3-45b6-b1ec-9e1c18df074b": {"doc_hash": "28e8f16bf64b7bf207f3486f02f1f772f88f7aac3f178fe3967f802749f37f59", "ref_doc_id": "5b0a8fa8-6d08-4e30-acae-7b22be6c937d"}, "13be11fd-c002-47d3-b2c1-071339f08893": {"doc_hash": "e6f29dfcb8290cc2d40583e2b5afaee9d78baba4fd9b885996779d74a5e020f4", "ref_doc_id": "5b0a8fa8-6d08-4e30-acae-7b22be6c937d"}, "46ba6189-c447-424b-afa7-3f276e58e2ac": {"doc_hash": "b1ab35d61abc86e219ce0552da81c8c69a8d016cf166ad253f35b2bfc776f7ad", "ref_doc_id": "24935a9d-0ae4-440b-b953-5d217bec2e89"}, "36803f1e-0729-405a-bf44-1f1847fbd3aa": {"doc_hash": "0ad2b91bef0e78bd7c9520318976f47f09246e1137fceec00fabf3b59dfea49b", "ref_doc_id": "24935a9d-0ae4-440b-b953-5d217bec2e89"}, "3e230300-b33c-4029-b775-96238d35efc6": {"doc_hash": "94835c1b36dd6ec678b0384e1ccef1d4096768a3b347b29879b01ae43c2f7a66", "ref_doc_id": "8e61ef0d-2fc3-4c00-9d0a-821514a1aebd"}, "6f028d34-ef15-4a67-8ab5-d89b0dce3731": {"doc_hash": "b56971ff7a7ce04f9e23c998f99313e63eefe0a7eaacf4261c8582ca4dbab1e9", "ref_doc_id": "8e61ef0d-2fc3-4c00-9d0a-821514a1aebd"}, "3f60c2b2-3f69-42f7-af10-027741125f46": {"doc_hash": "1c39536cf54c46354fa30a9c63f7f5de4960715720e6dc62bfa99a779ea89a71", "ref_doc_id": "8e61ef0d-2fc3-4c00-9d0a-821514a1aebd"}, "671ca948-695b-4511-8945-1e269db3803b": {"doc_hash": "9785f81fa5f414ca79d47722ab92b205a20d97ddede4d123b805aceec989c442", "ref_doc_id": "8e61ef0d-2fc3-4c00-9d0a-821514a1aebd"}, "12d77081-1b8e-4e65-b0bd-2a8f4d1e45ae": {"doc_hash": "e56490707af8cefd5e8d185dabb5b3b42d3b0e72a975af807fb29dcc90377d52", "ref_doc_id": "8e61ef0d-2fc3-4c00-9d0a-821514a1aebd"}, "0aa7e29b-6bc4-4fa3-933e-543ebcaad5bf": {"doc_hash": "f4e78f06e193c9e3fb982237baed933dd15b6a61f5b1a53aa5becb923b27696b", "ref_doc_id": "8e61ef0d-2fc3-4c00-9d0a-821514a1aebd"}, "40acee70-481e-4ad0-97c3-3dcd248e9c3f": {"doc_hash": "d8be81709e90a01b62e0c8c001ee6865cab89c13197584154a197f8eddd7d83e", "ref_doc_id": "8e61ef0d-2fc3-4c00-9d0a-821514a1aebd"}, "ed8c0b97-e122-47df-b2cf-4caca11f7135": {"doc_hash": "c03115e063525595b9952b9d899f2cb40627e15a5ce81b96be81884657b767f9", "ref_doc_id": "1d3ffb40-bad4-4f35-a5b3-443cfe14b6b3"}, "3092330e-9fdb-4e35-a70d-11f2ef397ace": {"doc_hash": "f659276df52fd3bf564c2dd3c5020a1862b4ca191bfbf23fc37c829c6108426a", "ref_doc_id": "1d3ffb40-bad4-4f35-a5b3-443cfe14b6b3"}, "7421fee0-9425-4180-9f5a-ff0989b9aa9e": {"doc_hash": "1cc365123e6f30325268e6dad5f48096652af26d1b014abd4001e1a2d69c9e7a", "ref_doc_id": "178a7c9a-6b41-4b42-bf7b-00921368bae5"}, "4b1abe5f-c5f0-4f76-aef0-465daed7d680": {"doc_hash": "0ed8093dd9405b3cbed97420eb5f6f4bd24f85cdf43081b1965c765249ddd4b9", "ref_doc_id": "178a7c9a-6b41-4b42-bf7b-00921368bae5"}, "93ce0b4b-405e-4e02-beef-e5b737c0ec8e": {"doc_hash": "eb3c31ef9d02312e9f642d69215b1d919b5a10d536c35135b6c50588b913d315", "ref_doc_id": "398510a7-0b3f-4e24-ae6c-f3a4180f833e"}, "9f26f686-b339-4d20-99b6-41d617087cba": {"doc_hash": "47d857d90c60fecdd27237fb966ff9f69be6508e443cefe205d08f516f27da87", "ref_doc_id": "ce30f5c1-8d7b-483a-b46a-35dcad801512"}, "2c23eb0f-2057-4a6e-9d4b-420367a85b45": {"doc_hash": "9e1131ca13cc5f627e8b6c531caa22ed09c14a17dc66d95c4e5a9854eed9db20", "ref_doc_id": "ce76623c-be70-411d-b117-ebb37e1f2f47"}, "7d36a4fa-8830-470b-b0aa-f44d3fcc2790": {"doc_hash": "2869818324ec733ae52f877f6cb4271dcc68e7908831a3f169287fb550aa2682", "ref_doc_id": "ce76623c-be70-411d-b117-ebb37e1f2f47"}, "eeb4de19-cd16-4e4d-a4b3-eb2e40ce1793": {"doc_hash": "31574fb239a9601611b9fdda2852c6e14db0b77967d4cdae976558c1d7d0b3b8", "ref_doc_id": "44ff65cc-54ff-45ff-a0f4-6dd31e0426a2"}, "36fc3c88-bb9d-4ec5-af0a-e9846fc01d90": {"doc_hash": "ac274382a28854a8c7d3f35011486bdff16d3f3216a741e9e5997aa7ac94bcdb", "ref_doc_id": "44ff65cc-54ff-45ff-a0f4-6dd31e0426a2"}, "1d0d3144-9db0-42e7-8cf1-9a1cb7428a12": {"doc_hash": "cfca40412d188aa445981c886b23116a02bb23b731fcf08275ecb02a2c71d354", "ref_doc_id": "44ff65cc-54ff-45ff-a0f4-6dd31e0426a2"}, "e54ad82c-fff5-4cee-a207-49f992ae0633": {"doc_hash": "3208b4883cbf4ed052266783dc3cc48a96fee02d95cb89c2990fca857d3d7533", "ref_doc_id": "44ff65cc-54ff-45ff-a0f4-6dd31e0426a2"}, "29aab2ad-e355-46f2-a363-55ee743e3f7e": {"doc_hash": "5fa77bbff34e95ea9e425ae0ecc557c53aaa2f944a5e9107396727a54a6212d5", "ref_doc_id": "44ff65cc-54ff-45ff-a0f4-6dd31e0426a2"}, "6681d6ad-21f3-488b-9ab2-02e7249d68d2": {"doc_hash": "f16b56c5c61d7730bf375228f6063013bc55b5e182433d8cdaa431e214132371", "ref_doc_id": "44ff65cc-54ff-45ff-a0f4-6dd31e0426a2"}, "55439464-c6b4-4754-8ab1-3ce6baaa091e": {"doc_hash": "62687b2b1089b3760223044e865a81d8f1328c240a3f6684234f9c86052cc138", "ref_doc_id": "44ff65cc-54ff-45ff-a0f4-6dd31e0426a2"}, "61224a1d-4fb3-459a-85e3-c58485824cfa": {"doc_hash": "4fd430107e974d6dcb12b4c9a46878fcac0075397b4ca8c805f8d6914ff7757c", "ref_doc_id": "939b4bde-b0f8-40eb-aae3-6b09cb3a29a8"}, "0f21b5d9-9b12-44fd-bcd7-b777e9c15a55": {"doc_hash": "431b4353c4caa6dbd3e2e075fc61bae9b1a88c61b45ee47bfc148616ef8fbc4d", "ref_doc_id": "98e65e4e-7f3e-4748-9516-6d8f8da866a0"}, "0ff32025-cf8c-496f-88a3-a074d0dea92b": {"doc_hash": "b03cbc706abd2c14d37a8718e7cba61ed1d809dd3f768542f403a4eb0b154061", "ref_doc_id": "98e65e4e-7f3e-4748-9516-6d8f8da866a0"}, "83a9fbbb-0b40-4d0d-9b87-7ea77488dd2b": {"doc_hash": "34eacb272ab1d9d4fb5dda8927a506bd48cee4d828ce6a768e71b0ca05481848", "ref_doc_id": "9adfac0b-d555-4e13-ae0c-95797fa3df22"}, "23f49b19-de2f-41eb-a4fd-47ee017ecf2f": {"doc_hash": "f89e402b6de037eb186c38f6ece8c075d6f4a18105a1ed9c05460b1a665c3ec6", "ref_doc_id": "9adfac0b-d555-4e13-ae0c-95797fa3df22"}, "c55451f5-8d00-4fdb-909c-cd2456895f50": {"doc_hash": "41bc11e3cdc2cd8d362a910c8586a8dce30818b17f0df0332a88e0347afebb78", "ref_doc_id": "ae0cec2c-5c1e-4056-925b-037774210e3e"}, "b195c5f4-a7ef-46c4-b5ec-689d847a7031": {"doc_hash": "34ea4b0ecd3dcb769f4d7ee36021ea19029685823b2bca69e8a59fbc10f3f3d6", "ref_doc_id": "ae0cec2c-5c1e-4056-925b-037774210e3e"}, "556a32c4-58bc-4741-b284-c5c44b307355": {"doc_hash": "da08a784f01ec29e57f5e6a0b16b4c07fededf08092d2c698eb34d3231279876", "ref_doc_id": "b515e0f6-863c-4266-9a76-df6068f22897"}, "642ced32-df36-483d-93c9-38bdaa6eae8d": {"doc_hash": "b8e2ce880c00b55f1b883576fa8f86c2a14408badb867ea6af76bb4ca067963f", "ref_doc_id": "b515e0f6-863c-4266-9a76-df6068f22897"}, "6770a7f8-0f89-487c-b7fa-c6ce6058b3db": {"doc_hash": "880f954614bc22e647a32d6b68588667edef694e3fe5842ad899e72da908fb2b", "ref_doc_id": "b515e0f6-863c-4266-9a76-df6068f22897"}, "793bda9b-b2ab-43ef-87e0-8511388ec865": {"doc_hash": "d81cf46840c56188dbd29347696e8110626f33e45995706b079358d1cf9d21f7", "ref_doc_id": "b515e0f6-863c-4266-9a76-df6068f22897"}, "8b6f6867-cdda-49ae-95bb-91681f098455": {"doc_hash": "62c7b83187a659715b6c75300fd1a84d49323272b3c3e194a248b3485ea3876d", "ref_doc_id": "b515e0f6-863c-4266-9a76-df6068f22897"}, "8c73ad8d-ac05-4fbd-bb6a-7b6de1c634e6": {"doc_hash": "99b7a6cd948c097dc0d126fcde78c5e68586ef5a4d264c8de5b889c9d13f7415", "ref_doc_id": "b515e0f6-863c-4266-9a76-df6068f22897"}, "b2da5f0e-a54e-46d5-840c-2a9c80f5c993": {"doc_hash": "af08b3bc4d12c9bcfc19e0504c3eca20bf9d93753c25f57be90c2a1b4d269302", "ref_doc_id": "b515e0f6-863c-4266-9a76-df6068f22897"}, "daab3ef8-10ba-48a5-8683-2c73c19850f5": {"doc_hash": "91aaada0efae1ae304cd8c42b79c256395a5a54ebec94ea058b0c3c112ac7e30", "ref_doc_id": "23ee1484-af0d-48e5-bab2-814c7ca349fc"}, "266588b2-a06f-4947-a964-4bcd369c6aaa": {"doc_hash": "f2adf580c83d490afc988126f429c09c168d8e21527696a05b6a2c180ab73f39", "ref_doc_id": "23ee1484-af0d-48e5-bab2-814c7ca349fc"}, "c88c2f92-1710-4400-a308-08a412f1add8": {"doc_hash": "8b36a38f751bf6ce68dde16f5584959122b5f3b01f08e43b689a50e331385938", "ref_doc_id": "d87903c7-0fdd-425c-86cd-8ab5350884a0"}, "32cc1f06-678c-42c3-9718-a3a5ffcc995c": {"doc_hash": "e04f3d3c84e5e9fac5d8be932784aa01b74f25f66ff7ba670a08b99d87d11865", "ref_doc_id": "d87903c7-0fdd-425c-86cd-8ab5350884a0"}, "c252acca-0de6-4410-a411-d1af5d611055": {"doc_hash": "bbd324a087f54eb56df6011f8e8227a23abcca75269fca2caf954d47ff04ae95", "ref_doc_id": "d87903c7-0fdd-425c-86cd-8ab5350884a0"}, "823fe4ae-7a67-45c1-8a30-e416e6f69b5b": {"doc_hash": "f3faff639c9c274ddf5bba493833a595fa8ed8abcbfc573a3d5c64ca91814e53", "ref_doc_id": "d87903c7-0fdd-425c-86cd-8ab5350884a0"}, "ca38417f-9889-4237-bc4e-b36a231748d8": {"doc_hash": "e180c15b94a84a938d1656e6494f0999506f6c5b44454f7f6b11ad5db3c5fb31", "ref_doc_id": "d87903c7-0fdd-425c-86cd-8ab5350884a0"}, "f28d5c05-215c-4c21-a9f7-cbbb067c2f38": {"doc_hash": "9bb999a7499b6d0ede57336436b3d39bb5917158d1720e29596568b877c8a43c", "ref_doc_id": "d87903c7-0fdd-425c-86cd-8ab5350884a0"}, "af3776e5-324b-4b12-b101-ffafee03f34a": {"doc_hash": "69698c86d48dbfe26fdad12cead84783b9378e0119c4909d4bc652781c615a77", "ref_doc_id": "d87903c7-0fdd-425c-86cd-8ab5350884a0"}, "c38fb932-294b-43c0-8c70-3815b647d56e": {"doc_hash": "218d190dfb98c1a1aaef57b167f71ef959e9954e4d110dd09a41342972735df7", "ref_doc_id": "b307c9d7-d78e-4ad4-95d3-414e7a7d1834"}, "a7543f97-15b8-4993-bfa0-b120a7ba5ab2": {"doc_hash": "d85f6e3a98d1a244426f125f8935fbc8edfd7c11cfdf59b4735de8aa623fe791", "ref_doc_id": "b307c9d7-d78e-4ad4-95d3-414e7a7d1834"}, "a977fcd2-472a-4f2b-97b9-909006a6d797": {"doc_hash": "101fc74e58764ac48948924d53aa6801e5ce9aba5e98d4dedbeb439f5d8f4b18", "ref_doc_id": "004fa39f-8aa7-4f4e-9a1c-39d8241d7259"}, "db3dee86-3066-40ad-a64a-0e79ff2f78e8": {"doc_hash": "7e37f01de5b216ec6a7a57256079146cad22e6addff4edc676f0bb534b33b2fe", "ref_doc_id": "004fa39f-8aa7-4f4e-9a1c-39d8241d7259"}, "70936f0e-5134-4f63-8286-81fb8017729a": {"doc_hash": "39ed830e5275a1ffa56a2d093603bf37f99a09ff7f10032625ba6e74810e17e6", "ref_doc_id": "ee3206c5-4ad5-4890-a5c9-36b47c327d9c"}, "7bae3697-e225-4796-af64-d9627bea7eb4": {"doc_hash": "6fafe94b74736adc9f8e5660e7a771e0bc9e3037bf12de3c28fa0e6a30b723dc", "ref_doc_id": "9ac152c5-f50f-4a6d-835d-0d01b9276191"}, "e4faa00a-7507-49ed-87f1-d42143b179d5": {"doc_hash": "481b9db662846a692a7dd2a089a38d0e205bb67fbdef2d5d953953181ee8bd5a", "ref_doc_id": "bdb922e5-53be-45b0-a527-1a61b598b632"}, "9be8feac-f99a-446a-803a-db52c45ce30d": {"doc_hash": "3bc0d062176439bf93c423dfffbc080f3ab221b301ea288a5bdd03a6684ba932", "ref_doc_id": "261e5497-18e7-48ce-862b-4095551c0cd0"}, "21f0c4f3-b711-4de4-a6fd-eea4c2c69759": {"doc_hash": "bf0c199d8123c1e066437456c8caca5122fe3d48d1a344d14da6dde1b7cf0964", "ref_doc_id": "39d7a9b3-1e56-4cfe-bb94-659ac50e28d7"}, "4367a247-7bc0-4a2a-8d0b-f5ed9bb46d9f": {"doc_hash": "7a245ba9e6c3180b43ce6cf9752028e82f93a7d1f79092c159136682bba9fd11", "ref_doc_id": "f947c0c7-a296-4e50-a8aa-3fe254075d68"}, "c945aea2-b9b6-4fe4-afac-3606cafee345": {"doc_hash": "8ef7fe9fba949ab6dd153d170f30b7436a631a820ceb6e3373159712aa445d74", "ref_doc_id": "82875dee-f7cd-435d-bbf7-b4de07fbb1f5"}, "dac6fb09-c264-42a1-b430-c7f9591a4a8f": {"doc_hash": "406c520c749d591f8a868f10027292c7eebda8affc0977fd4a20aeb59b0d6849", "ref_doc_id": "82875dee-f7cd-435d-bbf7-b4de07fbb1f5"}, "c8b2070a-b542-4e82-9237-39e84e6a00e4": {"doc_hash": "27805ba9ef0abf3e0487928768b7b379c1b08968c4707cc5280f73ce0b70f9a6", "ref_doc_id": "82875dee-f7cd-435d-bbf7-b4de07fbb1f5"}, "17aac1cd-969c-4118-b0c3-9afaa407b8cc": {"doc_hash": "c10c331457436fcd534b0358725a4cae24751f8bd7a139764138171b82d6484d", "ref_doc_id": "82875dee-f7cd-435d-bbf7-b4de07fbb1f5"}, "45d0dda5-b12c-486b-9554-bde878dba12d": {"doc_hash": "c5fe876997f6bb887c7b4e1c5db7487f9edda03c6ddfbf8ccb9486ded2d4bff0", "ref_doc_id": "82875dee-f7cd-435d-bbf7-b4de07fbb1f5"}, "9e05029d-171e-4433-b15c-4d60a331a252": {"doc_hash": "9de674538330e7aee9af51ec70922c3e5028ce4e4337e261f09ef7236a67ee50", "ref_doc_id": "82875dee-f7cd-435d-bbf7-b4de07fbb1f5"}, "56bbd500-8234-4ad6-b99d-ce2b2a5c9aa0": {"doc_hash": "5b73305e95060b4918927425f20878da631f3e47d3f8f9ecbb3d18d32cc8d85e", "ref_doc_id": "82875dee-f7cd-435d-bbf7-b4de07fbb1f5"}, "97553b2e-c7f1-4b02-b26a-0da17c89e4bb": {"doc_hash": "80aa91d2cc431746486562ab10b1191372f8116877c5e7e2fc6eef143956ee72", "ref_doc_id": "1f108b07-b30d-48cc-ad09-75f3ac65eb06"}, "03ee2891-e554-405d-b9f8-c08c32890b07": {"doc_hash": "73f3e666f73f4eb0a90698da31c70f7b494738e4bc498af332e65611f1666940", "ref_doc_id": "1f108b07-b30d-48cc-ad09-75f3ac65eb06"}, "df415cec-5072-438b-be34-5b99a22473bc": {"doc_hash": "8dfb9dd2af66f8931413467a6a098854ef28efdd54316307f3b15ea88c7267b9", "ref_doc_id": "2517957b-aaed-4bc5-9a18-99e9c29716f1"}, "dc40887f-b974-485b-939e-c25bafc0e28b": {"doc_hash": "86311f15614d0b2a6b7b186c1cfb48ea377dec9f5d2acb7fa2f3e31945da95e9", "ref_doc_id": "2517957b-aaed-4bc5-9a18-99e9c29716f1"}, "8bc7519b-d495-4b32-a879-a93f9647c39a": {"doc_hash": "8cf333daf51bdaab9f97e927a1a4284fb4298890513c8c0374b10eecf920de5e", "ref_doc_id": "2517957b-aaed-4bc5-9a18-99e9c29716f1"}, "3e6cd3b0-d562-4344-90e6-2fab8892caba": {"doc_hash": "850e19c918f0fb607feca1fb2bcbd8f81ba7d008bb65c8f97f98a4fef92e45dd", "ref_doc_id": "2517957b-aaed-4bc5-9a18-99e9c29716f1"}, "76c29a58-558f-4c48-96c3-51050bd970eb": {"doc_hash": "42ce2216782c0798afcd56d9fe2ece052cbf8e1feb3dbbacdae67f2aa73c7bc9", "ref_doc_id": "2517957b-aaed-4bc5-9a18-99e9c29716f1"}, "9c7b96ce-ba12-42f1-8ce5-286571996bdb": {"doc_hash": "de8bada4c7cfa36c875ca1b159ead726fef3b4ca64cdb45dbfc60bba202a91ba", "ref_doc_id": "2517957b-aaed-4bc5-9a18-99e9c29716f1"}, "d425a0d7-2793-4fdc-9817-f88199708214": {"doc_hash": "a993c053a1725e914921166e3c9e88a144f9a8252790f3b7ad6de8cf3139de68", "ref_doc_id": "2517957b-aaed-4bc5-9a18-99e9c29716f1"}, "81d9dc81-d34e-4eb8-ae8a-b19fdf24c305": {"doc_hash": "e4764867e4193a91f695a20c59a1a5200f95a6301c1f2915b1ac37946f53e60b", "ref_doc_id": "3b0d5bc4-34b4-42e2-8b8e-14c8562acff3"}, "3640dcbb-9203-441f-9500-645d60013da9": {"doc_hash": "57fe652f13b22b0cf7a78b30d4d0cdae1b86fbcc0023a4120bbdf89470bb8046", "ref_doc_id": "3b0d5bc4-34b4-42e2-8b8e-14c8562acff3"}, "8be81a61-b2af-4028-afc7-e6c26907c12a": {"doc_hash": "d0debd6a1b6d13a419ba7558e1899299d3a044bfcf04860f5802801eee88ed8a", "ref_doc_id": "c0158aed-8723-4d76-aa49-eadd831d5ab5"}, "394cdeb3-0a91-4a42-9d1a-ff1106e31142": {"doc_hash": "89af0355fe14c7358772bef6345f593c3dc6ac5751c9a1852bacb5aeccc3d412", "ref_doc_id": "677d6e97-90eb-447f-8058-b9482ea54f95"}, "5de23fc6-3f65-4a3a-a675-885449f8cb53": {"doc_hash": "f7b9f0ebf5faebfeba0f7263ab1557e4990979b944f5e11da31d80fda617eb35", "ref_doc_id": "a3c16477-2926-4c75-b592-4cef083158db"}, "7ad51c97-bf42-4b66-9e04-a231da6ae3d8": {"doc_hash": "b6d993472d8b4939c15231e73d9f52950c2802e1072485b24fe13e9644bc9030", "ref_doc_id": "39b547bb-804f-4f7a-8031-79b9b52f27be"}, "71b9cd2f-4872-49e9-8658-78206b30fab7": {"doc_hash": "52197e551f46c6bc4236c5bab50e0e7a6cf46fe1a016e7ef40b76f8d755ddc64", "ref_doc_id": "ea0d6271-e730-4ee7-9b0f-4bfe425c7d0c"}, "e5665930-bc86-4b5d-b6de-7971d13c429a": {"doc_hash": "4bf132e39c07710a900f85564b08df51b2a6ab37a273ccbea8abc1372db886ac", "ref_doc_id": "8f0bbc13-f09e-4868-b5e0-828f7d848621"}, "654184e5-62f1-46a8-bc9c-a91dccbe7208": {"doc_hash": "62b067e68e87a91137370f028b7c479a6240d297e8f1eea5cf754806dac7007b", "ref_doc_id": "2c130b57-4957-4ad1-b83c-79aa855d2c71"}, "fdc231e1-8a6c-4ada-8263-03e6fa57a516": {"doc_hash": "dc553fd57c078dd5fb840631414e0cf6efc6d5f670a15a804728ffef756beb39", "ref_doc_id": "0c57a3ae-ce77-4b6b-a420-599c800e0cd3"}, "eb633423-48fa-4d43-8ab6-886f45e851f1": {"doc_hash": "9ef527fe4c77f71ec309dc87b7bccc4f8ae10901bea2158685ee20a6dab26915", "ref_doc_id": "0c57a3ae-ce77-4b6b-a420-599c800e0cd3"}, "817026f8-8ddd-439f-8321-0e5ae9061df5": {"doc_hash": "f7c74c11ccb83dfff965950b0ec6c18b00a2dd7c603dd1c4655d524fd5ca1f6c", "ref_doc_id": "0c57a3ae-ce77-4b6b-a420-599c800e0cd3"}, "af971455-2c1a-434b-acb3-51094d9bfa1a": {"doc_hash": "3976a79717d8cfec64673ee3b79258a5c2bb961e6375b7fd5e314d009e479a7e", "ref_doc_id": "0c57a3ae-ce77-4b6b-a420-599c800e0cd3"}, "7197cdcb-b20e-4bf3-a6ad-a9f16fd03e40": {"doc_hash": "82a9098258227d45ad21bf6865695f401b6366c8352ae234fa445378c274a54c", "ref_doc_id": "0c57a3ae-ce77-4b6b-a420-599c800e0cd3"}, "e2529b19-1d41-43b6-bb7a-717c61ccde14": {"doc_hash": "00c5eeb43f9a63976507b562fdf31e1878651de62f78a61bd94d9df09cc8c64f", "ref_doc_id": "0c57a3ae-ce77-4b6b-a420-599c800e0cd3"}, "05c76a94-1c45-4a31-8e8a-e4774172a84d": {"doc_hash": "1ee662cade116766a6aa4bfc155e6bbec1464510244fa29013df2c515bd320fe", "ref_doc_id": "0c57a3ae-ce77-4b6b-a420-599c800e0cd3"}, "700c380b-1748-4e10-b90c-0ebbde7e9321": {"doc_hash": "55f6eb98867a15ee232b1705ac68aa48e28a3198cb97c87d33930b8ae6704327", "ref_doc_id": "2598f875-b30b-4020-b43b-9616f916613f"}, "9ee90095-c990-40a4-a1a6-8e924b99f958": {"doc_hash": "8e8bde607459f129a9b86cc5f9bc1bb16bb968957ab14cf59afca051e2797272", "ref_doc_id": "2598f875-b30b-4020-b43b-9616f916613f"}, "ad884085-f12d-4d88-b1ba-3f416ac85cf9": {"doc_hash": "142663df45bf7a97c1395fc70b7bf69144bc49cc3ae03c02001024d4063a6a63", "ref_doc_id": "5852d18e-8e7d-4d5f-b076-8498e9714b1f"}, "a7ed84dc-df68-4a5d-9c19-c33cd2400962": {"doc_hash": "450514587d97b75b56ecfa7699cfea3bebc9501cfba66d72fcea87bf936a95bb", "ref_doc_id": "5852d18e-8e7d-4d5f-b076-8498e9714b1f"}, "ee96270a-47f2-4cf9-9a9f-a8e3db290a13": {"doc_hash": "d7a7945e77aae09b45de56ee7ceedc8f4622ee19804fab057d93adb48fac2e26", "ref_doc_id": "928e68cc-7792-4256-a025-c53311bf60a6"}, "70431359-b159-4f4d-9b34-8c7fb05e4882": {"doc_hash": "8b9c464ee76bb84f5621797dcbec2acd1e0a700c97b480fd0a20e868fab167fc", "ref_doc_id": "99274421-20d3-4808-8fd2-a4e9b82076fe"}}, "docstore/data": {"b224aa5d-5b20-4e74-ab95-37413dc20c6d": {"__data__": {"id_": "b224aa5d-5b20-4e74-ab95-37413dc20c6d", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "be98e7c9-4e90-49e2-81a7-07ac1fd35d92", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "hash": "9bfba3d745c57038220add04b880fbbd0733ccbd7c64b3ee04251b3a89326609", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "16f92de5-2f38-4718-89d2-8d64f2d07972", "node_type": "1", "metadata": {}, "hash": "75a5a7ab56ce249dbb9228ca60cfaefaca0a6ff642f61d2e5c340861cd759587", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Degen API\nDevelopers wanting to build on top of Degen can utilize the following public APIs.\n\nThe <season> path variable can be set to: current, season1, season2, etc.\n\nThe <wallet> path variable is optional, omitting it will return a full list of results by default.\n\nUse limit to specify the number of records and offset to set the starting point.\n\nThe <cast_hash> path variable for casts must be formatted as \\x795ea3a46873e5b9e8a1cd7cb9734bbc6ad62c89.\n\nAirdrop 1\nGETapi.degen.tips/airdrop1/claims?wallet=<wallet>\nGETapi.degen.tips/airdrop1/points?wallet=<wallet>\nAirdrop 2\nGETapi.degen.tips/airdrop2/<season>/points?fid=<fid>\nGETapi.degen.tips/airdrop2/<season>/points?wallet=<wallet>\nGETapi.degen.tips/airdrop2/allowances?fid=<fid>\nGETapi.degen.tips/airdrop2/allowances?wallet=<wallet>\nGETapi.degen.tips/airdrop2/tips?fid=<fid>\nGETapi.degen.tips/airdrop2/tips?hash=<cast_hash>\nLiquidity Mining\nGETapi.degen.tips/liquidity-mining/<season>/points?fid=<fid>\nGETapi.degen.tips/liquidity-mining/<season>/points?wallet=<wallet>\nRaindrops\nGETapi.degen.tips/raindrop/<season>/points?fid=<fid>\nGETapi.degen.tips/raindrop/<season>/points?wallet=<wallet>\nGETapi.degen.tips/raindrop/casts\n\n{\n\"info\": {\n\"\\_postman_id\": \"4c0ab844-d23a-4e3c-a044-42832d3f8917\",\n\"name\": \"Degen.tips APIs\",\n\"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n\"\\_exporter_id\": \"16125606\"\n},\n\"item\": [\n{\n\"name\": \"Airdrop 1 Claims\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/airdrop1/claims?limit=100&offset=0&wallet=0xf1E7DBEDD9e06447e2F99B1310c09287b734addc\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"airdrop1\",\n\"claims\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"100\"\n},\n{\n\"key\": \"offset\",\n\"value\": \"0\"\n},\n{\n\"key\": \"wallet\",\n\"value\": \"0xf1E7DBEDD9e06447e2F99B1310c09287b734addc\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop 1 Points\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/airdrop1/points?limit=100&offset=0&wallet=0xf1E7DBEDD9e06447e2F99B1310c09287b734addc\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"airdrop1\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"100\"\n},\n{\n\"key\": \"offset\",\n\"value\": \"0\"\n},\n{\n\"key\": \"wallet\",\n\"value\": \"0xf1E7DBEDD9e06447e2F99B1310c09287b734addc\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop 2 Tip Allowances\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/airdrop2/allowances?fid=234616\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"airdrop2\",\n\"allowances\"\n],", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2598, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "16f92de5-2f38-4718-89d2-8d64f2d07972": {"__data__": {"id_": "16f92de5-2f38-4718-89d2-8d64f2d07972", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "be98e7c9-4e90-49e2-81a7-07ac1fd35d92", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "hash": "9bfba3d745c57038220add04b880fbbd0733ccbd7c64b3ee04251b3a89326609", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b224aa5d-5b20-4e74-ab95-37413dc20c6d", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "hash": "713cc826d373dc6b429bf00137574345701c3302349f15a720e603279b630d69", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f3d3b81d-a2f6-4ccd-8c4b-1736bc161d29", "node_type": "1", "metadata": {}, "hash": "0fa48208e9c3ba3ebda5b855832bc191257afce8ec8f1e65eafd802a53b49ec4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"path\": [\n\"airdrop1\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"100\"\n},\n{\n\"key\": \"offset\",\n\"value\": \"0\"\n},\n{\n\"key\": \"wallet\",\n\"value\": \"0xf1E7DBEDD9e06447e2F99B1310c09287b734addc\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop 2 Tip Allowances\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/airdrop2/allowances?fid=234616\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"airdrop2\",\n\"allowances\"\n],\n\"query\": [\n{\n\"key\": \"wallet\",\n\"value\": \"0xf1E7DBEDD9e06447e2F99B1310c09287b734addc\",\n\"disabled\": true\n},\n{\n\"key\": \"limit\",\n\"value\": \"1\",\n\"disabled\": true\n},\n{\n\"key\": \"offset\",\n\"value\": \"1\",\n\"disabled\": true\n},\n{\n\"key\": \"fid\",\n\"value\": \"234616\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop 2 Tips\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/airdrop2/tips?hash=\\\\x795ea3a46873e5b9e8a1cd7cb9734bbc6ad62c89\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"airdrop2\",\n\"tips\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"10\",\n\"disabled\": true\n},\n{\n\"key\": \"fid\",\n\"value\": \"15983\",\n\"disabled\": true\n},\n{\n\"key\": \"offset\",\n\"value\": \"0\",\n\"disabled\": true\n},\n{\n\"key\": \"hash\",\n\"value\": \"\\\\x795ea3a46873e5b9e8a1cd7cb9734bbc6ad62c89\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop 2 Current Points\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/airdrop2/current/points?limit=50&wallet=0x19d8da2674e8a025154153297ea3ab918debf96d\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"airdrop2\",\n\"current\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"50\"\n},\n{\n\"key\": \"wallet\",\n\"value\": \"0x19d8da2674e8a025154153297ea3ab918debf96d\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop 2 Season 1 Points\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/airdrop2/season1/points?limit=50\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"airdrop2\",\n\"season1\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"50\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop 2 Season 2 Points\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/airdrop2/season2/points?limit=50\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"airdrop2\",\n\"season2\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",", "mimetype": "text/plain", "start_char_idx": 2133, "end_char_idx": 4479, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f3d3b81d-a2f6-4ccd-8c4b-1736bc161d29": {"__data__": {"id_": "f3d3b81d-a2f6-4ccd-8c4b-1736bc161d29", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "be98e7c9-4e90-49e2-81a7-07ac1fd35d92", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "hash": "9bfba3d745c57038220add04b880fbbd0733ccbd7c64b3ee04251b3a89326609", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "16f92de5-2f38-4718-89d2-8d64f2d07972", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "hash": "b420ddcefa2d5a25a512149aafec5eb3a7876325787b9ab0ef6da48296bab1b8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "36e68ddb-d1a2-4f07-b231-a2cdee5be55e", "node_type": "1", "metadata": {}, "hash": "ad7875dbaa62d4c215e56318b35c7a9c6407fb6a3e3ca222df1d52d885b25a9b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"airdrop2\",\n\"season1\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"50\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop 2 Season 2 Points\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/airdrop2/season2/points?limit=50\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"airdrop2\",\n\"season2\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"50\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop 2 Season 3 Points\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/airdrop2/season3/points?limit=50\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"airdrop2\",\n\"season3\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"50\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop 2 Season 4 Points\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/airdrop2/season4/points?limit=50\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"airdrop2\",\n\"season4\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"50\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop 2 Season 5 Points\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/airdrop2/season5/points?limit=50&wallet=0xf1e7dbedd9e06447e2f99b1310c09287b734addc\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"airdrop2\",\n\"season5\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"50\"\n},\n{\n\"key\": \"wallet\",\n\"value\": \"0xf1e7dbedd9e06447e2f99b1310c09287b734addc\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop 2 Season 5 Merkle Proofs\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/airdrop2/season5/merkleproofs?wallet=0x495d4d2203be7775d22ee8f84017544331300d09\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"airdrop2\",\n\"season5\",\n\"merkleproofs\"\n],\n\"query\": [\n{\n\"key\": \"wallet\",\n\"value\": \"0x495d4d2203be7775d22ee8f84017544331300d09\"\n},\n{\n\"key\": \"limit\",\n\"value\": \"50\",\n\"disabled\": true\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop 2 Season 6 Points\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/airdrop2/season6/points?wallet=0xd5a589b294b4a1687554faf18572640e6024efe4\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"airdrop2\",", "mimetype": "text/plain", "start_char_idx": 4019, "end_char_idx": 6398, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "36e68ddb-d1a2-4f07-b231-a2cdee5be55e": {"__data__": {"id_": "36e68ddb-d1a2-4f07-b231-a2cdee5be55e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "be98e7c9-4e90-49e2-81a7-07ac1fd35d92", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "hash": "9bfba3d745c57038220add04b880fbbd0733ccbd7c64b3ee04251b3a89326609", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f3d3b81d-a2f6-4ccd-8c4b-1736bc161d29", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "hash": "1e77ca84d5e82d6eab23c6f1b7b36a42ee3e91db552706996102858879eccc3b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fa9f2621-dda8-4a65-9b71-e888083c5ff2", "node_type": "1", "metadata": {}, "hash": "a5dd5e8dc390a10635bd8b1a5553b955b542cb84d6e9b90b54c21c6d046d5d60", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"season5\",\n\"merkleproofs\"\n],\n\"query\": [\n{\n\"key\": \"wallet\",\n\"value\": \"0x495d4d2203be7775d22ee8f84017544331300d09\"\n},\n{\n\"key\": \"limit\",\n\"value\": \"50\",\n\"disabled\": true\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop 2 Season 6 Points\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/airdrop2/season6/points?wallet=0xd5a589b294b4a1687554faf18572640e6024efe4\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"airdrop2\",\n\"season6\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"50\",\n\"disabled\": true\n},\n{\n\"key\": \"wallet\",\n\"value\": \"0xd5a589b294b4a1687554faf18572640e6024efe4\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop 2 Season 6 Merkle Proofs\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/airdrop2/season6/merkleproofs?wallet=0x495d4D2203Be7775D22Ee8F84017544331300d09\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"airdrop2\",\n\"season6\",\n\"merkleproofs\"\n],\n\"query\": [\n{\n\"key\": \"wallet\",\n\"value\": \"0x495d4D2203Be7775D22Ee8F84017544331300d09\"\n},\n{\n\"key\": \"limit\",\n\"value\": \"50\",\n\"disabled\": true\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop 2 Season 7 Points\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/airdrop2/season7/points?wallet=0xbfAc9261628e3e27440328Cbc341c1dbc32462B0\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"airdrop2\",\n\"season7\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"50\",\n\"disabled\": true\n},\n{\n\"key\": \"wallet\",\n\"value\": \"0xbfAc9261628e3e27440328Cbc341c1dbc32462B0\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop 2 Season 7 Merkle Proofs\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/airdrop2/season7/merkleproofs?wallet=0xbfAc9261628e3e27440328Cbc341c1dbc32462B0\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"airdrop2\",\n\"season7\",\n\"merkleproofs\"\n],\n\"query\": [\n{\n\"key\": \"wallet\",\n\"value\": \"0xbfAc9261628e3e27440328Cbc341c1dbc32462B0\"\n},\n{\n\"key\": \"limit\",\n\"value\": \"50\",\n\"disabled\": true\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop 2 Season 8 Points\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/airdrop2/season8/points?wallet=0x495d4D2203Be7775D22Ee8F84017544331300d09\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",", "mimetype": "text/plain", "start_char_idx": 5928, "end_char_idx": 8264, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fa9f2621-dda8-4a65-9b71-e888083c5ff2": {"__data__": {"id_": "fa9f2621-dda8-4a65-9b71-e888083c5ff2", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "be98e7c9-4e90-49e2-81a7-07ac1fd35d92", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "hash": "9bfba3d745c57038220add04b880fbbd0733ccbd7c64b3ee04251b3a89326609", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36e68ddb-d1a2-4f07-b231-a2cdee5be55e", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "hash": "71f3d2f8a54217bea42491916d30954e7f7aa7413690631d059c2efd50bf5025", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c0615ec3-8c73-4e9b-9aad-e41283170e40", "node_type": "1", "metadata": {}, "hash": "5f14cc14da2d5a81a910e0d6572d812e5366047c9753605d6a617facad461454", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"path\": [\n\"airdrop2\",\n\"season7\",\n\"merkleproofs\"\n],\n\"query\": [\n{\n\"key\": \"wallet\",\n\"value\": \"0xbfAc9261628e3e27440328Cbc341c1dbc32462B0\"\n},\n{\n\"key\": \"limit\",\n\"value\": \"50\",\n\"disabled\": true\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop 2 Season 8 Points\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/airdrop2/season8/points?wallet=0x495d4D2203Be7775D22Ee8F84017544331300d09\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"airdrop2\",\n\"season8\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"50\",\n\"disabled\": true\n},\n{\n\"key\": \"wallet\",\n\"value\": \"0x495d4D2203Be7775D22Ee8F84017544331300d09\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop 2 Season 8 Merkle Proofs\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/airdrop2/season8/merkleproofs?wallet=0x041a43bb9848aff9ae7823398af88e1d2b2aad3f\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"airdrop2\",\n\"season8\",\n\"merkleproofs\"\n],\n\"query\": [\n{\n\"key\": \"wallet\",\n\"value\": \"0x041a43bb9848aff9ae7823398af88e1d2b2aad3f\"\n},\n{\n\"key\": \"limit\",\n\"value\": \"50\",\n\"disabled\": true\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop Raindrop Current Points\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/raindrop/current/points?limit=50\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"raindrop\",\n\"current\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"50\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop Raindrop Season 1 Points\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/raindrop/season1/points?limit=50&wallet=0x2cae0ac9a7a7048516868aad672c49ab632b38c8\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"raindrop\",\n\"season1\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"50\"\n},\n{\n\"key\": \"wallet\",\n\"value\": \"0x2cae0ac9a7a7048516868aad672c49ab632b38c8\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop Raindrop Season 1 Merkle Proofs\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/raindrop/season1/merkleproofs?wallet=0x495d4D2203Be7775D22Ee8F84017544331300d09\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"raindrop\",\n\"season1\",\n\"merkleproofs\"\n],\n\"query\": [\n{\n\"key\": \"wallet\",", "mimetype": "text/plain", "start_char_idx": 7804, "end_char_idx": 10123, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c0615ec3-8c73-4e9b-9aad-e41283170e40": {"__data__": {"id_": "c0615ec3-8c73-4e9b-9aad-e41283170e40", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "be98e7c9-4e90-49e2-81a7-07ac1fd35d92", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "hash": "9bfba3d745c57038220add04b880fbbd0733ccbd7c64b3ee04251b3a89326609", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fa9f2621-dda8-4a65-9b71-e888083c5ff2", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "hash": "226fb0ff620a95158efdc53b519abe90dd2d926ba1836baf75369de233ca8baa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ebdd7bdf-e134-4f1c-9463-bb9ba5c5c79c", "node_type": "1", "metadata": {}, "hash": "8464db47ab597a73ba1b3e867651e9ca2e9aea891fed01e5312741fd45856859", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n\"key\": \"wallet\",\n\"value\": \"0x2cae0ac9a7a7048516868aad672c49ab632b38c8\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop Raindrop Season 1 Merkle Proofs\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/raindrop/season1/merkleproofs?wallet=0x495d4D2203Be7775D22Ee8F84017544331300d09\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"raindrop\",\n\"season1\",\n\"merkleproofs\"\n],\n\"query\": [\n{\n\"key\": \"wallet\",\n\"value\": \"0x495d4D2203Be7775D22Ee8F84017544331300d09\"\n},\n{\n\"key\": \"limit\",\n\"value\": \"50\",\n\"disabled\": true\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop Raindrop Season 2 Points\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/raindrop/season2/points?limit=50\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"raindrop\",\n\"season2\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"50\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Airdrop Raindrop Season 2 Merkle Proofs\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/raindrop/season2/merkleproofs?wallet=0x495d4D2203Be7775D22Ee8F84017544331300d09\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"raindrop\",\n\"season2\",\n\"merkleproofs\"\n],\n\"query\": [\n{\n\"key\": \"wallet\",\n\"value\": \"0x495d4D2203Be7775D22Ee8F84017544331300d09\"\n},\n{\n\"key\": \"limit\",\n\"value\": \"50\",\n\"disabled\": true\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Liquidity Mining Season Current Points\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/liquidity-mining/current/points?limit=50\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"liquidity-mining\",\n\"current\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"50\"\n},\n{\n\"key\": \"wallet\",\n\"value\": \"0xf1E7DBEDD9e06447e2F99B1310c09287b734addc\",\n\"disabled\": true\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Liquidity Mining Season 1 Points\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/liquidity-mining/season1/points?wallet=0xf1E7DBEDD9e06447e2F99B1310c09287b734addc\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"liquidity-mining\",\n\"season1\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"50\",\n\"disabled\": true\n},\n{\n\"key\": \"wallet\",\n\"value\": \"0xf1E7DBEDD9e06447e2F99B1310c09287b734addc\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Liquidity Mining Season 2 Points\",\n\"request\": {\n\"method\": \"GET\",", "mimetype": "text/plain", "start_char_idx": 9667, "end_char_idx": 12102, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ebdd7bdf-e134-4f1c-9463-bb9ba5c5c79c": {"__data__": {"id_": "ebdd7bdf-e134-4f1c-9463-bb9ba5c5c79c", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "be98e7c9-4e90-49e2-81a7-07ac1fd35d92", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "hash": "9bfba3d745c57038220add04b880fbbd0733ccbd7c64b3ee04251b3a89326609", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c0615ec3-8c73-4e9b-9aad-e41283170e40", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "hash": "c000ff87a67b683dd56d85049f90f4a41463ca2f824a735358b871a61b1dc8df", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2a65a7c7-a69f-45fd-abac-11a4a7c5746d", "node_type": "1", "metadata": {}, "hash": "04888b131482520771efa79d38749b056daa199ee8dcc90a7011395622538fbc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"url\": {\n\"raw\": \"https://api.degen.tips/liquidity-mining/season1/points?wallet=0xf1E7DBEDD9e06447e2F99B1310c09287b734addc\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"liquidity-mining\",\n\"season1\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"50\",\n\"disabled\": true\n},\n{\n\"key\": \"wallet\",\n\"value\": \"0xf1E7DBEDD9e06447e2F99B1310c09287b734addc\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Liquidity Mining Season 2 Points\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/liquidity-mining/season2/points?wallet=0xf1E7DBEDD9e06447e2F99B1310c09287b734addc\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"liquidity-mining\",\n\"season2\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"50\",\n\"disabled\": true\n},\n{\n\"key\": \"wallet\",\n\"value\": \"0xf1E7DBEDD9e06447e2F99B1310c09287b734addc\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Liquidity Mining Season 3 Points\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/liquidity-mining/season3/points?wallet=0xf1E7DBEDD9e06447e2F99B1310c09287b734addc\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"liquidity-mining\",\n\"season3\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"50\",\n\"disabled\": true\n},\n{\n\"key\": \"wallet\",\n\"value\": \"0xf1E7DBEDD9e06447e2F99B1310c09287b734addc\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Liquidity Mining Season 4 Merkle Proofs\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/liquidity-mining/season4/merkleproofs?wallet=0xf1E7DBEDD9e06447e2F99B1310c09287b734addc\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"liquidity-mining\",\n\"season4\",\n\"merkleproofs\"\n],\n\"query\": [\n{\n\"key\": \"wallet\",\n\"value\": \"0xf1E7DBEDD9e06447e2F99B1310c09287b734addc\"\n},\n{\n\"key\": \"limit\",\n\"value\": \"50\",\n\"disabled\": true\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Liquidity Mining Season 4 Points\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/liquidity-mining/season4/points?limit=50\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"liquidity-mining\",\n\"season4\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"50\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Liquidity Mining Season 5 Merkle Proofs\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.", "mimetype": "text/plain", "start_char_idx": 11629, "end_char_idx": 13995, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2a65a7c7-a69f-45fd-abac-11a4a7c5746d": {"__data__": {"id_": "2a65a7c7-a69f-45fd-abac-11a4a7c5746d", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "be98e7c9-4e90-49e2-81a7-07ac1fd35d92", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "hash": "9bfba3d745c57038220add04b880fbbd0733ccbd7c64b3ee04251b3a89326609", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ebdd7bdf-e134-4f1c-9463-bb9ba5c5c79c", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "hash": "80ad1d07d18b8b2f253b594246420a1d650704d49b666bf62ad3bfa187be5136", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"disabled\": true\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Liquidity Mining Season 4 Points\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/liquidity-mining/season4/points?limit=50\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"liquidity-mining\",\n\"season4\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"50\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Liquidity Mining Season 5 Merkle Proofs\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/liquidity-mining/season5/merkleproofs?wallet=0xf1E7DBEDD9e06447e2F99B1310c09287b734addc\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"liquidity-mining\",\n\"season5\",\n\"merkleproofs\"\n],\n\"query\": [\n{\n\"key\": \"wallet\",\n\"value\": \"0xf1E7DBEDD9e06447e2F99B1310c09287b734addc\"\n},\n{\n\"key\": \"limit\",\n\"value\": \"50\",\n\"disabled\": true\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Liquidity Mining Season 5 Points\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/liquidity-mining/season5/points?limit=50&wallet=0xf1E7DBEDD9e06447e2F99B1310c09287b734addc\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"liquidity-mining\",\n\"season5\",\n\"points\"\n],\n\"query\": [\n{\n\"key\": \"limit\",\n\"value\": \"50\"\n},\n{\n\"key\": \"wallet\",\n\"value\": \"0xf1E7DBEDD9e06447e2F99B1310c09287b734addc\"\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Farcaster Wallets\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/farcaster/wallets?wallet=0xf1E7DBEDD9e06447e2F99B1310c09287b734addc\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"farcaster\",\n\"wallets\"\n],\n\"query\": [\n{\n\"key\": \"wallet\",\n\"value\": \"0xf1E7DBEDD9e06447e2F99B1310c09287b734addc\"\n},\n{\n\"key\": \"limit\",\n\"value\": \"5\",\n\"disabled\": true\n},\n{\n\"key\": \"offset\",\n\"value\": \"5\",\n\"disabled\": true\n}\n]\n}\n},\n\"response\": []\n},\n{\n\"name\": \"Farcaster Tokenomics\",\n\"request\": {\n\"method\": \"GET\",\n\"header\": [],\n\"url\": {\n\"raw\": \"https://api.degen.tips/tokenomics?category=Liquidity Mining\",\n\"protocol\": \"https\",\n\"host\": [\n\"api\",\n\"degen\",\n\"tips\"\n],\n\"path\": [\n\"tokenomics\"\n],\n\"query\": [\n{\n\"key\": \"category\",\n\"value\": \"Liquidity Mining\"\n}\n]\n}\n},\n\"response\": []\n}\n]\n}", "mimetype": "text/plain", "start_char_idx": 13466, "end_char_idx": 15672, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d9b04687-a1c6-43f5-bff3-7c99035b91fa": {"__data__": {"id_": "d9b04687-a1c6-43f5-bff3-7c99035b91fa", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/dune/dune_api.md", "file_name": "dune_api.md", "file_type": "text/markdown", "file_size": 880, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "85e9bb06-be74-4639-94a1-004a8b9b2b54", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/dune/dune_api.md", "file_name": "dune_api.md", "file_type": "text/markdown", "file_size": 880, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "8d3b7a98d76a526cf325d8e9cd691e697fc4e70e8f708ac83e144368abdec0cc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Dune Analytics API\n\nDune is a web-based platform that allows you to query public blockchain data and aggregate it into beautiful dashboards.\n\nimport { QueryParameter, DuneClient, RunQueryArgs } from \"@duneanalytics/client-sdk\";\nconst { DUNE_API_KEY } = process.env;\n\nconst client = new DuneClient(DUNE_API_KEY ?? \"\");\nconst queryId = 1215383;\nconst opts: RunQueryArgs = {\nqueryId,\nquery_parameters: [\nQueryParameter.text(\"TextField\", \"Plain Text\"),\nQueryParameter.number(\"NumberField\", 3.1415926535),\nQueryParameter.date(\"DateField\", \"2022-05-04 00:00:00\"),\nQueryParameter.enum(\"ListField\", \"Option 1\"),\n],\n};\n\nclient\n.runQuery(opts)\n.then((executionResult) => console.log(executionResult.result?.rows));\n\n// should look like\n// [\n// {\n// date_field: \"2022-05-04 00:00:00.000\",\n// list_field: \"Option 1\",\n// number_field: \"3.1415926535\",\n// text_field: \"Plain Text\",\n// },\n// ]", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 879, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "449b824c-79ea-42ee-bf70-601f801ac3e7": {"__data__": {"id_": "449b824c-79ea-42ee-bf70-601f801ac3e7", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/farcaster/farcaster.md", "file_name": "farcaster.md", "file_type": "text/markdown", "file_size": 1719, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8caffd14-0d92-4254-89fc-270d4d4cb2d2", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/farcaster/farcaster.md", "file_name": "farcaster.md", "file_type": "text/markdown", "file_size": 1719, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "hash": "6cef4f165b3e4c5c2f73e7f895592f1c47deef002af779bd73f7ffc62556e8e2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Farcaster is a decentralized social network built on Ethereum, emphasizing user data ownership and interoperability. Each user connects their Ethereum wallet, ensuring secure identity verification and seamless integration with blockchain-based applications. \ufffc\n\nDevelopers can leverage Farcaster\u2019s open protocol to create innovative applications. The platform offers various tools and APIs to facilitate this process. For instance, the Farcaster-py SDK allows developers to programmatically interact with the Farcaster network using Python, enabling tasks such as posting messages, retrieving user information, and more. \ufffc\n\nAdditionally, Farcaster supports the development of \u201cframes,\u201d which are mini-apps that run inside a Farcaster feed. These frames enable rich, interactive experiences without requiring users to leave their social feed. Frameworks like Frog have been developed to simplify the creation of these frames, providing a minimal footprint and utilities for common tasks. \ufffc\n\nFarcaster\u2019s architecture includes Hubs, which are distributed servers that store and validate data. Developers can run their own Hubs to gain real-time access to Farcaster data, enhancing the decentralization and resilience of the network. \ufffc\n\nThe platform\u2019s integration with blockchain technology ensures that user data is secure and tamper-proof. By leveraging Ethereum\u2019s capabilities, Farcaster provides a censorship-resistant environment where users maintain control over their social interactions. \ufffc\n\nFor more detailed information on building with Farcaster, including tutorials and API documentation, developers can refer to the official Farcaster documentation.\ufffchttps://docs.farcaster.xyz/developers/", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1695, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e40006b3-5094-4355-87aa-c3b4887ff2c8": {"__data__": {"id_": "e40006b3-5094-4355-87aa-c3b4887ff2c8", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/farcaster/frames.md", "file_name": "frames.md", "file_type": "text/markdown", "file_size": 10466, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aca655d4-48d0-4906-a1fc-59144bf88ae8", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/farcaster/frames.md", "file_name": "frames.md", "file_type": "text/markdown", "file_size": 10466, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "hash": "0dca8c2d979a2f3c3f239cb16e7997f0d6b3877f4fea6043d17a9991d7318880", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e9472573-a72d-4cee-ac87-b5ada35366ab", "node_type": "1", "metadata": {}, "hash": "2a582da80d73cd8840f662eff3e3aba6e989f6d609ff2f36c884744054149352", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Farcaster frames v2\n\nA streamlined guide for building a Farcaster Frames v2 demo application using Next.js, TypeScript, React, Frame SDK, and Wagmi. This documentation outlines the core architecture, key components, and interactions within the application.\n\nProviders\n\nCustom Wagmi Connector\n\nA custom connector bridges the Wagmi library with the Farcaster Frame SDK, enabling interactions with the user\u2019s Farcaster wallet.\n\n// lib/connector.ts\nimport sdk from \"@farcaster/frame-sdk\";\nimport { createConnector } from \"wagmi\";\n\nexport function frameConnector() {\n  return createConnector({\n    // Connector configuration leveraging sdk.wallet.ethProvider\n  });\n}\n\nNote: Future SDK releases aim to incorporate this connector directly, simplifying integration.\n\nWagmi Provider Component\n\nConfigures the Wagmi client with necessary chains and connectors, and integrates React Query for data fetching and caching.\n\n// components/providers/WagmiProvider.tsx\nimport { createConfig, http, WagmiProvider } from \"wagmi\";\nimport { base } from \"wagmi/chains\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { frameConnector } from \"~/lib/connector\";\n\nconst config = createConfig({\n  chains: [base],\n  connectors: [frameConnector()],\n  transports: { [base.id]: http() },\n});\n\nconst queryClient = new QueryClient();\n\nexport default function Provider({ children }: { children: React.ReactNode }) {\n  return (\n    <WagmiProvider config={config}>\n      <QueryClientProvider client={queryClient}>\n        {children}\n      </QueryClientProvider>\n    </WagmiProvider>\n  );\n}\n\nTop-Level Providers\n\nIntegrates all provider components into the application using Next.js\u2019 dynamic imports to ensure client-side rendering where necessary.\n\n// app/providers.tsx\n\"use client\";\n\nimport dynamic from \"next/dynamic\";\n\nconst WagmiProvider = dynamic(() => import(\"~/components/providers/WagmiProvider\"), {\n  ssr: false,\n});\n\nexport function Providers({ children }: { children: React.ReactNode }) {\n  return <WagmiProvider>{children}</WagmiProvider>;\n}\n\nCore Components\n\nDemo Component\n\nThe central component of the application, handling SDK initialization, context retrieval, and rendering interactive UI elements.\n\n// app/components/Demo.tsx\n\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport sdk, { type FrameContext } from \"@farcaster/frame-sdk\";\n\nexport default function Demo() {\n  const [isSDKLoaded, setIsSDKLoaded] = useState(false);\n  const [context, setContext] = useState<FrameContext>();\n\n  useEffect(() => {\n    const initializeSDK = async () => {\n      setContext(await sdk.context);\n      sdk.actions.ready();\n      setIsSDKLoaded(true);\n    };\n    if (sdk && !isSDKLoaded) {\n      initializeSDK();\n    }\n  }, [isSDKLoaded]);\n\n  if (!isSDKLoaded) return <div>Loading...</div>;\n\n  return (\n    <div className=\"w-[300px] mx-auto py-4 px-2\">\n      <h1 className=\"text-2xl font-bold text-center mb-4\">Frames v2 Demo</h1>\n      {/* Additional UI Elements */}\n    </div>\n  );\n}\n\nAction Buttons\n\nInteractive buttons that invoke specific actions provided by the Frame SDK, such as opening URLs or closing the frame.\n\nimport { useCallback } from \"react\";\nimport sdk from \"@farcaster/frame-sdk\";\nimport { Button } from \"~/components/ui/Button\";\n\nexport default function ActionButtons() {\n  const openUrl = useCallback(() => {\n    sdk.actions.openUrl(\"https://www.example.com\");\n  }, []);\n\n  const closeFrame = useCallback(() => {\n    sdk.actions.close();\n  }, []);\n\n  return (\n    <div>\n      <Button onClick={openUrl}>Open Link</Button>\n      <Button onClick={closeFrame}>Close Frame</Button>\n    </div>\n  );\n}\n\nContext Display\n\nDisplays contextual information provided by the parent Farcaster app, such as user details. Includes toggling functionality for better UX.\n\nimport { useState, useCallback } from \"react\";\n\nexport default function ContextDisplay({ context }: { context: FrameContext }) {\n  const [isContextOpen, setIsContextOpen] = useState(false);\n  const toggleContext = useCallback(() => {\n    setIsContextOpen((prev) => !prev);\n  }, []);\n\n  return (\n    <div className=\"mb-4\">\n      <h2 className=\"font-2xl font-bold\">Context</h2>\n      <button onClick={toggleContext} className=\"flex items-center gap-2 transition-colors\">\n        <span className={`transform transition-transform ${isContextOpen ?", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4336, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e9472573-a72d-4cee-ac87-b5ada35366ab": {"__data__": {"id_": "e9472573-a72d-4cee-ac87-b5ada35366ab", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/farcaster/frames.md", "file_name": "frames.md", "file_type": "text/markdown", "file_size": 10466, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aca655d4-48d0-4906-a1fc-59144bf88ae8", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/farcaster/frames.md", "file_name": "frames.md", "file_type": "text/markdown", "file_size": 10466, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "hash": "0dca8c2d979a2f3c3f239cb16e7997f0d6b3877f4fea6043d17a9991d7318880", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e40006b3-5094-4355-87aa-c3b4887ff2c8", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/farcaster/frames.md", "file_name": "frames.md", "file_type": "text/markdown", "file_size": 10466, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "hash": "6d92cbcc32aaad5d3df728e41db1c06d7c10624b46003c09fcba0aa8e2f04095", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "361611d3-d56e-4d79-a530-97066895fcbe", "node_type": "1", "metadata": {}, "hash": "813cc7fba733eb8b1c9ab0a9a434a9344d70bf60a2935a140eaf3ea01408bb7d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Includes toggling functionality for better UX.\n\nimport { useState, useCallback } from \"react\";\n\nexport default function ContextDisplay({ context }: { context: FrameContext }) {\n  const [isContextOpen, setIsContextOpen] = useState(false);\n  const toggleContext = useCallback(() => {\n    setIsContextOpen((prev) => !prev);\n  }, []);\n\n  return (\n    <div className=\"mb-4\">\n      <h2 className=\"font-2xl font-bold\">Context</h2>\n      <button onClick={toggleContext} className=\"flex items-center gap-2 transition-colors\">\n        <span className={`transform transition-transform ${isContextOpen ? \"rotate-90\" : \"\"}`}>\u27a4</span>\n        Tap to expand\n      </button>\n      {isContextOpen && (\n        <div className=\"p-4 mt-2 bg-gray-100 dark:bg-gray-800 rounded-lg\">\n          <pre className=\"font-mono text-xs whitespace-pre-wrap break-words max-w-[260px] overflow-x-\">\n            {JSON.stringify(context, null, 2)}\n          </pre>\n        </div>\n      )}\n    </div>\n  );\n}\n\nWallet Integration\n\nManages wallet connections, displays the user\u2019s address, and handles transactions and signatures using Wagmi hooks.\n\nimport { useAccount, useConnect, useDisconnect, useSendTransaction, useWaitForTransactionReceipt, useSignMessage, useSignTypedData } from \"wagmi\";\nimport { Button } from \"~/components/ui/Button\";\nimport { truncateAddress } from \"~/lib/truncateAddress\";\n\nexport default function WalletIntegration() {\n  const { address, isConnected } = useAccount();\n  const { connect } = useConnect();\n  const { disconnect } = useDisconnect();\n  const { sendTransaction, isPending: isSendTxPending, isError: isSendTxError, error: sendTxError } = useSendTransaction();\n  const { isLoading: isConfirming, isSuccess: isConfirmed } = useWaitForTransactionReceipt({ hash: txHash as `0x${string}` });\n  const { signMessage, isLoading: isSignPending, isError: isSignError, error: signError } = useSignMessage();\n  const { signTypedData, isLoading: isSignTypedPending, isError: isSignTypedError, error: signTypedError } = useSignTypedData();\n\n  const sendTx = useCallback(() => {\n    sendTransaction(\n      {\n        to: \"0xRecipientAddress\",\n        data: \"0xTransactionData\",\n      },\n      {\n        onSuccess: (hash) => {\n          setTxHash(hash);\n        },\n      }\n    );\n  }, [sendTransaction]);\n\n  const sign = useCallback(() => {\n    signMessage({ message: \"Hello from Frames v2!\" });\n  }, [signMessage]);\n\n  const signTyped = useCallback(() => {\n    signTypedData({\n      domain: { name: \"Frames v2 Demo\", version: \"1\", chainId: 8453 },\n      types: { Message: [{ name: \"content\", type: \"string\" }] },\n      message: { content: \"Hello from Frames v2!\" },\n      primaryType: \"Message\",\n    });\n  }, [signTypedData]);\n\n  return (\n    <div>\n      {address && <div>Address: {truncateAddress(address)}</div>}\n      <Button onClick={() => (isConnected ? disconnect() : connect({ connector: config.connectors[0] }))}>\n        {isConnected ? \"Disconnect\" : \"Connect\"}\n      </Button>\n      {isConnected && (\n        <>\n          <Button onClick={sendTx} disabled={isSendTxPending}>\n            Send Transaction\n          </Button>\n          {isSendTxError && <div className=\"text-red-500 text-xs mt-1\">{sendTxError.message}</div>}\n          {txHash && (\n            <div>\n              <div>Hash: {truncateAddress(txHash)}</div>\n              <div>Status: {isConfirming ? \"Confirming...\" : isConfirmed ? \"Confirmed!\" : \"Pending\"}</div>\n            </div>\n          )}\n          <Button onClick={sign} disabled={isSignPending}>\n            Sign Message\n          </Button>\n          {isSignError && <div className=\"text-red-500 text-xs mt-1\">{signError.message}</div>}\n          <Button onClick={signTyped} disabled={isSignTypedPending}>\n            Sign Typed Data\n          </Button>\n          {isSignTypedError && <div className=\"text-red-500 text-xs mt-1\">{signTypedError.message}</div>}\n        </>\n      )}\n    </div>\n  );\n}\n\nInteractions\n\nSDK Readiness\n\nUpon initialization, the application signals to the Farcaster parent app that the frame is ready by invoking sdk.actions.ready().", "mimetype": "text/plain", "start_char_idx": 3745, "end_char_idx": 7820, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "361611d3-d56e-4d79-a530-97066895fcbe": {"__data__": {"id_": "361611d3-d56e-4d79-a530-97066895fcbe", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/farcaster/frames.md", "file_name": "frames.md", "file_type": "text/markdown", "file_size": 10466, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aca655d4-48d0-4906-a1fc-59144bf88ae8", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/farcaster/frames.md", "file_name": "frames.md", "file_type": "text/markdown", "file_size": 10466, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "hash": "0dca8c2d979a2f3c3f239cb16e7997f0d6b3877f4fea6043d17a9991d7318880", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e9472573-a72d-4cee-ac87-b5ada35366ab", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/farcaster/frames.md", "file_name": "frames.md", "file_type": "text/markdown", "file_size": 10466, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "hash": "503bfaaf2120b7448b6b03c8f1f6a76cf545b8188071587639dc9dc93bb1bd9c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"Confirming...\" : isConfirmed ? \"Confirmed!\" : \"Pending\"}</div>\n            </div>\n          )}\n          <Button onClick={sign} disabled={isSignPending}>\n            Sign Message\n          </Button>\n          {isSignError && <div className=\"text-red-500 text-xs mt-1\">{signError.message}</div>}\n          <Button onClick={signTyped} disabled={isSignTypedPending}>\n            Sign Typed Data\n          </Button>\n          {isSignTypedError && <div className=\"text-red-500 text-xs mt-1\">{signTypedError.message}</div>}\n        </>\n      )}\n    </div>\n  );\n}\n\nInteractions\n\nSDK Readiness\n\nUpon initialization, the application signals to the Farcaster parent app that the frame is ready by invoking sdk.actions.ready(). This action transitions the frame from the splash screen to the main content.\n\nuseEffect(() => {\n  const initializeSDK = async () => {\n    setContext(await sdk.context);\n    sdk.actions.ready();\n    setIsSDKLoaded(true);\n  };\n  if (sdk && !isSDKLoaded) {\n    initializeSDK();\n  }\n}, [isSDKLoaded]);\n\nContext Management\n\nThe Frame SDK provides contextual data about the current user and environment through sdk.context. This data is asynchronously fetched and managed within the component state, allowing for dynamic rendering based on the user\u2019s context.\n\nconst [context, setContext] = useState<FrameContext>();\n\nuseEffect(() => {\n  const fetchContext = async () => {\n    const ctx = await sdk.context;\n    setContext(ctx);\n    sdk.actions.ready();\n  };\n  fetchContext();\n}, []);\n\nAction Invocation\n\nInteractive elements such as buttons utilize Frame SDK actions to perform operations like opening external URLs or closing the frame. These actions communicate directly with the Farcaster client to execute desired behaviors.\n\nconst openUrl = useCallback(() => {\n  sdk.actions.openUrl(\"https://www.example.com\");\n}, []);\n\nconst closeFrame = useCallback(() => {\n  sdk.actions.close();\n}, []);\n\nWallet Operations\n\nLeveraging Wagmi, the application manages wallet connections, displays user addresses, and handles transactions and signatures. Hooks provided by Wagmi facilitate these interactions, ensuring a responsive and secure wallet experience.\n\t\u2022\tConnecting/Disconnecting:\n\n<Button onClick={() => (isConnected ? disconnect() : connect({ connector: config.connectors[0] }))}>\n  {isConnected ? \"Disconnect\" : \"Connect\"}\n</Button>\n\n\n\t\u2022\tSending Transactions:\n\nconst sendTx = useCallback(() => {\n  sendTransaction(\n    {\n      to: \"0xRecipientAddress\",\n      data: \"0xTransactionData\",\n    },\n    {\n      onSuccess: (hash) => {\n        setTxHash(hash);\n      },\n    }\n  );\n}, [sendTransaction]);\n\n\n\t\u2022\tSigning Messages:\n\nconst sign = useCallback(() => {\n  signMessage({ message: \"Hello from Frames v2!\" });\n}, [signMessage]);\n\n\n\nSignature Handling\n\nThe application supports both simple message signing and typed data signing, enabling users to authenticate or authorize actions securely.\n\t\u2022\tSign Message:\n\nconst sign = useCallback(() => {\n  signMessage({ message: \"Hello from Frames v2!\" });\n}, [signMessage]);\n\n\n\t\u2022\tSign Typed Data:\n\nconst signTyped = useCallback(() => {\n  signTypedData({\n    domain: { name: \"Frames v2 Demo\", version: \"1\", chainId: 8453 },\n    types: { Message: [{ name: \"content\", type: \"string\" }] },\n    message: { content: \"Hello from Frames v2!\" },\n    primaryType: \"Message\",\n  });\n}, [signTypedData]);", "mimetype": "text/plain", "start_char_idx": 7103, "end_char_idx": 10444, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dce3b43e-cc8b-4818-98b4-f0917ca105e4": {"__data__": {"id_": "dce3b43e-cc8b-4818-98b4-f0917ca105e4", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5c79bfac-d660-49e6-8f49-a015b188b969", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "bad59bddc70e6fc4cf1de6c6e55cb6110fdba4c33c0112bc39f65b1242b1ff36", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "300c928a-fe98-41f3-93aa-668b157e538d", "node_type": "1", "metadata": {}, "hash": "37e5196d0667ffb2d882ce132001296012574e481f700509f4d982d6244b8c5a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Search for casts on Farcaster via Neynar API\n\nhttps://api.neynar.com/v2/farcaster/cast/search\nSearch for casts based on a query string, with optional AND filters\n\nSearching Casts\nYou can search for casts using keywords and commands in the search query. The following search commands are supported:\n\nDate Range Commands\nbefore:YYYY-MM-DD - Find casts created before the specified date\nafter:YYYY-MM-DD - Find casts created after the specified date\nFor example:\n\nstar wars before:2023-01-01 - Find Star Wars-related casts from before 2023\nblockchain after:2023-06-01 - Find blockchain-related casts from after June 2023\nQuery Params\nq\nstring\nrequired\nQuery string to search for casts. Include 'before:YYYY-MM-DD' or 'after:YYYY-MM-DD' to search for casts before or after a specific date.\n\nauthor_fid\nint32\nFid of the user whose casts you want to search\n\nviewer_fid\nint32\nProviding this will return search results that respects this user's mutes and blocks and includes viewer_context.\n\nparent_url\nstring\nParent URL of the casts you want to search\n\nchannel_id\nstring\nChannel ID of the casts you want to search\n\npriority_mode\nboolean\nDefaults to false\nWhen true, only returns search results from power badge users and users that the viewer follows (if viewer_fid is provided).\n\nfalse\nlimit\nint32\n1 to 100\nDefaults to 25\nNumber of results to fetch\n\n25\ncursor\nstring\nPagination cursor\n\nconst url = 'https://api.neynar.com/v2/farcaster/cast/search?priority_mode=false&limit=25';\nconst options = {\nmethod: 'GET',\nheaders: {accept: 'application/json', 'x-api-key': 'NEYNAR_API_DOCS'}\n};\n\nfetch(url, options)\n.then(res => res.json())\n.then(json => console.log(json))\n.catch(err => console.error(err));\n\nResponse:\n{ \"result\": { \"casts\": [ { \"hash\": \"string\", \"parent_hash\": \"string\", \"parent_url\": \"string\", \"root_parent_url\": \"string\", \"parent_author\": { \"fid\": 0 }, \"author\": { \"object\": \"user\", \"fid\": 3, \"username\": \"string\", \"display_name\": \"string\", \"custody_address\": \"string\", \"pfp_url\": \"string\", \"profile\": { \"bio\": { \"text\": \"string\", \"mentioned_profiles\": [ \"string\" ] }, \"location\": { \"latitude\": 0, \"longitude\": 0, \"address\": { \"city\": \"string\", \"state\": \"string\", \"state_code\": \"string\", \"country\": \"string\", \"country_code\": \"string\" } } }, \"follower_count\": 0, \"following_count\": 0, \"verifications\": [ \"string\" ], \"verified_addresses\": { \"eth_addresses\": [ \"string\" ], \"sol_addresses\": [ \"string\" ] }, \"verified_accounts\": [ { \"platform\": \"x\", \"username\": \"string\" } ], \"power_badge\": true, \"experimental\": { \"neynar_user_score\": 0 }, \"viewer_context\": { \"following\": true, \"followed_by\": true, \"blocking\": true, \"blocked_by\": true } }, \"text\": \"string\", \"timestamp\": \"2025-02-14T18:58:33.704Z\", \"embeds\": [ { \"url\": \"string\", \"metadata\": { \"\\_status\": \"string\", \"content_type\": \"string\", \"content_length\": 0, \"image\": { \"height_px\": 0, \"width_px\": 0 }, \"video\": { \"duration_s\": 0, \"stream\": [ { \"codec_name\": \"string\", \"height_px\": 0, \"width_px\": 0 } ] }, \"html\": { \"favicon\": \"string\", \"modifiedTime\": \"string\", \"ogArticleAuthor\": \"string\", \"ogArticleExpirationTime\": \"string\", \"ogArticleModifiedTime\": \"string\", \"ogArticlePublishedTime\": \"string\", \"ogArticlePublisher\": \"string\", \"ogArticleSection\": \"string\", \"ogArticleTag\": \"string\", \"ogAudio\": \"string\", \"ogAudioSecureURL\": \"string\", \"ogAudioType\": \"string\", \"ogAudioURL\": \"string\", \"ogAvailability\": \"string\", \"ogDate\": \"string\", \"ogDescription\": \"string\", \"ogDeterminer\": \"string\", \"ogEpisode\": \"string\", \"ogImage\": [ { \"height\": \"string\",", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3504, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "300c928a-fe98-41f3-93aa-668b157e538d": {"__data__": {"id_": "300c928a-fe98-41f3-93aa-668b157e538d", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5c79bfac-d660-49e6-8f49-a015b188b969", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "bad59bddc70e6fc4cf1de6c6e55cb6110fdba4c33c0112bc39f65b1242b1ff36", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dce3b43e-cc8b-4818-98b4-f0917ca105e4", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "93e3d01e6b4028032afa0553f8731d3954cbc2ff3d056bdb461dbd0ed95966b5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9ab4a477-50a9-4d85-83af-cc895aeeef6c", "node_type": "1", "metadata": {}, "hash": "8d4477874af18e7b73fb9aa28c0cda8d073e463d8666dad03250d0da70453c53", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"video\": { \"duration_s\": 0, \"stream\": [ { \"codec_name\": \"string\", \"height_px\": 0, \"width_px\": 0 } ] }, \"html\": { \"favicon\": \"string\", \"modifiedTime\": \"string\", \"ogArticleAuthor\": \"string\", \"ogArticleExpirationTime\": \"string\", \"ogArticleModifiedTime\": \"string\", \"ogArticlePublishedTime\": \"string\", \"ogArticlePublisher\": \"string\", \"ogArticleSection\": \"string\", \"ogArticleTag\": \"string\", \"ogAudio\": \"string\", \"ogAudioSecureURL\": \"string\", \"ogAudioType\": \"string\", \"ogAudioURL\": \"string\", \"ogAvailability\": \"string\", \"ogDate\": \"string\", \"ogDescription\": \"string\", \"ogDeterminer\": \"string\", \"ogEpisode\": \"string\", \"ogImage\": [ { \"height\": \"string\", \"type\": \"string\", \"url\": \"string\", \"width\": \"string\", \"alt\": \"string\" } ], \"ogLocale\": \"string\", \"ogLocaleAlternate\": \"string\", \"ogLogo\": \"string\", \"ogMovie\": \"string\", \"ogPriceAmount\": \"string\", \"ogPriceCurrency\": \"string\", \"ogProductAvailability\": \"string\", \"ogProductCondition\": \"string\", \"ogProductPriceAmount\": \"string\", \"ogProductPriceCurrency\": \"string\", \"ogProductRetailerItemId\": \"string\", \"ogSiteName\": \"string\", \"ogTitle\": \"string\", \"ogType\": \"string\", \"ogUrl\": \"string\", \"ogVideo\": [ { \"height\": \"string\", \"type\": \"string\", \"url\": \"string\", \"width\": \"string\" } ], \"ogVideoActor\": \"string\", \"ogVideoActorId\": \"string\", \"ogVideoActorRole\": \"string\", \"ogVideoDirector\": \"string\", \"ogVideoDuration\": \"string\", \"ogVideoOther\": \"string\", \"ogVideoReleaseDate\": \"string\", \"ogVideoSecureURL\": \"string\", \"ogVideoSeries\": \"string\", \"ogVideoTag\": \"string\", \"ogVideoTvShow\": \"string\", \"ogVideoWriter\": \"string\", \"ogWebsite\": \"string\", \"updatedTime\": \"string\", \"oembed\": { \"type\": \"rich\", \"version\": \"string\", \"title\": \"string\", \"author_name\": \"string\", \"author_url\": \"string\", \"provider_name\": \"string\", \"provider_url\": \"string\", \"cache_age\": \"string\", \"thumbnail_url\": \"string\", \"thumbnail_width\": 0, \"thumbnail_height\": 0, \"html\": \"string\", \"width\": 0, \"height\": 0 } }, \"frame\": { \"version\": \"string\", \"image\": \"string\", \"frames_url\": \"string\", \"buttons\": [ { \"title\": \"string\", \"index\": 0, \"action_type\": \"post\", \"target\": \"string\", \"post_url\": \"string\" } ], \"post_url\": \"string\", \"title\": \"string\", \"image_aspect_ratio\": \"string\", \"input\": { \"text\": \"string\" }, \"state\": { \"serialized\": \"string\" } } } }, { \"cast\": { \"hash\": \"string\", \"parent_hash\": \"string\", \"parent_url\": \"string\", \"root_parent_url\": \"string\", \"parent_author\": { \"fid\": 0 }, \"author\": { \"object\": \"user_dehydrated\", \"fid\": 3, \"username\": \"string\", \"display_name\": \"string\", \"pfp_url\": \"string\" }, \"text\": \"string\", \"timestamp\": \"2025-02-14T18:58:33.704Z\", \"type\": \"cast-mention\", \"embeds\": [ { \"url\": \"string\", \"metadata\": { \"\\_status\": \"string\", \"content_type\": \"string\", \"content_length\": 0, \"image\": { \"height_px\": 0, \"width_px\": 0 }, \"video\": { \"duration_s\": 0, \"stream\": [ { \"codec_name\": \"string\", \"height_px\": 0, \"width_px\": 0 } ] }, \"html\": { \"favicon\": \"string\", \"modifiedTime\": \"string\", \"ogArticleAuthor\": \"string\", \"ogArticleExpirationTime\": \"string\", \"ogArticleModifiedTime\": \"string\", \"ogArticlePublishedTime\": \"string\", \"ogArticlePublisher\": \"string\", \"ogArticleSection\": \"string\", \"ogArticleTag\": \"string\", \"ogAudio\": \"string\", \"ogAudioSecureURL\": \"string\",", "mimetype": "text/plain", "start_char_idx": 2861, "end_char_idx": 6050, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9ab4a477-50a9-4d85-83af-cc895aeeef6c": {"__data__": {"id_": "9ab4a477-50a9-4d85-83af-cc895aeeef6c", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5c79bfac-d660-49e6-8f49-a015b188b969", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "bad59bddc70e6fc4cf1de6c6e55cb6110fdba4c33c0112bc39f65b1242b1ff36", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "300c928a-fe98-41f3-93aa-668b157e538d", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "678a779879f58ac66d7851d74fc7a340bd1e9c06e30c7deaf0cb5ea9ff0670d0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1df83d59-40b9-4e72-8ada-9a603f3666a1", "node_type": "1", "metadata": {}, "hash": "a24c8c72a5240868e47c4006df1901c669d108604a1f7191a53d1b36bd8185ed", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "704Z\", \"type\": \"cast-mention\", \"embeds\": [ { \"url\": \"string\", \"metadata\": { \"\\_status\": \"string\", \"content_type\": \"string\", \"content_length\": 0, \"image\": { \"height_px\": 0, \"width_px\": 0 }, \"video\": { \"duration_s\": 0, \"stream\": [ { \"codec_name\": \"string\", \"height_px\": 0, \"width_px\": 0 } ] }, \"html\": { \"favicon\": \"string\", \"modifiedTime\": \"string\", \"ogArticleAuthor\": \"string\", \"ogArticleExpirationTime\": \"string\", \"ogArticleModifiedTime\": \"string\", \"ogArticlePublishedTime\": \"string\", \"ogArticlePublisher\": \"string\", \"ogArticleSection\": \"string\", \"ogArticleTag\": \"string\", \"ogAudio\": \"string\", \"ogAudioSecureURL\": \"string\", \"ogAudioType\": \"string\", \"ogAudioURL\": \"string\", \"ogAvailability\": \"string\", \"ogDate\": \"string\", \"ogDescription\": \"string\", \"ogDeterminer\": \"string\", \"ogEpisode\": \"string\", \"ogImage\": [ { \"height\": \"string\", \"type\": \"string\", \"url\": \"string\", \"width\": \"string\", \"alt\": \"string\" } ], \"ogLocale\": \"string\", \"ogLocaleAlternate\": \"string\", \"ogLogo\": \"string\", \"ogMovie\": \"string\", \"ogPriceAmount\": \"string\", \"ogPriceCurrency\": \"string\", \"ogProductAvailability\": \"string\", \"ogProductCondition\": \"string\", \"ogProductPriceAmount\": \"string\", \"ogProductPriceCurrency\": \"string\", \"ogProductRetailerItemId\": \"string\", \"ogSiteName\": \"string\", \"ogTitle\": \"string\", \"ogType\": \"string\", \"ogUrl\": \"string\", \"ogVideo\": [ { \"height\": \"string\", \"type\": \"string\", \"url\": \"string\", \"width\": \"string\" } ], \"ogVideoActor\": \"string\", \"ogVideoActorId\": \"string\", \"ogVideoActorRole\": \"string\", \"ogVideoDirector\": \"string\", \"ogVideoDuration\": \"string\", \"ogVideoOther\": \"string\", \"ogVideoReleaseDate\": \"string\", \"ogVideoSecureURL\": \"string\", \"ogVideoSeries\": \"string\", \"ogVideoTag\": \"string\", \"ogVideoTvShow\": \"string\", \"ogVideoWriter\": \"string\", \"ogWebsite\": \"string\", \"updatedTime\": \"string\", \"oembed\": { \"type\": \"rich\", \"version\": \"string\", \"title\": \"string\", \"author_name\": \"string\", \"author_url\": \"string\", \"provider_name\": \"string\", \"provider_url\": \"string\", \"cache_age\": \"string\", \"thumbnail_url\": \"string\", \"thumbnail_width\": 0, \"thumbnail_height\": 0, \"html\": \"string\", \"width\": 0, \"height\": 0 } }, \"frame\": { \"version\": \"string\", \"image\": \"string\", \"frames_url\": \"string\", \"buttons\": [ { \"title\": \"string\", \"index\": 0, \"action_type\": \"post\", \"target\": \"string\", \"post_url\": \"string\" } ], \"post_url\": \"string\", \"title\": \"string\", \"image_aspect_ratio\": \"string\", \"input\": { \"text\": \"string\" }, \"state\": { \"serialized\": \"string\" } } } }, { \"cast\": { \"object\": \"cast_dehydrated\", \"hash\": \"string\", \"author\": { \"object\": \"user_dehydrated\", \"fid\": 3, \"username\": \"string\", \"display_name\": \"string\", \"pfp_url\": \"string\" } } } ], \"channel\": { \"id\": \"string\", \"name\": \"string\", \"object\": \"channel_dehydrated\", \"image_url\": \"string\", \"viewer_context\": { \"following\": true, \"role\": \"member\" } } } } ], \"type\": \"cast-mention\", \"frames\": [ { \"version\": \"string\", \"image\": \"string\", \"frames_url\": \"string\", \"buttons\": [ { \"title\": \"string\", \"index\": 0, \"action_type\": \"post\", \"target\": \"string\", \"post_url\": \"string\" } ], \"post_url\": \"string\", \"title\": \"string\", \"image_aspect_ratio\": \"string\", \"input\": { \"text\": \"string\" }, \"state\": { \"serialized\": \"string\" } }, { \"version\": \"string\",", "mimetype": "text/plain", "start_char_idx": 5426, "end_char_idx": 8605, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1df83d59-40b9-4e72-8ada-9a603f3666a1": {"__data__": {"id_": "1df83d59-40b9-4e72-8ada-9a603f3666a1", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5c79bfac-d660-49e6-8f49-a015b188b969", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "bad59bddc70e6fc4cf1de6c6e55cb6110fdba4c33c0112bc39f65b1242b1ff36", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9ab4a477-50a9-4d85-83af-cc895aeeef6c", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "2145ba315a21653eb95f6d258de4049079564c35295d3becdedec87a5a3002ce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae886e43-6248-4087-b0ef-e8205269e673", "node_type": "1", "metadata": {}, "hash": "764d26599d5823bb823b9785ced93ce5e086d5e257fc5fe860e5c5a315181357", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"username\": \"string\", \"display_name\": \"string\", \"pfp_url\": \"string\" } } } ], \"channel\": { \"id\": \"string\", \"name\": \"string\", \"object\": \"channel_dehydrated\", \"image_url\": \"string\", \"viewer_context\": { \"following\": true, \"role\": \"member\" } } } } ], \"type\": \"cast-mention\", \"frames\": [ { \"version\": \"string\", \"image\": \"string\", \"frames_url\": \"string\", \"buttons\": [ { \"title\": \"string\", \"index\": 0, \"action_type\": \"post\", \"target\": \"string\", \"post_url\": \"string\" } ], \"post_url\": \"string\", \"title\": \"string\", \"image_aspect_ratio\": \"string\", \"input\": { \"text\": \"string\" }, \"state\": { \"serialized\": \"string\" } }, { \"version\": \"string\", \"image\": \"string\", \"frames_url\": \"string\", \"manifest\": { \"account_association\": { \"header\": \"string\", \"payload\": \"string\", \"signature\": \"string\" }, \"frame\": { \"version\": \"0.0.0\", \"name\": \"string\", \"home_url\": \"string\", \"icon_url\": \"string\", \"image_url\": \"string\", \"button_title\": \"string\", \"splash_image_url\": \"string\", \"splash_background_color\": \"string\", \"webhook_url\": \"string\" }, \"triggers\": [ { \"type\": \"cast\", \"id\": \"string\", \"url\": \"string\", \"name\": \"string\" }, { \"type\": \"composer\", \"id\": \"string\", \"url\": \"string\", \"name\": \"string\" } ] }, \"author\": { \"object\": \"user_dehydrated\", \"fid\": 3, \"username\": \"string\", \"display_name\": \"string\", \"pfp_url\": \"string\" } } ], \"reactions\": { \"likes\": [ { \"fid\": 3 } ], \"recasts\": [ { \"fid\": 3, \"fname\": \"string\" } ], \"likes_count\": 0, \"recasts_count\": 0 }, \"replies\": { \"count\": 0 }, \"thread_hash\": \"string\", \"mentioned_profiles\": [ { \"object\": \"user\", \"fid\": 3, \"username\": \"string\", \"display_name\": \"string\", \"custody_address\": \"string\", \"pfp_url\": \"string\", \"profile\": { \"bio\": { \"text\": \"string\", \"mentioned_profiles\": [ \"string\" ] }, \"location\": { \"latitude\": 0, \"longitude\": 0, \"address\": { \"city\": \"string\", \"state\": \"string\", \"state_code\": \"string\", \"country\": \"string\", \"country_code\": \"string\" } } }, \"follower_count\": 0, \"following_count\": 0, \"verifications\": [ \"string\" ], \"verified_addresses\": { \"eth_addresses\": [ \"string\" ], \"sol_addresses\": [ \"string\" ] }, \"verified_accounts\": [ { \"platform\": \"x\", \"username\": \"string\" } ], \"power_badge\": true, \"experimental\": { \"neynar_user_score\": 0 }, \"viewer_context\": { \"following\": true, \"followed_by\": true, \"blocking\": true, \"blocked_by\": true } } ], \"channel\": { \"id\": \"string\", \"url\": \"string\", \"name\": \"string\", \"description\": \"string\", \"object\": \"channel\", \"created_at\": 0, \"follower_count\": 0, \"external_link\": { \"title\": \"string\", \"url\": \"string\" }, \"image_url\": \"string\", \"parent_url\": \"string\", \"lead\": { \"object\": \"user\", \"fid\": 3, \"username\": \"string\", \"display_name\": \"string\", \"custody_address\": \"string\", \"pfp_url\": \"string\", \"profile\": { \"bio\": { \"text\": \"string\", \"mentioned_profiles\": [ \"string\" ] }, \"location\": { \"latitude\": 0, \"longitude\": 0, \"address\": { \"city\": \"string\", \"state\": \"string\", \"state_code\": \"string\", \"country\": \"string\", \"country_code\": \"string\" } } }, \"follower_count\": 0, \"following_count\": 0, \"verifications\": [ \"string\" ], \"verified_addresses\": { \"eth_addresses\": [ \"string\" ], \"sol_addresses\": [ \"string\" ] }, \"verified_accounts\": [ { \"platform\": \"x\",", "mimetype": "text/plain", "start_char_idx": 7977, "end_char_idx": 11104, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ae886e43-6248-4087-b0ef-e8205269e673": {"__data__": {"id_": "ae886e43-6248-4087-b0ef-e8205269e673", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5c79bfac-d660-49e6-8f49-a015b188b969", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "bad59bddc70e6fc4cf1de6c6e55cb6110fdba4c33c0112bc39f65b1242b1ff36", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1df83d59-40b9-4e72-8ada-9a603f3666a1", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "ab0735d51d3aea3e6ce15ebb5ca62e92629571fcf4bf181acace571444fabb88", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"image_url\": \"string\", \"parent_url\": \"string\", \"lead\": { \"object\": \"user\", \"fid\": 3, \"username\": \"string\", \"display_name\": \"string\", \"custody_address\": \"string\", \"pfp_url\": \"string\", \"profile\": { \"bio\": { \"text\": \"string\", \"mentioned_profiles\": [ \"string\" ] }, \"location\": { \"latitude\": 0, \"longitude\": 0, \"address\": { \"city\": \"string\", \"state\": \"string\", \"state_code\": \"string\", \"country\": \"string\", \"country_code\": \"string\" } } }, \"follower_count\": 0, \"following_count\": 0, \"verifications\": [ \"string\" ], \"verified_addresses\": { \"eth_addresses\": [ \"string\" ], \"sol_addresses\": [ \"string\" ] }, \"verified_accounts\": [ { \"platform\": \"x\", \"username\": \"string\" } ], \"power_badge\": true, \"experimental\": { \"neynar_user_score\": 0 }, \"viewer_context\": { \"following\": true, \"followed_by\": true, \"blocking\": true, \"blocked_by\": true } }, \"moderator_fids\": [ 0 ], \"member_count\": 0, \"pinned_cast_hash\": \"0xfe90f9de682273e05b201629ad2338bdcd89b6be\", \"viewer_context\": { \"following\": true, \"role\": \"member\" } }, \"viewer_context\": { \"liked\": true, \"recasted\": true }, \"author_channel_context\": { \"following\": true, \"role\": \"member\" } } ], \"next\": { \"cursor\": \"string\" } } }", "mimetype": "text/plain", "start_char_idx": 10468, "end_char_idx": 11629, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "02b7d698-8726-4538-9623-eb5a6341c6d6": {"__data__": {"id_": "02b7d698-8726-4538-9623-eb5a6341c6d6", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-channels.md", "file_name": "neynar_fetch-all-channels.md", "file_type": "text/markdown", "file_size": 7879, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "443aa579-8127-466b-bef0-cd9b6fca9960", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-channels.md", "file_name": "neynar_fetch-all-channels.md", "file_type": "text/markdown", "file_size": 7879, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d19e4f3e7d6f951dbf6be0d75325739d301d75574ef8b643b84a7ed70e240d8b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "97453c33-303a-478d-aa29-607143ed13a3", "node_type": "1", "metadata": {}, "hash": "9d0c9b940e135b0c04a55010e78e0dd02d0fb493419219de7ca70c5a002aa1a6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-all-channels\n\n**Endpoint**: `GET /farcaster/channel/list`\n\n## Description\nReturns a list of all channels with their details\n\n## Parameters\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- channels\nproperties:\n  channels:\n    type: array\n    items:\n      type: object\n      required:\n      - id\n      - url\n      - object\n      properties:\n        id:\n          type: string\n        url:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        object:\n          type: string\n          enum:\n          - channel\n        created_at:\n          description: Epoch timestamp in seconds.\n          type: number\n        follower_count:\n          description: Number of followers the channel has.\n          type: number\n        external_link:\n          type: object\n          description: Channel's external link.\n          properties:\n            title:\n              type: string\n            url:\n              type: string\n        image_url:\n          type: string\n        parent_url:\n          type: string\n          format: uri\n        lead: &id003\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid: &id002\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5258, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "97453c33-303a-478d-aa29-607143ed13a3": {"__data__": {"id_": "97453c33-303a-478d-aa29-607143ed13a3", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-channels.md", "file_name": "neynar_fetch-all-channels.md", "file_type": "text/markdown", "file_size": 7879, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "443aa579-8127-466b-bef0-cd9b6fca9960", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-channels.md", "file_name": "neynar_fetch-all-channels.md", "file_type": "text/markdown", "file_size": 7879, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d19e4f3e7d6f951dbf6be0d75325739d301d75574ef8b643b84a7ed70e240d8b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "02b7d698-8726-4538-9623-eb5a6341c6d6", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-channels.md", "file_name": "neynar_fetch-all-channels.md", "file_type": "text/markdown", "file_size": 7879, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "5a01469c17ca45efb0d6e977483c277fc2771bab2f0d90473a8eb9566d956f7d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        moderator_fids:\n          type: array\n          items: *id002\n        member_count:\n          type: integer\n          format: int32\n        moderator: *id003\n        pinned_cast_hash:\n          type: string\n          default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n          description: Cast Hash\n        hosts:\n          type: array\n          deprecated: true\n          items: *id003\n        viewer_context:\n          description: Adds context on the viewer's or author's role in the channel.\n          type: object\n          required:\n          - following\n          properties:\n            following:\n              description: Indicates if the user is following the channel.\n              type: boolean\n            role:\n              type: string\n              description: The role of a channel member\n              enum:\n              - member\n              - moderator\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4259, "end_char_idx": 7878, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ea6047f5-dbcd-47cf-b040-3522d14d5587": {"__data__": {"id_": "ea6047f5-dbcd-47cf-b040-3522d14d5587", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c3a62793-b06e-4cb7-adf6-bf2b4160b111", "node_type": "1", "metadata": {}, "hash": "28a51ea5068f3852330e1cd27ef845c9112e4b91fef90f0909c46aa9ca49b4b2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-all-notifications\n\n**Endpoint**: `GET /farcaster/notifications`\n\n## Description\nReturns a list of notifications for a specific FID.\n\n## Parameters\n- `fid` (query): FID of the user you you want to fetch notifications for. The response will respect this user's mutes and blocks.\n- `type` (query): Notification type to fetch. Comma separated values of follows, recasts, likes, mentions, replies.\n- `priority_mode` (query): When true, only returns notifications from power badge users and users that the viewer follows (if viewer_fid is provided).\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- unseen_notifications_count\n- notifications\n- next\nproperties:\n  unseen_notifications_count:\n    type: integer\n    format: int32\n  notifications:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - most_recent_timestamp\n      - type\n      - seen\n      properties:\n        object:\n          type: string\n        most_recent_timestamp:\n          type: string\n          format: date-time\n        type:\n          type: string\n          enum:\n          - follows\n          - recasts\n          - likes\n          - mention\n          - reply\n          - quote\n        seen:\n          type: boolean\n        follows:\n          type: array\n          items:\n            type: object\n            required:\n            - object\n            - user\n            properties:\n              object:\n                type: string\n                enum:\n                - follow\n              user: &id003\n                type: object\n                required:\n                - object\n                - fid\n                - custody_address\n                - username\n                - profile\n                - follower_count\n                - following_count\n                - verifications\n                - verified_addresses\n                - verified_accounts\n                - power_badge\n                properties:\n                  object:\n                    type: string\n                    enum:\n                    - user\n                  fid: &id002\n                    type: integer\n                    format: int32\n                    description: The unique identifier of a farcaster user (unsigned\n                      integer)\n                    examples:\n                    - 3\n                    - 191\n                    - 2\n                    - 194\n                    - 19960\n                  username:\n                    type: string\n                  display_name:\n                    type: string\n                  custody_address: &id001\n                    type: string\n                    pattern: ^0x[a-fA-F0-9]{40}$\n                    description: Ethereum address\n                  pfp_url:\n                    type: string\n                    description: The URL of the user's profile picture\n                  profile:\n                    type: object\n                    required:\n                    - bio\n                    properties:\n                      bio:\n                        type: object\n                        required:\n                        - text\n                        - mentioned_profiles\n                        properties:\n                          text:\n                            type: string\n                          mentioned_profiles:\n                            type: array\n                            items:\n                              type: string\n                            default: []\n                      location:\n                        description: Coordinates and place names for a location\n                        type: object\n                        required:\n                        - latitude\n                        - longitude\n                        properties:\n                          latitude:\n                            type: number\n                            format: double\n                            minimum: -90\n                            maximum: 90\n                          longitude:\n                            type: number\n                            format: double\n                            minimum: -180\n                            maximum: 180\n                          address:\n                            type: object\n                            required:\n                            - city\n                            - country\n                            properties:\n                              city:\n                                type: string\n                              state:\n                                type: string\n                              state_code:\n                                type: string\n                              country:\n                                type: string\n                              country_code:\n                                type: string\n                  follower_count:\n                    type: integer\n                    format: int32\n                    description: The number of followers the user has.\n                  following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id001\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id001\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5990, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c3a62793-b06e-4cb7-adf6-bf2b4160b111": {"__data__": {"id_": "c3a62793-b06e-4cb7-adf6-bf2b4160b111", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ea6047f5-dbcd-47cf-b040-3522d14d5587", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "571e5fb6e4e01cd509a095479707c1586871a0526090796c49a8ac64dd565cf9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ce4084df-57d8-4cc7-b3a3-7696cb2de52e", "node_type": "1", "metadata": {}, "hash": "ab6945dd1294a860eaba51683311ef07907f3a5a9d7934756d46ba87090a7477", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id001\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id001\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.\n                        items:\n                          type: string\n                          pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                          description: Solana address\n                  verified_accounts:\n                    type: array\n                    description: Verified accounts of the user on other platforms,\n                      currently only X is supported.\n                    items:\n                      type: object\n                      properties:\n                        platform:\n                          type: string\n                          enum:\n                          - x\n                          - github\n                        username:\n                          type: string\n                  power_badge:\n                    type: boolean\n                  experimental:\n                    type: object\n                    required:\n                    - neynar_user_score\n                    properties:\n                      neynar_user_score:\n                        type: number\n                        format: double\n                        description: Score that represents the probability that the\n                          account is not spam.\n                  viewer_context:\n                    type: object\n                    description: Adds context on the viewer's follow relationship\n                      with the user.\n                    required:\n                    - following\n                    - followed_by\n                    - blocking\n                    - blocked_by\n                    properties:\n                      following:\n                        description: Indicates if the viewer is following the user.\n                        type: boolean\n                      followed_by:\n                        description: Indicates if the viewer is followed by the user.\n                        type: boolean\n                      blocking:\n                        description: Indicates if the viewer is blocking the user.\n                        type: boolean\n                      blocked_by:\n                        description: Indicates if the viewer is blocked by the user.\n                        type: boolean\n        cast:\n          allOf:\n          - type: object\n            required:\n            - hash\n            - parent_hash\n            - parent_url\n            - root_parent_url\n            - parent_author\n            - author\n            - text\n            - timestamp\n            - embeds\n            properties:\n              hash:\n                type: string\n              parent_hash:\n                type:\n                - string\n                - 'null'\n              parent_url:\n                type:\n                - string\n                - 'null'\n              root_parent_url:\n                type:\n                - string\n                - 'null'\n              parent_author:\n                type: object\n                required:\n                - fid\n                properties:\n                  fid:", "mimetype": "text/plain", "start_char_idx": 5056, "end_char_idx": 9026, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ce4084df-57d8-4cc7-b3a3-7696cb2de52e": {"__data__": {"id_": "ce4084df-57d8-4cc7-b3a3-7696cb2de52e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c3a62793-b06e-4cb7-adf6-bf2b4160b111", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "4aad713754e7c3add359b9539e444563aad3d1c1f7ac294e2ebfb3c1046d8d52", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "54f00328-43e3-454d-91b3-e244c7acc80b", "node_type": "1", "metadata": {}, "hash": "c1b5bb48ae141461219d2a5d14ef95e076cdc8320a2c7e623f09c2ab83b8804a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- 'null'\n              root_parent_url:\n                type:\n                - string\n                - 'null'\n              parent_author:\n                type: object\n                required:\n                - fid\n                properties:\n                  fid:\n                    oneOf:\n                    - type: 'null'\n                    - *id002\n              author: *id003\n              text:\n                type: string\n              timestamp: &id007\n                type: string\n                format: date-time\n              embeds:\n                type: array\n                items:\n                  oneOf:\n                  - &id008\n                    type: object\n                    required:\n                    - url\n                    properties:\n                      url:\n                        type: string\n                      metadata:\n                        type: object\n                        required:\n                        - _status\n                        properties:\n                          _status:\n                            type: string\n                          content_type:\n                            type:\n                            - string\n                            - 'null'\n                          content_length:\n                            type:\n                            - integer", "mimetype": "text/plain", "start_char_idx": 8758, "end_char_idx": 10111, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "54f00328-43e3-454d-91b3-e244c7acc80b": {"__data__": {"id_": "54f00328-43e3-454d-91b3-e244c7acc80b", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ce4084df-57d8-4cc7-b3a3-7696cb2de52e", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "8cd9c3b9a04787ee1afa73f507cc44ed6167ce1bd96790e4357281a08e19ea28", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a63ed03c-d6e8-4c7c-b828-c6add4a972f2", "node_type": "1", "metadata": {}, "hash": "e61bf51ae7445557f8c13076508eef1ac9d8efe0e50c17ab50272bfe4a635d88", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "content_type:\n                            type:\n                            - string\n                            - 'null'\n                          content_length:\n                            type:\n                            - integer\n                            - 'null'\n                          image:\n                            type: object\n                            properties:\n                              height_px:\n                                type: integer\n                              width_px:\n                                type: integer\n                          video:\n                            type: object\n                            properties:\n                              duration_s:\n                                type: number\n                              stream:\n                                type: array\n                                items:\n                                  type: object\n                                  properties:\n                                    codec_name:\n                                      type: string\n                                    height_px:\n                                      type: integer\n                                    width_px:", "mimetype": "text/plain", "start_char_idx": 9876, "end_char_idx": 11094, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a63ed03c-d6e8-4c7c-b828-c6add4a972f2": {"__data__": {"id_": "a63ed03c-d6e8-4c7c-b828-c6add4a972f2", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "54f00328-43e3-454d-91b3-e244c7acc80b", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "45e6aaee74bb678ca7fdce60ad285e2650e04765951647df433aa6c21a62b739", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "edaba920-c91f-48ac-9994-a9501d25cd35", "node_type": "1", "metadata": {}, "hash": "86e726e67d5170fe507171a352ea228236b44f9ffadc619c86ae76e3e49344be", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "codec_name:\n                                      type: string\n                                    height_px:\n                                      type: integer\n                                    width_px:\n                                      type: integer\n                          html:\n                            allOf:\n                            - type: object\n                              properties:\n                                favicon:\n                                  type: string\n                                modifiedTime:\n                                  type: string\n                                ogArticleAuthor:\n                                  type: string\n                                ogArticleExpirationTime:\n                                  type: string\n                                ogArticleModifiedTime:\n                                  type: string\n                                ogArticlePublishedTime:\n                                  type: string\n                                ogArticlePublisher:\n                                  type: string\n                                ogArticleSection:\n                                  type: string\n                                ogArticleTag:\n                                  type: string", "mimetype": "text/plain", "start_char_idx": 10887, "end_char_idx": 12173, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "edaba920-c91f-48ac-9994-a9501d25cd35": {"__data__": {"id_": "edaba920-c91f-48ac-9994-a9501d25cd35", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a63ed03c-d6e8-4c7c-b828-c6add4a972f2", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "b329683ef81d8203a6faacebe75da3540793a0e8268f8af88411b5bd9068a0c9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4b9888f2-14c8-489a-b83e-98d23f3c1337", "node_type": "1", "metadata": {}, "hash": "eb1b37b820dfcf3988165f8ee339eab4ab3683dff99edb7c1c3ccbc05abe0f44", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ogArticlePublisher:\n                                  type: string\n                                ogArticleSection:\n                                  type: string\n                                ogArticleTag:\n                                  type: string\n                                ogAudio:\n                                  type: string\n                                ogAudioSecureURL:\n                                  type: string\n                                ogAudioType:\n                                  type: string\n                                ogAudioURL:\n                                  type: string\n                                ogAvailability:\n                                  type: string\n                                ogDate:\n                                  type: string\n                                ogDescription:\n                                  type: string\n                                ogDeterminer:\n                                  type: string\n                                ogEpisode:\n                                  type: string\n                                ogImage:\n                                  type: array\n                                  items:\n                                    type: object", "mimetype": "text/plain", "start_char_idx": 11917, "end_char_idx": 13177, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4b9888f2-14c8-489a-b83e-98d23f3c1337": {"__data__": {"id_": "4b9888f2-14c8-489a-b83e-98d23f3c1337", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "edaba920-c91f-48ac-9994-a9501d25cd35", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "e0cdd447ec5afe60c9fe36741dc4f0e7528c09b13bb0f8ef7ec8f0f1e3ca7810", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dc64fef6-7908-4b23-8a41-f042fe7e53ba", "node_type": "1", "metadata": {}, "hash": "a30718027bd2ca7cf6ecf9cc81c8de7e3de0254c7f75045e67226c9019edbb14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ogEpisode:\n                                  type: string\n                                ogImage:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                      alt:\n                                        type: string\n                                    required:\n                                    - url\n                                ogLocale:\n                                  type: string\n                                ogLocaleAlternate:\n                                  type: string\n                                ogLogo:\n                                  type: string\n                                ogMovie:", "mimetype": "text/plain", "start_char_idx": 12943, "end_char_idx": 14114, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dc64fef6-7908-4b23-8a41-f042fe7e53ba": {"__data__": {"id_": "dc64fef6-7908-4b23-8a41-f042fe7e53ba", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b9888f2-14c8-489a-b83e-98d23f3c1337", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "90ef2100e09723a062bd4b40eddcc454988f3e0dc5b9d2043b22ef76685a1b0a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6e503e99-4014-42f3-a6ab-5708251a44da", "node_type": "1", "metadata": {}, "hash": "b61a91f1b415ab5596f0f7b6f20ad3733b33a516e228babdbba469ce0a9fc5fc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ogLocaleAlternate:\n                                  type: string\n                                ogLogo:\n                                  type: string\n                                ogMovie:\n                                  type: string\n                                ogPriceAmount:\n                                  type: string\n                                ogPriceCurrency:\n                                  type: string\n                                ogProductAvailability:\n                                  type: string\n                                ogProductCondition:\n                                  type: string\n                                ogProductPriceAmount:\n                                  type: string\n                                ogProductPriceCurrency:\n                                  type: string\n                                ogProductRetailerItemId:\n                                  type: string\n                                ogSiteName:\n                                  type: string\n                                ogTitle:\n                                  type: string\n                                ogType:\n                                  type: string\n                                ogUrl:", "mimetype": "text/plain", "start_char_idx": 13921, "end_char_idx": 15165, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6e503e99-4014-42f3-a6ab-5708251a44da": {"__data__": {"id_": "6e503e99-4014-42f3-a6ab-5708251a44da", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dc64fef6-7908-4b23-8a41-f042fe7e53ba", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "e4b9fa2120e03b7899c2692ea4a9aa67d685f6fa597c3206f00e2023f2484541", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "78938bf8-8cfe-4976-b8e3-1cbf6629b05f", "node_type": "1", "metadata": {}, "hash": "66e797e66df6f22598b676c468ce9a61d6d06ec435903e2f864e925e9ff5af86", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ogTitle:\n                                  type: string\n                                ogType:\n                                  type: string\n                                ogUrl:\n                                  type: string\n                                ogVideo:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                    required:\n                                    - url\n                                ogVideoActor:\n                                  type: string\n                                ogVideoActorId:\n                                  type: string\n                                ogVideoActorRole:", "mimetype": "text/plain", "start_char_idx": 14984, "end_char_idx": 16153, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "78938bf8-8cfe-4976-b8e3-1cbf6629b05f": {"__data__": {"id_": "78938bf8-8cfe-4976-b8e3-1cbf6629b05f", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6e503e99-4014-42f3-a6ab-5708251a44da", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "92decbbee6cef7fc89af1c558699a718239a86f7053fde5592912cb33f82068a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "af4ccb0d-414f-420a-a190-d362b3bfca08", "node_type": "1", "metadata": {}, "hash": "0fef2b8940d65cc5c8c5e61e6ad1efb5db202e3b935fb3db06fbf13e0176f8b8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ogVideoActor:\n                                  type: string\n                                ogVideoActorId:\n                                  type: string\n                                ogVideoActorRole:\n                                  type: string\n                                ogVideoDirector:\n                                  type: string\n                                ogVideoDuration:\n                                  type: string\n                                ogVideoOther:\n                                  type: string\n                                ogVideoReleaseDate:\n                                  type: string\n                                ogVideoSecureURL:\n                                  type: string\n                                ogVideoSeries:\n                                  type: string\n                                ogVideoTag:\n                                  type: string\n                                ogVideoTvShow:\n                                  type: string\n                                ogVideoWriter:\n                                  type: string\n                                ogWebsite:\n                                  type: string\n                                updatedTime:", "mimetype": "text/plain", "start_char_idx": 15948, "end_char_idx": 17189, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "af4ccb0d-414f-420a-a190-d362b3bfca08": {"__data__": {"id_": "af4ccb0d-414f-420a-a190-d362b3bfca08", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "78938bf8-8cfe-4976-b8e3-1cbf6629b05f", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "6f4034a233f50e85c6e150e0722d7d86f613a23f0fcd68d295694cbfc4750f51", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bf76fe7b-669d-4672-abaa-cfe6307cb06a", "node_type": "1", "metadata": {}, "hash": "351c428f60b47a81478c53e7dccf44c0c50b56b5373abf41bbc2294c725f7ea3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ogVideoWriter:\n                                  type: string\n                                ogWebsite:\n                                  type: string\n                                updatedTime:\n                                  type: string\n                            - type: object\n                              properties:\n                                oembed:\n                                  oneOf:\n                                  - allOf:\n                                    - &id004\n                                      type: object\n                                      description: Basic data structure of every oembed\n                                        response see https://oembed.com/\n                                      required:\n                                      - type\n                                      - version\n                                      properties:\n                                        type:\n                                          type: string\n                                        version:\n                                          type:\n                                          - string\n                                          - 'null'\n                                        title:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A text title, describing the\n                                            resource.\n                                        author_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the author/owner\n                                            of the resource.\n                                        author_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL for the author/owner\n                                            of the resource.\n                                        provider_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the resource provider.\n                                        provider_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The url of the resource provider.\n                                        cache_age:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The suggested cache lifetime\n                                            for this resource, in seconds. Consumers\n                                            may choose to use this value or not.\n                                        thumbnail_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL to a thumbnail image\n                                            representing the resource. The thumbnail\n                                            must respect any maxwidth and maxheight\n                                            parameters. If this parameter is present,\n                                            thumbnail_width and thumbnail_height must\n                                            also be present.\n                                        thumbnail_width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width of the optional thumbnail.\n                                            If this parameter is present, thumbnail_url\n                                            and thumbnail_height must also be present.\n                                        thumbnail_height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height of the optional\n                                            thumbnail. If this parameter is present,\n                                            thumbnail_url and thumbnail_width must\n                                            also be present.", "mimetype": "text/plain", "start_char_idx": 16993, "end_char_idx": 21942, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bf76fe7b-669d-4672-abaa-cfe6307cb06a": {"__data__": {"id_": "bf76fe7b-669d-4672-abaa-cfe6307cb06a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "af4ccb0d-414f-420a-a190-d362b3bfca08", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "496f571170585863dd806529127a8e6d09110cad9b14d88e19f38aa1b3169809", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "99e2ccae-6fbf-4b97-8d02-ff9238de3550", "node_type": "1", "metadata": {}, "hash": "8d9eab161584c6914f00db415326f13b4659f496da5188af18a808772433f07b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Consumers\n                                            may choose to use this value or not.\n                                        thumbnail_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL to a thumbnail image\n                                            representing the resource. The thumbnail\n                                            must respect any maxwidth and maxheight\n                                            parameters. If this parameter is present,\n                                            thumbnail_width and thumbnail_height must\n                                            also be present.\n                                        thumbnail_width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width of the optional thumbnail.\n                                            If this parameter is present, thumbnail_url\n                                            and thumbnail_height must also be present.\n                                        thumbnail_height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height of the optional\n                                            thumbnail. If this parameter is present,\n                                            thumbnail_url and thumbnail_width must\n                                            also be present.\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - rich\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to display\n                                            the resource. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities. The markup\n                                            should be valid XHTML 1.0 Basic.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - video\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to embed\n                                            a video player. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 20170, "end_char_idx": 27631, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "99e2ccae-6fbf-4b97-8d02-ff9238de3550": {"__data__": {"id_": "99e2ccae-6fbf-4b97-8d02-ff9238de3550", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bf76fe7b-669d-4672-abaa-cfe6307cb06a", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "70b1f4a49f21f96a4060da45dd32f2169dd4835b239ebc56aba796c8fe9c1a6a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d846f23e-2fc8-4086-993c-23bea8419b19", "node_type": "1", "metadata": {}, "hash": "a027f1d3aa0f63f1af93da32e5ea91007c869a127a6f300f43465241edf0789d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.\n                                  - allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - link\n                                  discriminator:\n                                    propertyName: type\n                                    mapping:\n                                      rich: '#/components/schemas/OembedRichData'\n                                      video: '#/components/schemas/OembedVideoData'\n                                      photo: '#/components/schemas/OembedPhotoData'\n                                      link: '#/components/schemas/OembedLinkData'\n                          frame: &id011\n                            discriminator:\n                              propertyName: version\n                            oneOf:\n                            - description: Frame v1 object\n                              allOf:\n                              - &id005\n                                description: Frame base object used across all versions\n                                type: object\n                                required:\n                                - version\n                                - image\n                                - frames_url\n                                properties:\n                                  version:\n                                    type: string\n                                    description: Version of the frame, 'next' for\n                                      v2, 'vNext' for v1\n                                  image:\n                                    type: string\n                                    description: URL of the image\n                                  frames_url:\n                                    type: string\n                                    description: Launch URL of the frame\n                              - type: object\n                                properties:\n                                  buttons:\n                                    type: array\n                                    items:\n                                      type: object\n                                      required:\n                                      - index\n                                      - action_type\n                                      properties:\n                                        title:\n                                          type: string\n                                          description: Title of the button\n                                        index:\n                                          type: integer\n                                          description: Index of the button\n                                        action_type:\n                                          type: string\n                                          description: The action type of a frame\n                                            button. Action types \"mint\" & \"link\" are\n                                            to be handled on the client side only\n                                            and so they will produce a no/op for POST\n                                            /farcaster/frame/action.\n                                          enum:\n                                          - post\n                                          - post_redirect\n                                          - tx\n                                          - link\n                                          - mint\n                                        target:\n                                          type: string\n                                          description: Target of the button\n                                        post_url:\n                                          type: string\n                                          description: Used specifically for the tx\n                                            action type to post a successful transaction\n                                            hash\n                                  post_url:\n                                    type: string\n                                    description: Post URL to take an action on this\n                                      frame\n                                  title:\n                                    type: string\n                                  image_aspect_ratio:\n                                    type: string\n                                  input:\n                                    type: object\n                                    properties:\n                                      text:\n                                        type: string\n                                        description: Input text for the frame\n                                  state:\n                                    type: object\n                                    properties:\n                                      serialized:\n                                        type: string\n                                        description: State for the frame in a serialized\n                                          format\n                            - description: Frame v2 object\n                              allOf:\n                              - *id005\n                              - type: object\n                                required:\n                                - title\n                                - name\n                                - icon\n                                properties:\n                                  manifest:\n                                    type: object\n                                    properties:\n                                      account_association:\n                                        type: object\n                                        properties:\n                                          header:\n                                            type: string\n                                          payload:\n                                            type: string\n                                          signature:\n                                            type: string\n                                        required:\n                                        - header\n                                        - payload\n                                        - signature\n                                      frame:\n                                        type: object\n                                        properties:\n                                          version:\n                                            type: string\n                                            enum:\n                                            - 0.0.0\n                                            - 0.0.", "mimetype": "text/plain", "start_char_idx": 25810, "end_char_idx": 34673, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d846f23e-2fc8-4086-993c-23bea8419b19": {"__data__": {"id_": "d846f23e-2fc8-4086-993c-23bea8419b19", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "99e2ccae-6fbf-4b97-8d02-ff9238de3550", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "b2c40ea16baa96afc350ce6bbfb17914330fc76d310b6667dd6bcfecd3826f9b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8f7856d3-6413-4de0-95c2-779a72cbe8a3", "node_type": "1", "metadata": {}, "hash": "26d36fbb0caec6026b91aa3ecf03098312b6fd65f2e50432df9195ee34007f99", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                            - 0.0.1\n                                            - '1'\n                                            - next\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                          home_url:\n                                            type: string\n                                            maxLength: 512\n                                          icon_url:\n                                            type: string\n                                            maxLength: 512\n                                          image_url:\n                                            type: string\n                                            maxLength: 512\n                                          button_title:\n                                            type: string\n                                            maxLength: 32\n                                          splash_image_url:\n                                            type: string\n                                            maxLength: 512\n                                          splash_background_color:\n                                            type: string\n                                          webhook_url:\n                                            type: string\n                                            maxLength: 512\n                                        required:\n                                        - version\n                                        - name\n                                        - home_url\n                                        - icon_url\n                                      triggers:\n                                        type: array\n                                        items:\n                                          oneOf:\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - cast\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - composer\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                    required:\n                                    - account_association\n                                  author: &id006\n                                    type: object\n                                    required:\n                                    - object\n                                    - fid\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - user_dehydrated\n                                      fid: *id002\n                                      username:\n                                        type: string\n                                      display_name:\n                                        type: string\n                                      pfp_url:\n                                        type: string\n                            mapping:\n                              vNext: '#/components/schemas/FrameV1'\n                              next: '#/components/schemas/FrameV2'\n                              '1': '#/components/schemas/FrameV2'\n                              0.0.0: '#/components/schemas/FrameV2'\n                              0.0.1: '#/components/schemas/FrameV2'\n                  - type: object\n                    required:\n                    - cast\n                    properties:\n                      cast_id: &id009\n                        type: object\n                        required:\n                        - fid\n                        - hash\n                        properties:\n                          fid: *id002\n                          hash:\n                            type: string\n                      cast:\n                        type: object\n                        required:\n                        - hash\n                        - parent_hash\n                        - parent_url\n                        - root_parent_url\n                        - parent_author\n                        - author\n                        - text\n                        - timestamp\n                        - type\n                        - embeds\n                        - channel\n                        properties:\n                          hash:\n                            type: string\n                          parent_hash:\n                            type:\n                            - string\n                            - 'null'\n                          parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          root_parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          parent_author:\n                            type: object\n                            required:\n                            - fid\n                            properties:\n                              fid:\n                                oneOf:\n                                - type: 'null'\n                                - *id002\n                          author: *id006\n                          text:\n                            type: string\n                          timestamp: *id007\n                          type: &id010\n                            type: string\n                            enum:\n                            - cast-mention\n                            - cast-reply\n                            description: 'The notification type of a cast.\n\n                              '\n                          embeds:\n                            type: array\n                            items:\n                              oneOf:\n                              - *id008\n                              - type: object\n                                required:\n                                - cast\n                                properties:\n                                  cast_id: *id009\n                                  cast: &id014\n                                    type: object\n                                    required:\n                                    - object\n                                    - hash\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - cast_dehydrated\n                                      hash:\n                                        type: string\n                                      author: *id006\n                          channel:\n                            oneOf:\n                            - type: 'null'\n                            - &id013\n                              type: object\n                              required:\n                              - id\n                              - name\n                              - object\n                              properties:\n                                id:\n                                  type: string\n                                name:\n                                  type: string\n                                object:\n                                  type: string\n                                  enum:\n                                  - channel_dehydrated\n                                image_url:\n                                  type: string\n                                viewer_context: &id012\n                                  description: Adds context on the viewer's or author's\n                                    role in the channel.", "mimetype": "text/plain", "start_char_idx": 34619, "end_char_idx": 44209, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8f7856d3-6413-4de0-95c2-779a72cbe8a3": {"__data__": {"id_": "8f7856d3-6413-4de0-95c2-779a72cbe8a3", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "97e4f35f-6bde-4b6f-8236-be5d706a4e46", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d846f23e-2fc8-4086-993c-23bea8419b19", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "db12a45a656ad1836495e9c6157a6befac93c9aecd2a79ed089ea907d91f7e20", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                                  required:\n                                  - following\n                                  properties:\n                                    following:\n                                      description: Indicates if the user is following\n                                        the channel.\n                                      type: boolean\n                                    role:\n                                      type: string\n                                      description: The role of a channel member\n                                      enum:\n                                      - member\n                                      - moderator\n              type: *id010\n          - type: object\n            required:\n            - reactions\n            - replies\n            - thread_hash\n            - mentioned_profiles\n            - channel\n            properties:\n              frames:\n                type: array\n                items: *id011\n              reactions:\n                type: object\n                required:\n                - likes\n                - recasts\n                - likes_count\n                - recasts_count\n                properties:\n                  likes:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      properties:\n                        fid: *id002\n                  recasts:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      - fname\n                      properties:\n                        fid: *id002\n                        fname:\n                          type: string\n                  likes_count:\n                    type: integer\n                    format: int32\n                  recasts_count:\n                    type: integer\n                    format: int32\n              replies:\n                type: object\n                required:\n                - count\n                properties:\n                  count:\n                    type: integer\n                    format: int32\n              thread_hash:\n                type:\n                - string\n                - 'null'\n              mentioned_profiles:\n                type: array\n                items: *id003\n              channel:\n                oneOf:\n                - oneOf:\n                  - type: object\n                    required:\n                    - id\n                    - url\n                    - object\n                    properties:\n                      id:\n                        type: string\n                      url:\n                        type: string\n                      name:\n                        type: string\n                      description:\n                        type: string\n                      object:\n                        type: string\n                        enum:\n                        - channel\n                      created_at:\n                        description: Epoch timestamp in seconds.\n                        type: number\n                      follower_count:\n                        description: Number of followers the channel has.\n                        type: number\n                      external_link:\n                        type: object\n                        description: Channel's external link.\n                        properties:\n                          title:\n                            type: string\n                          url:\n                            type: string\n                      image_url:\n                        type: string\n                      parent_url:\n                        type: string\n                        format: uri\n                      lead: *id003\n                      moderator_fids:\n                        type: array\n                        items: *id002\n                      member_count:\n                        type: integer\n                        format: int32\n                      moderator: *id003\n                      pinned_cast_hash:\n                        type: string\n                        default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                        description: Cast Hash\n                      hosts:\n                        type: array\n                        deprecated: true\n                        items: *id003\n                      viewer_context: *id012\n                  - *id013\n                  discriminator:\n                    propertyName: object\n                    mapping:\n                      channel: '#/components/schemas/Channel'\n                      dehydrated_channel: '#/components/schemas/DehydratedChannel'\n                - type: 'null'\n              viewer_context:\n                type: object\n                description: Adds context on interactions the viewer has made with\n                  the cast.\n                required:\n                - liked\n                - recasted\n                properties:\n                  liked:\n                    description: Indicates if the viewer liked the cast.\n                    type: boolean\n                  recasted:\n                    description: Indicates if the viewer recasted the cast.\n                    type: boolean\n              author_channel_context: *id012\n        reactions:\n          type: array\n          items:\n            type: object\n            required:\n            - object\n            - cast\n            - user\n            properties:\n              object:\n                type: string\n                enum:\n                - likes\n                - recasts\n              cast: *id014\n              user: *id003\n        count:\n          type: integer\n          format: int32\n          description: The number of notifications of this(follows, likes, recast)\n            type bundled in a single notification.\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 44244, "end_char_idx": 50423, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0a2fe23e-55db-4de5-ac08-4cbe339f6379": {"__data__": {"id_": "0a2fe23e-55db-4de5-ac08-4cbe339f6379", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-authorization-url.md", "file_name": "neynar_fetch-authorization-url.md", "file_type": "text/markdown", "file_size": 400, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7c561a0f-20f0-4cf6-b335-25671c5887d6", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-authorization-url.md", "file_name": "neynar_fetch-authorization-url.md", "file_type": "text/markdown", "file_size": 400, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f1abf830633499ceb94d3c8224a67dddd145209e16b9b76a9658426418e5b7ab", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-authorization-url\n\n**Endpoint**: `GET /farcaster/login/authorize`\n\n## Description\nFetch authorization url (Fetched authorized url useful for SIWN login operation)\n\n## Parameters\n- `client_id` (query): No description\n- `response_type` (query): No description\n\n## Response\n```yaml\ntype: object\nrequired:\n- authorization_url\nproperties:\n  authorization_url:\n    type: string\n    format: uri\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 399, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "36f25646-dabd-46c1-9f0d-25bf77fe6187": {"__data__": {"id_": "36f25646-dabd-46c1-9f0d-25bf77fe6187", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-ban-list.md", "file_name": "neynar_fetch-ban-list.md", "file_type": "text/markdown", "file_size": 6372, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "be3c6b3a-b65e-4d4e-9879-6d718864d880", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-ban-list.md", "file_name": "neynar_fetch-ban-list.md", "file_type": "text/markdown", "file_size": 6372, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "7090eaf69d87fc7ab5db7863e175f7a11fc584193e8947dfa32fa3eacd25f0de", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ed2494eb-0d36-4fe7-8496-ae6052bc5fcd", "node_type": "1", "metadata": {}, "hash": "b6f7d36cb5e801a1cb209f3c54fff4b00c4c8a1a6279294e67d88237020ee7f6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-ban-list\n\n**Endpoint**: `GET /farcaster/ban/list`\n\n## Description\nFetches all FIDs that your app has banned.\n\n## Parameters\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- bans\n- next\nproperties:\n  bans:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - timestamp\n      - banned_at\n      properties:\n        object:\n          type: string\n          enum:\n          - ban\n        banned:\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid:\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5824, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ed2494eb-0d36-4fe7-8496-ae6052bc5fcd": {"__data__": {"id_": "ed2494eb-0d36-4fe7-8496-ae6052bc5fcd", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-ban-list.md", "file_name": "neynar_fetch-ban-list.md", "file_type": "text/markdown", "file_size": 6372, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "be3c6b3a-b65e-4d4e-9879-6d718864d880", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-ban-list.md", "file_name": "neynar_fetch-ban-list.md", "file_type": "text/markdown", "file_size": 6372, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "7090eaf69d87fc7ab5db7863e175f7a11fc584193e8947dfa32fa3eacd25f0de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36f25646-dabd-46c1-9f0d-25bf77fe6187", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-ban-list.md", "file_name": "neynar_fetch-ban-list.md", "file_type": "text/markdown", "file_size": 6372, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "cc8548258934723b1e6cb0479894f3fb237f8d7db09aaa7c265e551f7b72970d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        banned_at:\n          type: string\n          format: date-time\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4588, "end_char_idx": 6371, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2504c661-7fb9-40d3-8573-8833b6268ebf": {"__data__": {"id_": "2504c661-7fb9-40d3-8573-8833b6268ebf", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-block-list.md", "file_name": "neynar_fetch-block-list.md", "file_type": "text/markdown", "file_size": 6616, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "970fd705-2008-4368-9952-0b7a299d5685", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-block-list.md", "file_name": "neynar_fetch-block-list.md", "file_type": "text/markdown", "file_size": 6616, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d199782ba01b5f5e1d802bcb908ef9e910bc64b7459945f393926466057acd2e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "99bdedcc-0a82-458a-8f21-0586be08b627", "node_type": "1", "metadata": {}, "hash": "ea6a482933b7c14e4fce9d580766d7f69d2a64b54566185cf3cdcb3f2f597190", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-block-list\n\n**Endpoint**: `GET /farcaster/block/list`\n\n## Description\nFetches all FIDs that a user has blocked or has been blocked by\n\n## Parameters\n- `blocker_fid` (query): Providing this will return the users that this user has blocked\n- `blocked_fid` (query): Providing this will return the users that have blocked this user\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- blocks\n- next\nproperties:\n  blocks:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - timestamp\n      - blocked_at\n      properties:\n        object:\n          type: string\n          enum:\n          - block\n        blocked: &id002\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid:\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5641, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "99bdedcc-0a82-458a-8f21-0586be08b627": {"__data__": {"id_": "99bdedcc-0a82-458a-8f21-0586be08b627", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-block-list.md", "file_name": "neynar_fetch-block-list.md", "file_type": "text/markdown", "file_size": 6616, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "970fd705-2008-4368-9952-0b7a299d5685", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-block-list.md", "file_name": "neynar_fetch-block-list.md", "file_type": "text/markdown", "file_size": 6616, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d199782ba01b5f5e1d802bcb908ef9e910bc64b7459945f393926466057acd2e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2504c661-7fb9-40d3-8573-8833b6268ebf", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-block-list.md", "file_name": "neynar_fetch-block-list.md", "file_type": "text/markdown", "file_size": 6616, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "16a30937f2539ec30369663bd94ed46aac1126029ebdc1d035c45497e3d955ac", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        blocker: *id002\n        blocked_at:\n          type: string\n          format: date-time\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4465, "end_char_idx": 6615, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "af4a8db1-7dd2-4463-a81c-1ca8f6cc5894": {"__data__": {"id_": "af4a8db1-7dd2-4463-a81c-1ca8f6cc5894", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6427ff42-612f-4121-b8a4-7a5f7c7ec8f5", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "5a518643069dce450a2cea05749cebcd714105fc61b56f80733f1c7ab7ffdf99", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a8585373-f66e-4eb1-808d-e85a03b1d4f2", "node_type": "1", "metadata": {}, "hash": "02f587cd3aa3383dd0364ccf187a476f3733ff55999517f15538a4b8d31fd576", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-bulk-casts\n\n**Endpoint**: `GET /farcaster/casts`\n\n## Description\nFetch multiple casts using their respective hashes.\n\n## Parameters\n- `casts` (query): Hashes of the cast to be retrived (Comma separated, no spaces)\n- `viewer_fid` (query): adds viewer_context to cast object to show whether viewer has liked or recasted the cast.\n- `sort_type` (query): Optional parameter to sort the casts based on different criteria\n\n## Response\n```yaml\ntype: object\nrequired:\n- result\nproperties:\n  result:\n    type: object\n    required:\n    - casts\n    properties:\n      casts:\n        type: array\n        items:\n          allOf:\n          - type: object\n            required:\n            - hash\n            - parent_hash\n            - parent_url\n            - root_parent_url\n            - parent_author\n            - author\n            - text\n            - timestamp\n            - embeds\n            properties:\n              hash:\n                type: string\n              parent_hash:\n                type:\n                - string\n                - 'null'\n              parent_url:\n                type:\n                - string\n                - 'null'\n              root_parent_url:\n                type:\n                - string\n                - 'null'\n              parent_author:\n                type: object\n                required:\n                - fid\n                properties:\n                  fid:\n                    oneOf:\n                    - type: 'null'\n                    - &id001\n                      type: integer\n                      format: int32\n                      description: The unique identifier of a farcaster user (unsigned\n                        integer)\n                      examples:\n                      - 3\n                      - 191\n                      - 2\n                      - 194\n                      - 19960\n              author: &id011\n                type: object\n                required:\n                - object\n                - fid\n                - custody_address\n                - username\n                - profile\n                - follower_count\n                - following_count\n                - verifications\n                - verified_addresses\n                - verified_accounts\n                - power_badge\n                properties:\n                  object:\n                    type: string\n                    enum:\n                    - user\n                  fid: *id001\n                  username:\n                    type: string\n                  display_name:\n                    type: string\n                  custody_address: &id002\n                    type: string\n                    pattern: ^0x[a-fA-F0-9]{40}$\n                    description: Ethereum address\n                  pfp_url:\n                    type: string\n                    description: The URL of the user's profile picture\n                  profile:\n                    type: object\n                    required:\n                    - bio\n                    properties:\n                      bio:\n                        type: object\n                        required:\n                        - text\n                        - mentioned_profiles\n                        properties:\n                          text:\n                            type: string\n                          mentioned_profiles:\n                            type: array\n                            items:\n                              type: string\n                            default: []\n                      location:\n                        description: Coordinates and place names for a location\n                        type: object\n                        required:\n                        - latitude\n                        - longitude\n                        properties:\n                          latitude:\n                            type: number\n                            format: double\n                            minimum: -90\n                            maximum: 90\n                          longitude:\n                            type: number\n                            format: double\n                            minimum: -180\n                            maximum: 180\n                          address:\n                            type: object\n                            required:\n                            - city\n                            - country\n                            properties:\n                              city:\n                                type: string\n                              state:\n                                type: string\n                              state_code:\n                                type: string\n                              country:\n                                type: string\n                              country_code:\n                                type: string\n                  follower_count:\n                    type: integer\n                    format: int32\n                    description: The number of followers the user has.\n                  following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id002\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id002\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.\n                        items:\n                          type: string\n                          pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                          description: Solana address\n                  verified_accounts:\n                    type: array\n                    description: Verified accounts of the user on other platforms,\n                      currently only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 6386, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a8585373-f66e-4eb1-808d-e85a03b1d4f2": {"__data__": {"id_": "a8585373-f66e-4eb1-808d-e85a03b1d4f2", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6427ff42-612f-4121-b8a4-7a5f7c7ec8f5", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "5a518643069dce450a2cea05749cebcd714105fc61b56f80733f1c7ab7ffdf99", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "af4a8db1-7dd2-4463-a81c-1ca8f6cc5894", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d815a7b10eecdbe0881f8bec7150e2c4c89c5b8dda6efd7ed44f1f1ed8a03660", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dde33635-f890-485b-bc29-a16db7f32c5f", "node_type": "1", "metadata": {}, "hash": "9ebc3fd550923fdff8ab84e34c75e2105afeae99bba64bf4a496052492dc326d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id002\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id002\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.\n                        items:\n                          type: string\n                          pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                          description: Solana address\n                  verified_accounts:\n                    type: array\n                    description: Verified accounts of the user on other platforms,\n                      currently only X is supported.\n                    items:\n                      type: object\n                      properties:\n                        platform:\n                          type: string\n                          enum:\n                          - x\n                          - github\n                        username:\n                          type: string\n                  power_badge:\n                    type: boolean\n                  experimental:\n                    type: object\n                    required:\n                    - neynar_user_score\n                    properties:\n                      neynar_user_score:\n                        type: number\n                        format: double\n                        description: Score that represents the probability that the\n                          account is not spam.\n                  viewer_context:\n                    type: object\n                    description: Adds context on the viewer's follow relationship\n                      with the user.\n                    required:\n                    - following\n                    - followed_by\n                    - blocking\n                    - blocked_by\n                    properties:\n                      following:\n                        description: Indicates if the viewer is following the user.\n                        type: boolean\n                      followed_by:\n                        description: Indicates if the viewer is followed by the user.\n                        type: boolean\n                      blocking:\n                        description: Indicates if the viewer is blocking the user.\n                        type: boolean\n                      blocked_by:\n                        description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 5058, "end_char_idx": 8169, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dde33635-f890-485b-bc29-a16db7f32c5f": {"__data__": {"id_": "dde33635-f890-485b-bc29-a16db7f32c5f", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6427ff42-612f-4121-b8a4-7a5f7c7ec8f5", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "5a518643069dce450a2cea05749cebcd714105fc61b56f80733f1c7ab7ffdf99", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a8585373-f66e-4eb1-808d-e85a03b1d4f2", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "69b51b3df9f723a0ae65e4207e134c422e45bd4bf14f6ffb0461d3ec0097e71e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e64cab35-80ea-4c3b-8391-72913438ba57", "node_type": "1", "metadata": {}, "hash": "1ba7c92044a2c3addbb8adb178277cf9c49e5a8c99bbe3676369af19c345a358", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                    type: object\n                    description: Adds context on the viewer's follow relationship\n                      with the user.\n                    required:\n                    - following\n                    - followed_by\n                    - blocking\n                    - blocked_by\n                    properties:\n                      following:\n                        description: Indicates if the viewer is following the user.\n                        type: boolean\n                      followed_by:\n                        description: Indicates if the viewer is followed by the user.\n                        type: boolean\n                      blocking:\n                        description: Indicates if the viewer is blocking the user.\n                        type: boolean\n                      blocked_by:\n                        description: Indicates if the viewer is blocked by the user.\n                        type: boolean\n              text:\n                type: string\n              timestamp: &id006\n                type: string\n                format: date-time\n              embeds:\n                type: array\n                items:\n                  oneOf:\n                  - &id007\n                    type: object\n                    required:\n                    - url\n                    properties:\n                      url:\n                        type: string\n                      metadata:\n                        type: object\n                        required:\n                        - _status\n                        properties:\n                          _status:\n                            type: string\n                          content_type:\n                            type:\n                            - string\n                            - 'null'\n                          content_length:\n                            type:\n                            - integer\n                            - 'null'\n                          image:\n                            type: object\n                            properties:\n                              height_px:\n                                type: integer\n                              width_px:\n                                type: integer\n                          video:\n                            type: object\n                            properties:\n                              duration_s:\n                                type: number\n                              stream:\n                                type: array\n                                items:\n                                  type: object\n                                  properties:\n                                    codec_name:\n                                      type: string\n                                    height_px:\n                                      type: integer\n                                    width_px:\n                                      type: integer\n                          html:\n                            allOf:\n                            - type: object\n                              properties:\n                                favicon:\n                                  type: string\n                                modifiedTime:\n                                  type: string\n                                ogArticleAuthor:\n                                  type: string\n                                ogArticleExpirationTime:\n                                  type: string\n                                ogArticleModifiedTime:\n                                  type: string\n                                ogArticlePublishedTime:\n                                  type: string\n                                ogArticlePublisher:\n                                  type: string\n                                ogArticleSection:\n                                  type: string\n                                ogArticleTag:\n                                  type: string\n                                ogAudio:\n                                  type: string\n                                ogAudioSecureURL:\n                                  type: string\n                                ogAudioType:\n                                  type: string\n                                ogAudioURL:\n                                  type: string\n                                ogAvailability:\n                                  type: string\n                                ogDate:\n                                  type: string\n                                ogDescription:\n                                  type: string\n                                ogDeterminer:\n                                  type: string\n                                ogEpisode:\n                                  type: string\n                                ogImage:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                      alt:\n                                        type: string\n                                    required:\n                                    - url\n                                ogLocale:\n                                  type: string\n                                ogLocaleAlternate:\n                                  type: string\n                                ogLogo:\n                                  type: string\n                                ogMovie:\n                                  type: string\n                                ogPriceAmount:\n                                  type: string\n                                ogPriceCurrency:\n                                  type: string\n                                ogProductAvailability:\n                                  type: string\n                                ogProductCondition:\n                                  type: string\n                                ogProductPriceAmount:\n                                  type: string\n                                ogProductPriceCurrency:\n                                  type: string\n                                ogProductRetailerItemId:\n                                  type: string\n                                ogSiteName:\n                                  type: string\n                                ogTitle:\n                                  type: string\n                                ogType:\n                                  type: string\n                                ogUrl:\n                                  type: string\n                                ogVideo:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                    required:\n                                    - url\n                                ogVideoActor:\n                                  type: string\n                                ogVideoActorId:\n                                  type: string\n                                ogVideoActorRole:\n                                  type: string\n                                ogVideoDirector:\n                                  type: string\n                                ogVideoDuration:\n                                  type: string\n                                ogVideoOther:\n                                  type: string\n                                ogVideoReleaseDate:\n                                  type: string\n                                ogVideoSecureURL:\n                                  type: string\n                                ogVideoSeries:\n                                  type: string\n                                ogVideoTag:\n                                  type: string\n                                ogVideoTvShow:\n                                  type: string\n                                ogVideoWriter:\n                                  type: string\n                                ogWebsite:\n                                  type: string\n                                updatedTime:\n                                  type: string\n                            - type: object\n                              properties:\n                                oembed:\n                                  oneOf:\n                                  - allOf:\n                                    - &id003\n                                      type: object\n                                      description: Basic data structure of every oembed\n                                        response see https://oembed.com/\n                                      required:\n                                      - type\n                                      - version\n                                      properties:\n                                        type:\n                                          type: string\n                                        version:\n                                          type:\n                                          - string\n                                          - 'null'\n                                        title:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A text title, describing the\n                                            resource.", "mimetype": "text/plain", "start_char_idx": 7224, "end_char_idx": 17589, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e64cab35-80ea-4c3b-8391-72913438ba57": {"__data__": {"id_": "e64cab35-80ea-4c3b-8391-72913438ba57", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6427ff42-612f-4121-b8a4-7a5f7c7ec8f5", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "5a518643069dce450a2cea05749cebcd714105fc61b56f80733f1c7ab7ffdf99", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dde33635-f890-485b-bc29-a16db7f32c5f", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "0f11fecaf115a2ed56e8a517ebcd1a63837f5f5602360aece4b6cfd1b7602e44", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8fa46231-328a-4413-82ed-5f65454f935c", "node_type": "1", "metadata": {}, "hash": "23a04483365d8bcc2b18a2d1ac96edd50ac2b76ebbbf7ad056f6abdb7ce9a7f4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the author/owner\n                                            of the resource.\n                                        author_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL for the author/owner\n                                            of the resource.\n                                        provider_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the resource provider.\n                                        provider_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The url of the resource provider.\n                                        cache_age:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The suggested cache lifetime\n                                            for this resource, in seconds. Consumers\n                                            may choose to use this value or not.\n                                        thumbnail_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL to a thumbnail image\n                                            representing the resource. The thumbnail\n                                            must respect any maxwidth and maxheight\n                                            parameters. If this parameter is present,\n                                            thumbnail_width and thumbnail_height must\n                                            also be present.\n                                        thumbnail_width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width of the optional thumbnail.\n                                            If this parameter is present, thumbnail_url\n                                            and thumbnail_height must also be present.\n                                        thumbnail_height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height of the optional\n                                            thumbnail. If this parameter is present,\n                                            thumbnail_url and thumbnail_width must\n                                            also be present.\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - rich\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to display\n                                            the resource. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities. The markup\n                                            should be valid XHTML 1.0 Basic.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - video\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to embed\n                                            a video player. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 17630, "end_char_idx": 26692, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8fa46231-328a-4413-82ed-5f65454f935c": {"__data__": {"id_": "8fa46231-328a-4413-82ed-5f65454f935c", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6427ff42-612f-4121-b8a4-7a5f7c7ec8f5", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "5a518643069dce450a2cea05749cebcd714105fc61b56f80733f1c7ab7ffdf99", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e64cab35-80ea-4c3b-8391-72913438ba57", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "543ea2384bbb94de3aa9fd0fd02c4e215de8c209729aad51642d3a09a6eda8b7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "476fc01b-a1b5-4be5-98d9-91f66f73b672", "node_type": "1", "metadata": {}, "hash": "d2c745055c34b05df38156a53e572587481b7019a7d17c71b53ebf72656e7c1e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - link\n                                  discriminator:\n                                    propertyName: type\n                                    mapping:\n                                      rich: '#/components/schemas/OembedRichData'\n                                      video: '#/components/schemas/OembedVideoData'\n                                      photo: '#/components/schemas/OembedPhotoData'\n                                      link: '#/components/schemas/OembedLinkData'\n                          frame: &id010\n                            discriminator:\n                              propertyName: version\n                            oneOf:\n                            - description: Frame v1 object\n                              allOf:\n                              - &id004\n                                description: Frame base object used across all versions\n                                type: object\n                                required:\n                                - version\n                                - image\n                                - frames_url\n                                properties:\n                                  version:\n                                    type: string\n                                    description: Version of the frame, 'next' for\n                                      v2, 'vNext' for v1\n                                  image:\n                                    type: string\n                                    description: URL of the image\n                                  frames_url:\n                                    type: string\n                                    description: Launch URL of the frame\n                              - type: object\n                                properties:\n                                  buttons:\n                                    type: array\n                                    items:\n                                      type: object\n                                      required:\n                                      - index\n                                      - action_type\n                                      properties:\n                                        title:\n                                          type: string\n                                          description: Title of the button\n                                        index:\n                                          type: integer\n                                          description: Index of the button\n                                        action_type:\n                                          type: string\n                                          description: The action type of a frame\n                                            button. Action types \"mint\" & \"link\" are\n                                            to be handled on the client side only\n                                            and so they will produce a no/op for POST\n                                            /farcaster/frame/action.\n                                          enum:\n                                          - post\n                                          - post_redirect\n                                          - tx\n                                          - link\n                                          - mint\n                                        target:\n                                          type: string\n                                          description: Target of the button\n                                        post_url:\n                                          type: string\n                                          description: Used specifically for the tx\n                                            action type to post a successful transaction\n                                            hash\n                                  post_url:\n                                    type: string\n                                    description: Post URL to take an action on this\n                                      frame\n                                  title:\n                                    type: string\n                                  image_aspect_ratio:\n                                    type: string\n                                  input:\n                                    type: object\n                                    properties:\n                                      text:\n                                        type: string\n                                        description: Input text for the frame\n                                  state:\n                                    type: object\n                                    properties:\n                                      serialized:\n                                        type: string\n                                        description: State for the frame in a serialized\n                                          format\n                            - description: Frame v2 object\n                              allOf:\n                              - *id004\n                              - type: object\n                                required:\n                                - title\n                                - name\n                                - icon\n                                properties:\n                                  manifest:\n                                    type: object\n                                    properties:\n                                      account_association:\n                                        type: object\n                                        properties:\n                                          header:\n                                            type: string\n                                          payload:\n                                            type: string\n                                          signature:\n                                            type: string\n                                        required:\n                                        - header\n                                        - payload\n                                        - signature\n                                      frame:\n                                        type: object\n                                        properties:\n                                          version:\n                                            type: string\n                                            enum:\n                                            - 0.0.0\n                                            - 0.0.", "mimetype": "text/plain", "start_char_idx": 24871, "end_char_idx": 33734, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "476fc01b-a1b5-4be5-98d9-91f66f73b672": {"__data__": {"id_": "476fc01b-a1b5-4be5-98d9-91f66f73b672", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6427ff42-612f-4121-b8a4-7a5f7c7ec8f5", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "5a518643069dce450a2cea05749cebcd714105fc61b56f80733f1c7ab7ffdf99", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8fa46231-328a-4413-82ed-5f65454f935c", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "5a9392a5e5beada8dcf1213618505d7441f4b9aac7c6be1bd4c4f2a0857d6e8f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cc756a10-eb5d-494f-a34a-2ffcf12fd13c", "node_type": "1", "metadata": {}, "hash": "3cdb35030fc9d08bcd8e90455be053e684f95c545b64d5e989e3d61a577b832b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                            - 0.0.1\n                                            - '1'\n                                            - next\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                          home_url:\n                                            type: string\n                                            maxLength: 512\n                                          icon_url:\n                                            type: string\n                                            maxLength: 512\n                                          image_url:\n                                            type: string\n                                            maxLength: 512\n                                          button_title:\n                                            type: string\n                                            maxLength: 32\n                                          splash_image_url:\n                                            type: string\n                                            maxLength: 512\n                                          splash_background_color:\n                                            type: string\n                                          webhook_url:\n                                            type: string\n                                            maxLength: 512\n                                        required:\n                                        - version\n                                        - name\n                                        - home_url\n                                        - icon_url\n                                      triggers:\n                                        type: array\n                                        items:\n                                          oneOf:\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - cast\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - composer\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                    required:\n                                    - account_association\n                                  author: &id005\n                                    type: object\n                                    required:\n                                    - object\n                                    - fid\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - user_dehydrated\n                                      fid: *id001\n                                      username:\n                                        type: string\n                                      display_name:\n                                        type: string\n                                      pfp_url:\n                                        type: string\n                            mapping:\n                              vNext: '#/components/schemas/FrameV1'\n                              next: '#/components/schemas/FrameV2'\n                              '1': '#/components/schemas/FrameV2'\n                              0.0.0: '#/components/schemas/FrameV2'\n                              0.0.1: '#/components/schemas/FrameV2'\n                  - type: object\n                    required:\n                    - cast\n                    properties:\n                      cast_id: &id008\n                        type: object\n                        required:\n                        - fid\n                        - hash\n                        properties:\n                          fid: *id001\n                          hash:\n                            type: string\n                      cast:\n                        type: object\n                        required:\n                        - hash\n                        - parent_hash\n                        - parent_url\n                        - root_parent_url\n                        - parent_author\n                        - author\n                        - text\n                        - timestamp\n                        - type\n                        - embeds\n                        - channel\n                        properties:\n                          hash:\n                            type: string\n                          parent_hash:\n                            type:\n                            - string\n                            - 'null'\n                          parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          root_parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          parent_author:\n                            type: object\n                            required:\n                            - fid\n                            properties:\n                              fid:\n                                oneOf:\n                                - type: 'null'\n                                - *id001\n                          author: *id005\n                          text:\n                            type: string\n                          timestamp: *id006\n                          type: &id009\n                            type: string\n                            enum:\n                            - cast-mention\n                            - cast-reply\n                            description: 'The notification type of a cast.\n\n                              '\n                          embeds:\n                            type: array\n                            items:\n                              oneOf:\n                              - *id007\n                              - type: object\n                                required:\n                                - cast\n                                properties:\n                                  cast_id: *id008\n                                  cast:\n                                    type: object\n                                    required:\n                                    - object\n                                    - hash\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - cast_dehydrated\n                                      hash:\n                                        type: string\n                                      author: *id005\n                          channel:\n                            oneOf:\n                            - type: 'null'\n                            - &id013\n                              type: object\n                              required:\n                              - id\n                              - name\n                              - object\n                              properties:\n                                id:\n                                  type: string\n                                name:\n                                  type: string\n                                object:\n                                  type: string\n                                  enum:\n                                  - channel_dehydrated\n                                image_url:\n                                  type: string\n                                viewer_context: &id012\n                                  description: Adds context on the viewer's or author's\n                                    role in the channel.", "mimetype": "text/plain", "start_char_idx": 33680, "end_char_idx": 43263, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cc756a10-eb5d-494f-a34a-2ffcf12fd13c": {"__data__": {"id_": "cc756a10-eb5d-494f-a34a-2ffcf12fd13c", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6427ff42-612f-4121-b8a4-7a5f7c7ec8f5", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "5a518643069dce450a2cea05749cebcd714105fc61b56f80733f1c7ab7ffdf99", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "476fc01b-a1b5-4be5-98d9-91f66f73b672", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f7f91477edffd125d1532ef2c755d34e47fd44d3921d66f0d86a6ada2266df8f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                                  required:\n                                  - following\n                                  properties:\n                                    following:\n                                      description: Indicates if the user is following\n                                        the channel.\n                                      type: boolean\n                                    role:\n                                      type: string\n                                      description: The role of a channel member\n                                      enum:\n                                      - member\n                                      - moderator\n              type: *id009\n          - type: object\n            required:\n            - reactions\n            - replies\n            - thread_hash\n            - mentioned_profiles\n            - channel\n            properties:\n              frames:\n                type: array\n                items: *id010\n              reactions:\n                type: object\n                required:\n                - likes\n                - recasts\n                - likes_count\n                - recasts_count\n                properties:\n                  likes:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      properties:\n                        fid: *id001\n                  recasts:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      - fname\n                      properties:\n                        fid: *id001\n                        fname:\n                          type: string\n                  likes_count:\n                    type: integer\n                    format: int32\n                  recasts_count:\n                    type: integer\n                    format: int32\n              replies:\n                type: object\n                required:\n                - count\n                properties:\n                  count:\n                    type: integer\n                    format: int32\n              thread_hash:\n                type:\n                - string\n                - 'null'\n              mentioned_profiles:\n                type: array\n                items: *id011\n              channel:\n                oneOf:\n                - oneOf:\n                  - type: object\n                    required:\n                    - id\n                    - url\n                    - object\n                    properties:\n                      id:\n                        type: string\n                      url:\n                        type: string\n                      name:\n                        type: string\n                      description:\n                        type: string\n                      object:\n                        type: string\n                        enum:\n                        - channel\n                      created_at:\n                        description: Epoch timestamp in seconds.\n                        type: number\n                      follower_count:\n                        description: Number of followers the channel has.\n                        type: number\n                      external_link:\n                        type: object\n                        description: Channel's external link.\n                        properties:\n                          title:\n                            type: string\n                          url:\n                            type: string\n                      image_url:\n                        type: string\n                      parent_url:\n                        type: string\n                        format: uri\n                      lead: *id011\n                      moderator_fids:\n                        type: array\n                        items: *id001\n                      member_count:\n                        type: integer\n                        format: int32\n                      moderator: *id011\n                      pinned_cast_hash:\n                        type: string\n                        default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                        description: Cast Hash\n                      hosts:\n                        type: array\n                        deprecated: true\n                        items: *id011\n                      viewer_context: *id012\n                  - *id013\n                  discriminator:\n                    propertyName: object\n                    mapping:\n                      channel: '#/components/schemas/Channel'\n                      dehydrated_channel: '#/components/schemas/DehydratedChannel'\n                - type: 'null'\n              viewer_context:\n                type: object\n                description: Adds context on interactions the viewer has made with\n                  the cast.\n                required:\n                - liked\n                - recasted\n                properties:\n                  liked:\n                    description: Indicates if the viewer liked the cast.\n                    type: boolean\n                  recasted:\n                    description: Indicates if the viewer recasted the cast.\n                    type: boolean\n              author_channel_context: *id012\n```", "mimetype": "text/plain", "start_char_idx": 43298, "end_char_idx": 48748, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d23bbf72-3cf5-4aa5-acdb-8969bb0e612a": {"__data__": {"id_": "d23bbf72-3cf5-4aa5-acdb-8969bb0e612a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-channels.md", "file_name": "neynar_fetch-bulk-channels.md", "file_type": "text/markdown", "file_size": 7853, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c3cab94f-0603-47d2-b3f3-4bc826e427c8", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-channels.md", "file_name": "neynar_fetch-bulk-channels.md", "file_type": "text/markdown", "file_size": 7853, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "40fd484fa3f43c4e34460b463ea7ed2e5d27ac6b517a91b6514369942d6d9ef5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8fef941d-185d-4680-bcd2-77516555320c", "node_type": "1", "metadata": {}, "hash": "0c1ca5d70afe4028c2e58daf64939d0b548e24a8c21578028b4e0309259e9b01", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-bulk-channels\n\n**Endpoint**: `GET /farcaster/channel/bulk`\n\n## Description\nReturns details of multiple channels\n\n## Parameters\n- `ids` (query): Comma separated list of channel IDs or parent_urls, up to 100 at a time\n- `type` (query): Type of identifier being used to query the channels. Defaults to ID.\n- `viewer_fid` (query): FID of the user viewing the channels.\n\n## Response\n```yaml\ntype: object\nrequired:\n- channels\nproperties:\n  channels:\n    type: array\n    items:\n      type: object\n      required:\n      - id\n      - url\n      - object\n      properties:\n        id:\n          type: string\n        url:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        object:\n          type: string\n          enum:\n          - channel\n        created_at:\n          description: Epoch timestamp in seconds.\n          type: number\n        follower_count:\n          description: Number of followers the channel has.\n          type: number\n        external_link:\n          type: object\n          description: Channel's external link.\n          properties:\n            title:\n              type: string\n            url:\n              type: string\n        image_url:\n          type: string\n        parent_url:\n          type: string\n          format: uri\n        lead: &id003\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid: &id002\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5399, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8fef941d-185d-4680-bcd2-77516555320c": {"__data__": {"id_": "8fef941d-185d-4680-bcd2-77516555320c", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-channels.md", "file_name": "neynar_fetch-bulk-channels.md", "file_type": "text/markdown", "file_size": 7853, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c3cab94f-0603-47d2-b3f3-4bc826e427c8", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-channels.md", "file_name": "neynar_fetch-bulk-channels.md", "file_type": "text/markdown", "file_size": 7853, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "40fd484fa3f43c4e34460b463ea7ed2e5d27ac6b517a91b6514369942d6d9ef5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d23bbf72-3cf5-4aa5-acdb-8969bb0e612a", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-channels.md", "file_name": "neynar_fetch-bulk-channels.md", "file_type": "text/markdown", "file_size": 7853, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "62967373ca8f8ac5203a63e5b6b7c8e84ff8f0268ee150433567235ff25e5b34", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        moderator_fids:\n          type: array\n          items: *id002\n        member_count:\n          type: integer\n          format: int32\n        moderator: *id003\n        pinned_cast_hash:\n          type: string\n          default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n          description: Cast Hash\n        hosts:\n          type: array\n          deprecated: true\n          items: *id003\n        viewer_context:\n          description: Adds context on the viewer's or author's role in the channel.\n          type: object\n          required:\n          - following\n          properties:\n            following:\n              description: Indicates if the user is following the channel.\n              type: boolean\n            role:\n              type: string\n              description: The role of a channel member\n              enum:\n              - member\n              - moderator\n```", "mimetype": "text/plain", "start_char_idx": 4400, "end_char_idx": 7852, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c4fbab3c-c9ec-4704-bfd1-4cafc598f478": {"__data__": {"id_": "c4fbab3c-c9ec-4704-bfd1-4cafc598f478", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-users-by-eth-or-sol-address.md", "file_name": "neynar_fetch-bulk-users-by-eth-or-sol-address.md", "file_type": "text/markdown", "file_size": 1264, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7349417f-d273-4fbb-a8e2-7d73519004aa", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-users-by-eth-or-sol-address.md", "file_name": "neynar_fetch-bulk-users-by-eth-or-sol-address.md", "file_type": "text/markdown", "file_size": 1264, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "af281357de40999493a733dd171b18be97bf03e8489e322b58150aa76a724ca4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-bulk-users-by-eth-or-sol-address\n\n**Endpoint**: `GET /farcaster/user/bulk-by-address`\n\n## Description\nFetches all users based on multiple Ethereum or Solana addresses.\n\nEach farcaster user has a custody Ethereum address and optionally verified Ethereum or Solana addresses. This endpoint returns all users that have any of the given addresses as their custody or verified Ethereum or Solana addresses.\n\nA custody address can be associated with only 1 farcaster user at a time but a verified address can be associated with multiple users.\nYou can pass in Ethereum and Solana addresses, comma separated, in the same request. The response will contain users associated with the given addresses.\n\n## Parameters\n- `addresses` (query): Comma separated list of Ethereum addresses, up to 350 at a time\n- `address_types` (query): Customize which address types the request should search for. This is a comma-separated string that can include the following values: 'custody_address' and 'verified_address'. By default api returns both. To select multiple types, use a comma-separated list of these values.\n\n- `viewer_fid` (query): No description\n\n## Response\n```yaml\ntype: object\nadditionalProperties:\n  type: array\n  items:\n    $ref: '#/components/schemas/User'\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1263, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a2de6d7d-1cb7-4035-ae88-2c1b2c0a9303": {"__data__": {"id_": "a2de6d7d-1cb7-4035-ae88-2c1b2c0a9303", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-users.md", "file_name": "neynar_fetch-bulk-users.md", "file_type": "text/markdown", "file_size": 5292, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f0898c9a-75ce-4de5-afef-397043b63c8d", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-users.md", "file_name": "neynar_fetch-bulk-users.md", "file_type": "text/markdown", "file_size": 5292, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "2d2da2c9bc3f085cf4280bb21d1edab1abaf39328c1de0abfa9ffb3a3d4befd3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-bulk-users\n\n**Endpoint**: `GET /farcaster/user/bulk`\n\n## Description\nFetches information about multiple users based on FIDs\n\n## Parameters\n- `fids` (query): Comma separated list of FIDs, up to 100 at a time\n- `viewer_fid` (query): No description\n\n## Response\n```yaml\ntype: object\nrequired:\n- users\nproperties:\n  users:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - fid\n      - custody_address\n      - username\n      - profile\n      - follower_count\n      - following_count\n      - verifications\n      - verified_addresses\n      - verified_accounts\n      - power_badge\n      properties:\n        object:\n          type: string\n          enum:\n          - user\n        fid:\n          type: integer\n          format: int32\n          description: The unique identifier of a farcaster user (unsigned integer)\n          examples:\n          - 3\n          - 191\n          - 2\n          - 194\n          - 19960\n        username:\n          type: string\n        display_name:\n          type: string\n        custody_address: &id001\n          type: string\n          pattern: ^0x[a-fA-F0-9]{40}$\n          description: Ethereum address\n        pfp_url:\n          type: string\n          description: The URL of the user's profile picture\n        profile:\n          type: object\n          required:\n          - bio\n          properties:\n            bio:\n              type: object\n              required:\n              - text\n              - mentioned_profiles\n              properties:\n                text:\n                  type: string\n                mentioned_profiles:\n                  type: array\n                  items:\n                    type: string\n                  default: []\n            location:\n              description: Coordinates and place names for a location\n              type: object\n              required:\n              - latitude\n              - longitude\n              properties:\n                latitude:\n                  type: number\n                  format: double\n                  minimum: -90\n                  maximum: 90\n                longitude:\n                  type: number\n                  format: double\n                  minimum: -180\n                  maximum: 180\n                address:\n                  type: object\n                  required:\n                  - city\n                  - country\n                  properties:\n                    city:\n                      type: string\n                    state:\n                      type: string\n                    state_code:\n                      type: string\n                    country:\n                      type: string\n                    country_code:\n                      type: string\n        follower_count:\n          type: integer\n          format: int32\n          description: The number of followers the user has.\n        following_count:\n          type: integer\n          format: int32\n          description: The number of users the user is following.\n        verifications:\n          type: array\n          items: *id001\n        verified_addresses:\n          type: object\n          required:\n          - eth_addresses\n          - sol_addresses\n          properties:\n            eth_addresses:\n              type: array\n              description: List of verified Ethereum addresses of the user sorted\n                by oldest to most recent.\n              items: *id001\n            sol_addresses:\n              type: array\n              description: List of verified Solana addresses of the user sorted by\n                oldest to most recent.\n              items:\n                type: string\n                pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                description: Solana address\n        verified_accounts:\n          type: array\n          description: Verified accounts of the user on other platforms, currently\n            only X is supported.\n          items:\n            type: object\n            properties:\n              platform:\n                type: string\n                enum:\n                - x\n                - github\n              username:\n                type: string\n        power_badge:\n          type: boolean\n        experimental:\n          type: object\n          required:\n          - neynar_user_score\n          properties:\n            neynar_user_score:\n              type: number\n              format: double\n              description: Score that represents the probability that the account\n                is not spam.\n        viewer_context:\n          type: object\n          description: Adds context on the viewer's follow relationship with the user.\n          required:\n          - following\n          - followed_by\n          - blocking\n          - blocked_by\n          properties:\n            following:\n              description: Indicates if the viewer is following the user.\n              type: boolean\n            followed_by:\n              description: Indicates if the viewer is followed by the user.\n              type: boolean\n            blocking:\n              description: Indicates if the viewer is blocking the user.\n              type: boolean\n            blocked_by:\n              description: Indicates if the viewer is blocked by the user.\n              type: boolean\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5291, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8487b2ec-4ed4-4a3a-bc75-28c74824a03f": {"__data__": {"id_": "8487b2ec-4ed4-4a3a-bc75-28c74824a03f", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-cast-metrics.md", "file_name": "neynar_fetch-cast-metrics.md", "file_type": "text/markdown", "file_size": 856, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "56e374f9-fc73-4572-916f-51bc5f6974af", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-cast-metrics.md", "file_name": "neynar_fetch-cast-metrics.md", "file_type": "text/markdown", "file_size": 856, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "eb465aa458287114ae6e23dcf1237f51ffbf72bf41615ae686bd51eab3a83fc9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-cast-metrics\n\n**Endpoint**: `GET /farcaster/cast/metrics`\n\n## Description\nFetches metrics casts matching a query\n\n## Parameters\n- `q` (query): Query string to search for casts\n- `interval` (query): Interval of time for which to fetch metrics. Choices are `1d`, `7d`, `30d`\n- `author_fid` (query): Fid of the user whose casts you want to search\n- `channel_id` (query): Channel ID of the casts you want to search\n\n## Response\n```yaml\ntype: object\nrequired:\n- metrics\nproperties:\n  metrics:\n    type: array\n    items:\n      type: object\n      required:\n      - start\n      - resolution_in_seconds\n      - cast_count\n      properties:\n        start:\n          type: string\n          format: date-time\n        resolution_in_seconds:\n          type: integer\n          format: int32\n        cast_count:\n          type: integer\n          format: int32\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 855, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1ed5b15b-7cf2-4d09-aace-cd8961c532d8": {"__data__": {"id_": "1ed5b15b-7cf2-4d09-aace-cd8961c532d8", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-cast-reactions.md", "file_name": "neynar_fetch-cast-reactions.md", "file_type": "text/markdown", "file_size": 6993, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fcff91c8-cebe-4135-8865-ef4a8daf384b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-cast-reactions.md", "file_name": "neynar_fetch-cast-reactions.md", "file_type": "text/markdown", "file_size": 6993, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "9938ed5bc11fe5871587dcbe6d3dc4901b9e8664bf345bbf9a1e16d067a66371", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "838cd609-dd26-4182-b8b5-0ed34a33cf33", "node_type": "1", "metadata": {}, "hash": "d0ed7597362d65da52f8230b5b1f14f3ab043b0b4134ffa7cf64d0e90abbb32b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-cast-reactions\n\n**Endpoint**: `GET /farcaster/reactions/cast`\n\n## Description\nFetches reactions for a given cast\n\n## Parameters\n- `hash` (query): No description\n- `types` (query): Customize which reaction types the request should search for. This is a comma-separated string that can include the following values: 'likes' and 'recasts'. By default api returns both. To select multiple types, use a comma-separated list of these values.\n\n- `viewer_fid` (query): Providing this will return a list of reactions that respects this user's mutes and blocks and includes `viewer_context`.\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- reactions\n- next\nproperties:\n  reactions:\n    type: array\n    items:\n      type: object\n      required:\n      - reaction_type\n      - reaction_timestamp\n      - object\n      - user\n      properties:\n        reaction_type:\n          type: string\n          enum:\n          - like\n          - recast\n        reaction_timestamp:\n          type: string\n          format: date-time\n        object:\n          type: string\n          enum:\n          - likes\n          - recasts\n        user:\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid:\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5264, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "838cd609-dd26-4182-b8b5-0ed34a33cf33": {"__data__": {"id_": "838cd609-dd26-4182-b8b5-0ed34a33cf33", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-cast-reactions.md", "file_name": "neynar_fetch-cast-reactions.md", "file_type": "text/markdown", "file_size": 6993, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fcff91c8-cebe-4135-8865-ef4a8daf384b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-cast-reactions.md", "file_name": "neynar_fetch-cast-reactions.md", "file_type": "text/markdown", "file_size": 6993, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "9938ed5bc11fe5871587dcbe6d3dc4901b9e8664bf345bbf9a1e16d067a66371", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1ed5b15b-7cf2-4d09-aace-cd8961c532d8", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-cast-reactions.md", "file_name": "neynar_fetch-cast-reactions.md", "file_type": "text/markdown", "file_size": 6993, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "373c079ed30420d91bc12adac33ea3f1ffbd304348f31a7a801308522554d58d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4265, "end_char_idx": 6992, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "329808fb-56a2-4f27-9675-89f8c8aa5ad8": {"__data__": {"id_": "329808fb-56a2-4f27-9675-89f8c8aa5ad8", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "db920cb1-1c33-4ffd-ab8d-42d6ded0b6b8", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "59a92129b252d843d1e98b9857cf87e54f6ac5c2d616808d992e020943480328", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "209ca758-f17d-4099-bd02-53e2124c728b", "node_type": "1", "metadata": {}, "hash": "276d9829bd28ca7c832cf3651919d5f3d9662484a0269ecacb934ce07c8af95d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-casts-for-user\n\n**Endpoint**: `GET /farcaster/feed/user/casts`\n\n## Description\nFetch casts for a given user FID in reverse chronological order. Also allows filtering by parent_url and channel\n\n## Parameters\n- `fid` (query): FID of user whose recent casts you want to fetch\n- `viewer_fid` (query): FID of the user viewing the feed\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor\n- `include_replies` (query): Include reply casts by the author in the response, true by default\n- `parent_url` (query): Parent URL to filter the feed; mutually exclusive with channel_id\n- `channel_id` (query): Channel ID to filter the feed; mutually exclusive with parent_url\n\n## Response\n```yaml\ntype: object\nrequired:\n- casts\n- next\nproperties:\n  casts:\n    type: array\n    items:\n      allOf:\n      - type: object\n        required:\n        - hash\n        - parent_hash\n        - parent_url\n        - root_parent_url\n        - parent_author\n        - author\n        - text\n        - timestamp\n        - embeds\n        properties:\n          hash:\n            type: string\n          parent_hash:\n            type:\n            - string\n            - 'null'\n          parent_url:\n            type:\n            - string\n            - 'null'\n          root_parent_url:\n            type:\n            - string\n            - 'null'\n          parent_author:\n            type: object\n            required:\n            - fid\n            properties:\n              fid:\n                oneOf:\n                - type: 'null'\n                - &id001\n                  type: integer\n                  format: int32\n                  description: The unique identifier of a farcaster user (unsigned\n                    integer)\n                  examples:\n                  - 3\n                  - 191\n                  - 2\n                  - 194\n                  - 19960\n          author: &id011\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: *id001\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id002\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5575, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "209ca758-f17d-4099-bd02-53e2124c728b": {"__data__": {"id_": "209ca758-f17d-4099-bd02-53e2124c728b", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "db920cb1-1c33-4ffd-ab8d-42d6ded0b6b8", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "59a92129b252d843d1e98b9857cf87e54f6ac5c2d616808d992e020943480328", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "329808fb-56a2-4f27-9675-89f8c8aa5ad8", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "534df87b0a01a6fecb0d0dafc54a821d4ffdf2342801b0c812919182ff91d2e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1a750fa4-5467-4b6f-aa77-b3fb347c3883", "node_type": "1", "metadata": {}, "hash": "fe0df8fb809538d41413faf06c0a270674cb9253987f2f1009b522ab38419e14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 4725, "end_char_idx": 7548, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1a750fa4-5467-4b6f-aa77-b3fb347c3883": {"__data__": {"id_": "1a750fa4-5467-4b6f-aa77-b3fb347c3883", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "db920cb1-1c33-4ffd-ab8d-42d6ded0b6b8", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "59a92129b252d843d1e98b9857cf87e54f6ac5c2d616808d992e020943480328", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "209ca758-f17d-4099-bd02-53e2124c728b", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "170977be7132fd2a70779b19be99bd72c5e5868a532f9985f8cb526d93999a8a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "76015408-5fc2-4ab0-a11a-c9b7a2f2aff3", "node_type": "1", "metadata": {}, "hash": "7693468d1bce4d6458a0c00eb5858d0c52e0d3acfd9f809418886132f3cd260d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          text:\n            type: string\n          timestamp: &id006\n            type: string\n            format: date-time\n          embeds:\n            type: array\n            items:\n              oneOf:\n              - &id007\n                type: object\n                required:\n                - url\n                properties:\n                  url:\n                    type: string\n                  metadata:\n                    type: object\n                    required:\n                    - _status\n                    properties:\n                      _status:\n                        type: string\n                      content_type:\n                        type:\n                        - string\n                        - 'null'\n                      content_length:\n                        type:\n                        - integer\n                        - 'null'\n                      image:\n                        type: object\n                        properties:\n                          height_px:\n                            type: integer\n                          width_px:\n                            type: integer\n                      video:\n                        type: object\n                        properties:\n                          duration_s:\n                            type: number\n                          stream:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                codec_name:\n                                  type: string\n                                height_px:\n                                  type: integer\n                                width_px:\n                                  type: integer\n                      html:\n                        allOf:\n                        - type: object\n                          properties:\n                            favicon:\n                              type: string\n                            modifiedTime:\n                              type: string\n                            ogArticleAuthor:\n                              type: string\n                            ogArticleExpirationTime:\n                              type: string\n                            ogArticleModifiedTime:\n                              type: string\n                            ogArticlePublishedTime:\n                              type: string\n                            ogArticlePublisher:\n                              type: string\n                            ogArticleSection:\n                              type: string\n                            ogArticleTag:\n                              type: string\n                            ogAudio:\n                              type: string\n                            ogAudioSecureURL:\n                              type: string\n                            ogAudioType:\n                              type: string\n                            ogAudioURL:\n                              type: string\n                            ogAvailability:\n                              type: string\n                            ogDate:\n                              type: string\n                            ogDescription:\n                              type: string\n                            ogDeterminer:\n                              type: string\n                            ogEpisode:\n                              type: string\n                            ogImage:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                  alt:\n                                    type: string\n                                required:\n                                - url\n                            ogLocale:\n                              type: string\n                            ogLocaleAlternate:\n                              type: string\n                            ogLogo:\n                              type: string\n                            ogMovie:\n                              type: string\n                            ogPriceAmount:\n                              type: string\n                            ogPriceCurrency:\n                              type: string\n                            ogProductAvailability:\n                              type: string\n                            ogProductCondition:\n                              type: string\n                            ogProductPriceAmount:\n                              type: string\n                            ogProductPriceCurrency:\n                              type: string\n                            ogProductRetailerItemId:\n                              type: string\n                            ogSiteName:\n                              type: string\n                            ogTitle:\n                              type: string\n                            ogType:\n                              type: string\n                            ogUrl:\n                              type: string\n                            ogVideo:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                required:\n                                - url\n                            ogVideoActor:\n                              type: string\n                            ogVideoActorId:\n                              type: string\n                            ogVideoActorRole:\n                              type: string\n                            ogVideoDirector:\n                              type: string\n                            ogVideoDuration:\n                              type: string\n                            ogVideoOther:\n                              type: string\n                            ogVideoReleaseDate:\n                              type: string\n                            ogVideoSecureURL:\n                              type: string\n                            ogVideoSeries:\n                              type: string\n                            ogVideoTag:\n                              type: string\n                            ogVideoTvShow:\n                              type: string\n                            ogVideoWriter:\n                              type: string\n                            ogWebsite:\n                              type: string\n                            updatedTime:\n                              type: string\n                        - type: object\n                          properties:\n                            oembed:\n                              oneOf:\n                              - allOf:\n                                - &id003\n                                  type: object\n                                  description: Basic data structure of every oembed\n                                    response see https://oembed.com/\n                                  required:\n                                  - type\n                                  - version\n                                  properties:\n                                    type:\n                                      type: string\n                                    version:\n                                      type:\n                                      - string\n                                      - 'null'\n                                    title:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A text title, describing the resource.", "mimetype": "text/plain", "start_char_idx": 6683, "end_char_idx": 16088, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "76015408-5fc2-4ab0-a11a-c9b7a2f2aff3": {"__data__": {"id_": "76015408-5fc2-4ab0-a11a-c9b7a2f2aff3", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "db920cb1-1c33-4ffd-ab8d-42d6ded0b6b8", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "59a92129b252d843d1e98b9857cf87e54f6ac5c2d616808d992e020943480328", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1a750fa4-5467-4b6f-aa77-b3fb347c3883", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "fd710d7ff1b8f84eddbc35810bb882274b09be2b462aef2ff2e1b386b8551ca3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e511f9a2-156d-44a3-9a9d-2304c96b45e7", "node_type": "1", "metadata": {}, "hash": "02bb5551c6319ad9c9e131ba050e77c2a58a5756c4a5f538be3d18d6c2b844c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the author/owner of\n                                        the resource.\n                                    author_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL for the author/owner of the\n                                        resource.\n                                    provider_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the resource provider.\n                                    provider_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The url of the resource provider.\n                                    cache_age:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The suggested cache lifetime for\n                                        this resource, in seconds. Consumers may choose\n                                        to use this value or not.\n                                    thumbnail_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL to a thumbnail image representing\n                                        the resource. The thumbnail must respect any\n                                        maxwidth and maxheight parameters. If this\n                                        parameter is present, thumbnail_width and\n                                        thumbnail_height must also be present.\n                                    thumbnail_width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_height must also be present.\n                                    thumbnail_height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_width must also be present.\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - rich\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to display the\n                                        resource. The HTML should have no padding\n                                        or margins. Consumers may wish to load the\n                                        HTML in an off-domain iframe to avoid XSS\n                                        vulnerabilities. The markup should be valid\n                                        XHTML 1.0 Basic.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - video\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to embed a video\n                                        player. The HTML should have no padding or\n                                        margins. Consumers may wish to load the HTML\n                                        in an off-domain iframe to avoid XSS vulnerabilities.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 16125, "end_char_idx": 24455, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e511f9a2-156d-44a3-9a9d-2304c96b45e7": {"__data__": {"id_": "e511f9a2-156d-44a3-9a9d-2304c96b45e7", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "db920cb1-1c33-4ffd-ab8d-42d6ded0b6b8", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "59a92129b252d843d1e98b9857cf87e54f6ac5c2d616808d992e020943480328", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "76015408-5fc2-4ab0-a11a-c9b7a2f2aff3", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d8036a0260de1481d2aeab1d7bf0f6fd0015a6897873ea9f6902659106ec1ad4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4c459735-9a34-449b-8a47-a07a20f5f886", "node_type": "1", "metadata": {}, "hash": "4bf0e8989166b44509d34059a21981076b724bc3fd8b9c3a31d03109f5c8881a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - link\n                              discriminator:\n                                propertyName: type\n                                mapping:\n                                  rich: '#/components/schemas/OembedRichData'\n                                  video: '#/components/schemas/OembedVideoData'\n                                  photo: '#/components/schemas/OembedPhotoData'\n                                  link: '#/components/schemas/OembedLinkData'\n                      frame: &id010\n                        discriminator:\n                          propertyName: version\n                        oneOf:\n                        - description: Frame v1 object\n                          allOf:\n                          - &id004\n                            description: Frame base object used across all versions\n                            type: object\n                            required:\n                            - version\n                            - image\n                            - frames_url\n                            properties:\n                              version:\n                                type: string\n                                description: Version of the frame, 'next' for v2,\n                                  'vNext' for v1\n                              image:\n                                type: string\n                                description: URL of the image\n                              frames_url:\n                                type: string\n                                description: Launch URL of the frame\n                          - type: object\n                            properties:\n                              buttons:\n                                type: array\n                                items:\n                                  type: object\n                                  required:\n                                  - index\n                                  - action_type\n                                  properties:\n                                    title:\n                                      type: string\n                                      description: Title of the button\n                                    index:\n                                      type: integer\n                                      description: Index of the button\n                                    action_type:\n                                      type: string\n                                      description: The action type of a frame button.\n                                        Action types \"mint\" & \"link\" are to be handled\n                                        on the client side only and so they will produce\n                                        a no/op for POST /farcaster/frame/action.\n                                      enum:\n                                      - post\n                                      - post_redirect\n                                      - tx\n                                      - link\n                                      - mint\n                                    target:\n                                      type: string\n                                      description: Target of the button\n                                    post_url:\n                                      type: string\n                                      description: Used specifically for the tx action\n                                        type to post a successful transaction hash\n                              post_url:\n                                type: string\n                                description: Post URL to take an action on this frame\n                              title:\n                                type: string\n                              image_aspect_ratio:\n                                type: string\n                              input:\n                                type: object\n                                properties:\n                                  text:\n                                    type: string\n                                    description: Input text for the frame\n                              state:\n                                type: object\n                                properties:\n                                  serialized:\n                                    type: string\n                                    description: State for the frame in a serialized\n                                      format\n                        - description: Frame v2 object\n                          allOf:\n                          - *id004\n                          - type: object\n                            required:\n                            - title\n                            - name\n                            - icon\n                            properties:\n                              manifest:\n                                type: object\n                                properties:\n                                  account_association:\n                                    type: object\n                                    properties:\n                                      header:\n                                        type: string\n                                      payload:\n                                        type: string\n                                      signature:\n                                        type: string\n                                    required:\n                                    - header\n                                    - payload\n                                    - signature\n                                  frame:\n                                    type: object\n                                    properties:\n                                      version:\n                                        type: string\n                                        enum:\n                                        - 0.0.0\n                                        - 0.0.", "mimetype": "text/plain", "start_char_idx": 22762, "end_char_idx": 30855, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4c459735-9a34-449b-8a47-a07a20f5f886": {"__data__": {"id_": "4c459735-9a34-449b-8a47-a07a20f5f886", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "db920cb1-1c33-4ffd-ab8d-42d6ded0b6b8", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "59a92129b252d843d1e98b9857cf87e54f6ac5c2d616808d992e020943480328", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e511f9a2-156d-44a3-9a9d-2304c96b45e7", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "6ca09aa3731ce55a4d12490e4d5ac235c4c31578f3f864cb8464144d88f9d193", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f7bddc7e-e3c5-4a55-9917-591a47a19856", "node_type": "1", "metadata": {}, "hash": "256dbc3a053302772e68551d3c8ed80cd3cc87d6cacee7a7b90bcf151cedcd80", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                        - 0.0.1\n                                        - '1'\n                                        - next\n                                      name:\n                                        type: string\n                                        maxLength: 32\n                                      home_url:\n                                        type: string\n                                        maxLength: 512\n                                      icon_url:\n                                        type: string\n                                        maxLength: 512\n                                      image_url:\n                                        type: string\n                                        maxLength: 512\n                                      button_title:\n                                        type: string\n                                        maxLength: 32\n                                      splash_image_url:\n                                        type: string\n                                        maxLength: 512\n                                      splash_background_color:\n                                        type: string\n                                      webhook_url:\n                                        type: string\n                                        maxLength: 512\n                                    required:\n                                    - version\n                                    - name\n                                    - home_url\n                                    - icon_url\n                                  triggers:\n                                    type: array\n                                    items:\n                                      oneOf:\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - cast\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - composer\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                required:\n                                - account_association\n                              author: &id005\n                                type: object\n                                required:\n                                - object\n                                - fid\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - user_dehydrated\n                                  fid: *id001\n                                  username:\n                                    type: string\n                                  display_name:\n                                    type: string\n                                  pfp_url:\n                                    type: string\n                        mapping:\n                          vNext: '#/components/schemas/FrameV1'\n                          next: '#/components/schemas/FrameV2'\n                          '1': '#/components/schemas/FrameV2'\n                          0.0.0: '#/components/schemas/FrameV2'\n                          0.0.1: '#/components/schemas/FrameV2'\n              - type: object\n                required:\n                - cast\n                properties:\n                  cast_id: &id008\n                    type: object\n                    required:\n                    - fid\n                    - hash\n                    properties:\n                      fid: *id001\n                      hash:\n                        type: string\n                  cast:\n                    type: object\n                    required:\n                    - hash\n                    - parent_hash\n                    - parent_url\n                    - root_parent_url\n                    - parent_author\n                    - author\n                    - text\n                    - timestamp\n                    - type\n                    - embeds\n                    - channel\n                    properties:\n                      hash:\n                        type: string\n                      parent_hash:\n                        type:\n                        - string\n                        - 'null'\n                      parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      root_parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      parent_author:\n                        type: object\n                        required:\n                        - fid\n                        properties:\n                          fid:\n                            oneOf:\n                            - type: 'null'\n                            - *id001\n                      author: *id005\n                      text:\n                        type: string\n                      timestamp: *id006\n                      type: &id009\n                        type: string\n                        enum:\n                        - cast-mention\n                        - cast-reply\n                        description: 'The notification type of a cast.\n\n                          '\n                      embeds:\n                        type: array\n                        items:\n                          oneOf:\n                          - *id007\n                          - type: object\n                            required:\n                            - cast\n                            properties:\n                              cast_id: *id008\n                              cast:\n                                type: object\n                                required:\n                                - object\n                                - hash\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - cast_dehydrated\n                                  hash:\n                                    type: string\n                                  author: *id005\n                      channel:\n                        oneOf:\n                        - type: 'null'\n                        - &id013\n                          type: object\n                          required:\n                          - id\n                          - name\n                          - object\n                          properties:\n                            id:\n                              type: string\n                            name:\n                              type: string\n                            object:\n                              type: string\n                              enum:\n                              - channel_dehydrated\n                            image_url:\n                              type: string\n                            viewer_context: &id012\n                              description: Adds context on the viewer's or author's\n                                role in the channel.", "mimetype": "text/plain", "start_char_idx": 30805, "end_char_idx": 39572, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f7bddc7e-e3c5-4a55-9917-591a47a19856": {"__data__": {"id_": "f7bddc7e-e3c5-4a55-9917-591a47a19856", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "db920cb1-1c33-4ffd-ab8d-42d6ded0b6b8", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "59a92129b252d843d1e98b9857cf87e54f6ac5c2d616808d992e020943480328", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4c459735-9a34-449b-8a47-a07a20f5f886", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "a842b11a0067dc32b10c57bc0e9b77b95b9575a956f59f9df0e1b08a240fc48f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                              required:\n                              - following\n                              properties:\n                                following:\n                                  description: Indicates if the user is following\n                                    the channel.\n                                  type: boolean\n                                role:\n                                  type: string\n                                  description: The role of a channel member\n                                  enum:\n                                  - member\n                                  - moderator\n          type: *id009\n      - type: object\n        required:\n        - reactions\n        - replies\n        - thread_hash\n        - mentioned_profiles\n        - channel\n        properties:\n          frames:\n            type: array\n            items: *id010\n          reactions:\n            type: object\n            required:\n            - likes\n            - recasts\n            - likes_count\n            - recasts_count\n            properties:\n              likes:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  properties:\n                    fid: *id001\n              recasts:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  - fname\n                  properties:\n                    fid: *id001\n                    fname:\n                      type: string\n              likes_count:\n                type: integer\n                format: int32\n              recasts_count:\n                type: integer\n                format: int32\n          replies:\n            type: object\n            required:\n            - count\n            properties:\n              count:\n                type: integer\n                format: int32\n          thread_hash:\n            type:\n            - string\n            - 'null'\n          mentioned_profiles:\n            type: array\n            items: *id011\n          channel:\n            oneOf:\n            - oneOf:\n              - type: object\n                required:\n                - id\n                - url\n                - object\n                properties:\n                  id:\n                    type: string\n                  url:\n                    type: string\n                  name:\n                    type: string\n                  description:\n                    type: string\n                  object:\n                    type: string\n                    enum:\n                    - channel\n                  created_at:\n                    description: Epoch timestamp in seconds.\n                    type: number\n                  follower_count:\n                    description: Number of followers the channel has.\n                    type: number\n                  external_link:\n                    type: object\n                    description: Channel's external link.\n                    properties:\n                      title:\n                        type: string\n                      url:\n                        type: string\n                  image_url:\n                    type: string\n                  parent_url:\n                    type: string\n                    format: uri\n                  lead: *id011\n                  moderator_fids:\n                    type: array\n                    items: *id001\n                  member_count:\n                    type: integer\n                    format: int32\n                  moderator: *id011\n                  pinned_cast_hash:\n                    type: string\n                    default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                    description: Cast Hash\n                  hosts:\n                    type: array\n                    deprecated: true\n                    items: *id011\n                  viewer_context: *id012\n              - *id013\n              discriminator:\n                propertyName: object\n                mapping:\n                  channel: '#/components/schemas/Channel'\n                  dehydrated_channel: '#/components/schemas/DehydratedChannel'\n            - type: 'null'\n          viewer_context:\n            type: object\n            description: Adds context on interactions the viewer has made with the\n              cast.\n            required:\n            - liked\n            - recasted\n            properties:\n              liked:\n                description: Indicates if the viewer liked the cast.\n                type: boolean\n              recasted:\n                description: Indicates if the viewer recasted the cast.\n                type: boolean\n          author_channel_context: *id012\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 39603, "end_char_idx": 44612, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "89d7b5ed-84ad-4b4c-9789-6ba5849ef3c0": {"__data__": {"id_": "89d7b5ed-84ad-4b4c-9789-6ba5849ef3c0", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-invites.md", "file_name": "neynar_fetch-channel-invites.md", "file_type": "text/markdown", "file_size": 6802, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2c6a9a9d-f5fc-4890-9cb8-cbee687e04f7", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-invites.md", "file_name": "neynar_fetch-channel-invites.md", "file_type": "text/markdown", "file_size": 6802, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "eb00a041a0cc8a0238fda604cdf00143b4abdebc0a6920e7d3a183cabcaacd87", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bb5efd40-d06e-4010-a220-bc57f425958d", "node_type": "1", "metadata": {}, "hash": "1129ad9a7c7fe92a832492342e77107de33a0e547fa55be72552aedd3118bd58", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-channel-invites\n\n**Endpoint**: `GET /farcaster/channel/member/invite/list`\n\n## Description\nFetch a list of invites, either in a channel or for a user. If both are provided, open channel invite for that user is returned.\n\n## Parameters\n- `channel_id` (query): Channel ID for the channel being queried\n- `invited_fid` (query): FID of the user being invited\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- invites\nproperties:\n  invites:\n    type: array\n    items:\n      type: object\n      required:\n      - channel_id\n      - role\n      - inviter\n      - invited\n      properties:\n        channel_id:\n          type: string\n          description: The unique identifier of a farcaster channel\n          examples:\n          - neynar\n        role:\n          type: string\n          description: The role of a channel member\n          enum:\n          - member\n          - moderator\n        inviter: &id002\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid:\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5049, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bb5efd40-d06e-4010-a220-bc57f425958d": {"__data__": {"id_": "bb5efd40-d06e-4010-a220-bc57f425958d", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-invites.md", "file_name": "neynar_fetch-channel-invites.md", "file_type": "text/markdown", "file_size": 6802, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2c6a9a9d-f5fc-4890-9cb8-cbee687e04f7", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-invites.md", "file_name": "neynar_fetch-channel-invites.md", "file_type": "text/markdown", "file_size": 6802, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "eb00a041a0cc8a0238fda604cdf00143b4abdebc0a6920e7d3a183cabcaacd87", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "89d7b5ed-84ad-4b4c-9789-6ba5849ef3c0", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-invites.md", "file_name": "neynar_fetch-channel-invites.md", "file_type": "text/markdown", "file_size": 6802, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "fc71e8abd5ed607a7a381df3c982121c741e4d2df668346fd837eb1afd47f169", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        invited: *id002\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4050, "end_char_idx": 6801, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "578dda64-2bfc-49d7-b8ca-12d89609831f": {"__data__": {"id_": "578dda64-2bfc-49d7-b8ca-12d89609831f", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-members.md", "file_name": "neynar_fetch-channel-members.md", "file_type": "text/markdown", "file_size": 9938, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7f1f4b0d-1fd3-4fca-b61f-4bd7d2ff7ee0", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-members.md", "file_name": "neynar_fetch-channel-members.md", "file_type": "text/markdown", "file_size": 9938, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "c7ab9d7c790ea277589c976dd8aa11242f9ffba6c34044ee0178c147efddf4bd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bff4348a-86a9-43f9-9503-e1453bb23bfc", "node_type": "1", "metadata": {}, "hash": "4df8622b9a903cd4b4c520dd66079d29d68d3dba729e3a548f3397e1f3aae731", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-channel-members\n\n**Endpoint**: `GET /farcaster/channel/member/list`\n\n## Description\nFetch a list of members in a channel\n\n## Parameters\n- `channel_id` (query): Channel ID for the channel being queried\n- `fid` (query): FID of the user being queried. Specify this to check if a user is a member of the channel without paginating through all members.\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- members\n- next\nproperties:\n  members:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - role\n      - user\n      - channel\n      properties:\n        object:\n          type: string\n          enum:\n          - member\n        role: &id004\n          type: string\n          description: The role of a channel member\n          enum:\n          - member\n          - moderator\n        user:\n          oneOf:\n          - &id003\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: &id002\n                type: integer\n                format: int32\n                description: The unique identifier of a farcaster user (unsigned integer)\n                examples:\n                - 3\n                - 191\n                - 2\n                - 194\n                - 19960\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id001\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id001\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id001\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5985, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bff4348a-86a9-43f9-9503-e1453bb23bfc": {"__data__": {"id_": "bff4348a-86a9-43f9-9503-e1453bb23bfc", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-members.md", "file_name": "neynar_fetch-channel-members.md", "file_type": "text/markdown", "file_size": 9938, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7f1f4b0d-1fd3-4fca-b61f-4bd7d2ff7ee0", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-members.md", "file_name": "neynar_fetch-channel-members.md", "file_type": "text/markdown", "file_size": 9938, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "c7ab9d7c790ea277589c976dd8aa11242f9ffba6c34044ee0178c147efddf4bd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "578dda64-2bfc-49d7-b8ca-12d89609831f", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-members.md", "file_name": "neynar_fetch-channel-members.md", "file_type": "text/markdown", "file_size": 9938, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "bdc032fc8a5a5b5e7189102f29509745b0bf2ee8b46602cf6b94afd0b5d753d5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          - type: object\n            required:\n            - object\n            - fid\n            properties:\n              object:\n                type: string\n                enum:\n                - user_dehydrated\n              fid: *id002\n              username:\n                type: string\n              display_name:\n                type: string\n              pfp_url:\n                type: string\n        channel:\n          oneOf:\n          - type: object\n            required:\n            - id\n            - url\n            - object\n            properties:\n              id:\n                type: string\n              url:\n                type: string\n              name:\n                type: string\n              description:\n                type: string\n              object:\n                type: string\n                enum:\n                - channel\n              created_at:\n                description: Epoch timestamp in seconds.\n                type: number\n              follower_count:\n                description: Number of followers the channel has.\n                type: number\n              external_link:\n                type: object\n                description: Channel's external link.\n                properties:\n                  title:\n                    type: string\n                  url:\n                    type: string\n              image_url:\n                type: string\n              parent_url:\n                type: string\n                format: uri\n              lead: *id003\n              moderator_fids:\n                type: array\n                items: *id002\n              member_count:\n                type: integer\n                format: int32\n              moderator: *id003\n              pinned_cast_hash:\n                type: string\n                default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                description: Cast Hash\n              hosts:\n                type: array\n                deprecated: true\n                items: *id003\n              viewer_context: &id005\n                description: Adds context on the viewer's or author's role in the\n                  channel.\n                type: object\n                required:\n                - following\n                properties:\n                  following:\n                    description: Indicates if the user is following the channel.\n                    type: boolean\n                  role: *id004\n          - type: object\n            required:\n            - id\n            - name\n            - object\n            properties:\n              id:\n                type: string\n              name:\n                type: string\n              object:\n                type: string\n                enum:\n                - channel_dehydrated\n              image_url:\n                type: string\n              viewer_context: *id005\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4913, "end_char_idx": 9937, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "724f114f-6068-4305-a7b3-f415690422b7": {"__data__": {"id_": "724f114f-6068-4305-a7b3-f415690422b7", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b1f07189-9788-4c79-961a-e896ed1ac29a", "node_type": "1", "metadata": {}, "hash": "28a51ea5068f3852330e1cd27ef845c9112e4b91fef90f0909c46aa9ca49b4b2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-channel-notifications-for-user\n\n**Endpoint**: `GET /farcaster/notifications/channel`\n\n## Description\nReturns a list of notifications for a user in specific channels\n\n## Parameters\n- `fid` (query): FID of the user you you want to fetch notifications for. The response will respect this user's mutes and blocks.\n- `channel_ids` (query): Comma separated channel_ids (find list of all channels here - https://docs.neynar.com/reference/list-all-channels)\n- `priority_mode` (query): When true, only returns notifications from power badge users and users that the viewer follows (if viewer_fid is provided).\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- unseen_notifications_count\n- notifications\n- next\nproperties:\n  unseen_notifications_count:\n    type: integer\n    format: int32\n  notifications:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - most_recent_timestamp\n      - type\n      - seen\n      properties:\n        object:\n          type: string\n        most_recent_timestamp:\n          type: string\n          format: date-time\n        type:\n          type: string\n          enum:\n          - follows\n          - recasts\n          - likes\n          - mention\n          - reply\n          - quote\n        seen:\n          type: boolean\n        follows:\n          type: array\n          items:\n            type: object\n            required:\n            - object\n            - user\n            properties:\n              object:\n                type: string\n                enum:\n                - follow\n              user: &id003\n                type: object\n                required:\n                - object\n                - fid\n                - custody_address\n                - username\n                - profile\n                - follower_count\n                - following_count\n                - verifications\n                - verified_addresses\n                - verified_accounts\n                - power_badge\n                properties:\n                  object:\n                    type: string\n                    enum:\n                    - user\n                  fid: &id002\n                    type: integer\n                    format: int32\n                    description: The unique identifier of a farcaster user (unsigned\n                      integer)\n                    examples:\n                    - 3\n                    - 191\n                    - 2\n                    - 194\n                    - 19960\n                  username:\n                    type: string\n                  display_name:\n                    type: string\n                  custody_address: &id001\n                    type: string\n                    pattern: ^0x[a-fA-F0-9]{40}$\n                    description: Ethereum address\n                  pfp_url:\n                    type: string\n                    description: The URL of the user's profile picture\n                  profile:\n                    type: object\n                    required:\n                    - bio\n                    properties:\n                      bio:\n                        type: object\n                        required:\n                        - text\n                        - mentioned_profiles\n                        properties:\n                          text:\n                            type: string\n                          mentioned_profiles:\n                            type: array\n                            items:\n                              type: string\n                            default: []\n                      location:\n                        description: Coordinates and place names for a location\n                        type: object\n                        required:\n                        - latitude\n                        - longitude\n                        properties:\n                          latitude:\n                            type: number\n                            format: double\n                            minimum: -90\n                            maximum: 90\n                          longitude:\n                            type: number\n                            format: double\n                            minimum: -180\n                            maximum: 180\n                          address:\n                            type: object\n                            required:\n                            - city\n                            - country\n                            properties:\n                              city:\n                                type: string\n                              state:\n                                type: string\n                              state_code:\n                                type: string\n                              country:\n                                type: string\n                              country_code:\n                                type: string\n                  follower_count:\n                    type: integer\n                    format: int32\n                    description: The number of followers the user has.\n                  following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id001\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id001\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 6047, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b1f07189-9788-4c79-961a-e896ed1ac29a": {"__data__": {"id_": "b1f07189-9788-4c79-961a-e896ed1ac29a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "724f114f-6068-4305-a7b3-f415690422b7", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "076ab89f512fe15b85a616d8aa594887899c3e53d92cab0b7fa03ba1a7e55823", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a4d85283-3289-40b7-8059-61b7046a09e5", "node_type": "1", "metadata": {}, "hash": "169a59319fb9d24fb0317dd2e49f2266fc7dc58ad08b58979bc54f908f94fb5b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id001\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id001\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.\n                        items:\n                          type: string\n                          pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                          description: Solana address\n                  verified_accounts:\n                    type: array\n                    description: Verified accounts of the user on other platforms,\n                      currently only X is supported.\n                    items:\n                      type: object\n                      properties:\n                        platform:\n                          type: string\n                          enum:\n                          - x\n                          - github\n                        username:\n                          type: string\n                  power_badge:\n                    type: boolean\n                  experimental:\n                    type: object\n                    required:\n                    - neynar_user_score\n                    properties:\n                      neynar_user_score:\n                        type: number\n                        format: double\n                        description: Score that represents the probability that the\n                          account is not spam.\n                  viewer_context:\n                    type: object\n                    description: Adds context on the viewer's follow relationship\n                      with the user.\n                    required:\n                    - following\n                    - followed_by\n                    - blocking\n                    - blocked_by\n                    properties:\n                      following:\n                        description: Indicates if the viewer is following the user.\n                        type: boolean\n                      followed_by:\n                        description: Indicates if the viewer is followed by the user.\n                        type: boolean\n                      blocking:\n                        description: Indicates if the viewer is blocking the user.\n                        type: boolean\n                      blocked_by:\n                        description: Indicates if the viewer is blocked by the user.\n                        type: boolean\n        cast:\n          allOf:\n          - type: object\n            required:\n            - hash\n            - parent_hash\n            - parent_url\n            - root_parent_url\n            - parent_author\n            - author\n            - text\n            - timestamp\n            - embeds\n            properties:\n              hash:\n                type: string\n              parent_hash:\n                type:\n                - string\n                - 'null'\n              parent_url:\n                type:\n                - string\n                - 'null'\n              root_parent_url:\n                type:\n                - string\n                - 'null'\n              parent_author:\n                type: object\n                required:\n                - fid\n                properties:\n                  fid:", "mimetype": "text/plain", "start_char_idx": 5113, "end_char_idx": 9083, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a4d85283-3289-40b7-8059-61b7046a09e5": {"__data__": {"id_": "a4d85283-3289-40b7-8059-61b7046a09e5", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b1f07189-9788-4c79-961a-e896ed1ac29a", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "13aa0d0d9dd76a4f698da0afbe22c1106129376d0691003ef8f74a6a6b2c9284", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "393eac91-abe3-4c7c-ad6e-bc26e724b24e", "node_type": "1", "metadata": {}, "hash": "c1b5bb48ae141461219d2a5d14ef95e076cdc8320a2c7e623f09c2ab83b8804a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- 'null'\n              root_parent_url:\n                type:\n                - string\n                - 'null'\n              parent_author:\n                type: object\n                required:\n                - fid\n                properties:\n                  fid:\n                    oneOf:\n                    - type: 'null'\n                    - *id002\n              author: *id003\n              text:\n                type: string\n              timestamp: &id007\n                type: string\n                format: date-time\n              embeds:\n                type: array\n                items:\n                  oneOf:\n                  - &id008\n                    type: object\n                    required:\n                    - url\n                    properties:\n                      url:\n                        type: string\n                      metadata:\n                        type: object\n                        required:\n                        - _status\n                        properties:\n                          _status:\n                            type: string\n                          content_type:\n                            type:\n                            - string\n                            - 'null'\n                          content_length:\n                            type:", "mimetype": "text/plain", "start_char_idx": 8815, "end_char_idx": 10130, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "393eac91-abe3-4c7c-ad6e-bc26e724b24e": {"__data__": {"id_": "393eac91-abe3-4c7c-ad6e-bc26e724b24e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a4d85283-3289-40b7-8059-61b7046a09e5", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d1f948cdf5b7836008df9be03e38203ff9629e98e151cd2fa63a2269c141b7d3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "28fcd9f8-7f9c-4293-94a6-9e91d99f6702", "node_type": "1", "metadata": {}, "hash": "7ea3d4f5bcc4e2b23c3433b940f18b8ed7326f3f93f19b3c40f71a892b859eef", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "content_type:\n                            type:\n                            - string\n                            - 'null'\n                          content_length:\n                            type:\n                            - integer\n                            - 'null'\n                          image:\n                            type: object\n                            properties:\n                              height_px:\n                                type: integer\n                              width_px:\n                                type: integer\n                          video:\n                            type: object\n                            properties:\n                              duration_s:\n                                type: number\n                              stream:\n                                type: array\n                                items:\n                                  type: object\n                                  properties:\n                                    codec_name:\n                                      type: string\n                                    height_px:\n                                      type: integer\n                                    width_px:", "mimetype": "text/plain", "start_char_idx": 9933, "end_char_idx": 11151, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "28fcd9f8-7f9c-4293-94a6-9e91d99f6702": {"__data__": {"id_": "28fcd9f8-7f9c-4293-94a6-9e91d99f6702", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "393eac91-abe3-4c7c-ad6e-bc26e724b24e", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "21b02e0e17c9477b540f3635cb376ee4cf508bb1629f13b650e9d7817ed929b6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dfd27381-05c0-423d-bdad-60abfd0471c7", "node_type": "1", "metadata": {}, "hash": "354a714b52dabed5f9446901128c6bda93bc0c8e5a5e7f50a8b06bba1ad556fa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "codec_name:\n                                      type: string\n                                    height_px:\n                                      type: integer\n                                    width_px:\n                                      type: integer\n                          html:\n                            allOf:\n                            - type: object\n                              properties:\n                                favicon:\n                                  type: string\n                                modifiedTime:\n                                  type: string\n                                ogArticleAuthor:\n                                  type: string\n                                ogArticleExpirationTime:\n                                  type: string\n                                ogArticleModifiedTime:\n                                  type: string\n                                ogArticlePublishedTime:\n                                  type: string\n                                ogArticlePublisher:\n                                  type: string\n                                ogArticleSection:\n                                  type: string\n                                ogArticleTag:", "mimetype": "text/plain", "start_char_idx": 10944, "end_char_idx": 12183, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dfd27381-05c0-423d-bdad-60abfd0471c7": {"__data__": {"id_": "dfd27381-05c0-423d-bdad-60abfd0471c7", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "28fcd9f8-7f9c-4293-94a6-9e91d99f6702", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "084aaad31d78498051a287d1f6406d8e817a5a65d7751301b8de7ff6bb13b8db", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ad23e2ff-0ade-4b91-8c39-339296e76fe3", "node_type": "1", "metadata": {}, "hash": "eb1b37b820dfcf3988165f8ee339eab4ab3683dff99edb7c1c3ccbc05abe0f44", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ogArticlePublisher:\n                                  type: string\n                                ogArticleSection:\n                                  type: string\n                                ogArticleTag:\n                                  type: string\n                                ogAudio:\n                                  type: string\n                                ogAudioSecureURL:\n                                  type: string\n                                ogAudioType:\n                                  type: string\n                                ogAudioURL:\n                                  type: string\n                                ogAvailability:\n                                  type: string\n                                ogDate:\n                                  type: string\n                                ogDescription:\n                                  type: string\n                                ogDeterminer:\n                                  type: string\n                                ogEpisode:\n                                  type: string\n                                ogImage:\n                                  type: array\n                                  items:\n                                    type:", "mimetype": "text/plain", "start_char_idx": 11974, "end_char_idx": 13227, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ad23e2ff-0ade-4b91-8c39-339296e76fe3": {"__data__": {"id_": "ad23e2ff-0ade-4b91-8c39-339296e76fe3", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dfd27381-05c0-423d-bdad-60abfd0471c7", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f3ec1d760487ad381ee5cfaa4cedf0e14c84ee0b1fe8b185f173816b065b6bce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "08140ac0-279e-4826-a4bf-739384ab10ae", "node_type": "1", "metadata": {}, "hash": "20092ce7ecad094163eff191a397e80dc92a3a31b128997758d8bac50bed075b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ogEpisode:\n                                  type: string\n                                ogImage:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                      alt:\n                                        type: string\n                                    required:\n                                    - url\n                                ogLocale:\n                                  type: string\n                                ogLocaleAlternate:\n                                  type: string\n                                ogLogo:\n                                  type: string\n                                ogMovie:", "mimetype": "text/plain", "start_char_idx": 13000, "end_char_idx": 14171, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "08140ac0-279e-4826-a4bf-739384ab10ae": {"__data__": {"id_": "08140ac0-279e-4826-a4bf-739384ab10ae", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ad23e2ff-0ade-4b91-8c39-339296e76fe3", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "0aac5b81e8fb9685170c21eead06a156b73963354aa41432afa82440ea732d24", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4240b43c-62d3-4648-b5c5-bc8349c41798", "node_type": "1", "metadata": {}, "hash": "c9fa91291c5cedce05742ab32d5c15912d367abb50ece0072657eea4131821a2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: string\n                                ogLocaleAlternate:\n                                  type: string\n                                ogLogo:\n                                  type: string\n                                ogMovie:\n                                  type: string\n                                ogPriceAmount:\n                                  type: string\n                                ogPriceCurrency:\n                                  type: string\n                                ogProductAvailability:\n                                  type: string\n                                ogProductCondition:\n                                  type: string\n                                ogProductPriceAmount:\n                                  type: string\n                                ogProductPriceCurrency:\n                                  type: string\n                                ogProductRetailerItemId:\n                                  type: string\n                                ogSiteName:\n                                  type: string\n                                ogTitle:\n                                  type: string\n                                ogType:\n                                  type: string\n                                ogUrl:", "mimetype": "text/plain", "start_char_idx": 13933, "end_char_idx": 15222, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4240b43c-62d3-4648-b5c5-bc8349c41798": {"__data__": {"id_": "4240b43c-62d3-4648-b5c5-bc8349c41798", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "08140ac0-279e-4826-a4bf-739384ab10ae", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "a90e47cd6e5394304467cb2f5e7dd92019136927049a99f4965f1f164b016eba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "25727a6b-2815-45e8-b262-bdfc5d8fe609", "node_type": "1", "metadata": {}, "hash": "a07f15eb7a8ca48935a7233344382081ddb0abd44a493115decddc5fa19454b9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: string\n                                ogTitle:\n                                  type: string\n                                ogType:\n                                  type: string\n                                ogUrl:\n                                  type: string\n                                ogVideo:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                    required:\n                                    - url\n                                ogVideoActor:\n                                  type: string\n                                ogVideoActorId:\n                                  type: string\n                                ogVideoActorRole:", "mimetype": "text/plain", "start_char_idx": 14996, "end_char_idx": 16210, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "25727a6b-2815-45e8-b262-bdfc5d8fe609": {"__data__": {"id_": "25727a6b-2815-45e8-b262-bdfc5d8fe609", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4240b43c-62d3-4648-b5c5-bc8349c41798", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "3f6bee1db98c968354fc2c182ff928b3a10169156976b0c2769975dd1bb50774", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2c7e82ec-d3da-4848-918d-22da95052611", "node_type": "1", "metadata": {}, "hash": "58ef074b7bcac2403bf389dca37ffee37fd85c01a6e303f9d6e9b0b6ccc2e4af", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- url\n                                ogVideoActor:\n                                  type: string\n                                ogVideoActorId:\n                                  type: string\n                                ogVideoActorRole:\n                                  type: string\n                                ogVideoDirector:\n                                  type: string\n                                ogVideoDuration:\n                                  type: string\n                                ogVideoOther:\n                                  type: string\n                                ogVideoReleaseDate:\n                                  type: string\n                                ogVideoSecureURL:\n                                  type: string\n                                ogVideoSeries:\n                                  type: string\n                                ogVideoTag:\n                                  type: string\n                                ogVideoTvShow:\n                                  type: string\n                                ogVideoWriter:\n                                  type: string\n                                ogWebsite:\n                                  type: string\n                                updatedTime:", "mimetype": "text/plain", "start_char_idx": 15967, "end_char_idx": 17246, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2c7e82ec-d3da-4848-918d-22da95052611": {"__data__": {"id_": "2c7e82ec-d3da-4848-918d-22da95052611", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "25727a6b-2815-45e8-b262-bdfc5d8fe609", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "02aeea8c90d46b119c623ff8a1614cd9ff15f2c5324e8cb7b1b9d759c1674d91", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e913814e-a95d-4e7c-b918-d8567b4b1ef1", "node_type": "1", "metadata": {}, "hash": "351c428f60b47a81478c53e7dccf44c0c50b56b5373abf41bbc2294c725f7ea3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: string\n                                ogVideoWriter:\n                                  type: string\n                                ogWebsite:\n                                  type: string\n                                updatedTime:\n                                  type: string\n                            - type: object\n                              properties:\n                                oembed:\n                                  oneOf:\n                                  - allOf:\n                                    - &id004\n                                      type: object\n                                      description: Basic data structure of every oembed\n                                        response see https://oembed.com/\n                                      required:\n                                      - type\n                                      - version\n                                      properties:\n                                        type:\n                                          type: string\n                                        version:\n                                          type:\n                                          - string\n                                          - 'null'\n                                        title:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A text title, describing the\n                                            resource.\n                                        author_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the author/owner\n                                            of the resource.\n                                        author_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL for the author/owner\n                                            of the resource.\n                                        provider_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the resource provider.\n                                        provider_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The url of the resource provider.\n                                        cache_age:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The suggested cache lifetime\n                                            for this resource, in seconds. Consumers\n                                            may choose to use this value or not.\n                                        thumbnail_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL to a thumbnail image\n                                            representing the resource. The thumbnail\n                                            must respect any maxwidth and maxheight\n                                            parameters. If this parameter is present,\n                                            thumbnail_width and thumbnail_height must\n                                            also be present.\n                                        thumbnail_width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width of the optional thumbnail.\n                                            If this parameter is present, thumbnail_url\n                                            and thumbnail_height must also be present.\n                                        thumbnail_height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height of the optional\n                                            thumbnail. If this parameter is present,\n                                            thumbnail_url and thumbnail_width must\n                                            also be present.", "mimetype": "text/plain", "start_char_idx": 17005, "end_char_idx": 21999, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e913814e-a95d-4e7c-b918-d8567b4b1ef1": {"__data__": {"id_": "e913814e-a95d-4e7c-b918-d8567b4b1ef1", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c7e82ec-d3da-4848-918d-22da95052611", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "df12ece78ee8bf74e206f6b44ce27b6779e70bd2bfe57cc2af0e308eb1876db7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "479063a9-72b2-4fef-a8fd-9837d6a5853c", "node_type": "1", "metadata": {}, "hash": "8d9eab161584c6914f00db415326f13b4659f496da5188af18a808772433f07b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Consumers\n                                            may choose to use this value or not.\n                                        thumbnail_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL to a thumbnail image\n                                            representing the resource. The thumbnail\n                                            must respect any maxwidth and maxheight\n                                            parameters. If this parameter is present,\n                                            thumbnail_width and thumbnail_height must\n                                            also be present.\n                                        thumbnail_width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width of the optional thumbnail.\n                                            If this parameter is present, thumbnail_url\n                                            and thumbnail_height must also be present.\n                                        thumbnail_height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height of the optional\n                                            thumbnail. If this parameter is present,\n                                            thumbnail_url and thumbnail_width must\n                                            also be present.\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - rich\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to display\n                                            the resource. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities. The markup\n                                            should be valid XHTML 1.0 Basic.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - video\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to embed\n                                            a video player. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 20227, "end_char_idx": 27688, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "479063a9-72b2-4fef-a8fd-9837d6a5853c": {"__data__": {"id_": "479063a9-72b2-4fef-a8fd-9837d6a5853c", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e913814e-a95d-4e7c-b918-d8567b4b1ef1", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "966491657fbd755ce1001aaefc187495e43fc812c588005fbf812f87bef1ab10", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8ca47cd8-b5de-4f52-a529-3c05633f6625", "node_type": "1", "metadata": {}, "hash": "a027f1d3aa0f63f1af93da32e5ea91007c869a127a6f300f43465241edf0789d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.\n                                  - allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - link\n                                  discriminator:\n                                    propertyName: type\n                                    mapping:\n                                      rich: '#/components/schemas/OembedRichData'\n                                      video: '#/components/schemas/OembedVideoData'\n                                      photo: '#/components/schemas/OembedPhotoData'\n                                      link: '#/components/schemas/OembedLinkData'\n                          frame: &id011\n                            discriminator:\n                              propertyName: version\n                            oneOf:\n                            - description: Frame v1 object\n                              allOf:\n                              - &id005\n                                description: Frame base object used across all versions\n                                type: object\n                                required:\n                                - version\n                                - image\n                                - frames_url\n                                properties:\n                                  version:\n                                    type: string\n                                    description: Version of the frame, 'next' for\n                                      v2, 'vNext' for v1\n                                  image:\n                                    type: string\n                                    description: URL of the image\n                                  frames_url:\n                                    type: string\n                                    description: Launch URL of the frame\n                              - type: object\n                                properties:\n                                  buttons:\n                                    type: array\n                                    items:\n                                      type: object\n                                      required:\n                                      - index\n                                      - action_type\n                                      properties:\n                                        title:\n                                          type: string\n                                          description: Title of the button\n                                        index:\n                                          type: integer\n                                          description: Index of the button\n                                        action_type:\n                                          type: string\n                                          description: The action type of a frame\n                                            button. Action types \"mint\" & \"link\" are\n                                            to be handled on the client side only\n                                            and so they will produce a no/op for POST\n                                            /farcaster/frame/action.\n                                          enum:\n                                          - post\n                                          - post_redirect\n                                          - tx\n                                          - link\n                                          - mint\n                                        target:\n                                          type: string\n                                          description: Target of the button\n                                        post_url:\n                                          type: string\n                                          description: Used specifically for the tx\n                                            action type to post a successful transaction\n                                            hash\n                                  post_url:\n                                    type: string\n                                    description: Post URL to take an action on this\n                                      frame\n                                  title:\n                                    type: string\n                                  image_aspect_ratio:\n                                    type: string\n                                  input:\n                                    type: object\n                                    properties:\n                                      text:\n                                        type: string\n                                        description: Input text for the frame\n                                  state:\n                                    type: object\n                                    properties:\n                                      serialized:\n                                        type: string\n                                        description: State for the frame in a serialized\n                                          format\n                            - description: Frame v2 object\n                              allOf:\n                              - *id005\n                              - type: object\n                                required:\n                                - title\n                                - name\n                                - icon\n                                properties:\n                                  manifest:\n                                    type: object\n                                    properties:\n                                      account_association:\n                                        type: object\n                                        properties:\n                                          header:\n                                            type: string\n                                          payload:\n                                            type: string\n                                          signature:\n                                            type: string\n                                        required:\n                                        - header\n                                        - payload\n                                        - signature\n                                      frame:\n                                        type: object\n                                        properties:\n                                          version:\n                                            type: string\n                                            enum:\n                                            - 0.0.0\n                                            - 0.0.", "mimetype": "text/plain", "start_char_idx": 25867, "end_char_idx": 34730, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8ca47cd8-b5de-4f52-a529-3c05633f6625": {"__data__": {"id_": "8ca47cd8-b5de-4f52-a529-3c05633f6625", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "479063a9-72b2-4fef-a8fd-9837d6a5853c", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d0ac3cbd8b4d0f705dc2a66ab9289032f329ef7d4e2c463a25bdb6e2d68e4d3b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "91d28c67-874e-4318-a623-c86cf5ecc401", "node_type": "1", "metadata": {}, "hash": "26d36fbb0caec6026b91aa3ecf03098312b6fd65f2e50432df9195ee34007f99", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                            - 0.0.1\n                                            - '1'\n                                            - next\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                          home_url:\n                                            type: string\n                                            maxLength: 512\n                                          icon_url:\n                                            type: string\n                                            maxLength: 512\n                                          image_url:\n                                            type: string\n                                            maxLength: 512\n                                          button_title:\n                                            type: string\n                                            maxLength: 32\n                                          splash_image_url:\n                                            type: string\n                                            maxLength: 512\n                                          splash_background_color:\n                                            type: string\n                                          webhook_url:\n                                            type: string\n                                            maxLength: 512\n                                        required:\n                                        - version\n                                        - name\n                                        - home_url\n                                        - icon_url\n                                      triggers:\n                                        type: array\n                                        items:\n                                          oneOf:\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - cast\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - composer\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                    required:\n                                    - account_association\n                                  author: &id006\n                                    type: object\n                                    required:\n                                    - object\n                                    - fid\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - user_dehydrated\n                                      fid: *id002\n                                      username:\n                                        type: string\n                                      display_name:\n                                        type: string\n                                      pfp_url:\n                                        type: string\n                            mapping:\n                              vNext: '#/components/schemas/FrameV1'\n                              next: '#/components/schemas/FrameV2'\n                              '1': '#/components/schemas/FrameV2'\n                              0.0.0: '#/components/schemas/FrameV2'\n                              0.0.1: '#/components/schemas/FrameV2'\n                  - type: object\n                    required:\n                    - cast\n                    properties:\n                      cast_id: &id009\n                        type: object\n                        required:\n                        - fid\n                        - hash\n                        properties:\n                          fid: *id002\n                          hash:\n                            type: string\n                      cast:\n                        type: object\n                        required:\n                        - hash\n                        - parent_hash\n                        - parent_url\n                        - root_parent_url\n                        - parent_author\n                        - author\n                        - text\n                        - timestamp\n                        - type\n                        - embeds\n                        - channel\n                        properties:\n                          hash:\n                            type: string\n                          parent_hash:\n                            type:\n                            - string\n                            - 'null'\n                          parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          root_parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          parent_author:\n                            type: object\n                            required:\n                            - fid\n                            properties:\n                              fid:\n                                oneOf:\n                                - type: 'null'\n                                - *id002\n                          author: *id006\n                          text:\n                            type: string\n                          timestamp: *id007\n                          type: &id010\n                            type: string\n                            enum:\n                            - cast-mention\n                            - cast-reply\n                            description: 'The notification type of a cast.\n\n                              '\n                          embeds:\n                            type: array\n                            items:\n                              oneOf:\n                              - *id008\n                              - type: object\n                                required:\n                                - cast\n                                properties:\n                                  cast_id: *id009\n                                  cast: &id014\n                                    type: object\n                                    required:\n                                    - object\n                                    - hash\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - cast_dehydrated\n                                      hash:\n                                        type: string\n                                      author: *id006\n                          channel:\n                            oneOf:\n                            - type: 'null'\n                            - &id013\n                              type: object\n                              required:\n                              - id\n                              - name\n                              - object\n                              properties:\n                                id:\n                                  type: string\n                                name:\n                                  type: string\n                                object:\n                                  type: string\n                                  enum:\n                                  - channel_dehydrated\n                                image_url:\n                                  type: string\n                                viewer_context: &id012\n                                  description: Adds context on the viewer's or author's\n                                    role in the channel.", "mimetype": "text/plain", "start_char_idx": 34676, "end_char_idx": 44266, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "91d28c67-874e-4318-a623-c86cf5ecc401": {"__data__": {"id_": "91d28c67-874e-4318-a623-c86cf5ecc401", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c7eb5e16-a4b3-45d2-979d-0f0c763eff50", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8ca47cd8-b5de-4f52-a529-3c05633f6625", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "8e9fbfe512bef585e1cbb159162501b13cae86e9793d9dba4da045ebe54f0ccf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                                  required:\n                                  - following\n                                  properties:\n                                    following:\n                                      description: Indicates if the user is following\n                                        the channel.\n                                      type: boolean\n                                    role:\n                                      type: string\n                                      description: The role of a channel member\n                                      enum:\n                                      - member\n                                      - moderator\n              type: *id010\n          - type: object\n            required:\n            - reactions\n            - replies\n            - thread_hash\n            - mentioned_profiles\n            - channel\n            properties:\n              frames:\n                type: array\n                items: *id011\n              reactions:\n                type: object\n                required:\n                - likes\n                - recasts\n                - likes_count\n                - recasts_count\n                properties:\n                  likes:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      properties:\n                        fid: *id002\n                  recasts:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      - fname\n                      properties:\n                        fid: *id002\n                        fname:\n                          type: string\n                  likes_count:\n                    type: integer\n                    format: int32\n                  recasts_count:\n                    type: integer\n                    format: int32\n              replies:\n                type: object\n                required:\n                - count\n                properties:\n                  count:\n                    type: integer\n                    format: int32\n              thread_hash:\n                type:\n                - string\n                - 'null'\n              mentioned_profiles:\n                type: array\n                items: *id003\n              channel:\n                oneOf:\n                - oneOf:\n                  - type: object\n                    required:\n                    - id\n                    - url\n                    - object\n                    properties:\n                      id:\n                        type: string\n                      url:\n                        type: string\n                      name:\n                        type: string\n                      description:\n                        type: string\n                      object:\n                        type: string\n                        enum:\n                        - channel\n                      created_at:\n                        description: Epoch timestamp in seconds.\n                        type: number\n                      follower_count:\n                        description: Number of followers the channel has.\n                        type: number\n                      external_link:\n                        type: object\n                        description: Channel's external link.\n                        properties:\n                          title:\n                            type: string\n                          url:\n                            type: string\n                      image_url:\n                        type: string\n                      parent_url:\n                        type: string\n                        format: uri\n                      lead: *id003\n                      moderator_fids:\n                        type: array\n                        items: *id002\n                      member_count:\n                        type: integer\n                        format: int32\n                      moderator: *id003\n                      pinned_cast_hash:\n                        type: string\n                        default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                        description: Cast Hash\n                      hosts:\n                        type: array\n                        deprecated: true\n                        items: *id003\n                      viewer_context: *id012\n                  - *id013\n                  discriminator:\n                    propertyName: object\n                    mapping:\n                      channel: '#/components/schemas/Channel'\n                      dehydrated_channel: '#/components/schemas/DehydratedChannel'\n                - type: 'null'\n              viewer_context:\n                type: object\n                description: Adds context on interactions the viewer has made with\n                  the cast.\n                required:\n                - liked\n                - recasted\n                properties:\n                  liked:\n                    description: Indicates if the viewer liked the cast.\n                    type: boolean\n                  recasted:\n                    description: Indicates if the viewer recasted the cast.\n                    type: boolean\n              author_channel_context: *id012\n        reactions:\n          type: array\n          items:\n            type: object\n            required:\n            - object\n            - cast\n            - user\n            properties:\n              object:\n                type: string\n                enum:\n                - likes\n                - recasts\n              cast: *id014\n              user: *id003\n        count:\n          type: integer\n          format: int32\n          description: The number of notifications of this(follows, likes, recast)\n            type bundled in a single notification.\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 44301, "end_char_idx": 50480, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5020c5c5-bcf8-4620-bba9-a1b6b1fc9cbb": {"__data__": {"id_": "5020c5c5-bcf8-4620-bba9-a1b6b1fc9cbb", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-composer-actions.md", "file_name": "neynar_fetch-composer-actions.md", "file_type": "text/markdown", "file_size": 2132, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4bb52ffe-b46f-49f5-ba16-28fae42cda91", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-composer-actions.md", "file_name": "neynar_fetch-composer-actions.md", "file_type": "text/markdown", "file_size": 2132, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "2a0f1442e457e6c3953ac9cfab265843ce6aedfa1530ba3a76fbf0aa2993b320", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-composer-actions\n\n**Endpoint**: `GET /farcaster/cast/composer_actions/list`\n\n## Description\nFetches all composer actions on Warpcast. You can filter by top or featured.\n\n## Parameters\n- `list` (query): Type of list to fetch.\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nproperties:\n  actions:\n    type: array\n    items:\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the action.\n        icon:\n          type: string\n          description: The icon representing the action.\n        description:\n          type: string\n          description: A brief description of the action.\n        about_url:\n          type: string\n          format: uri\n          description: URL to learn more about the action.\n        image_url:\n          type: string\n          format: uri\n          description: URL of the action's image.\n        action_url:\n          type: string\n          format: uri\n          description: URL to perform the action.\n        action:\n          type: object\n          properties:\n            action_type:\n              type: string\n              description: Type of the action (e.g., post).\n            post_url:\n              type: string\n              format: uri\n              description: URL to post the action.\n        octicon:\n          type: string\n          description: Icon name for the action.\n        added_count:\n          type: integer\n          description: Number of times the action has been added.\n        app_name:\n          type: string\n          description: Name of the application providing the action.\n        author_fid:\n          type: integer\n          description: Author's Farcaster ID.\n        category:\n          type: string\n          description: Category of the action.\n        object:\n          type: string\n          description: Object type, which is \"composer_action\".\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2131, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "975fbbfe-c223-4437-bed8-3199a07b3478": {"__data__": {"id_": "975fbbfe-c223-4437-bed8-3199a07b3478", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4f32464f-b65e-41e6-9a92-cdce7ff313ea", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "e4225998885746169a1b178fd6fdc12ca0bf6cadde6b74155f06d6f7bbf8a606", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a433ea1b-c232-4793-b983-6465f268cc7d", "node_type": "1", "metadata": {}, "hash": "1a4b2e9879c0477a7f6e1dde6b75297993103a5721c83dc7eacaaa033ccf4398", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-embedded-url-metadata\n\n**Endpoint**: `GET /farcaster/cast/embed/crawl`\n\n## Description\nCrawls the given URL and returns metadata useful when embedding the URL in a cast.\n\n## Parameters\n- `url` (query): URL to crawl metadata of\n\n## Response\n```yaml\ntype: object\nrequired:\n- metadata\nproperties:\n  metadata:\n    type: object\n    required:\n    - _status\n    properties:\n      _status:\n        type: string\n      content_type:\n        type:\n        - string\n        - 'null'\n      content_length:\n        type:\n        - integer\n        - 'null'\n      image:\n        type: object\n        properties:\n          height_px:\n            type: integer\n          width_px:\n            type: integer\n      video:\n        type: object\n        properties:\n          duration_s:\n            type: number\n          stream:\n            type: array\n            items:\n              type: object\n              properties:\n                codec_name:\n                  type: string\n                height_px:\n                  type: integer\n                width_px:\n                  type: integer\n      html:\n        allOf:\n        - type: object\n          properties:\n            favicon:\n              type: string\n            modifiedTime:\n              type: string\n            ogArticleAuthor:\n              type: string\n            ogArticleExpirationTime:\n              type: string\n            ogArticleModifiedTime:\n              type: string\n            ogArticlePublishedTime:\n              type: string\n            ogArticlePublisher:\n              type: string\n            ogArticleSection:\n              type: string\n            ogArticleTag:\n              type: string\n            ogAudio:\n              type: string\n            ogAudioSecureURL:\n              type: string\n            ogAudioType:\n              type: string\n            ogAudioURL:\n              type: string\n            ogAvailability:\n              type: string\n            ogDate:\n              type: string\n            ogDescription:\n              type: string\n            ogDeterminer:\n              type: string\n            ogEpisode:\n              type: string\n            ogImage:\n              type: array\n              items:\n                type: object\n                properties:\n                  height:\n                    type: string\n                  type:\n                    type: string\n                  url:\n                    type: string\n                  width:\n                    type: string\n                  alt:\n                    type: string\n                required:\n                - url\n            ogLocale:\n              type: string\n            ogLocaleAlternate:\n              type: string\n            ogLogo:\n              type: string\n            ogMovie:\n              type: string\n            ogPriceAmount:\n              type: string\n            ogPriceCurrency:\n              type: string\n            ogProductAvailability:\n              type: string\n            ogProductCondition:\n              type: string\n            ogProductPriceAmount:\n              type: string\n            ogProductPriceCurrency:\n              type: string\n            ogProductRetailerItemId:\n              type: string\n            ogSiteName:\n              type: string\n            ogTitle:\n              type: string\n            ogType:\n              type: string\n            ogUrl:\n              type: string\n            ogVideo:\n              type: array\n              items:\n                type: object\n                properties:\n                  height:\n                    type: string\n                  type:\n                    type: string\n                  url:\n                    type: string\n                  width:\n                    type: string\n                required:\n                - url\n            ogVideoActor:\n              type: string\n            ogVideoActorId:\n              type: string\n            ogVideoActorRole:\n              type: string\n            ogVideoDirector:\n              type: string\n            ogVideoDuration:\n              type: string\n            ogVideoOther:\n              type: string\n            ogVideoReleaseDate:\n              type: string\n            ogVideoSecureURL:\n              type: string\n            ogVideoSeries:\n              type: string\n            ogVideoTag:\n              type: string\n            ogVideoTvShow:\n              type: string\n            ogVideoWriter:\n              type: string\n            ogWebsite:\n              type: string\n            updatedTime:\n              type: string\n        - type: object\n          properties:\n            oembed:\n              oneOf:\n              - allOf:\n                - &id001\n                  type: object\n                  description: Basic data structure of every oembed response see https://oembed.com/\n                  required:\n                  - type\n                  - version\n                  properties:\n                    type:\n                      type: string\n                    version:\n                      type:\n                      - string\n                      - 'null'\n                    title:\n                      type:\n                      - string\n                      - 'null'\n                      description: A text title, describing the resource.\n                    author_name:\n                      type:\n                      - string\n                      - 'null'\n                      description: The name of the author/owner of the resource.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5529, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a433ea1b-c232-4793-b983-6465f268cc7d": {"__data__": {"id_": "a433ea1b-c232-4793-b983-6465f268cc7d", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4f32464f-b65e-41e6-9a92-cdce7ff313ea", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "e4225998885746169a1b178fd6fdc12ca0bf6cadde6b74155f06d6f7bbf8a606", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "975fbbfe-c223-4437-bed8-3199a07b3478", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "3e5d45f632948a48c5fe0b241a0f9539d2d54992962a841f03ac18f95740a037", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9d320dac-f938-4a5e-8e74-5313e3f70bb4", "node_type": "1", "metadata": {}, "hash": "38a87da7a4c062a6fd23411a1df608dd8d18fff4fd16ba12cb5fe7cb2176ed21", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                      type:\n                      - string\n                      - 'null'\n                      description: The name of the author/owner of the resource.\n                    author_url:\n                      type:\n                      - string\n                      - 'null'\n                      description: A URL for the author/owner of the resource.\n                    provider_name:\n                      type:\n                      - string\n                      - 'null'\n                      description: The name of the resource provider.\n                    provider_url:\n                      type:\n                      - string\n                      - 'null'\n                      description: The url of the resource provider.\n                    cache_age:\n                      type:\n                      - string\n                      - 'null'\n                      description: The suggested cache lifetime for this resource,\n                        in seconds. Consumers may choose to use this value or not.\n                    thumbnail_url:\n                      type:\n                      - string\n                      - 'null'\n                      description: A URL to a thumbnail image representing the resource.\n                        The thumbnail must respect any maxwidth and maxheight parameters.\n                        If this parameter is present, thumbnail_width and thumbnail_height\n                        must also be present.\n                    thumbnail_width:\n                      type:\n                      - number\n                      - 'null'\n                      description: The width of the optional thumbnail. If this parameter\n                        is present, thumbnail_url and thumbnail_height must also be\n                        present.\n                    thumbnail_height:\n                      type:\n                      - number\n                      - 'null'\n                      description: The height of the optional thumbnail. If this parameter\n                        is present, thumbnail_url and thumbnail_width must also be\n                        present.\n                - type: object\n                  required:\n                  - type\n                  - html\n                  - width\n                  - height\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                      - rich\n                    html:\n                      type:\n                      - string\n                      - 'null'\n                      description: The HTML required to display the resource. The\n                        HTML should have no padding or margins. Consumers may wish\n                        to load the HTML in an off-domain iframe to avoid XSS vulnerabilities.\n                        The markup should be valid XHTML 1.0 Basic.\n                    width:\n                      type:\n                      - number\n                      - 'null'\n                      description: The width in pixels required to display the HTML.\n                    height:\n                      type:\n                      - number\n                      - 'null'\n                      description: The height in pixels required to display the HTML.\n              - allOf:\n                - *id001\n                - type: object\n                  required:\n                  - type\n                  - html\n                  - width\n                  - height\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                      - video\n                    html:\n                      type:\n                      - string\n                      - 'null'\n                      description: The HTML required to embed a video player. The\n                        HTML should have no padding or margins. Consumers may wish\n                        to load the HTML in an off-domain iframe to avoid XSS vulnerabilities.\n                    width:\n                      type:\n                      - number\n                      - 'null'\n                      description: The width in pixels required to display the HTML.\n                    height:\n                      type:\n                      - number\n                      - 'null'\n                      description: The height in pixels required to display the HTML.\n              - allOf:\n                - *id001\n                - type: object\n                  required:\n                  - type\n                  - url\n                  - width\n                  - height\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                      - photo\n                    url:\n                      type:\n                      - string\n                      - 'null'\n                      description: The source URL of the image. Consumers should be\n                        able to insert this URL into an <img> element. Only HTTP and\n                        HTTPS URLs are valid.\n                    width:\n                      type:\n                      - number\n                      - 'null'\n                      description: The width in pixels of the image specified in the\n                        url parameter.\n                    height:\n                      type:\n                      - number\n                      - 'null'\n                      description: The height in pixels of the image specified in\n                        the url parameter.", "mimetype": "text/plain", "start_char_idx": 5346, "end_char_idx": 10988, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9d320dac-f938-4a5e-8e74-5313e3f70bb4": {"__data__": {"id_": "9d320dac-f938-4a5e-8e74-5313e3f70bb4", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4f32464f-b65e-41e6-9a92-cdce7ff313ea", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "e4225998885746169a1b178fd6fdc12ca0bf6cadde6b74155f06d6f7bbf8a606", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a433ea1b-c232-4793-b983-6465f268cc7d", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "373c8865109b46a1bc664795b2b3b23ce21cfeafc66b58d7ffce6ce115e271df", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b156501d-6ff0-4ea1-a023-742be0cebd2d", "node_type": "1", "metadata": {}, "hash": "58af2f54b867ebdcdfe7d1c3516888ec4edfc9a4803bcfda97bb6c0cc3ff0679", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                - *id001\n                - type: object\n                  required:\n                  - type\n                  - url\n                  - width\n                  - height\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                      - photo\n                    url:\n                      type:\n                      - string\n                      - 'null'\n                      description: The source URL of the image. Consumers should be\n                        able to insert this URL into an <img> element. Only HTTP and\n                        HTTPS URLs are valid.\n                    width:\n                      type:\n                      - number\n                      - 'null'\n                      description: The width in pixels of the image specified in the\n                        url parameter.\n                    height:\n                      type:\n                      - number\n                      - 'null'\n                      description: The height in pixels of the image specified in\n                        the url parameter.\n              - allOf:\n                - *id001\n                - type: object\n                  required:\n                  - type\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                      - link\n              discriminator:\n                propertyName: type\n                mapping:\n                  rich: '#/components/schemas/OembedRichData'\n                  video: '#/components/schemas/OembedVideoData'\n                  photo: '#/components/schemas/OembedPhotoData'\n                  link: '#/components/schemas/OembedLinkData'\n      frame:\n        discriminator:\n          propertyName: version\n        oneOf:\n        - description: Frame v1 object\n          allOf:\n          - &id002\n            description: Frame base object used across all versions\n            type: object\n            required:\n            - version\n            - image\n            - frames_url\n            properties:\n              version:\n                type: string\n                description: Version of the frame, 'next' for v2, 'vNext' for v1\n              image:\n                type: string\n                description: URL of the image\n              frames_url:\n                type: string\n                description: Launch URL of the frame\n          - type: object\n            properties:\n              buttons:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - index\n                  - action_type\n                  properties:\n                    title:\n                      type: string\n                      description: Title of the button\n                    index:\n                      type: integer\n                      description: Index of the button\n                    action_type:\n                      type: string\n                      description: The action type of a frame button. Action types\n                        \"mint\" & \"link\" are to be handled on the client side only\n                        and so they will produce a no/op for POST /farcaster/frame/action.", "mimetype": "text/plain", "start_char_idx": 9831, "end_char_idx": 13139, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b156501d-6ff0-4ea1-a023-742be0cebd2d": {"__data__": {"id_": "b156501d-6ff0-4ea1-a023-742be0cebd2d", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4f32464f-b65e-41e6-9a92-cdce7ff313ea", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "e4225998885746169a1b178fd6fdc12ca0bf6cadde6b74155f06d6f7bbf8a606", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d320dac-f938-4a5e-8e74-5313e3f70bb4", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "c0e2815393e3962297c0fb597b36ce37a86a29b564a00dea88b0e25f94d571cc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Action types\n                        \"mint\" & \"link\" are to be handled on the client side only\n                        and so they will produce a no/op for POST /farcaster/frame/action.\n                      enum:\n                      - post\n                      - post_redirect\n                      - tx\n                      - link\n                      - mint\n                    target:\n                      type: string\n                      description: Target of the button\n                    post_url:\n                      type: string\n                      description: Used specifically for the tx action type to post\n                        a successful transaction hash\n              post_url:\n                type: string\n                description: Post URL to take an action on this frame\n              title:\n                type: string\n              image_aspect_ratio:\n                type: string\n              input:\n                type: object\n                properties:\n                  text:\n                    type: string\n                    description: Input text for the frame\n              state:\n                type: object\n                properties:\n                  serialized:\n                    type: string\n                    description: State for the frame in a serialized format\n        - description: Frame v2 object\n          allOf:\n          - *id002\n          - type: object\n            required:\n            - title\n            - name\n            - icon\n            properties:\n              manifest:\n                type: object\n                properties:\n                  account_association:\n                    type: object\n                    properties:\n                      header:\n                        type: string\n                      payload:\n                        type: string\n                      signature:\n                        type: string\n                    required:\n                    - header\n                    - payload\n                    - signature\n                  frame:\n                    type: object\n                    properties:\n                      version:\n                        type: string\n                        enum:\n                        - 0.0.0\n                        - 0.0.1\n                        - '1'\n                        - next\n                      name:\n                        type: string\n                        maxLength: 32\n                      home_url:\n                        type: string\n                        maxLength: 512\n                      icon_url:\n                        type: string\n                        maxLength: 512\n                      image_url:\n                        type: string\n                        maxLength: 512\n                      button_title:\n                        type: string\n                        maxLength: 32\n                      splash_image_url:\n                        type: string\n                        maxLength: 512\n                      splash_background_color:\n                        type: string\n                      webhook_url:\n                        type: string\n                        maxLength: 512\n                    required:\n                    - version\n                    - name\n                    - home_url\n                    - icon_url\n                  triggers:\n                    type: array\n                    items:\n                      oneOf:\n                      - type: object\n                        properties:\n                          type:\n                            type: string\n                            enum:\n                            - cast\n                          id:\n                            type: string\n                          url:\n                            type: string\n                            maxLength: 512\n                          name:\n                            type: string\n                            maxLength: 32\n                        required:\n                        - type\n                        - id\n                        - url\n                      - type: object\n                        properties:\n                          type:\n                            type: string\n                            enum:\n                            - composer\n                          id:\n                            type: string\n                          url:\n                            type: string\n                            maxLength: 512\n                          name:\n                            type: string\n                            maxLength: 32\n                        required:\n                        - type\n                        - id\n                        - url\n                required:\n                - account_association\n              author:\n                type: object\n                required:\n                - object\n                - fid\n                properties:\n                  object:\n                    type: string\n                    enum:\n                    - user_dehydrated\n                  fid:\n                    type: integer\n                    format: int32\n                    description: The unique identifier of a farcaster user (unsigned\n                      integer)\n                    examples:\n                    - 3\n                    - 191\n                    - 2\n                    - 194\n                    - 19960\n                  username:\n                    type: string\n                  display_name:\n                    type: string\n                  pfp_url:\n                    type: string\n        mapping:\n          vNext: '#/components/schemas/FrameV1'\n          next: '#/components/schemas/FrameV2'\n          '1': '#/components/schemas/FrameV2'\n          0.0.0: '#/components/schemas/FrameV2'\n          0.0.1: '#/components/schemas/FrameV2'\n```", "mimetype": "text/plain", "start_char_idx": 12954, "end_char_idx": 18862, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a5c075f8-2c2a-4b8b-afb3-77cc5b42ae03": {"__data__": {"id_": "a5c075f8-2c2a-4b8b-afb3-77cc5b42ae03", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5b06faa0-7f52-4c18-bd34-af9b4a9ea686", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "deae3f2702c68fb55a1c2e58ef4c5795f9b980d301e244f90a1cb6c3dbcd08b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "50e9e701-b63a-4adb-a9b9-13401b0a6950", "node_type": "1", "metadata": {}, "hash": "276d9829bd28ca7c832cf3651919d5f3d9662484a0269ecacb934ce07c8af95d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-feed-by-channel-ids\n\n**Endpoint**: `GET /farcaster/feed/channels`\n\n## Description\nFetch feed based on channel IDs\n\n## Parameters\n- `channel_ids` (query): Comma separated list of up to 10 channel IDs e.g. neynar,farcaster\n- `with_recasts` (query): Include recasts in the response, true by default\n- `viewer_fid` (query): Providing this will return a feed that respects this user's mutes and blocks and includes `viewer_context`.\n- `with_replies` (query): Include replies in the response, false by default\n- `members_only` (query): Only include casts from members of the channel. True by default.\n- `fids` (query): Comma separated list of FIDs to filter the feed by, up to 10 at a time\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n- `should_moderate` (query): If true, only casts that have been liked by the moderator (if one exists) will be returned.\n\n## Response\n```yaml\ntype: object\nrequired:\n- casts\n- next\nproperties:\n  casts:\n    type: array\n    items:\n      allOf:\n      - type: object\n        required:\n        - hash\n        - parent_hash\n        - parent_url\n        - root_parent_url\n        - parent_author\n        - author\n        - text\n        - timestamp\n        - embeds\n        properties:\n          hash:\n            type: string\n          parent_hash:\n            type:\n            - string\n            - 'null'\n          parent_url:\n            type:\n            - string\n            - 'null'\n          root_parent_url:\n            type:\n            - string\n            - 'null'\n          parent_author:\n            type: object\n            required:\n            - fid\n            properties:\n              fid:\n                oneOf:\n                - type: 'null'\n                - &id001\n                  type: integer\n                  format: int32\n                  description: The unique identifier of a farcaster user (unsigned\n                    integer)\n                  examples:\n                  - 3\n                  - 191\n                  - 2\n                  - 194\n                  - 19960\n          author: &id011\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: *id001\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id002\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5542, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "50e9e701-b63a-4adb-a9b9-13401b0a6950": {"__data__": {"id_": "50e9e701-b63a-4adb-a9b9-13401b0a6950", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5b06faa0-7f52-4c18-bd34-af9b4a9ea686", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "deae3f2702c68fb55a1c2e58ef4c5795f9b980d301e244f90a1cb6c3dbcd08b0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a5c075f8-2c2a-4b8b-afb3-77cc5b42ae03", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "e2397fe6c60ca3b865a3270134859059f1c2a9a6ba4092c3942114defa993473", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "63169379-b403-4430-a4da-98f0ddcda751", "node_type": "1", "metadata": {}, "hash": "fe0df8fb809538d41413faf06c0a270674cb9253987f2f1009b522ab38419e14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 4925, "end_char_idx": 7748, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "63169379-b403-4430-a4da-98f0ddcda751": {"__data__": {"id_": "63169379-b403-4430-a4da-98f0ddcda751", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5b06faa0-7f52-4c18-bd34-af9b4a9ea686", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "deae3f2702c68fb55a1c2e58ef4c5795f9b980d301e244f90a1cb6c3dbcd08b0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "50e9e701-b63a-4adb-a9b9-13401b0a6950", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "02f0ae0c02954a5b0854eaff6d6c93616d07993e22cb1111a95a998770143c44", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0b292042-67de-4ed2-a1b8-539b4fcad411", "node_type": "1", "metadata": {}, "hash": "7693468d1bce4d6458a0c00eb5858d0c52e0d3acfd9f809418886132f3cd260d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          text:\n            type: string\n          timestamp: &id006\n            type: string\n            format: date-time\n          embeds:\n            type: array\n            items:\n              oneOf:\n              - &id007\n                type: object\n                required:\n                - url\n                properties:\n                  url:\n                    type: string\n                  metadata:\n                    type: object\n                    required:\n                    - _status\n                    properties:\n                      _status:\n                        type: string\n                      content_type:\n                        type:\n                        - string\n                        - 'null'\n                      content_length:\n                        type:\n                        - integer\n                        - 'null'\n                      image:\n                        type: object\n                        properties:\n                          height_px:\n                            type: integer\n                          width_px:\n                            type: integer\n                      video:\n                        type: object\n                        properties:\n                          duration_s:\n                            type: number\n                          stream:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                codec_name:\n                                  type: string\n                                height_px:\n                                  type: integer\n                                width_px:\n                                  type: integer\n                      html:\n                        allOf:\n                        - type: object\n                          properties:\n                            favicon:\n                              type: string\n                            modifiedTime:\n                              type: string\n                            ogArticleAuthor:\n                              type: string\n                            ogArticleExpirationTime:\n                              type: string\n                            ogArticleModifiedTime:\n                              type: string\n                            ogArticlePublishedTime:\n                              type: string\n                            ogArticlePublisher:\n                              type: string\n                            ogArticleSection:\n                              type: string\n                            ogArticleTag:\n                              type: string\n                            ogAudio:\n                              type: string\n                            ogAudioSecureURL:\n                              type: string\n                            ogAudioType:\n                              type: string\n                            ogAudioURL:\n                              type: string\n                            ogAvailability:\n                              type: string\n                            ogDate:\n                              type: string\n                            ogDescription:\n                              type: string\n                            ogDeterminer:\n                              type: string\n                            ogEpisode:\n                              type: string\n                            ogImage:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                  alt:\n                                    type: string\n                                required:\n                                - url\n                            ogLocale:\n                              type: string\n                            ogLocaleAlternate:\n                              type: string\n                            ogLogo:\n                              type: string\n                            ogMovie:\n                              type: string\n                            ogPriceAmount:\n                              type: string\n                            ogPriceCurrency:\n                              type: string\n                            ogProductAvailability:\n                              type: string\n                            ogProductCondition:\n                              type: string\n                            ogProductPriceAmount:\n                              type: string\n                            ogProductPriceCurrency:\n                              type: string\n                            ogProductRetailerItemId:\n                              type: string\n                            ogSiteName:\n                              type: string\n                            ogTitle:\n                              type: string\n                            ogType:\n                              type: string\n                            ogUrl:\n                              type: string\n                            ogVideo:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                required:\n                                - url\n                            ogVideoActor:\n                              type: string\n                            ogVideoActorId:\n                              type: string\n                            ogVideoActorRole:\n                              type: string\n                            ogVideoDirector:\n                              type: string\n                            ogVideoDuration:\n                              type: string\n                            ogVideoOther:\n                              type: string\n                            ogVideoReleaseDate:\n                              type: string\n                            ogVideoSecureURL:\n                              type: string\n                            ogVideoSeries:\n                              type: string\n                            ogVideoTag:\n                              type: string\n                            ogVideoTvShow:\n                              type: string\n                            ogVideoWriter:\n                              type: string\n                            ogWebsite:\n                              type: string\n                            updatedTime:\n                              type: string\n                        - type: object\n                          properties:\n                            oembed:\n                              oneOf:\n                              - allOf:\n                                - &id003\n                                  type: object\n                                  description: Basic data structure of every oembed\n                                    response see https://oembed.com/\n                                  required:\n                                  - type\n                                  - version\n                                  properties:\n                                    type:\n                                      type: string\n                                    version:\n                                      type:\n                                      - string\n                                      - 'null'\n                                    title:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A text title, describing the resource.", "mimetype": "text/plain", "start_char_idx": 6883, "end_char_idx": 16288, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0b292042-67de-4ed2-a1b8-539b4fcad411": {"__data__": {"id_": "0b292042-67de-4ed2-a1b8-539b4fcad411", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5b06faa0-7f52-4c18-bd34-af9b4a9ea686", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "deae3f2702c68fb55a1c2e58ef4c5795f9b980d301e244f90a1cb6c3dbcd08b0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "63169379-b403-4430-a4da-98f0ddcda751", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "af6cba188555cf007d42e11cef64f5e5cb8624a18688c75b89d79085767e4548", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c453bb53-2b3f-4417-ac8d-aebe97791352", "node_type": "1", "metadata": {}, "hash": "02bb5551c6319ad9c9e131ba050e77c2a58a5756c4a5f538be3d18d6c2b844c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the author/owner of\n                                        the resource.\n                                    author_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL for the author/owner of the\n                                        resource.\n                                    provider_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the resource provider.\n                                    provider_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The url of the resource provider.\n                                    cache_age:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The suggested cache lifetime for\n                                        this resource, in seconds. Consumers may choose\n                                        to use this value or not.\n                                    thumbnail_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL to a thumbnail image representing\n                                        the resource. The thumbnail must respect any\n                                        maxwidth and maxheight parameters. If this\n                                        parameter is present, thumbnail_width and\n                                        thumbnail_height must also be present.\n                                    thumbnail_width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_height must also be present.\n                                    thumbnail_height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_width must also be present.\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - rich\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to display the\n                                        resource. The HTML should have no padding\n                                        or margins. Consumers may wish to load the\n                                        HTML in an off-domain iframe to avoid XSS\n                                        vulnerabilities. The markup should be valid\n                                        XHTML 1.0 Basic.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - video\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to embed a video\n                                        player. The HTML should have no padding or\n                                        margins. Consumers may wish to load the HTML\n                                        in an off-domain iframe to avoid XSS vulnerabilities.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 16325, "end_char_idx": 24655, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c453bb53-2b3f-4417-ac8d-aebe97791352": {"__data__": {"id_": "c453bb53-2b3f-4417-ac8d-aebe97791352", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5b06faa0-7f52-4c18-bd34-af9b4a9ea686", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "deae3f2702c68fb55a1c2e58ef4c5795f9b980d301e244f90a1cb6c3dbcd08b0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b292042-67de-4ed2-a1b8-539b4fcad411", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "7c4d72e17ddc6e437ce27043f8e6e59d95b8589807bb9eb4a8c9d2a0eb6abf38", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "50da09b0-e801-4283-8c10-f121c4c90b43", "node_type": "1", "metadata": {}, "hash": "4bf0e8989166b44509d34059a21981076b724bc3fd8b9c3a31d03109f5c8881a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - link\n                              discriminator:\n                                propertyName: type\n                                mapping:\n                                  rich: '#/components/schemas/OembedRichData'\n                                  video: '#/components/schemas/OembedVideoData'\n                                  photo: '#/components/schemas/OembedPhotoData'\n                                  link: '#/components/schemas/OembedLinkData'\n                      frame: &id010\n                        discriminator:\n                          propertyName: version\n                        oneOf:\n                        - description: Frame v1 object\n                          allOf:\n                          - &id004\n                            description: Frame base object used across all versions\n                            type: object\n                            required:\n                            - version\n                            - image\n                            - frames_url\n                            properties:\n                              version:\n                                type: string\n                                description: Version of the frame, 'next' for v2,\n                                  'vNext' for v1\n                              image:\n                                type: string\n                                description: URL of the image\n                              frames_url:\n                                type: string\n                                description: Launch URL of the frame\n                          - type: object\n                            properties:\n                              buttons:\n                                type: array\n                                items:\n                                  type: object\n                                  required:\n                                  - index\n                                  - action_type\n                                  properties:\n                                    title:\n                                      type: string\n                                      description: Title of the button\n                                    index:\n                                      type: integer\n                                      description: Index of the button\n                                    action_type:\n                                      type: string\n                                      description: The action type of a frame button.\n                                        Action types \"mint\" & \"link\" are to be handled\n                                        on the client side only and so they will produce\n                                        a no/op for POST /farcaster/frame/action.\n                                      enum:\n                                      - post\n                                      - post_redirect\n                                      - tx\n                                      - link\n                                      - mint\n                                    target:\n                                      type: string\n                                      description: Target of the button\n                                    post_url:\n                                      type: string\n                                      description: Used specifically for the tx action\n                                        type to post a successful transaction hash\n                              post_url:\n                                type: string\n                                description: Post URL to take an action on this frame\n                              title:\n                                type: string\n                              image_aspect_ratio:\n                                type: string\n                              input:\n                                type: object\n                                properties:\n                                  text:\n                                    type: string\n                                    description: Input text for the frame\n                              state:\n                                type: object\n                                properties:\n                                  serialized:\n                                    type: string\n                                    description: State for the frame in a serialized\n                                      format\n                        - description: Frame v2 object\n                          allOf:\n                          - *id004\n                          - type: object\n                            required:\n                            - title\n                            - name\n                            - icon\n                            properties:\n                              manifest:\n                                type: object\n                                properties:\n                                  account_association:\n                                    type: object\n                                    properties:\n                                      header:\n                                        type: string\n                                      payload:\n                                        type: string\n                                      signature:\n                                        type: string\n                                    required:\n                                    - header\n                                    - payload\n                                    - signature\n                                  frame:\n                                    type: object\n                                    properties:\n                                      version:\n                                        type: string\n                                        enum:\n                                        - 0.0.0\n                                        - 0.0.", "mimetype": "text/plain", "start_char_idx": 22962, "end_char_idx": 31055, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "50da09b0-e801-4283-8c10-f121c4c90b43": {"__data__": {"id_": "50da09b0-e801-4283-8c10-f121c4c90b43", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5b06faa0-7f52-4c18-bd34-af9b4a9ea686", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "deae3f2702c68fb55a1c2e58ef4c5795f9b980d301e244f90a1cb6c3dbcd08b0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c453bb53-2b3f-4417-ac8d-aebe97791352", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "ab786e565eee507bcbccb1507f26710646d22ef2d9cf7ee2fc4b4731305761f9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bef25572-2a77-4ab6-b4e0-3dece54b4e8f", "node_type": "1", "metadata": {}, "hash": "256dbc3a053302772e68551d3c8ed80cd3cc87d6cacee7a7b90bcf151cedcd80", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                        - 0.0.1\n                                        - '1'\n                                        - next\n                                      name:\n                                        type: string\n                                        maxLength: 32\n                                      home_url:\n                                        type: string\n                                        maxLength: 512\n                                      icon_url:\n                                        type: string\n                                        maxLength: 512\n                                      image_url:\n                                        type: string\n                                        maxLength: 512\n                                      button_title:\n                                        type: string\n                                        maxLength: 32\n                                      splash_image_url:\n                                        type: string\n                                        maxLength: 512\n                                      splash_background_color:\n                                        type: string\n                                      webhook_url:\n                                        type: string\n                                        maxLength: 512\n                                    required:\n                                    - version\n                                    - name\n                                    - home_url\n                                    - icon_url\n                                  triggers:\n                                    type: array\n                                    items:\n                                      oneOf:\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - cast\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - composer\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                required:\n                                - account_association\n                              author: &id005\n                                type: object\n                                required:\n                                - object\n                                - fid\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - user_dehydrated\n                                  fid: *id001\n                                  username:\n                                    type: string\n                                  display_name:\n                                    type: string\n                                  pfp_url:\n                                    type: string\n                        mapping:\n                          vNext: '#/components/schemas/FrameV1'\n                          next: '#/components/schemas/FrameV2'\n                          '1': '#/components/schemas/FrameV2'\n                          0.0.0: '#/components/schemas/FrameV2'\n                          0.0.1: '#/components/schemas/FrameV2'\n              - type: object\n                required:\n                - cast\n                properties:\n                  cast_id: &id008\n                    type: object\n                    required:\n                    - fid\n                    - hash\n                    properties:\n                      fid: *id001\n                      hash:\n                        type: string\n                  cast:\n                    type: object\n                    required:\n                    - hash\n                    - parent_hash\n                    - parent_url\n                    - root_parent_url\n                    - parent_author\n                    - author\n                    - text\n                    - timestamp\n                    - type\n                    - embeds\n                    - channel\n                    properties:\n                      hash:\n                        type: string\n                      parent_hash:\n                        type:\n                        - string\n                        - 'null'\n                      parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      root_parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      parent_author:\n                        type: object\n                        required:\n                        - fid\n                        properties:\n                          fid:\n                            oneOf:\n                            - type: 'null'\n                            - *id001\n                      author: *id005\n                      text:\n                        type: string\n                      timestamp: *id006\n                      type: &id009\n                        type: string\n                        enum:\n                        - cast-mention\n                        - cast-reply\n                        description: 'The notification type of a cast.\n\n                          '\n                      embeds:\n                        type: array\n                        items:\n                          oneOf:\n                          - *id007\n                          - type: object\n                            required:\n                            - cast\n                            properties:\n                              cast_id: *id008\n                              cast:\n                                type: object\n                                required:\n                                - object\n                                - hash\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - cast_dehydrated\n                                  hash:\n                                    type: string\n                                  author: *id005\n                      channel:\n                        oneOf:\n                        - type: 'null'\n                        - &id013\n                          type: object\n                          required:\n                          - id\n                          - name\n                          - object\n                          properties:\n                            id:\n                              type: string\n                            name:\n                              type: string\n                            object:\n                              type: string\n                              enum:\n                              - channel_dehydrated\n                            image_url:\n                              type: string\n                            viewer_context: &id012\n                              description: Adds context on the viewer's or author's\n                                role in the channel.", "mimetype": "text/plain", "start_char_idx": 31005, "end_char_idx": 39772, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bef25572-2a77-4ab6-b4e0-3dece54b4e8f": {"__data__": {"id_": "bef25572-2a77-4ab6-b4e0-3dece54b4e8f", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5b06faa0-7f52-4c18-bd34-af9b4a9ea686", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "deae3f2702c68fb55a1c2e58ef4c5795f9b980d301e244f90a1cb6c3dbcd08b0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "50da09b0-e801-4283-8c10-f121c4c90b43", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "8ab300ee1a65d302bbde19f58f424ef43a3016ce920ce4c4678600db2b08406d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                              required:\n                              - following\n                              properties:\n                                following:\n                                  description: Indicates if the user is following\n                                    the channel.\n                                  type: boolean\n                                role:\n                                  type: string\n                                  description: The role of a channel member\n                                  enum:\n                                  - member\n                                  - moderator\n          type: *id009\n      - type: object\n        required:\n        - reactions\n        - replies\n        - thread_hash\n        - mentioned_profiles\n        - channel\n        properties:\n          frames:\n            type: array\n            items: *id010\n          reactions:\n            type: object\n            required:\n            - likes\n            - recasts\n            - likes_count\n            - recasts_count\n            properties:\n              likes:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  properties:\n                    fid: *id001\n              recasts:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  - fname\n                  properties:\n                    fid: *id001\n                    fname:\n                      type: string\n              likes_count:\n                type: integer\n                format: int32\n              recasts_count:\n                type: integer\n                format: int32\n          replies:\n            type: object\n            required:\n            - count\n            properties:\n              count:\n                type: integer\n                format: int32\n          thread_hash:\n            type:\n            - string\n            - 'null'\n          mentioned_profiles:\n            type: array\n            items: *id011\n          channel:\n            oneOf:\n            - oneOf:\n              - type: object\n                required:\n                - id\n                - url\n                - object\n                properties:\n                  id:\n                    type: string\n                  url:\n                    type: string\n                  name:\n                    type: string\n                  description:\n                    type: string\n                  object:\n                    type: string\n                    enum:\n                    - channel\n                  created_at:\n                    description: Epoch timestamp in seconds.\n                    type: number\n                  follower_count:\n                    description: Number of followers the channel has.\n                    type: number\n                  external_link:\n                    type: object\n                    description: Channel's external link.\n                    properties:\n                      title:\n                        type: string\n                      url:\n                        type: string\n                  image_url:\n                    type: string\n                  parent_url:\n                    type: string\n                    format: uri\n                  lead: *id011\n                  moderator_fids:\n                    type: array\n                    items: *id001\n                  member_count:\n                    type: integer\n                    format: int32\n                  moderator: *id011\n                  pinned_cast_hash:\n                    type: string\n                    default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                    description: Cast Hash\n                  hosts:\n                    type: array\n                    deprecated: true\n                    items: *id011\n                  viewer_context: *id012\n              - *id013\n              discriminator:\n                propertyName: object\n                mapping:\n                  channel: '#/components/schemas/Channel'\n                  dehydrated_channel: '#/components/schemas/DehydratedChannel'\n            - type: 'null'\n          viewer_context:\n            type: object\n            description: Adds context on interactions the viewer has made with the\n              cast.\n            required:\n            - liked\n            - recasted\n            properties:\n              liked:\n                description: Indicates if the viewer liked the cast.\n                type: boolean\n              recasted:\n                description: Indicates if the viewer recasted the cast.\n                type: boolean\n          author_channel_context: *id012\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 39803, "end_char_idx": 44812, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2d229f0f-d836-4864-859f-1618decc0d2d": {"__data__": {"id_": "2d229f0f-d836-4864-859f-1618decc0d2d", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4546f37a-6116-4f95-b1cc-d1c1c6d3c197", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f6fbe03a9abd15d7e0b974dad5d3fca8061a50213aba41802d067292533bf06e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d42d3feb-9822-4239-a18c-b93c98854906", "node_type": "1", "metadata": {}, "hash": "276d9829bd28ca7c832cf3651919d5f3d9662484a0269ecacb934ce07c8af95d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-feed-by-parent-urls\n\n**Endpoint**: `GET /farcaster/feed/parent_urls`\n\n## Description\nFetch feed based on parent URLs\n\n## Parameters\n- `parent_urls` (query): Comma separated list of parent_urls\n- `with_recasts` (query): Include recasts in the response, true by default\n- `viewer_fid` (query): Providing this will return a feed that respects this user's mutes and blocks and includes `viewer_context`.\n- `with_replies` (query): Include replies in the response, false by default\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- casts\n- next\nproperties:\n  casts:\n    type: array\n    items:\n      allOf:\n      - type: object\n        required:\n        - hash\n        - parent_hash\n        - parent_url\n        - root_parent_url\n        - parent_author\n        - author\n        - text\n        - timestamp\n        - embeds\n        properties:\n          hash:\n            type: string\n          parent_hash:\n            type:\n            - string\n            - 'null'\n          parent_url:\n            type:\n            - string\n            - 'null'\n          root_parent_url:\n            type:\n            - string\n            - 'null'\n          parent_author:\n            type: object\n            required:\n            - fid\n            properties:\n              fid:\n                oneOf:\n                - type: 'null'\n                - &id001\n                  type: integer\n                  format: int32\n                  description: The unique identifier of a farcaster user (unsigned\n                    integer)\n                  examples:\n                  - 3\n                  - 191\n                  - 2\n                  - 194\n                  - 19960\n          author: &id011\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: *id001\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id002\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5446, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d42d3feb-9822-4239-a18c-b93c98854906": {"__data__": {"id_": "d42d3feb-9822-4239-a18c-b93c98854906", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4546f37a-6116-4f95-b1cc-d1c1c6d3c197", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f6fbe03a9abd15d7e0b974dad5d3fca8061a50213aba41802d067292533bf06e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2d229f0f-d836-4864-859f-1618decc0d2d", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "e5b4289089c7bee54b0c31495d9021e0f1cf2097808ddb9114bd516edc2617a6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "da90dd0f-d760-4850-bfa0-19742a9d2edb", "node_type": "1", "metadata": {}, "hash": "fe0df8fb809538d41413faf06c0a270674cb9253987f2f1009b522ab38419e14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 4596, "end_char_idx": 7419, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "da90dd0f-d760-4850-bfa0-19742a9d2edb": {"__data__": {"id_": "da90dd0f-d760-4850-bfa0-19742a9d2edb", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4546f37a-6116-4f95-b1cc-d1c1c6d3c197", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f6fbe03a9abd15d7e0b974dad5d3fca8061a50213aba41802d067292533bf06e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d42d3feb-9822-4239-a18c-b93c98854906", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "2c4a7be2421f32c932c38e73de896b174feaca1a9298f4167b3520524b79f6f6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "590a69e2-5038-4c8b-82ca-0cf17add0c62", "node_type": "1", "metadata": {}, "hash": "7693468d1bce4d6458a0c00eb5858d0c52e0d3acfd9f809418886132f3cd260d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          text:\n            type: string\n          timestamp: &id006\n            type: string\n            format: date-time\n          embeds:\n            type: array\n            items:\n              oneOf:\n              - &id007\n                type: object\n                required:\n                - url\n                properties:\n                  url:\n                    type: string\n                  metadata:\n                    type: object\n                    required:\n                    - _status\n                    properties:\n                      _status:\n                        type: string\n                      content_type:\n                        type:\n                        - string\n                        - 'null'\n                      content_length:\n                        type:\n                        - integer\n                        - 'null'\n                      image:\n                        type: object\n                        properties:\n                          height_px:\n                            type: integer\n                          width_px:\n                            type: integer\n                      video:\n                        type: object\n                        properties:\n                          duration_s:\n                            type: number\n                          stream:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                codec_name:\n                                  type: string\n                                height_px:\n                                  type: integer\n                                width_px:\n                                  type: integer\n                      html:\n                        allOf:\n                        - type: object\n                          properties:\n                            favicon:\n                              type: string\n                            modifiedTime:\n                              type: string\n                            ogArticleAuthor:\n                              type: string\n                            ogArticleExpirationTime:\n                              type: string\n                            ogArticleModifiedTime:\n                              type: string\n                            ogArticlePublishedTime:\n                              type: string\n                            ogArticlePublisher:\n                              type: string\n                            ogArticleSection:\n                              type: string\n                            ogArticleTag:\n                              type: string\n                            ogAudio:\n                              type: string\n                            ogAudioSecureURL:\n                              type: string\n                            ogAudioType:\n                              type: string\n                            ogAudioURL:\n                              type: string\n                            ogAvailability:\n                              type: string\n                            ogDate:\n                              type: string\n                            ogDescription:\n                              type: string\n                            ogDeterminer:\n                              type: string\n                            ogEpisode:\n                              type: string\n                            ogImage:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                  alt:\n                                    type: string\n                                required:\n                                - url\n                            ogLocale:\n                              type: string\n                            ogLocaleAlternate:\n                              type: string\n                            ogLogo:\n                              type: string\n                            ogMovie:\n                              type: string\n                            ogPriceAmount:\n                              type: string\n                            ogPriceCurrency:\n                              type: string\n                            ogProductAvailability:\n                              type: string\n                            ogProductCondition:\n                              type: string\n                            ogProductPriceAmount:\n                              type: string\n                            ogProductPriceCurrency:\n                              type: string\n                            ogProductRetailerItemId:\n                              type: string\n                            ogSiteName:\n                              type: string\n                            ogTitle:\n                              type: string\n                            ogType:\n                              type: string\n                            ogUrl:\n                              type: string\n                            ogVideo:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                required:\n                                - url\n                            ogVideoActor:\n                              type: string\n                            ogVideoActorId:\n                              type: string\n                            ogVideoActorRole:\n                              type: string\n                            ogVideoDirector:\n                              type: string\n                            ogVideoDuration:\n                              type: string\n                            ogVideoOther:\n                              type: string\n                            ogVideoReleaseDate:\n                              type: string\n                            ogVideoSecureURL:\n                              type: string\n                            ogVideoSeries:\n                              type: string\n                            ogVideoTag:\n                              type: string\n                            ogVideoTvShow:\n                              type: string\n                            ogVideoWriter:\n                              type: string\n                            ogWebsite:\n                              type: string\n                            updatedTime:\n                              type: string\n                        - type: object\n                          properties:\n                            oembed:\n                              oneOf:\n                              - allOf:\n                                - &id003\n                                  type: object\n                                  description: Basic data structure of every oembed\n                                    response see https://oembed.com/\n                                  required:\n                                  - type\n                                  - version\n                                  properties:\n                                    type:\n                                      type: string\n                                    version:\n                                      type:\n                                      - string\n                                      - 'null'\n                                    title:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A text title, describing the resource.", "mimetype": "text/plain", "start_char_idx": 6554, "end_char_idx": 15959, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "590a69e2-5038-4c8b-82ca-0cf17add0c62": {"__data__": {"id_": "590a69e2-5038-4c8b-82ca-0cf17add0c62", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4546f37a-6116-4f95-b1cc-d1c1c6d3c197", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f6fbe03a9abd15d7e0b974dad5d3fca8061a50213aba41802d067292533bf06e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "da90dd0f-d760-4850-bfa0-19742a9d2edb", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "a99550a8ba1059c78944e2a5dc08f895a4f41bd7c614b772e408aaf91e1c4994", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b4ac11c7-bc93-4130-b165-415f6fb267e2", "node_type": "1", "metadata": {}, "hash": "02bb5551c6319ad9c9e131ba050e77c2a58a5756c4a5f538be3d18d6c2b844c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the author/owner of\n                                        the resource.\n                                    author_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL for the author/owner of the\n                                        resource.\n                                    provider_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the resource provider.\n                                    provider_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The url of the resource provider.\n                                    cache_age:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The suggested cache lifetime for\n                                        this resource, in seconds. Consumers may choose\n                                        to use this value or not.\n                                    thumbnail_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL to a thumbnail image representing\n                                        the resource. The thumbnail must respect any\n                                        maxwidth and maxheight parameters. If this\n                                        parameter is present, thumbnail_width and\n                                        thumbnail_height must also be present.\n                                    thumbnail_width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_height must also be present.\n                                    thumbnail_height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_width must also be present.\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - rich\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to display the\n                                        resource. The HTML should have no padding\n                                        or margins. Consumers may wish to load the\n                                        HTML in an off-domain iframe to avoid XSS\n                                        vulnerabilities. The markup should be valid\n                                        XHTML 1.0 Basic.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - video\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to embed a video\n                                        player. The HTML should have no padding or\n                                        margins. Consumers may wish to load the HTML\n                                        in an off-domain iframe to avoid XSS vulnerabilities.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 15996, "end_char_idx": 24326, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b4ac11c7-bc93-4130-b165-415f6fb267e2": {"__data__": {"id_": "b4ac11c7-bc93-4130-b165-415f6fb267e2", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4546f37a-6116-4f95-b1cc-d1c1c6d3c197", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f6fbe03a9abd15d7e0b974dad5d3fca8061a50213aba41802d067292533bf06e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "590a69e2-5038-4c8b-82ca-0cf17add0c62", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "fb7c7b6bc8dbceebbe8a9f6c4c6151a30079be91c1358ef064b34b46a5366a9c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5b2b2af8-231f-4e26-870e-7921a12475b9", "node_type": "1", "metadata": {}, "hash": "4bf0e8989166b44509d34059a21981076b724bc3fd8b9c3a31d03109f5c8881a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - link\n                              discriminator:\n                                propertyName: type\n                                mapping:\n                                  rich: '#/components/schemas/OembedRichData'\n                                  video: '#/components/schemas/OembedVideoData'\n                                  photo: '#/components/schemas/OembedPhotoData'\n                                  link: '#/components/schemas/OembedLinkData'\n                      frame: &id010\n                        discriminator:\n                          propertyName: version\n                        oneOf:\n                        - description: Frame v1 object\n                          allOf:\n                          - &id004\n                            description: Frame base object used across all versions\n                            type: object\n                            required:\n                            - version\n                            - image\n                            - frames_url\n                            properties:\n                              version:\n                                type: string\n                                description: Version of the frame, 'next' for v2,\n                                  'vNext' for v1\n                              image:\n                                type: string\n                                description: URL of the image\n                              frames_url:\n                                type: string\n                                description: Launch URL of the frame\n                          - type: object\n                            properties:\n                              buttons:\n                                type: array\n                                items:\n                                  type: object\n                                  required:\n                                  - index\n                                  - action_type\n                                  properties:\n                                    title:\n                                      type: string\n                                      description: Title of the button\n                                    index:\n                                      type: integer\n                                      description: Index of the button\n                                    action_type:\n                                      type: string\n                                      description: The action type of a frame button.\n                                        Action types \"mint\" & \"link\" are to be handled\n                                        on the client side only and so they will produce\n                                        a no/op for POST /farcaster/frame/action.\n                                      enum:\n                                      - post\n                                      - post_redirect\n                                      - tx\n                                      - link\n                                      - mint\n                                    target:\n                                      type: string\n                                      description: Target of the button\n                                    post_url:\n                                      type: string\n                                      description: Used specifically for the tx action\n                                        type to post a successful transaction hash\n                              post_url:\n                                type: string\n                                description: Post URL to take an action on this frame\n                              title:\n                                type: string\n                              image_aspect_ratio:\n                                type: string\n                              input:\n                                type: object\n                                properties:\n                                  text:\n                                    type: string\n                                    description: Input text for the frame\n                              state:\n                                type: object\n                                properties:\n                                  serialized:\n                                    type: string\n                                    description: State for the frame in a serialized\n                                      format\n                        - description: Frame v2 object\n                          allOf:\n                          - *id004\n                          - type: object\n                            required:\n                            - title\n                            - name\n                            - icon\n                            properties:\n                              manifest:\n                                type: object\n                                properties:\n                                  account_association:\n                                    type: object\n                                    properties:\n                                      header:\n                                        type: string\n                                      payload:\n                                        type: string\n                                      signature:\n                                        type: string\n                                    required:\n                                    - header\n                                    - payload\n                                    - signature\n                                  frame:\n                                    type: object\n                                    properties:\n                                      version:\n                                        type: string\n                                        enum:\n                                        - 0.0.0\n                                        - 0.0.", "mimetype": "text/plain", "start_char_idx": 22633, "end_char_idx": 30726, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5b2b2af8-231f-4e26-870e-7921a12475b9": {"__data__": {"id_": "5b2b2af8-231f-4e26-870e-7921a12475b9", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4546f37a-6116-4f95-b1cc-d1c1c6d3c197", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f6fbe03a9abd15d7e0b974dad5d3fca8061a50213aba41802d067292533bf06e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b4ac11c7-bc93-4130-b165-415f6fb267e2", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f021fa437b15f3fc990dfa2168ac6bfa91ac40a2f054f732937e061e803461fc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c98eade1-b599-440c-845c-bb0465015e8f", "node_type": "1", "metadata": {}, "hash": "256dbc3a053302772e68551d3c8ed80cd3cc87d6cacee7a7b90bcf151cedcd80", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                        - 0.0.1\n                                        - '1'\n                                        - next\n                                      name:\n                                        type: string\n                                        maxLength: 32\n                                      home_url:\n                                        type: string\n                                        maxLength: 512\n                                      icon_url:\n                                        type: string\n                                        maxLength: 512\n                                      image_url:\n                                        type: string\n                                        maxLength: 512\n                                      button_title:\n                                        type: string\n                                        maxLength: 32\n                                      splash_image_url:\n                                        type: string\n                                        maxLength: 512\n                                      splash_background_color:\n                                        type: string\n                                      webhook_url:\n                                        type: string\n                                        maxLength: 512\n                                    required:\n                                    - version\n                                    - name\n                                    - home_url\n                                    - icon_url\n                                  triggers:\n                                    type: array\n                                    items:\n                                      oneOf:\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - cast\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - composer\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                required:\n                                - account_association\n                              author: &id005\n                                type: object\n                                required:\n                                - object\n                                - fid\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - user_dehydrated\n                                  fid: *id001\n                                  username:\n                                    type: string\n                                  display_name:\n                                    type: string\n                                  pfp_url:\n                                    type: string\n                        mapping:\n                          vNext: '#/components/schemas/FrameV1'\n                          next: '#/components/schemas/FrameV2'\n                          '1': '#/components/schemas/FrameV2'\n                          0.0.0: '#/components/schemas/FrameV2'\n                          0.0.1: '#/components/schemas/FrameV2'\n              - type: object\n                required:\n                - cast\n                properties:\n                  cast_id: &id008\n                    type: object\n                    required:\n                    - fid\n                    - hash\n                    properties:\n                      fid: *id001\n                      hash:\n                        type: string\n                  cast:\n                    type: object\n                    required:\n                    - hash\n                    - parent_hash\n                    - parent_url\n                    - root_parent_url\n                    - parent_author\n                    - author\n                    - text\n                    - timestamp\n                    - type\n                    - embeds\n                    - channel\n                    properties:\n                      hash:\n                        type: string\n                      parent_hash:\n                        type:\n                        - string\n                        - 'null'\n                      parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      root_parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      parent_author:\n                        type: object\n                        required:\n                        - fid\n                        properties:\n                          fid:\n                            oneOf:\n                            - type: 'null'\n                            - *id001\n                      author: *id005\n                      text:\n                        type: string\n                      timestamp: *id006\n                      type: &id009\n                        type: string\n                        enum:\n                        - cast-mention\n                        - cast-reply\n                        description: 'The notification type of a cast.\n\n                          '\n                      embeds:\n                        type: array\n                        items:\n                          oneOf:\n                          - *id007\n                          - type: object\n                            required:\n                            - cast\n                            properties:\n                              cast_id: *id008\n                              cast:\n                                type: object\n                                required:\n                                - object\n                                - hash\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - cast_dehydrated\n                                  hash:\n                                    type: string\n                                  author: *id005\n                      channel:\n                        oneOf:\n                        - type: 'null'\n                        - &id013\n                          type: object\n                          required:\n                          - id\n                          - name\n                          - object\n                          properties:\n                            id:\n                              type: string\n                            name:\n                              type: string\n                            object:\n                              type: string\n                              enum:\n                              - channel_dehydrated\n                            image_url:\n                              type: string\n                            viewer_context: &id012\n                              description: Adds context on the viewer's or author's\n                                role in the channel.", "mimetype": "text/plain", "start_char_idx": 30676, "end_char_idx": 39443, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c98eade1-b599-440c-845c-bb0465015e8f": {"__data__": {"id_": "c98eade1-b599-440c-845c-bb0465015e8f", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4546f37a-6116-4f95-b1cc-d1c1c6d3c197", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f6fbe03a9abd15d7e0b974dad5d3fca8061a50213aba41802d067292533bf06e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b2b2af8-231f-4e26-870e-7921a12475b9", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "ce5762ff340df80cdbd91fbdb1fdbdac818e982eea54188bbe168d8de2b54ad7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                              required:\n                              - following\n                              properties:\n                                following:\n                                  description: Indicates if the user is following\n                                    the channel.\n                                  type: boolean\n                                role:\n                                  type: string\n                                  description: The role of a channel member\n                                  enum:\n                                  - member\n                                  - moderator\n          type: *id009\n      - type: object\n        required:\n        - reactions\n        - replies\n        - thread_hash\n        - mentioned_profiles\n        - channel\n        properties:\n          frames:\n            type: array\n            items: *id010\n          reactions:\n            type: object\n            required:\n            - likes\n            - recasts\n            - likes_count\n            - recasts_count\n            properties:\n              likes:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  properties:\n                    fid: *id001\n              recasts:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  - fname\n                  properties:\n                    fid: *id001\n                    fname:\n                      type: string\n              likes_count:\n                type: integer\n                format: int32\n              recasts_count:\n                type: integer\n                format: int32\n          replies:\n            type: object\n            required:\n            - count\n            properties:\n              count:\n                type: integer\n                format: int32\n          thread_hash:\n            type:\n            - string\n            - 'null'\n          mentioned_profiles:\n            type: array\n            items: *id011\n          channel:\n            oneOf:\n            - oneOf:\n              - type: object\n                required:\n                - id\n                - url\n                - object\n                properties:\n                  id:\n                    type: string\n                  url:\n                    type: string\n                  name:\n                    type: string\n                  description:\n                    type: string\n                  object:\n                    type: string\n                    enum:\n                    - channel\n                  created_at:\n                    description: Epoch timestamp in seconds.\n                    type: number\n                  follower_count:\n                    description: Number of followers the channel has.\n                    type: number\n                  external_link:\n                    type: object\n                    description: Channel's external link.\n                    properties:\n                      title:\n                        type: string\n                      url:\n                        type: string\n                  image_url:\n                    type: string\n                  parent_url:\n                    type: string\n                    format: uri\n                  lead: *id011\n                  moderator_fids:\n                    type: array\n                    items: *id001\n                  member_count:\n                    type: integer\n                    format: int32\n                  moderator: *id011\n                  pinned_cast_hash:\n                    type: string\n                    default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                    description: Cast Hash\n                  hosts:\n                    type: array\n                    deprecated: true\n                    items: *id011\n                  viewer_context: *id012\n              - *id013\n              discriminator:\n                propertyName: object\n                mapping:\n                  channel: '#/components/schemas/Channel'\n                  dehydrated_channel: '#/components/schemas/DehydratedChannel'\n            - type: 'null'\n          viewer_context:\n            type: object\n            description: Adds context on interactions the viewer has made with the\n              cast.\n            required:\n            - liked\n            - recasted\n            properties:\n              liked:\n                description: Indicates if the viewer liked the cast.\n                type: boolean\n              recasted:\n                description: Indicates if the viewer recasted the cast.\n                type: boolean\n          author_channel_context: *id012\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 39474, "end_char_idx": 44483, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2c08892d-dfc3-4c5c-9fe9-3c7138c3f002": {"__data__": {"id_": "2c08892d-dfc3-4c5c-9fe9-3c7138c3f002", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "78cd45b9-c648-4b06-9121-1454b4a0e872", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d930ea6153b3d60cc2393590da00e149d44276e89d5222f9812b72640ccc6898", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "049d6fc5-8010-4b03-82cc-a85533ab751f", "node_type": "1", "metadata": {}, "hash": "276d9829bd28ca7c832cf3651919d5f3d9662484a0269ecacb934ce07c8af95d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-feed-for-you\n\n**Endpoint**: `GET /farcaster/feed/for_you`\n\n## Description\nFetch a personalized For You feed for a user\n\n## Parameters\n- `fid` (query): FID of user whose feed you want to create\n- `viewer_fid` (query): Providing this will return a feed that respects this user's mutes and blocks and includes `viewer_context`.\n- `provider` (query): No description\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n- `provider_metadata` (query): provider_metadata is a URI-encoded stringified JSON object that can be used to pass additional metadata to the provider. Only available for mbd provider right now. See [here](https://docs.neynar.com/docs/feed-for-you-w-external-providers) on how to use.\n\n\n## Response\n```yaml\ntype: object\nrequired:\n- casts\n- next\nproperties:\n  casts:\n    type: array\n    items:\n      allOf:\n      - type: object\n        required:\n        - hash\n        - parent_hash\n        - parent_url\n        - root_parent_url\n        - parent_author\n        - author\n        - text\n        - timestamp\n        - embeds\n        properties:\n          hash:\n            type: string\n          parent_hash:\n            type:\n            - string\n            - 'null'\n          parent_url:\n            type:\n            - string\n            - 'null'\n          root_parent_url:\n            type:\n            - string\n            - 'null'\n          parent_author:\n            type: object\n            required:\n            - fid\n            properties:\n              fid:\n                oneOf:\n                - type: 'null'\n                - &id001\n                  type: integer\n                  format: int32\n                  description: The unique identifier of a farcaster user (unsigned\n                    integer)\n                  examples:\n                  - 3\n                  - 191\n                  - 2\n                  - 194\n                  - 19960\n          author: &id011\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: *id001\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id002\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5618, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "049d6fc5-8010-4b03-82cc-a85533ab751f": {"__data__": {"id_": "049d6fc5-8010-4b03-82cc-a85533ab751f", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "78cd45b9-c648-4b06-9121-1454b4a0e872", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d930ea6153b3d60cc2393590da00e149d44276e89d5222f9812b72640ccc6898", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c08892d-dfc3-4c5c-9fe9-3c7138c3f002", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "de2429d79304ab384a58c8eb2806905a3f0d68db356b1d72160f06d76bbc1d2b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c36628eb-7882-41e5-abf9-8cef42e679b5", "node_type": "1", "metadata": {}, "hash": "fe0df8fb809538d41413faf06c0a270674cb9253987f2f1009b522ab38419e14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 4768, "end_char_idx": 7591, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c36628eb-7882-41e5-abf9-8cef42e679b5": {"__data__": {"id_": "c36628eb-7882-41e5-abf9-8cef42e679b5", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "78cd45b9-c648-4b06-9121-1454b4a0e872", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d930ea6153b3d60cc2393590da00e149d44276e89d5222f9812b72640ccc6898", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "049d6fc5-8010-4b03-82cc-a85533ab751f", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "8f22a4f8766e9037f5db8ea550043082d20a6f3c8a411cac0a8ad46c9bc2fdb7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d7b5ab21-d2ad-430d-868b-4259eb7aba03", "node_type": "1", "metadata": {}, "hash": "7693468d1bce4d6458a0c00eb5858d0c52e0d3acfd9f809418886132f3cd260d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          text:\n            type: string\n          timestamp: &id006\n            type: string\n            format: date-time\n          embeds:\n            type: array\n            items:\n              oneOf:\n              - &id007\n                type: object\n                required:\n                - url\n                properties:\n                  url:\n                    type: string\n                  metadata:\n                    type: object\n                    required:\n                    - _status\n                    properties:\n                      _status:\n                        type: string\n                      content_type:\n                        type:\n                        - string\n                        - 'null'\n                      content_length:\n                        type:\n                        - integer\n                        - 'null'\n                      image:\n                        type: object\n                        properties:\n                          height_px:\n                            type: integer\n                          width_px:\n                            type: integer\n                      video:\n                        type: object\n                        properties:\n                          duration_s:\n                            type: number\n                          stream:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                codec_name:\n                                  type: string\n                                height_px:\n                                  type: integer\n                                width_px:\n                                  type: integer\n                      html:\n                        allOf:\n                        - type: object\n                          properties:\n                            favicon:\n                              type: string\n                            modifiedTime:\n                              type: string\n                            ogArticleAuthor:\n                              type: string\n                            ogArticleExpirationTime:\n                              type: string\n                            ogArticleModifiedTime:\n                              type: string\n                            ogArticlePublishedTime:\n                              type: string\n                            ogArticlePublisher:\n                              type: string\n                            ogArticleSection:\n                              type: string\n                            ogArticleTag:\n                              type: string\n                            ogAudio:\n                              type: string\n                            ogAudioSecureURL:\n                              type: string\n                            ogAudioType:\n                              type: string\n                            ogAudioURL:\n                              type: string\n                            ogAvailability:\n                              type: string\n                            ogDate:\n                              type: string\n                            ogDescription:\n                              type: string\n                            ogDeterminer:\n                              type: string\n                            ogEpisode:\n                              type: string\n                            ogImage:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                  alt:\n                                    type: string\n                                required:\n                                - url\n                            ogLocale:\n                              type: string\n                            ogLocaleAlternate:\n                              type: string\n                            ogLogo:\n                              type: string\n                            ogMovie:\n                              type: string\n                            ogPriceAmount:\n                              type: string\n                            ogPriceCurrency:\n                              type: string\n                            ogProductAvailability:\n                              type: string\n                            ogProductCondition:\n                              type: string\n                            ogProductPriceAmount:\n                              type: string\n                            ogProductPriceCurrency:\n                              type: string\n                            ogProductRetailerItemId:\n                              type: string\n                            ogSiteName:\n                              type: string\n                            ogTitle:\n                              type: string\n                            ogType:\n                              type: string\n                            ogUrl:\n                              type: string\n                            ogVideo:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                required:\n                                - url\n                            ogVideoActor:\n                              type: string\n                            ogVideoActorId:\n                              type: string\n                            ogVideoActorRole:\n                              type: string\n                            ogVideoDirector:\n                              type: string\n                            ogVideoDuration:\n                              type: string\n                            ogVideoOther:\n                              type: string\n                            ogVideoReleaseDate:\n                              type: string\n                            ogVideoSecureURL:\n                              type: string\n                            ogVideoSeries:\n                              type: string\n                            ogVideoTag:\n                              type: string\n                            ogVideoTvShow:\n                              type: string\n                            ogVideoWriter:\n                              type: string\n                            ogWebsite:\n                              type: string\n                            updatedTime:\n                              type: string\n                        - type: object\n                          properties:\n                            oembed:\n                              oneOf:\n                              - allOf:\n                                - &id003\n                                  type: object\n                                  description: Basic data structure of every oembed\n                                    response see https://oembed.com/\n                                  required:\n                                  - type\n                                  - version\n                                  properties:\n                                    type:\n                                      type: string\n                                    version:\n                                      type:\n                                      - string\n                                      - 'null'\n                                    title:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A text title, describing the resource.", "mimetype": "text/plain", "start_char_idx": 6726, "end_char_idx": 16131, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d7b5ab21-d2ad-430d-868b-4259eb7aba03": {"__data__": {"id_": "d7b5ab21-d2ad-430d-868b-4259eb7aba03", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "78cd45b9-c648-4b06-9121-1454b4a0e872", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d930ea6153b3d60cc2393590da00e149d44276e89d5222f9812b72640ccc6898", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c36628eb-7882-41e5-abf9-8cef42e679b5", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "b61791ace7c4e2bee630850177e4fa8574c4127ead85c2127e44b45e84914c0b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "64f46dab-e7fe-4d9d-8c8d-04240ea453b6", "node_type": "1", "metadata": {}, "hash": "02bb5551c6319ad9c9e131ba050e77c2a58a5756c4a5f538be3d18d6c2b844c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the author/owner of\n                                        the resource.\n                                    author_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL for the author/owner of the\n                                        resource.\n                                    provider_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the resource provider.\n                                    provider_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The url of the resource provider.\n                                    cache_age:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The suggested cache lifetime for\n                                        this resource, in seconds. Consumers may choose\n                                        to use this value or not.\n                                    thumbnail_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL to a thumbnail image representing\n                                        the resource. The thumbnail must respect any\n                                        maxwidth and maxheight parameters. If this\n                                        parameter is present, thumbnail_width and\n                                        thumbnail_height must also be present.\n                                    thumbnail_width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_height must also be present.\n                                    thumbnail_height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_width must also be present.\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - rich\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to display the\n                                        resource. The HTML should have no padding\n                                        or margins. Consumers may wish to load the\n                                        HTML in an off-domain iframe to avoid XSS\n                                        vulnerabilities. The markup should be valid\n                                        XHTML 1.0 Basic.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - video\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to embed a video\n                                        player. The HTML should have no padding or\n                                        margins. Consumers may wish to load the HTML\n                                        in an off-domain iframe to avoid XSS vulnerabilities.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 16168, "end_char_idx": 24498, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "64f46dab-e7fe-4d9d-8c8d-04240ea453b6": {"__data__": {"id_": "64f46dab-e7fe-4d9d-8c8d-04240ea453b6", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "78cd45b9-c648-4b06-9121-1454b4a0e872", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d930ea6153b3d60cc2393590da00e149d44276e89d5222f9812b72640ccc6898", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d7b5ab21-d2ad-430d-868b-4259eb7aba03", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "c07993fa0b19a4d7ac56a219150cf84d8a5fe0d926df409e66061de2b62bd3a8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "90652fc0-d472-4c4d-a6be-01d3e0014b28", "node_type": "1", "metadata": {}, "hash": "4bf0e8989166b44509d34059a21981076b724bc3fd8b9c3a31d03109f5c8881a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - link\n                              discriminator:\n                                propertyName: type\n                                mapping:\n                                  rich: '#/components/schemas/OembedRichData'\n                                  video: '#/components/schemas/OembedVideoData'\n                                  photo: '#/components/schemas/OembedPhotoData'\n                                  link: '#/components/schemas/OembedLinkData'\n                      frame: &id010\n                        discriminator:\n                          propertyName: version\n                        oneOf:\n                        - description: Frame v1 object\n                          allOf:\n                          - &id004\n                            description: Frame base object used across all versions\n                            type: object\n                            required:\n                            - version\n                            - image\n                            - frames_url\n                            properties:\n                              version:\n                                type: string\n                                description: Version of the frame, 'next' for v2,\n                                  'vNext' for v1\n                              image:\n                                type: string\n                                description: URL of the image\n                              frames_url:\n                                type: string\n                                description: Launch URL of the frame\n                          - type: object\n                            properties:\n                              buttons:\n                                type: array\n                                items:\n                                  type: object\n                                  required:\n                                  - index\n                                  - action_type\n                                  properties:\n                                    title:\n                                      type: string\n                                      description: Title of the button\n                                    index:\n                                      type: integer\n                                      description: Index of the button\n                                    action_type:\n                                      type: string\n                                      description: The action type of a frame button.\n                                        Action types \"mint\" & \"link\" are to be handled\n                                        on the client side only and so they will produce\n                                        a no/op for POST /farcaster/frame/action.\n                                      enum:\n                                      - post\n                                      - post_redirect\n                                      - tx\n                                      - link\n                                      - mint\n                                    target:\n                                      type: string\n                                      description: Target of the button\n                                    post_url:\n                                      type: string\n                                      description: Used specifically for the tx action\n                                        type to post a successful transaction hash\n                              post_url:\n                                type: string\n                                description: Post URL to take an action on this frame\n                              title:\n                                type: string\n                              image_aspect_ratio:\n                                type: string\n                              input:\n                                type: object\n                                properties:\n                                  text:\n                                    type: string\n                                    description: Input text for the frame\n                              state:\n                                type: object\n                                properties:\n                                  serialized:\n                                    type: string\n                                    description: State for the frame in a serialized\n                                      format\n                        - description: Frame v2 object\n                          allOf:\n                          - *id004\n                          - type: object\n                            required:\n                            - title\n                            - name\n                            - icon\n                            properties:\n                              manifest:\n                                type: object\n                                properties:\n                                  account_association:\n                                    type: object\n                                    properties:\n                                      header:\n                                        type: string\n                                      payload:\n                                        type: string\n                                      signature:\n                                        type: string\n                                    required:\n                                    - header\n                                    - payload\n                                    - signature\n                                  frame:\n                                    type: object\n                                    properties:\n                                      version:\n                                        type: string\n                                        enum:\n                                        - 0.0.0\n                                        - 0.0.", "mimetype": "text/plain", "start_char_idx": 22805, "end_char_idx": 30898, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "90652fc0-d472-4c4d-a6be-01d3e0014b28": {"__data__": {"id_": "90652fc0-d472-4c4d-a6be-01d3e0014b28", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "78cd45b9-c648-4b06-9121-1454b4a0e872", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d930ea6153b3d60cc2393590da00e149d44276e89d5222f9812b72640ccc6898", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "64f46dab-e7fe-4d9d-8c8d-04240ea453b6", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "6a42959a2d922b4338c53634c96e3755a57df27aa5bd9f0078180dc6e7b0a15e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "42136b28-94d0-4d61-aae9-d32c8e1e6250", "node_type": "1", "metadata": {}, "hash": "256dbc3a053302772e68551d3c8ed80cd3cc87d6cacee7a7b90bcf151cedcd80", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                        - 0.0.1\n                                        - '1'\n                                        - next\n                                      name:\n                                        type: string\n                                        maxLength: 32\n                                      home_url:\n                                        type: string\n                                        maxLength: 512\n                                      icon_url:\n                                        type: string\n                                        maxLength: 512\n                                      image_url:\n                                        type: string\n                                        maxLength: 512\n                                      button_title:\n                                        type: string\n                                        maxLength: 32\n                                      splash_image_url:\n                                        type: string\n                                        maxLength: 512\n                                      splash_background_color:\n                                        type: string\n                                      webhook_url:\n                                        type: string\n                                        maxLength: 512\n                                    required:\n                                    - version\n                                    - name\n                                    - home_url\n                                    - icon_url\n                                  triggers:\n                                    type: array\n                                    items:\n                                      oneOf:\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - cast\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - composer\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                required:\n                                - account_association\n                              author: &id005\n                                type: object\n                                required:\n                                - object\n                                - fid\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - user_dehydrated\n                                  fid: *id001\n                                  username:\n                                    type: string\n                                  display_name:\n                                    type: string\n                                  pfp_url:\n                                    type: string\n                        mapping:\n                          vNext: '#/components/schemas/FrameV1'\n                          next: '#/components/schemas/FrameV2'\n                          '1': '#/components/schemas/FrameV2'\n                          0.0.0: '#/components/schemas/FrameV2'\n                          0.0.1: '#/components/schemas/FrameV2'\n              - type: object\n                required:\n                - cast\n                properties:\n                  cast_id: &id008\n                    type: object\n                    required:\n                    - fid\n                    - hash\n                    properties:\n                      fid: *id001\n                      hash:\n                        type: string\n                  cast:\n                    type: object\n                    required:\n                    - hash\n                    - parent_hash\n                    - parent_url\n                    - root_parent_url\n                    - parent_author\n                    - author\n                    - text\n                    - timestamp\n                    - type\n                    - embeds\n                    - channel\n                    properties:\n                      hash:\n                        type: string\n                      parent_hash:\n                        type:\n                        - string\n                        - 'null'\n                      parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      root_parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      parent_author:\n                        type: object\n                        required:\n                        - fid\n                        properties:\n                          fid:\n                            oneOf:\n                            - type: 'null'\n                            - *id001\n                      author: *id005\n                      text:\n                        type: string\n                      timestamp: *id006\n                      type: &id009\n                        type: string\n                        enum:\n                        - cast-mention\n                        - cast-reply\n                        description: 'The notification type of a cast.\n\n                          '\n                      embeds:\n                        type: array\n                        items:\n                          oneOf:\n                          - *id007\n                          - type: object\n                            required:\n                            - cast\n                            properties:\n                              cast_id: *id008\n                              cast:\n                                type: object\n                                required:\n                                - object\n                                - hash\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - cast_dehydrated\n                                  hash:\n                                    type: string\n                                  author: *id005\n                      channel:\n                        oneOf:\n                        - type: 'null'\n                        - &id013\n                          type: object\n                          required:\n                          - id\n                          - name\n                          - object\n                          properties:\n                            id:\n                              type: string\n                            name:\n                              type: string\n                            object:\n                              type: string\n                              enum:\n                              - channel_dehydrated\n                            image_url:\n                              type: string\n                            viewer_context: &id012\n                              description: Adds context on the viewer's or author's\n                                role in the channel.", "mimetype": "text/plain", "start_char_idx": 30848, "end_char_idx": 39615, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "42136b28-94d0-4d61-aae9-d32c8e1e6250": {"__data__": {"id_": "42136b28-94d0-4d61-aae9-d32c8e1e6250", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "78cd45b9-c648-4b06-9121-1454b4a0e872", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d930ea6153b3d60cc2393590da00e149d44276e89d5222f9812b72640ccc6898", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "90652fc0-d472-4c4d-a6be-01d3e0014b28", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "6224239158f81489ab50fab5d420f2dac68ef5246c8ab42a171b8d1ffaa5908e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                              required:\n                              - following\n                              properties:\n                                following:\n                                  description: Indicates if the user is following\n                                    the channel.\n                                  type: boolean\n                                role:\n                                  type: string\n                                  description: The role of a channel member\n                                  enum:\n                                  - member\n                                  - moderator\n          type: *id009\n      - type: object\n        required:\n        - reactions\n        - replies\n        - thread_hash\n        - mentioned_profiles\n        - channel\n        properties:\n          frames:\n            type: array\n            items: *id010\n          reactions:\n            type: object\n            required:\n            - likes\n            - recasts\n            - likes_count\n            - recasts_count\n            properties:\n              likes:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  properties:\n                    fid: *id001\n              recasts:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  - fname\n                  properties:\n                    fid: *id001\n                    fname:\n                      type: string\n              likes_count:\n                type: integer\n                format: int32\n              recasts_count:\n                type: integer\n                format: int32\n          replies:\n            type: object\n            required:\n            - count\n            properties:\n              count:\n                type: integer\n                format: int32\n          thread_hash:\n            type:\n            - string\n            - 'null'\n          mentioned_profiles:\n            type: array\n            items: *id011\n          channel:\n            oneOf:\n            - oneOf:\n              - type: object\n                required:\n                - id\n                - url\n                - object\n                properties:\n                  id:\n                    type: string\n                  url:\n                    type: string\n                  name:\n                    type: string\n                  description:\n                    type: string\n                  object:\n                    type: string\n                    enum:\n                    - channel\n                  created_at:\n                    description: Epoch timestamp in seconds.\n                    type: number\n                  follower_count:\n                    description: Number of followers the channel has.\n                    type: number\n                  external_link:\n                    type: object\n                    description: Channel's external link.\n                    properties:\n                      title:\n                        type: string\n                      url:\n                        type: string\n                  image_url:\n                    type: string\n                  parent_url:\n                    type: string\n                    format: uri\n                  lead: *id011\n                  moderator_fids:\n                    type: array\n                    items: *id001\n                  member_count:\n                    type: integer\n                    format: int32\n                  moderator: *id011\n                  pinned_cast_hash:\n                    type: string\n                    default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                    description: Cast Hash\n                  hosts:\n                    type: array\n                    deprecated: true\n                    items: *id011\n                  viewer_context: *id012\n              - *id013\n              discriminator:\n                propertyName: object\n                mapping:\n                  channel: '#/components/schemas/Channel'\n                  dehydrated_channel: '#/components/schemas/DehydratedChannel'\n            - type: 'null'\n          viewer_context:\n            type: object\n            description: Adds context on interactions the viewer has made with the\n              cast.\n            required:\n            - liked\n            - recasted\n            properties:\n              liked:\n                description: Indicates if the viewer liked the cast.\n                type: boolean\n              recasted:\n                description: Indicates if the viewer recasted the cast.\n                type: boolean\n          author_channel_context: *id012\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 39646, "end_char_idx": 44655, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "97874739-7d53-4d23-a10d-29028a6a3200": {"__data__": {"id_": "97874739-7d53-4d23-a10d-29028a6a3200", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "28b6e132-69f6-4b82-9ce8-0c6ddaa3101b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "5bcd5a619ec5ea1b6c74ae9a30c7a8596b0ef24b8d3988b0746a4e1b61502174", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1db1089f-1035-4da4-8b88-10ed656a8316", "node_type": "1", "metadata": {}, "hash": "ea937abdc22f46bb47848a9f98a70f9be56f97bb66fcaebeeaa6112d818d4a85", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-feed\n\n**Endpoint**: `GET /farcaster/feed`\n\n## Description\nFetch casts based on filters. Ensure setting the correct parameters based on the feed_type and filter_type.\n\n## Parameters\n- `feed_type` (query): Defaults to following (requires FID or address). If set to filter (requires filter_type)\n- `filter_type` (query): Used when feed_type=filter. Can be set to FIDs (requires FIDs) or parent_url (requires parent_url) or channel_id (requires channel_id)\n- `fid` (query): (Optional) FID of user whose feed you want to create. By default, the API expects this field, except if you pass a filter_type\n- `fids` (query): Used when filter_type=FIDs . Create a feed based on a list of FIDs. Max array size is 100. Requires feed_type and filter_type.\n- `parent_url` (query): Used when filter_type=parent_url can be used to fetch content under any parent url e.g. FIP-2 channels on Warpcast. Requires feed_type and filter_type\n- `channel_id` (query): Used when filter_type=channel_id can be used to fetch casts under a channel. Requires feed_type and filter_type.\n- `members_only` (query): Used when filter_type=channel_id. Only include casts from members of the channel. True by default.\n- `embed_url` (query): Used when filter_type=embed_url can be used to fetch all casts with an embed url that contains embed_url. Requires feed_type and filter_type\n- `embed_types` (query): Used when filter_type=embed_types can be used to fetch all casts with matching content types. Requires feed_type and filter_type\n- `with_recasts` (query): Include recasts in the response, true by default\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n- `viewer_fid` (query): Providing this will return a feed that respects this user's mutes and blocks and includes `viewer_context`.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1796, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1db1089f-1035-4da4-8b88-10ed656a8316": {"__data__": {"id_": "1db1089f-1035-4da4-8b88-10ed656a8316", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "28b6e132-69f6-4b82-9ce8-0c6ddaa3101b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "5bcd5a619ec5ea1b6c74ae9a30c7a8596b0ef24b8d3988b0746a4e1b61502174", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "97874739-7d53-4d23-a10d-29028a6a3200", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "6d80cbd8e4509be63a0e313b40575f08d3aa4ff796379d57391e0e343509e6cc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "33ce1143-6f92-4d54-8d25-376555ecdb34", "node_type": "1", "metadata": {}, "hash": "276d9829bd28ca7c832cf3651919d5f3d9662484a0269ecacb934ce07c8af95d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Requires feed_type and filter_type.\n- `members_only` (query): Used when filter_type=channel_id. Only include casts from members of the channel. True by default.\n- `embed_url` (query): Used when filter_type=embed_url can be used to fetch all casts with an embed url that contains embed_url. Requires feed_type and filter_type\n- `embed_types` (query): Used when filter_type=embed_types can be used to fetch all casts with matching content types. Requires feed_type and filter_type\n- `with_recasts` (query): Include recasts in the response, true by default\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n- `viewer_fid` (query): Providing this will return a feed that respects this user's mutes and blocks and includes `viewer_context`.\n\n## Response\n```yaml\ntype: object\nrequired:\n- casts\n- next\nproperties:\n  casts:\n    type: array\n    items:\n      allOf:\n      - type: object\n        required:\n        - hash\n        - parent_hash\n        - parent_url\n        - root_parent_url\n        - parent_author\n        - author\n        - text\n        - timestamp\n        - embeds\n        properties:\n          hash:\n            type: string\n          parent_hash:\n            type:\n            - string\n            - 'null'\n          parent_url:\n            type:\n            - string\n            - 'null'\n          root_parent_url:\n            type:\n            - string\n            - 'null'\n          parent_author:\n            type: object\n            required:\n            - fid\n            properties:\n              fid:\n                oneOf:\n                - type: 'null'\n                - &id001\n                  type: integer\n                  format: int32\n                  description: The unique identifier of a farcaster user (unsigned\n                    integer)\n                  examples:\n                  - 3\n                  - 191\n                  - 2\n                  - 194\n                  - 19960\n          author: &id011\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: *id001\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id002\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 1026, "end_char_idx": 6674, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "33ce1143-6f92-4d54-8d25-376555ecdb34": {"__data__": {"id_": "33ce1143-6f92-4d54-8d25-376555ecdb34", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "28b6e132-69f6-4b82-9ce8-0c6ddaa3101b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "5bcd5a619ec5ea1b6c74ae9a30c7a8596b0ef24b8d3988b0746a4e1b61502174", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1db1089f-1035-4da4-8b88-10ed656a8316", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "09b240af26a8ce0c173b60ed28b8d5142c08a8819605514539c6fa108797fa46", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e714b8eb-c5e0-495d-aed2-a60465a79271", "node_type": "1", "metadata": {}, "hash": "fe0df8fb809538d41413faf06c0a270674cb9253987f2f1009b522ab38419e14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 5824, "end_char_idx": 8647, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e714b8eb-c5e0-495d-aed2-a60465a79271": {"__data__": {"id_": "e714b8eb-c5e0-495d-aed2-a60465a79271", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "28b6e132-69f6-4b82-9ce8-0c6ddaa3101b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "5bcd5a619ec5ea1b6c74ae9a30c7a8596b0ef24b8d3988b0746a4e1b61502174", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "33ce1143-6f92-4d54-8d25-376555ecdb34", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "8e6f90294b3a813b8649e3c85b814c4eb985af4dcdb90917ffc0b5425f325d14", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0426bcea-336d-470b-9440-df98d4d105fc", "node_type": "1", "metadata": {}, "hash": "7693468d1bce4d6458a0c00eb5858d0c52e0d3acfd9f809418886132f3cd260d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          text:\n            type: string\n          timestamp: &id006\n            type: string\n            format: date-time\n          embeds:\n            type: array\n            items:\n              oneOf:\n              - &id007\n                type: object\n                required:\n                - url\n                properties:\n                  url:\n                    type: string\n                  metadata:\n                    type: object\n                    required:\n                    - _status\n                    properties:\n                      _status:\n                        type: string\n                      content_type:\n                        type:\n                        - string\n                        - 'null'\n                      content_length:\n                        type:\n                        - integer\n                        - 'null'\n                      image:\n                        type: object\n                        properties:\n                          height_px:\n                            type: integer\n                          width_px:\n                            type: integer\n                      video:\n                        type: object\n                        properties:\n                          duration_s:\n                            type: number\n                          stream:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                codec_name:\n                                  type: string\n                                height_px:\n                                  type: integer\n                                width_px:\n                                  type: integer\n                      html:\n                        allOf:\n                        - type: object\n                          properties:\n                            favicon:\n                              type: string\n                            modifiedTime:\n                              type: string\n                            ogArticleAuthor:\n                              type: string\n                            ogArticleExpirationTime:\n                              type: string\n                            ogArticleModifiedTime:\n                              type: string\n                            ogArticlePublishedTime:\n                              type: string\n                            ogArticlePublisher:\n                              type: string\n                            ogArticleSection:\n                              type: string\n                            ogArticleTag:\n                              type: string\n                            ogAudio:\n                              type: string\n                            ogAudioSecureURL:\n                              type: string\n                            ogAudioType:\n                              type: string\n                            ogAudioURL:\n                              type: string\n                            ogAvailability:\n                              type: string\n                            ogDate:\n                              type: string\n                            ogDescription:\n                              type: string\n                            ogDeterminer:\n                              type: string\n                            ogEpisode:\n                              type: string\n                            ogImage:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                  alt:\n                                    type: string\n                                required:\n                                - url\n                            ogLocale:\n                              type: string\n                            ogLocaleAlternate:\n                              type: string\n                            ogLogo:\n                              type: string\n                            ogMovie:\n                              type: string\n                            ogPriceAmount:\n                              type: string\n                            ogPriceCurrency:\n                              type: string\n                            ogProductAvailability:\n                              type: string\n                            ogProductCondition:\n                              type: string\n                            ogProductPriceAmount:\n                              type: string\n                            ogProductPriceCurrency:\n                              type: string\n                            ogProductRetailerItemId:\n                              type: string\n                            ogSiteName:\n                              type: string\n                            ogTitle:\n                              type: string\n                            ogType:\n                              type: string\n                            ogUrl:\n                              type: string\n                            ogVideo:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                required:\n                                - url\n                            ogVideoActor:\n                              type: string\n                            ogVideoActorId:\n                              type: string\n                            ogVideoActorRole:\n                              type: string\n                            ogVideoDirector:\n                              type: string\n                            ogVideoDuration:\n                              type: string\n                            ogVideoOther:\n                              type: string\n                            ogVideoReleaseDate:\n                              type: string\n                            ogVideoSecureURL:\n                              type: string\n                            ogVideoSeries:\n                              type: string\n                            ogVideoTag:\n                              type: string\n                            ogVideoTvShow:\n                              type: string\n                            ogVideoWriter:\n                              type: string\n                            ogWebsite:\n                              type: string\n                            updatedTime:\n                              type: string\n                        - type: object\n                          properties:\n                            oembed:\n                              oneOf:\n                              - allOf:\n                                - &id003\n                                  type: object\n                                  description: Basic data structure of every oembed\n                                    response see https://oembed.com/\n                                  required:\n                                  - type\n                                  - version\n                                  properties:\n                                    type:\n                                      type: string\n                                    version:\n                                      type:\n                                      - string\n                                      - 'null'\n                                    title:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A text title, describing the resource.", "mimetype": "text/plain", "start_char_idx": 7782, "end_char_idx": 17187, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0426bcea-336d-470b-9440-df98d4d105fc": {"__data__": {"id_": "0426bcea-336d-470b-9440-df98d4d105fc", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "28b6e132-69f6-4b82-9ce8-0c6ddaa3101b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "5bcd5a619ec5ea1b6c74ae9a30c7a8596b0ef24b8d3988b0746a4e1b61502174", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e714b8eb-c5e0-495d-aed2-a60465a79271", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "e70f239e227b8e07d0f28da47a79279af7dc7d774453bd21aef8c9892273569d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e23f2fcb-b6e0-42a3-b5a9-21ea48728623", "node_type": "1", "metadata": {}, "hash": "02bb5551c6319ad9c9e131ba050e77c2a58a5756c4a5f538be3d18d6c2b844c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the author/owner of\n                                        the resource.\n                                    author_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL for the author/owner of the\n                                        resource.\n                                    provider_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the resource provider.\n                                    provider_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The url of the resource provider.\n                                    cache_age:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The suggested cache lifetime for\n                                        this resource, in seconds. Consumers may choose\n                                        to use this value or not.\n                                    thumbnail_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL to a thumbnail image representing\n                                        the resource. The thumbnail must respect any\n                                        maxwidth and maxheight parameters. If this\n                                        parameter is present, thumbnail_width and\n                                        thumbnail_height must also be present.\n                                    thumbnail_width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_height must also be present.\n                                    thumbnail_height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_width must also be present.\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - rich\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to display the\n                                        resource. The HTML should have no padding\n                                        or margins. Consumers may wish to load the\n                                        HTML in an off-domain iframe to avoid XSS\n                                        vulnerabilities. The markup should be valid\n                                        XHTML 1.0 Basic.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - video\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to embed a video\n                                        player. The HTML should have no padding or\n                                        margins. Consumers may wish to load the HTML\n                                        in an off-domain iframe to avoid XSS vulnerabilities.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 17224, "end_char_idx": 25554, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e23f2fcb-b6e0-42a3-b5a9-21ea48728623": {"__data__": {"id_": "e23f2fcb-b6e0-42a3-b5a9-21ea48728623", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "28b6e132-69f6-4b82-9ce8-0c6ddaa3101b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "5bcd5a619ec5ea1b6c74ae9a30c7a8596b0ef24b8d3988b0746a4e1b61502174", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0426bcea-336d-470b-9440-df98d4d105fc", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d51f5d1835c37147b36cda98d8412ebe071a2c1510cf207761eaff098b9d27a9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1689833e-32a1-4be9-b4a8-d174b80077cd", "node_type": "1", "metadata": {}, "hash": "4bf0e8989166b44509d34059a21981076b724bc3fd8b9c3a31d03109f5c8881a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - link\n                              discriminator:\n                                propertyName: type\n                                mapping:\n                                  rich: '#/components/schemas/OembedRichData'\n                                  video: '#/components/schemas/OembedVideoData'\n                                  photo: '#/components/schemas/OembedPhotoData'\n                                  link: '#/components/schemas/OembedLinkData'\n                      frame: &id010\n                        discriminator:\n                          propertyName: version\n                        oneOf:\n                        - description: Frame v1 object\n                          allOf:\n                          - &id004\n                            description: Frame base object used across all versions\n                            type: object\n                            required:\n                            - version\n                            - image\n                            - frames_url\n                            properties:\n                              version:\n                                type: string\n                                description: Version of the frame, 'next' for v2,\n                                  'vNext' for v1\n                              image:\n                                type: string\n                                description: URL of the image\n                              frames_url:\n                                type: string\n                                description: Launch URL of the frame\n                          - type: object\n                            properties:\n                              buttons:\n                                type: array\n                                items:\n                                  type: object\n                                  required:\n                                  - index\n                                  - action_type\n                                  properties:\n                                    title:\n                                      type: string\n                                      description: Title of the button\n                                    index:\n                                      type: integer\n                                      description: Index of the button\n                                    action_type:\n                                      type: string\n                                      description: The action type of a frame button.\n                                        Action types \"mint\" & \"link\" are to be handled\n                                        on the client side only and so they will produce\n                                        a no/op for POST /farcaster/frame/action.\n                                      enum:\n                                      - post\n                                      - post_redirect\n                                      - tx\n                                      - link\n                                      - mint\n                                    target:\n                                      type: string\n                                      description: Target of the button\n                                    post_url:\n                                      type: string\n                                      description: Used specifically for the tx action\n                                        type to post a successful transaction hash\n                              post_url:\n                                type: string\n                                description: Post URL to take an action on this frame\n                              title:\n                                type: string\n                              image_aspect_ratio:\n                                type: string\n                              input:\n                                type: object\n                                properties:\n                                  text:\n                                    type: string\n                                    description: Input text for the frame\n                              state:\n                                type: object\n                                properties:\n                                  serialized:\n                                    type: string\n                                    description: State for the frame in a serialized\n                                      format\n                        - description: Frame v2 object\n                          allOf:\n                          - *id004\n                          - type: object\n                            required:\n                            - title\n                            - name\n                            - icon\n                            properties:\n                              manifest:\n                                type: object\n                                properties:\n                                  account_association:\n                                    type: object\n                                    properties:\n                                      header:\n                                        type: string\n                                      payload:\n                                        type: string\n                                      signature:\n                                        type: string\n                                    required:\n                                    - header\n                                    - payload\n                                    - signature\n                                  frame:\n                                    type: object\n                                    properties:\n                                      version:\n                                        type: string\n                                        enum:\n                                        - 0.0.0\n                                        - 0.0.", "mimetype": "text/plain", "start_char_idx": 23861, "end_char_idx": 31954, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1689833e-32a1-4be9-b4a8-d174b80077cd": {"__data__": {"id_": "1689833e-32a1-4be9-b4a8-d174b80077cd", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "28b6e132-69f6-4b82-9ce8-0c6ddaa3101b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "5bcd5a619ec5ea1b6c74ae9a30c7a8596b0ef24b8d3988b0746a4e1b61502174", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e23f2fcb-b6e0-42a3-b5a9-21ea48728623", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "59a251404c8597f0f337685c9eccb4350904564f4975b02bc0a846b1731bb54e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8cf394a7-e640-4d55-97bd-1571a7fc5c83", "node_type": "1", "metadata": {}, "hash": "256dbc3a053302772e68551d3c8ed80cd3cc87d6cacee7a7b90bcf151cedcd80", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                        - 0.0.1\n                                        - '1'\n                                        - next\n                                      name:\n                                        type: string\n                                        maxLength: 32\n                                      home_url:\n                                        type: string\n                                        maxLength: 512\n                                      icon_url:\n                                        type: string\n                                        maxLength: 512\n                                      image_url:\n                                        type: string\n                                        maxLength: 512\n                                      button_title:\n                                        type: string\n                                        maxLength: 32\n                                      splash_image_url:\n                                        type: string\n                                        maxLength: 512\n                                      splash_background_color:\n                                        type: string\n                                      webhook_url:\n                                        type: string\n                                        maxLength: 512\n                                    required:\n                                    - version\n                                    - name\n                                    - home_url\n                                    - icon_url\n                                  triggers:\n                                    type: array\n                                    items:\n                                      oneOf:\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - cast\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - composer\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                required:\n                                - account_association\n                              author: &id005\n                                type: object\n                                required:\n                                - object\n                                - fid\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - user_dehydrated\n                                  fid: *id001\n                                  username:\n                                    type: string\n                                  display_name:\n                                    type: string\n                                  pfp_url:\n                                    type: string\n                        mapping:\n                          vNext: '#/components/schemas/FrameV1'\n                          next: '#/components/schemas/FrameV2'\n                          '1': '#/components/schemas/FrameV2'\n                          0.0.0: '#/components/schemas/FrameV2'\n                          0.0.1: '#/components/schemas/FrameV2'\n              - type: object\n                required:\n                - cast\n                properties:\n                  cast_id: &id008\n                    type: object\n                    required:\n                    - fid\n                    - hash\n                    properties:\n                      fid: *id001\n                      hash:\n                        type: string\n                  cast:\n                    type: object\n                    required:\n                    - hash\n                    - parent_hash\n                    - parent_url\n                    - root_parent_url\n                    - parent_author\n                    - author\n                    - text\n                    - timestamp\n                    - type\n                    - embeds\n                    - channel\n                    properties:\n                      hash:\n                        type: string\n                      parent_hash:\n                        type:\n                        - string\n                        - 'null'\n                      parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      root_parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      parent_author:\n                        type: object\n                        required:\n                        - fid\n                        properties:\n                          fid:\n                            oneOf:\n                            - type: 'null'\n                            - *id001\n                      author: *id005\n                      text:\n                        type: string\n                      timestamp: *id006\n                      type: &id009\n                        type: string\n                        enum:\n                        - cast-mention\n                        - cast-reply\n                        description: 'The notification type of a cast.\n\n                          '\n                      embeds:\n                        type: array\n                        items:\n                          oneOf:\n                          - *id007\n                          - type: object\n                            required:\n                            - cast\n                            properties:\n                              cast_id: *id008\n                              cast:\n                                type: object\n                                required:\n                                - object\n                                - hash\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - cast_dehydrated\n                                  hash:\n                                    type: string\n                                  author: *id005\n                      channel:\n                        oneOf:\n                        - type: 'null'\n                        - &id013\n                          type: object\n                          required:\n                          - id\n                          - name\n                          - object\n                          properties:\n                            id:\n                              type: string\n                            name:\n                              type: string\n                            object:\n                              type: string\n                              enum:\n                              - channel_dehydrated\n                            image_url:\n                              type: string\n                            viewer_context: &id012\n                              description: Adds context on the viewer's or author's\n                                role in the channel.", "mimetype": "text/plain", "start_char_idx": 31904, "end_char_idx": 40671, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8cf394a7-e640-4d55-97bd-1571a7fc5c83": {"__data__": {"id_": "8cf394a7-e640-4d55-97bd-1571a7fc5c83", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "28b6e132-69f6-4b82-9ce8-0c6ddaa3101b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "5bcd5a619ec5ea1b6c74ae9a30c7a8596b0ef24b8d3988b0746a4e1b61502174", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1689833e-32a1-4be9-b4a8-d174b80077cd", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "288a9f9ee73bd9044c75866cb57bdd166d723dfc036a6b425b5de2d414a02b56", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                              required:\n                              - following\n                              properties:\n                                following:\n                                  description: Indicates if the user is following\n                                    the channel.\n                                  type: boolean\n                                role:\n                                  type: string\n                                  description: The role of a channel member\n                                  enum:\n                                  - member\n                                  - moderator\n          type: *id009\n      - type: object\n        required:\n        - reactions\n        - replies\n        - thread_hash\n        - mentioned_profiles\n        - channel\n        properties:\n          frames:\n            type: array\n            items: *id010\n          reactions:\n            type: object\n            required:\n            - likes\n            - recasts\n            - likes_count\n            - recasts_count\n            properties:\n              likes:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  properties:\n                    fid: *id001\n              recasts:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  - fname\n                  properties:\n                    fid: *id001\n                    fname:\n                      type: string\n              likes_count:\n                type: integer\n                format: int32\n              recasts_count:\n                type: integer\n                format: int32\n          replies:\n            type: object\n            required:\n            - count\n            properties:\n              count:\n                type: integer\n                format: int32\n          thread_hash:\n            type:\n            - string\n            - 'null'\n          mentioned_profiles:\n            type: array\n            items: *id011\n          channel:\n            oneOf:\n            - oneOf:\n              - type: object\n                required:\n                - id\n                - url\n                - object\n                properties:\n                  id:\n                    type: string\n                  url:\n                    type: string\n                  name:\n                    type: string\n                  description:\n                    type: string\n                  object:\n                    type: string\n                    enum:\n                    - channel\n                  created_at:\n                    description: Epoch timestamp in seconds.\n                    type: number\n                  follower_count:\n                    description: Number of followers the channel has.\n                    type: number\n                  external_link:\n                    type: object\n                    description: Channel's external link.\n                    properties:\n                      title:\n                        type: string\n                      url:\n                        type: string\n                  image_url:\n                    type: string\n                  parent_url:\n                    type: string\n                    format: uri\n                  lead: *id011\n                  moderator_fids:\n                    type: array\n                    items: *id001\n                  member_count:\n                    type: integer\n                    format: int32\n                  moderator: *id011\n                  pinned_cast_hash:\n                    type: string\n                    default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                    description: Cast Hash\n                  hosts:\n                    type: array\n                    deprecated: true\n                    items: *id011\n                  viewer_context: *id012\n              - *id013\n              discriminator:\n                propertyName: object\n                mapping:\n                  channel: '#/components/schemas/Channel'\n                  dehydrated_channel: '#/components/schemas/DehydratedChannel'\n            - type: 'null'\n          viewer_context:\n            type: object\n            description: Adds context on interactions the viewer has made with the\n              cast.\n            required:\n            - liked\n            - recasted\n            properties:\n              liked:\n                description: Indicates if the viewer liked the cast.\n                type: boolean\n              recasted:\n                description: Indicates if the viewer recasted the cast.\n                type: boolean\n          author_channel_context: *id012\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 40702, "end_char_idx": 45711, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "47bb9e4f-32a6-42ea-9997-178a75ea05db": {"__data__": {"id_": "47bb9e4f-32a6-42ea-9997-178a75ea05db", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-follow-suggestions.md", "file_name": "neynar_fetch-follow-suggestions.md", "file_type": "text/markdown", "file_size": 5668, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9714bf0e-f68a-4e29-acbb-2f45b68e1e31", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-follow-suggestions.md", "file_name": "neynar_fetch-follow-suggestions.md", "file_type": "text/markdown", "file_size": 5668, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "819747f1039d3d8fba7c122de0199c55c7d08ecd90b2c0eab58e1a974f2b6d1c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8c140788-68ec-40e4-b5d7-84c3bd80e9b9", "node_type": "1", "metadata": {}, "hash": "29c2991ce65ad25d30a51b153b3a7546f709e524636f4813ed06b4f33eee85f2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-follow-suggestions\n\n**Endpoint**: `GET /farcaster/following/suggested`\n\n## Description\nFetch a list of suggested users to follow. Used to help users discover new users to follow\n\n## Parameters\n- `fid` (query): FID of the user whose following you want to fetch.\n- `viewer_fid` (query): Providing this will return a list of users that respects this user's mutes and blocks and includes `viewer_context`.\n- `limit` (query): Number of results to fetch\n\n## Response\n```yaml\ntype: object\nrequired:\n- users\n- next\nproperties:\n  users:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - fid\n      - custody_address\n      - username\n      - profile\n      - follower_count\n      - following_count\n      - verifications\n      - verified_addresses\n      - verified_accounts\n      - power_badge\n      properties:\n        object:\n          type: string\n          enum:\n          - user\n        fid:\n          type: integer\n          format: int32\n          description: The unique identifier of a farcaster user (unsigned integer)\n          examples:\n          - 3\n          - 191\n          - 2\n          - 194\n          - 19960\n        username:\n          type: string\n        display_name:\n          type: string\n        custody_address: &id001\n          type: string\n          pattern: ^0x[a-fA-F0-9]{40}$\n          description: Ethereum address\n        pfp_url:\n          type: string\n          description: The URL of the user's profile picture\n        profile:\n          type: object\n          required:\n          - bio\n          properties:\n            bio:\n              type: object\n              required:\n              - text\n              - mentioned_profiles\n              properties:\n                text:\n                  type: string\n                mentioned_profiles:\n                  type: array\n                  items:\n                    type: string\n                  default: []\n            location:\n              description: Coordinates and place names for a location\n              type: object\n              required:\n              - latitude\n              - longitude\n              properties:\n                latitude:\n                  type: number\n                  format: double\n                  minimum: -90\n                  maximum: 90\n                longitude:\n                  type: number\n                  format: double\n                  minimum: -180\n                  maximum: 180\n                address:\n                  type: object\n                  required:\n                  - city\n                  - country\n                  properties:\n                    city:\n                      type: string\n                    state:\n                      type: string\n                    state_code:\n                      type: string\n                    country:\n                      type: string\n                    country_code:\n                      type: string\n        follower_count:\n          type: integer\n          format: int32\n          description: The number of followers the user has.\n        following_count:\n          type: integer\n          format: int32\n          description: The number of users the user is following.\n        verifications:\n          type: array\n          items: *id001\n        verified_addresses:\n          type: object\n          required:\n          - eth_addresses\n          - sol_addresses\n          properties:\n            eth_addresses:\n              type: array\n              description: List of verified Ethereum addresses of the user sorted\n                by oldest to most recent.\n              items: *id001\n            sol_addresses:\n              type: array\n              description: List of verified Solana addresses of the user sorted by\n                oldest to most recent.\n              items:\n                type: string\n                pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                description: Solana address\n        verified_accounts:\n          type: array\n          description: Verified accounts of the user on other platforms, currently\n            only X is supported.\n          items:\n            type: object\n            properties:\n              platform:\n                type: string\n                enum:\n                - x\n                - github\n              username:\n                type: string\n        power_badge:\n          type: boolean\n        experimental:\n          type: object\n          required:\n          - neynar_user_score\n          properties:\n            neynar_user_score:\n              type: number\n              format: double\n              description: Score that represents the probability that the account\n                is not spam.\n        viewer_context:\n          type: object\n          description: Adds context on the viewer's follow relationship with the user.\n          required:\n          - following\n          - followed_by\n          - blocking\n          - blocked_by\n          properties:\n            following:\n              description: Indicates if the viewer is following the user.\n              type: boolean\n            followed_by:\n              description: Indicates if the viewer is followed by the user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5218, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8c140788-68ec-40e4-b5d7-84c3bd80e9b9": {"__data__": {"id_": "8c140788-68ec-40e4-b5d7-84c3bd80e9b9", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-follow-suggestions.md", "file_name": "neynar_fetch-follow-suggestions.md", "file_type": "text/markdown", "file_size": 5668, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9714bf0e-f68a-4e29-acbb-2f45b68e1e31", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-follow-suggestions.md", "file_name": "neynar_fetch-follow-suggestions.md", "file_type": "text/markdown", "file_size": 5668, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "819747f1039d3d8fba7c122de0199c55c7d08ecd90b2c0eab58e1a974f2b6d1c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "47bb9e4f-32a6-42ea-9997-178a75ea05db", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-follow-suggestions.md", "file_name": "neynar_fetch-follow-suggestions.md", "file_type": "text/markdown", "file_size": 5668, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "014a05976a84078371438541ca8fe176e3a12c02e2cc813a35c58751af427e90", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n            type: object\n            properties:\n              platform:\n                type: string\n                enum:\n                - x\n                - github\n              username:\n                type: string\n        power_badge:\n          type: boolean\n        experimental:\n          type: object\n          required:\n          - neynar_user_score\n          properties:\n            neynar_user_score:\n              type: number\n              format: double\n              description: Score that represents the probability that the account\n                is not spam.\n        viewer_context:\n          type: object\n          description: Adds context on the viewer's follow relationship with the user.\n          required:\n          - following\n          - followed_by\n          - blocking\n          - blocked_by\n          properties:\n            following:\n              description: Indicates if the viewer is following the user.\n              type: boolean\n            followed_by:\n              description: Indicates if the viewer is followed by the user.\n              type: boolean\n            blocking:\n              description: Indicates if the viewer is blocking the user.\n              type: boolean\n            blocked_by:\n              description: Indicates if the viewer is blocked by the user.\n              type: boolean\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4138, "end_char_idx": 5667, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bec31f46-6982-4be1-a58b-a1cf99eac827": {"__data__": {"id_": "bec31f46-6982-4be1-a58b-a1cf99eac827", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-followers-for-a-channel.md", "file_name": "neynar_fetch-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 5712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1650a337-55f4-4296-afe0-5724ee00fa47", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-followers-for-a-channel.md", "file_name": "neynar_fetch-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 5712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "b4f8b01d7f79d15a323ea1a2b16d3e9e489dbdbdaae33d78debec6d90faf9f03", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6198d3d5-c02f-4fc7-bf30-833d439a8fbb", "node_type": "1", "metadata": {}, "hash": "29c2991ce65ad25d30a51b153b3a7546f709e524636f4813ed06b4f33eee85f2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-followers-for-a-channel\n\n**Endpoint**: `GET /farcaster/channel/followers`\n\n## Description\nReturns a list of followers for a specific channel. Max limit is 1000. Use cursor for pagination.\n\n## Parameters\n- `id` (query): Channel ID for the channel being queried\n- `viewer_fid` (query): Providing this will return a list of followers that respects this user's mutes and blocks and includes `viewer_context`.\n- `cursor` (query): Pagination cursor.\n- `limit` (query): Number of followers to fetch\n\n## Response\n```yaml\ntype: object\nrequired:\n- users\n- next\nproperties:\n  users:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - fid\n      - custody_address\n      - username\n      - profile\n      - follower_count\n      - following_count\n      - verifications\n      - verified_addresses\n      - verified_accounts\n      - power_badge\n      properties:\n        object:\n          type: string\n          enum:\n          - user\n        fid:\n          type: integer\n          format: int32\n          description: The unique identifier of a farcaster user (unsigned integer)\n          examples:\n          - 3\n          - 191\n          - 2\n          - 194\n          - 19960\n        username:\n          type: string\n        display_name:\n          type: string\n        custody_address: &id001\n          type: string\n          pattern: ^0x[a-fA-F0-9]{40}$\n          description: Ethereum address\n        pfp_url:\n          type: string\n          description: The URL of the user's profile picture\n        profile:\n          type: object\n          required:\n          - bio\n          properties:\n            bio:\n              type: object\n              required:\n              - text\n              - mentioned_profiles\n              properties:\n                text:\n                  type: string\n                mentioned_profiles:\n                  type: array\n                  items:\n                    type: string\n                  default: []\n            location:\n              description: Coordinates and place names for a location\n              type: object\n              required:\n              - latitude\n              - longitude\n              properties:\n                latitude:\n                  type: number\n                  format: double\n                  minimum: -90\n                  maximum: 90\n                longitude:\n                  type: number\n                  format: double\n                  minimum: -180\n                  maximum: 180\n                address:\n                  type: object\n                  required:\n                  - city\n                  - country\n                  properties:\n                    city:\n                      type: string\n                    state:\n                      type: string\n                    state_code:\n                      type: string\n                    country:\n                      type: string\n                    country_code:\n                      type: string\n        follower_count:\n          type: integer\n          format: int32\n          description: The number of followers the user has.\n        following_count:\n          type: integer\n          format: int32\n          description: The number of users the user is following.\n        verifications:\n          type: array\n          items: *id001\n        verified_addresses:\n          type: object\n          required:\n          - eth_addresses\n          - sol_addresses\n          properties:\n            eth_addresses:\n              type: array\n              description: List of verified Ethereum addresses of the user sorted\n                by oldest to most recent.\n              items: *id001\n            sol_addresses:\n              type: array\n              description: List of verified Solana addresses of the user sorted by\n                oldest to most recent.\n              items:\n                type: string\n                pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                description: Solana address\n        verified_accounts:\n          type: array\n          description: Verified accounts of the user on other platforms, currently\n            only X is supported.\n          items:\n            type: object\n            properties:\n              platform:\n                type: string\n                enum:\n                - x\n                - github\n              username:\n                type: string\n        power_badge:\n          type: boolean\n        experimental:\n          type: object\n          required:\n          - neynar_user_score\n          properties:\n            neynar_user_score:\n              type: number\n              format: double\n              description: Score that represents the probability that the account\n                is not spam.\n        viewer_context:\n          type: object\n          description: Adds context on the viewer's follow relationship with the user.\n          required:\n          - following\n          - followed_by\n          - blocking\n          - blocked_by\n          properties:\n            following:\n              description: Indicates if the viewer is following the user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5133, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6198d3d5-c02f-4fc7-bf30-833d439a8fbb": {"__data__": {"id_": "6198d3d5-c02f-4fc7-bf30-833d439a8fbb", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-followers-for-a-channel.md", "file_name": "neynar_fetch-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 5712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1650a337-55f4-4296-afe0-5724ee00fa47", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-followers-for-a-channel.md", "file_name": "neynar_fetch-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 5712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "b4f8b01d7f79d15a323ea1a2b16d3e9e489dbdbdaae33d78debec6d90faf9f03", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bec31f46-6982-4be1-a58b-a1cf99eac827", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-followers-for-a-channel.md", "file_name": "neynar_fetch-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 5712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "31579bbb620e573e6c2a94dc134d02e3051897a139b2bfb5371c6082a25b447e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n            type: object\n            properties:\n              platform:\n                type: string\n                enum:\n                - x\n                - github\n              username:\n                type: string\n        power_badge:\n          type: boolean\n        experimental:\n          type: object\n          required:\n          - neynar_user_score\n          properties:\n            neynar_user_score:\n              type: number\n              format: double\n              description: Score that represents the probability that the account\n                is not spam.\n        viewer_context:\n          type: object\n          description: Adds context on the viewer's follow relationship with the user.\n          required:\n          - following\n          - followed_by\n          - blocking\n          - blocked_by\n          properties:\n            following:\n              description: Indicates if the viewer is following the user.\n              type: boolean\n            followed_by:\n              description: Indicates if the viewer is followed by the user.\n              type: boolean\n            blocking:\n              description: Indicates if the viewer is blocking the user.\n              type: boolean\n            blocked_by:\n              description: Indicates if the viewer is blocked by the user.\n              type: boolean\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4182, "end_char_idx": 5711, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b3e0828a-e7cb-4f05-aaac-b629359bee45": {"__data__": {"id_": "b3e0828a-e7cb-4f05-aaac-b629359bee45", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frame-catalog.md", "file_name": "neynar_fetch-frame-catalog.md", "file_type": "text/markdown", "file_size": 4732, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eddce048-724b-46f1-a817-d0c000e9602e", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frame-catalog.md", "file_name": "neynar_fetch-frame-catalog.md", "file_type": "text/markdown", "file_size": 4732, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "45e27a36dc612fb311f21924dd794a0cd21b4aec0b494e25ef63b2e1024e8d76", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-frame-catalog\n\n**Endpoint**: `GET /farcaster/frame/catalog`\n\n## Description\nA curated list of featured frames\n\n## Parameters\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor\n\n## Response\n```yaml\ntype: object\nrequired:\n- frames\n- next\nproperties:\n  frames:\n    type: array\n    items:\n      description: Frame v2 object\n      allOf:\n      - description: Frame base object used across all versions\n        type: object\n        required:\n        - version\n        - image\n        - frames_url\n        properties:\n          version:\n            type: string\n            description: Version of the frame, 'next' for v2, 'vNext' for v1\n          image:\n            type: string\n            description: URL of the image\n          frames_url:\n            type: string\n            description: Launch URL of the frame\n      - type: object\n        required:\n        - title\n        - name\n        - icon\n        properties:\n          manifest:\n            type: object\n            properties:\n              account_association:\n                type: object\n                properties:\n                  header:\n                    type: string\n                  payload:\n                    type: string\n                  signature:\n                    type: string\n                required:\n                - header\n                - payload\n                - signature\n              frame:\n                type: object\n                properties:\n                  version:\n                    type: string\n                    enum:\n                    - 0.0.0\n                    - 0.0.1\n                    - '1'\n                    - next\n                  name:\n                    type: string\n                    maxLength: 32\n                  home_url:\n                    type: string\n                    maxLength: 512\n                  icon_url:\n                    type: string\n                    maxLength: 512\n                  image_url:\n                    type: string\n                    maxLength: 512\n                  button_title:\n                    type: string\n                    maxLength: 32\n                  splash_image_url:\n                    type: string\n                    maxLength: 512\n                  splash_background_color:\n                    type: string\n                  webhook_url:\n                    type: string\n                    maxLength: 512\n                required:\n                - version\n                - name\n                - home_url\n                - icon_url\n              triggers:\n                type: array\n                items:\n                  oneOf:\n                  - type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                        - cast\n                      id:\n                        type: string\n                      url:\n                        type: string\n                        maxLength: 512\n                      name:\n                        type: string\n                        maxLength: 32\n                    required:\n                    - type\n                    - id\n                    - url\n                  - type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                        - composer\n                      id:\n                        type: string\n                      url:\n                        type: string\n                        maxLength: 512\n                      name:\n                        type: string\n                        maxLength: 32\n                    required:\n                    - type\n                    - id\n                    - url\n            required:\n            - account_association\n          author:\n            type: object\n            required:\n            - object\n            - fid\n            properties:\n              object:\n                type: string\n                enum:\n                - user_dehydrated\n              fid:\n                type: integer\n                format: int32\n                description: The unique identifier of a farcaster user (unsigned integer)\n                examples:\n                - 3\n                - 191\n                - 2\n                - 194\n                - 19960\n              username:\n                type: string\n              display_name:\n                type: string\n              pfp_url:\n                type: string\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4731, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a4d7874d-d430-4ee0-8b08-985e55df4388": {"__data__": {"id_": "a4d7874d-d430-4ee0-8b08-985e55df4388", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frame-meta-tags-from-url.md", "file_name": "neynar_fetch-frame-meta-tags-from-url.md", "file_type": "text/markdown", "file_size": 6687, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5847923f-bb29-473f-8b21-c5af1b9aef7c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frame-meta-tags-from-url.md", "file_name": "neynar_fetch-frame-meta-tags-from-url.md", "file_type": "text/markdown", "file_size": 6687, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "cb4b0b8f349201e7d57ada650ce2ebc8ce256f1102833c3bc020560cf5a4828a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4739ad3a-9681-4601-9197-1a2a94eb5ec3", "node_type": "1", "metadata": {}, "hash": "c877ac719303fa8649af6acc6f58e2b1102709568bc25e15c07d7497fab9b622", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-frame-meta-tags-from-url\n\n**Endpoint**: `GET /farcaster/frame/crawl`\n\n## Description\nFetches the frame meta tags from the URL\n\n## Parameters\n- `url` (query): The frame URL to crawl\n\n## Response\n```yaml\ntype: object\ndescription: The frame object containing the meta tags\nrequired:\n- frame\nproperties:\n  frame:\n    discriminator:\n      propertyName: version\n    oneOf:\n    - description: Frame v1 object\n      allOf:\n      - &id001\n        description: Frame base object used across all versions\n        type: object\n        required:\n        - version\n        - image\n        - frames_url\n        properties:\n          version:\n            type: string\n            description: Version of the frame, 'next' for v2, 'vNext' for v1\n          image:\n            type: string\n            description: URL of the image\n          frames_url:\n            type: string\n            description: Launch URL of the frame\n      - type: object\n        properties:\n          buttons:\n            type: array\n            items:\n              type: object\n              required:\n              - index\n              - action_type\n              properties:\n                title:\n                  type: string\n                  description: Title of the button\n                index:\n                  type: integer\n                  description: Index of the button\n                action_type:\n                  type: string\n                  description: The action type of a frame button. Action types \"mint\"\n                    & \"link\" are to be handled on the client side only and so they\n                    will produce a no/op for POST /farcaster/frame/action.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1661, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4739ad3a-9681-4601-9197-1a2a94eb5ec3": {"__data__": {"id_": "4739ad3a-9681-4601-9197-1a2a94eb5ec3", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frame-meta-tags-from-url.md", "file_name": "neynar_fetch-frame-meta-tags-from-url.md", "file_type": "text/markdown", "file_size": 6687, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5847923f-bb29-473f-8b21-c5af1b9aef7c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frame-meta-tags-from-url.md", "file_name": "neynar_fetch-frame-meta-tags-from-url.md", "file_type": "text/markdown", "file_size": 6687, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "cb4b0b8f349201e7d57ada650ce2ebc8ce256f1102833c3bc020560cf5a4828a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a4d7874d-d430-4ee0-8b08-985e55df4388", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frame-meta-tags-from-url.md", "file_name": "neynar_fetch-frame-meta-tags-from-url.md", "file_type": "text/markdown", "file_size": 6687, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "5955b3e0afdb5a4ecf017e79e2cda815299239923dc653f7252f4abc0eb54d94", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Action types \"mint\"\n                    & \"link\" are to be handled on the client side only and so they\n                    will produce a no/op for POST /farcaster/frame/action.\n                  enum:\n                  - post\n                  - post_redirect\n                  - tx\n                  - link\n                  - mint\n                target:\n                  type: string\n                  description: Target of the button\n                post_url:\n                  type: string\n                  description: Used specifically for the tx action type to post a\n                    successful transaction hash\n          post_url:\n            type: string\n            description: Post URL to take an action on this frame\n          title:\n            type: string\n          image_aspect_ratio:\n            type: string\n          input:\n            type: object\n            properties:\n              text:\n                type: string\n                description: Input text for the frame\n          state:\n            type: object\n            properties:\n              serialized:\n                type: string\n                description: State for the frame in a serialized format\n    - description: Frame v2 object\n      allOf:\n      - *id001\n      - type: object\n        required:\n        - title\n        - name\n        - icon\n        properties:\n          manifest:\n            type: object\n            properties:\n              account_association:\n                type: object\n                properties:\n                  header:\n                    type: string\n                  payload:\n                    type: string\n                  signature:\n                    type: string\n                required:\n                - header\n                - payload\n                - signature\n              frame:\n                type: object\n                properties:\n                  version:\n                    type: string\n                    enum:\n                    - 0.0.0\n                    - 0.0.1\n                    - '1'\n                    - next\n                  name:\n                    type: string\n                    maxLength: 32\n                  home_url:\n                    type: string\n                    maxLength: 512\n                  icon_url:\n                    type: string\n                    maxLength: 512\n                  image_url:\n                    type: string\n                    maxLength: 512\n                  button_title:\n                    type: string\n                    maxLength: 32\n                  splash_image_url:\n                    type: string\n                    maxLength: 512\n                  splash_background_color:\n                    type: string\n                  webhook_url:\n                    type: string\n                    maxLength: 512\n                required:\n                - version\n                - name\n                - home_url\n                - icon_url\n              triggers:\n                type: array\n                items:\n                  oneOf:\n                  - type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                        - cast\n                      id:\n                        type: string\n                      url:\n                        type: string\n                        maxLength: 512\n                      name:\n                        type: string\n                        maxLength: 32\n                    required:\n                    - type\n                    - id\n                    - url\n                  - type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                        - composer\n                      id:\n                        type: string\n                      url:\n                        type: string\n                        maxLength: 512\n                      name:\n                        type: string\n                        maxLength: 32\n                    required:\n                    - type\n                    - id\n                    - url\n            required:\n            - account_association\n          author:\n            type: object\n            required:\n            - object\n            - fid\n            properties:\n              object:\n                type: string\n                enum:\n                - user_dehydrated\n              fid:\n                type: integer\n                format: int32\n                description: The unique identifier of a farcaster user (unsigned integer)\n                examples:\n                - 3\n                - 191\n                - 2\n                - 194\n                - 19960\n              username:\n                type: string\n              display_name:\n                type: string\n              pfp_url:\n                type: string\n    mapping:\n      vNext: '#/components/schemas/FrameV1'\n      next: '#/components/schemas/FrameV2'\n      '1': '#/components/schemas/FrameV2'\n      0.0.0: '#/components/schemas/FrameV2'\n      0.0.1: '#/components/schemas/FrameV2'\n```", "mimetype": "text/plain", "start_char_idx": 1484, "end_char_idx": 6686, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c49e60a3-7542-41c9-a573-ae7963a37c56": {"__data__": {"id_": "c49e60a3-7542-41c9-a573-ae7963a37c56", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "409be0c4-4d7c-4334-be34-033907d218ef", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "7650a3268912e139f8b9d679d1cb33de81ac932f35e602989a77dc8896f420cc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3064e34f-6016-4870-83db-8f9f3a49ffd6", "node_type": "1", "metadata": {}, "hash": "5c551bf9b8e2c35fcc1cf384c95add49f00a3fc4b2edf11f1bfe16e591afba28", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-frames-only-feed\n\n**Endpoint**: `GET /farcaster/feed/frames`\n\n## Description\nFetch feed of casts with Frames, reverse chronological order\n\n## Parameters\n- `limit` (query): Number of results to fetch\n- `viewer_fid` (query): Providing this will return a feed that respects this user's mutes and blocks and includes `viewer_context`.\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- casts\n- next\nproperties:\n  casts:\n    type: array\n    items:\n      allOf:\n      - type: object\n        required:\n        - hash\n        - parent_hash\n        - parent_url\n        - root_parent_url\n        - parent_author\n        - author\n        - text\n        - timestamp\n        - embeds\n        properties:\n          hash:\n            type: string\n          parent_hash:\n            type:\n            - string\n            - 'null'\n          parent_url:\n            type:\n            - string\n            - 'null'\n          root_parent_url:\n            type:\n            - string\n            - 'null'\n          parent_author:\n            type: object\n            required:\n            - fid\n            properties:\n              fid:\n                oneOf:\n                - type: 'null'\n                - &id001\n                  type: integer\n                  format: int32\n                  description: The unique identifier of a farcaster user (unsigned\n                    integer)\n                  examples:\n                  - 3\n                  - 191\n                  - 2\n                  - 194\n                  - 19960\n          author: &id011\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: *id001\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id002\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5617, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3064e34f-6016-4870-83db-8f9f3a49ffd6": {"__data__": {"id_": "3064e34f-6016-4870-83db-8f9f3a49ffd6", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "409be0c4-4d7c-4334-be34-033907d218ef", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "7650a3268912e139f8b9d679d1cb33de81ac932f35e602989a77dc8896f420cc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c49e60a3-7542-41c9-a573-ae7963a37c56", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "421f1c454a57fb64e80dc49e90a076e7f46ea2007de20e57fb2db1b8b82c54bf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ec1e0243-7f36-4785-aa1f-601ad31bdf75", "node_type": "1", "metadata": {}, "hash": "fe0df8fb809538d41413faf06c0a270674cb9253987f2f1009b522ab38419e14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 4568, "end_char_idx": 7228, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ec1e0243-7f36-4785-aa1f-601ad31bdf75": {"__data__": {"id_": "ec1e0243-7f36-4785-aa1f-601ad31bdf75", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "409be0c4-4d7c-4334-be34-033907d218ef", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "7650a3268912e139f8b9d679d1cb33de81ac932f35e602989a77dc8896f420cc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3064e34f-6016-4870-83db-8f9f3a49ffd6", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "bc7d5ae5e37239b89fc7b7b2246f9a5715f57ae201371babcaaf4e3cd75c7968", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aef21a3f-44e6-45b0-9e8e-e69d1d55a215", "node_type": "1", "metadata": {}, "hash": "7693468d1bce4d6458a0c00eb5858d0c52e0d3acfd9f809418886132f3cd260d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          text:\n            type: string\n          timestamp: &id006\n            type: string\n            format: date-time\n          embeds:\n            type: array\n            items:\n              oneOf:\n              - &id007\n                type: object\n                required:\n                - url\n                properties:\n                  url:\n                    type: string\n                  metadata:\n                    type: object\n                    required:\n                    - _status\n                    properties:\n                      _status:\n                        type: string\n                      content_type:\n                        type:\n                        - string\n                        - 'null'\n                      content_length:\n                        type:\n                        - integer\n                        - 'null'\n                      image:\n                        type: object\n                        properties:\n                          height_px:\n                            type: integer\n                          width_px:\n                            type: integer\n                      video:\n                        type: object\n                        properties:\n                          duration_s:\n                            type: number\n                          stream:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                codec_name:\n                                  type: string\n                                height_px:\n                                  type: integer\n                                width_px:\n                                  type: integer\n                      html:\n                        allOf:\n                        - type: object\n                          properties:\n                            favicon:\n                              type: string\n                            modifiedTime:\n                              type: string\n                            ogArticleAuthor:\n                              type: string\n                            ogArticleExpirationTime:\n                              type: string\n                            ogArticleModifiedTime:\n                              type: string\n                            ogArticlePublishedTime:\n                              type: string\n                            ogArticlePublisher:\n                              type: string\n                            ogArticleSection:\n                              type: string\n                            ogArticleTag:\n                              type: string\n                            ogAudio:\n                              type: string\n                            ogAudioSecureURL:\n                              type: string\n                            ogAudioType:\n                              type: string\n                            ogAudioURL:\n                              type: string\n                            ogAvailability:\n                              type: string\n                            ogDate:\n                              type: string\n                            ogDescription:\n                              type: string\n                            ogDeterminer:\n                              type: string\n                            ogEpisode:\n                              type: string\n                            ogImage:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                  alt:\n                                    type: string\n                                required:\n                                - url\n                            ogLocale:\n                              type: string\n                            ogLocaleAlternate:\n                              type: string\n                            ogLogo:\n                              type: string\n                            ogMovie:\n                              type: string\n                            ogPriceAmount:\n                              type: string\n                            ogPriceCurrency:\n                              type: string\n                            ogProductAvailability:\n                              type: string\n                            ogProductCondition:\n                              type: string\n                            ogProductPriceAmount:\n                              type: string\n                            ogProductPriceCurrency:\n                              type: string\n                            ogProductRetailerItemId:\n                              type: string\n                            ogSiteName:\n                              type: string\n                            ogTitle:\n                              type: string\n                            ogType:\n                              type: string\n                            ogUrl:\n                              type: string\n                            ogVideo:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                required:\n                                - url\n                            ogVideoActor:\n                              type: string\n                            ogVideoActorId:\n                              type: string\n                            ogVideoActorRole:\n                              type: string\n                            ogVideoDirector:\n                              type: string\n                            ogVideoDuration:\n                              type: string\n                            ogVideoOther:\n                              type: string\n                            ogVideoReleaseDate:\n                              type: string\n                            ogVideoSecureURL:\n                              type: string\n                            ogVideoSeries:\n                              type: string\n                            ogVideoTag:\n                              type: string\n                            ogVideoTvShow:\n                              type: string\n                            ogVideoWriter:\n                              type: string\n                            ogWebsite:\n                              type: string\n                            updatedTime:\n                              type: string\n                        - type: object\n                          properties:\n                            oembed:\n                              oneOf:\n                              - allOf:\n                                - &id003\n                                  type: object\n                                  description: Basic data structure of every oembed\n                                    response see https://oembed.com/\n                                  required:\n                                  - type\n                                  - version\n                                  properties:\n                                    type:\n                                      type: string\n                                    version:\n                                      type:\n                                      - string\n                                      - 'null'\n                                    title:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A text title, describing the resource.", "mimetype": "text/plain", "start_char_idx": 6363, "end_char_idx": 15768, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aef21a3f-44e6-45b0-9e8e-e69d1d55a215": {"__data__": {"id_": "aef21a3f-44e6-45b0-9e8e-e69d1d55a215", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "409be0c4-4d7c-4334-be34-033907d218ef", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "7650a3268912e139f8b9d679d1cb33de81ac932f35e602989a77dc8896f420cc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ec1e0243-7f36-4785-aa1f-601ad31bdf75", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "b4d4d676fea1663863c7db8cdf5a53da4ad20be089e7fcc578d84a6951bdf791", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f4ee5b94-c677-4e76-8c2c-1b8b13908cb9", "node_type": "1", "metadata": {}, "hash": "02bb5551c6319ad9c9e131ba050e77c2a58a5756c4a5f538be3d18d6c2b844c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the author/owner of\n                                        the resource.\n                                    author_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL for the author/owner of the\n                                        resource.\n                                    provider_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the resource provider.\n                                    provider_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The url of the resource provider.\n                                    cache_age:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The suggested cache lifetime for\n                                        this resource, in seconds. Consumers may choose\n                                        to use this value or not.\n                                    thumbnail_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL to a thumbnail image representing\n                                        the resource. The thumbnail must respect any\n                                        maxwidth and maxheight parameters. If this\n                                        parameter is present, thumbnail_width and\n                                        thumbnail_height must also be present.\n                                    thumbnail_width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_height must also be present.\n                                    thumbnail_height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_width must also be present.\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - rich\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to display the\n                                        resource. The HTML should have no padding\n                                        or margins. Consumers may wish to load the\n                                        HTML in an off-domain iframe to avoid XSS\n                                        vulnerabilities. The markup should be valid\n                                        XHTML 1.0 Basic.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - video\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to embed a video\n                                        player. The HTML should have no padding or\n                                        margins. Consumers may wish to load the HTML\n                                        in an off-domain iframe to avoid XSS vulnerabilities.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 15805, "end_char_idx": 24135, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f4ee5b94-c677-4e76-8c2c-1b8b13908cb9": {"__data__": {"id_": "f4ee5b94-c677-4e76-8c2c-1b8b13908cb9", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "409be0c4-4d7c-4334-be34-033907d218ef", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "7650a3268912e139f8b9d679d1cb33de81ac932f35e602989a77dc8896f420cc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aef21a3f-44e6-45b0-9e8e-e69d1d55a215", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "19744f615a962097667a3fe99e6dcf0edfe51766201a4da60138ad6a2246538e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "24946620-e2bd-4be8-9bfd-1fbe94d0e901", "node_type": "1", "metadata": {}, "hash": "4bf0e8989166b44509d34059a21981076b724bc3fd8b9c3a31d03109f5c8881a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - link\n                              discriminator:\n                                propertyName: type\n                                mapping:\n                                  rich: '#/components/schemas/OembedRichData'\n                                  video: '#/components/schemas/OembedVideoData'\n                                  photo: '#/components/schemas/OembedPhotoData'\n                                  link: '#/components/schemas/OembedLinkData'\n                      frame: &id010\n                        discriminator:\n                          propertyName: version\n                        oneOf:\n                        - description: Frame v1 object\n                          allOf:\n                          - &id004\n                            description: Frame base object used across all versions\n                            type: object\n                            required:\n                            - version\n                            - image\n                            - frames_url\n                            properties:\n                              version:\n                                type: string\n                                description: Version of the frame, 'next' for v2,\n                                  'vNext' for v1\n                              image:\n                                type: string\n                                description: URL of the image\n                              frames_url:\n                                type: string\n                                description: Launch URL of the frame\n                          - type: object\n                            properties:\n                              buttons:\n                                type: array\n                                items:\n                                  type: object\n                                  required:\n                                  - index\n                                  - action_type\n                                  properties:\n                                    title:\n                                      type: string\n                                      description: Title of the button\n                                    index:\n                                      type: integer\n                                      description: Index of the button\n                                    action_type:\n                                      type: string\n                                      description: The action type of a frame button.\n                                        Action types \"mint\" & \"link\" are to be handled\n                                        on the client side only and so they will produce\n                                        a no/op for POST /farcaster/frame/action.\n                                      enum:\n                                      - post\n                                      - post_redirect\n                                      - tx\n                                      - link\n                                      - mint\n                                    target:\n                                      type: string\n                                      description: Target of the button\n                                    post_url:\n                                      type: string\n                                      description: Used specifically for the tx action\n                                        type to post a successful transaction hash\n                              post_url:\n                                type: string\n                                description: Post URL to take an action on this frame\n                              title:\n                                type: string\n                              image_aspect_ratio:\n                                type: string\n                              input:\n                                type: object\n                                properties:\n                                  text:\n                                    type: string\n                                    description: Input text for the frame\n                              state:\n                                type: object\n                                properties:\n                                  serialized:\n                                    type: string\n                                    description: State for the frame in a serialized\n                                      format\n                        - description: Frame v2 object\n                          allOf:\n                          - *id004\n                          - type: object\n                            required:\n                            - title\n                            - name\n                            - icon\n                            properties:\n                              manifest:\n                                type: object\n                                properties:\n                                  account_association:\n                                    type: object\n                                    properties:\n                                      header:\n                                        type: string\n                                      payload:\n                                        type: string\n                                      signature:\n                                        type: string\n                                    required:\n                                    - header\n                                    - payload\n                                    - signature\n                                  frame:\n                                    type: object\n                                    properties:\n                                      version:\n                                        type: string\n                                        enum:\n                                        - 0.0.0\n                                        - 0.0.", "mimetype": "text/plain", "start_char_idx": 22442, "end_char_idx": 30535, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "24946620-e2bd-4be8-9bfd-1fbe94d0e901": {"__data__": {"id_": "24946620-e2bd-4be8-9bfd-1fbe94d0e901", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "409be0c4-4d7c-4334-be34-033907d218ef", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "7650a3268912e139f8b9d679d1cb33de81ac932f35e602989a77dc8896f420cc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f4ee5b94-c677-4e76-8c2c-1b8b13908cb9", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "26ea7987028f86ac8780131cb18497cc925b7695fc14b865532ec037cf18cfbd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cd0c2d95-ba59-4763-8828-359496f9279a", "node_type": "1", "metadata": {}, "hash": "256dbc3a053302772e68551d3c8ed80cd3cc87d6cacee7a7b90bcf151cedcd80", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                        - 0.0.1\n                                        - '1'\n                                        - next\n                                      name:\n                                        type: string\n                                        maxLength: 32\n                                      home_url:\n                                        type: string\n                                        maxLength: 512\n                                      icon_url:\n                                        type: string\n                                        maxLength: 512\n                                      image_url:\n                                        type: string\n                                        maxLength: 512\n                                      button_title:\n                                        type: string\n                                        maxLength: 32\n                                      splash_image_url:\n                                        type: string\n                                        maxLength: 512\n                                      splash_background_color:\n                                        type: string\n                                      webhook_url:\n                                        type: string\n                                        maxLength: 512\n                                    required:\n                                    - version\n                                    - name\n                                    - home_url\n                                    - icon_url\n                                  triggers:\n                                    type: array\n                                    items:\n                                      oneOf:\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - cast\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - composer\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                required:\n                                - account_association\n                              author: &id005\n                                type: object\n                                required:\n                                - object\n                                - fid\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - user_dehydrated\n                                  fid: *id001\n                                  username:\n                                    type: string\n                                  display_name:\n                                    type: string\n                                  pfp_url:\n                                    type: string\n                        mapping:\n                          vNext: '#/components/schemas/FrameV1'\n                          next: '#/components/schemas/FrameV2'\n                          '1': '#/components/schemas/FrameV2'\n                          0.0.0: '#/components/schemas/FrameV2'\n                          0.0.1: '#/components/schemas/FrameV2'\n              - type: object\n                required:\n                - cast\n                properties:\n                  cast_id: &id008\n                    type: object\n                    required:\n                    - fid\n                    - hash\n                    properties:\n                      fid: *id001\n                      hash:\n                        type: string\n                  cast:\n                    type: object\n                    required:\n                    - hash\n                    - parent_hash\n                    - parent_url\n                    - root_parent_url\n                    - parent_author\n                    - author\n                    - text\n                    - timestamp\n                    - type\n                    - embeds\n                    - channel\n                    properties:\n                      hash:\n                        type: string\n                      parent_hash:\n                        type:\n                        - string\n                        - 'null'\n                      parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      root_parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      parent_author:\n                        type: object\n                        required:\n                        - fid\n                        properties:\n                          fid:\n                            oneOf:\n                            - type: 'null'\n                            - *id001\n                      author: *id005\n                      text:\n                        type: string\n                      timestamp: *id006\n                      type: &id009\n                        type: string\n                        enum:\n                        - cast-mention\n                        - cast-reply\n                        description: 'The notification type of a cast.\n\n                          '\n                      embeds:\n                        type: array\n                        items:\n                          oneOf:\n                          - *id007\n                          - type: object\n                            required:\n                            - cast\n                            properties:\n                              cast_id: *id008\n                              cast:\n                                type: object\n                                required:\n                                - object\n                                - hash\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - cast_dehydrated\n                                  hash:\n                                    type: string\n                                  author: *id005\n                      channel:\n                        oneOf:\n                        - type: 'null'\n                        - &id013\n                          type: object\n                          required:\n                          - id\n                          - name\n                          - object\n                          properties:\n                            id:\n                              type: string\n                            name:\n                              type: string\n                            object:\n                              type: string\n                              enum:\n                              - channel_dehydrated\n                            image_url:\n                              type: string\n                            viewer_context: &id012\n                              description: Adds context on the viewer's or author's\n                                role in the channel.", "mimetype": "text/plain", "start_char_idx": 30485, "end_char_idx": 39252, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cd0c2d95-ba59-4763-8828-359496f9279a": {"__data__": {"id_": "cd0c2d95-ba59-4763-8828-359496f9279a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "409be0c4-4d7c-4334-be34-033907d218ef", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "7650a3268912e139f8b9d679d1cb33de81ac932f35e602989a77dc8896f420cc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "24946620-e2bd-4be8-9bfd-1fbe94d0e901", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "242606254a774ddb2ec8169c0d155bbd67b9d1c876417173742341016e130ebb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                              required:\n                              - following\n                              properties:\n                                following:\n                                  description: Indicates if the user is following\n                                    the channel.\n                                  type: boolean\n                                role:\n                                  type: string\n                                  description: The role of a channel member\n                                  enum:\n                                  - member\n                                  - moderator\n          type: *id009\n      - type: object\n        required:\n        - reactions\n        - replies\n        - thread_hash\n        - mentioned_profiles\n        - channel\n        properties:\n          frames:\n            type: array\n            items: *id010\n          reactions:\n            type: object\n            required:\n            - likes\n            - recasts\n            - likes_count\n            - recasts_count\n            properties:\n              likes:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  properties:\n                    fid: *id001\n              recasts:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  - fname\n                  properties:\n                    fid: *id001\n                    fname:\n                      type: string\n              likes_count:\n                type: integer\n                format: int32\n              recasts_count:\n                type: integer\n                format: int32\n          replies:\n            type: object\n            required:\n            - count\n            properties:\n              count:\n                type: integer\n                format: int32\n          thread_hash:\n            type:\n            - string\n            - 'null'\n          mentioned_profiles:\n            type: array\n            items: *id011\n          channel:\n            oneOf:\n            - oneOf:\n              - type: object\n                required:\n                - id\n                - url\n                - object\n                properties:\n                  id:\n                    type: string\n                  url:\n                    type: string\n                  name:\n                    type: string\n                  description:\n                    type: string\n                  object:\n                    type: string\n                    enum:\n                    - channel\n                  created_at:\n                    description: Epoch timestamp in seconds.\n                    type: number\n                  follower_count:\n                    description: Number of followers the channel has.\n                    type: number\n                  external_link:\n                    type: object\n                    description: Channel's external link.\n                    properties:\n                      title:\n                        type: string\n                      url:\n                        type: string\n                  image_url:\n                    type: string\n                  parent_url:\n                    type: string\n                    format: uri\n                  lead: *id011\n                  moderator_fids:\n                    type: array\n                    items: *id001\n                  member_count:\n                    type: integer\n                    format: int32\n                  moderator: *id011\n                  pinned_cast_hash:\n                    type: string\n                    default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                    description: Cast Hash\n                  hosts:\n                    type: array\n                    deprecated: true\n                    items: *id011\n                  viewer_context: *id012\n              - *id013\n              discriminator:\n                propertyName: object\n                mapping:\n                  channel: '#/components/schemas/Channel'\n                  dehydrated_channel: '#/components/schemas/DehydratedChannel'\n            - type: 'null'\n          viewer_context:\n            type: object\n            description: Adds context on interactions the viewer has made with the\n              cast.\n            required:\n            - liked\n            - recasted\n            properties:\n              liked:\n                description: Indicates if the viewer liked the cast.\n                type: boolean\n              recasted:\n                description: Indicates if the viewer recasted the cast.\n                type: boolean\n          author_channel_context: *id012\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 39283, "end_char_idx": 44292, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f50412a1-0676-4321-a320-b2ba079598ed": {"__data__": {"id_": "f50412a1-0676-4321-a320-b2ba079598ed", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-mute-list.md", "file_name": "neynar_fetch-mute-list.md", "file_type": "text/markdown", "file_size": 6430, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d59aaf51-68ba-445a-a31e-9207cef6e3a4", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-mute-list.md", "file_name": "neynar_fetch-mute-list.md", "file_type": "text/markdown", "file_size": 6430, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "9d6bb4086248d06accae3c1baaa34cc477186c85167706eb476daddada9f70dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4a871066-1cfd-4eed-980d-77e5e22d3ac6", "node_type": "1", "metadata": {}, "hash": "80597905bf737af5cd7aeb39f62b2c77370a572d5713aafa74a65b2b34957ddc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-mute-list\n\n**Endpoint**: `GET /farcaster/mute/list`\n\n## Description\nFetches all FIDs that a user has muted.\n\n## Parameters\n- `fid` (query): The user's FID (identifier)\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- mutes\n- next\nproperties:\n  mutes:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - muted\n      - timestamp\n      - muted_at\n      properties:\n        object:\n          type: string\n          enum:\n          - mute\n        muted:\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid:\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5742, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4a871066-1cfd-4eed-980d-77e5e22d3ac6": {"__data__": {"id_": "4a871066-1cfd-4eed-980d-77e5e22d3ac6", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-mute-list.md", "file_name": "neynar_fetch-mute-list.md", "file_type": "text/markdown", "file_size": 6430, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d59aaf51-68ba-445a-a31e-9207cef6e3a4", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-mute-list.md", "file_name": "neynar_fetch-mute-list.md", "file_type": "text/markdown", "file_size": 6430, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "9d6bb4086248d06accae3c1baaa34cc477186c85167706eb476daddada9f70dc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f50412a1-0676-4321-a320-b2ba079598ed", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-mute-list.md", "file_name": "neynar_fetch-mute-list.md", "file_type": "text/markdown", "file_size": 6430, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "446e2bd9dfd34c29881f03ad994d2e1e28b97283ffad468107317138939055ca", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        muted_at:\n          type: string\n          format: date-time\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4647, "end_char_idx": 6429, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1e3ffdca-8c7e-4652-8791-7e38af3e8b39": {"__data__": {"id_": "1e3ffdca-8c7e-4652-8791-7e38af3e8b39", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-neynar-frames.md", "file_name": "neynar_fetch-neynar-frames.md", "file_type": "text/markdown", "file_size": 3946, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "72b8515f-4297-416b-a83b-786bb0e9a763", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-neynar-frames.md", "file_name": "neynar_fetch-neynar-frames.md", "file_type": "text/markdown", "file_size": 3946, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "31bbf03643d0ad19d58fe8ec945eaa893bf004124d3aaa3858b61be6070ab3b5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-neynar-frames\n\n**Endpoint**: `GET /farcaster/frame/list`\n\n## Description\nFetch a list of frames made by the developer (identified by API key)\n\n## Response\n```yaml\ntype: array\nitems:\n  type: object\n  properties:\n    uuid:\n      type: string\n      format: uuid\n      description: Unique identifier for the frame.\n    name:\n      type: string\n      description: Name of the frame.\n    link:\n      type: string\n      format: uri\n      description: Generated link for the frame's first page.\n    pages:\n      type: array\n      items:\n        type: object\n        properties:\n          uuid:\n            type: string\n            format: uuid\n            description: Unique identifier for the page.\n          version:\n            type: string\n            default: vNext\n            examples:\n            - vNext\n            description: The version of the page schema.\n          title:\n            type: string\n            examples:\n            - Welcome to Neynar\n            description: The title of the page.\n          image:\n            type: object\n            properties:\n              url:\n                type: string\n                format: uri\n                examples:\n                - https://i.imgur.com/qo2AzBf.jpeg\n                description: The URL of the page's image.\n              aspect_ratio:\n                type: string\n                description: The aspect ratio of the image.\n                enum:\n                - 1.91:1\n                - '1:1'\n            required:\n            - url\n            - aspect_ratio\n          buttons:\n            type: array\n            items:\n              type: object\n              properties:\n                title:\n                  type: string\n                  description: The title of the button.\n                index:\n                  type: integer\n                  description: The index of the button, first button should have index\n                    1 and so on.\n                action_type:\n                  type: string\n                  description: The type of action that the button performs.\n                  enum:\n                  - post\n                  - post_redirect\n                  - mint\n                  - link\n                next_page:\n                  oneOf:\n                  - type: object\n                    properties:\n                      uuid:\n                        type: string\n                        format: uuid\n                        description: The UUID of the next page.\n                    required:\n                    - uuid\n                  - type: object\n                    properties:\n                      redirect_url:\n                        type: string\n                        format: uri\n                        description: The URL to redirect to.\n                    required:\n                    - redirect_url\n                  - type: object\n                    properties:\n                      mint_url:\n                        type: string\n                        description: The URL for minting, specific to the mint action.\n                    required:\n                    - mint_url\n              required:\n              - title\n              - index\n              - action_type\n          input:\n            type: object\n            properties:\n              text:\n                type: object\n                properties:\n                  enabled:\n                    type: boolean\n                    default: false\n                    description: Indicates if text input is enabled.\n                  placeholder:\n                    type: string\n                    description: The placeholder text for the input.\n                required:\n                - enabled\n        required:\n        - uuid\n        - title\n        - version\n        - image\n    valid:\n      type: boolean\n      description: Indicates if the frame is valid.\n  required:\n  - uuid\n  - name\n  - pages\n  - link\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3945, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a0d95bc1-11dd-44ae-a852-97091b102b26": {"__data__": {"id_": "a0d95bc1-11dd-44ae-a852-97091b102b26", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notification-tokens.md", "file_name": "neynar_fetch-notification-tokens.md", "file_type": "text/markdown", "file_size": 1274, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "55b6eb42-fb70-4251-b568-5f1336d0823d", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notification-tokens.md", "file_name": "neynar_fetch-notification-tokens.md", "file_type": "text/markdown", "file_size": 1274, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "a738d920a21a7cc7eab708e0581a204e156c8a54b1a74e10e7c4894f0e2866de", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-notification-tokens\n\n**Endpoint**: `GET /farcaster/frame/notification_tokens`\n\n## Description\nReturns a list of notifications tokens related for an app\n\n\n## Parameters\n- `limit` (query): Number of results to fetch\n- `fids` (query): Comma separated list of FIDs, up to 100 at a time\n\n## Response\n```yaml\ntype: object\nrequired:\n- notification_tokens\n- next\nproperties:\n  notification_tokens:\n    type: array\n    items:\n      type: object\n      properties:\n        object:\n          type: string\n          enum:\n          - notification_token\n        url:\n          type: string\n        token:\n          type: string\n        status:\n          type: string\n          enum:\n          - enabled\n          - disabled\n        fid:\n          type: integer\n          format: int32\n          description: The unique identifier of a farcaster user (unsigned integer)\n          examples:\n          - 3\n          - 191\n          - 2\n          - 194\n          - 19960\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1273, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8554bc4b-e62e-4a32-a490-d887fe491494": {"__data__": {"id_": "8554bc4b-e62e-4a32-a490-d887fe491494", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "498c0339-c99b-46c6-9da7-f40bb8231d16", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b8e9c05a-3ec2-44bf-83e3-40e6eafcf646", "node_type": "1", "metadata": {}, "hash": "28a51ea5068f3852330e1cd27ef845c9112e4b91fef90f0909c46aa9ca49b4b2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-notifications-by-parent-url-for-user\n\n**Endpoint**: `GET /farcaster/notifications/parent_url`\n\n## Description\nReturns a list of notifications for a user in specific parent_urls\n\n## Parameters\n- `fid` (query): FID of the user you you want to fetch notifications for. The response will respect this user's mutes and blocks.\n- `parent_urls` (query): Comma separated parent_urls\n- `priority_mode` (query): When true, only returns notifications from power badge users and users that the viewer follows (if viewer_fid is provided).\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- unseen_notifications_count\n- notifications\n- next\nproperties:\n  unseen_notifications_count:\n    type: integer\n    format: int32\n  notifications:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - most_recent_timestamp\n      - type\n      - seen\n      properties:\n        object:\n          type: string\n        most_recent_timestamp:\n          type: string\n          format: date-time\n        type:\n          type: string\n          enum:\n          - follows\n          - recasts\n          - likes\n          - mention\n          - reply\n          - quote\n        seen:\n          type: boolean\n        follows:\n          type: array\n          items:\n            type: object\n            required:\n            - object\n            - user\n            properties:\n              object:\n                type: string\n                enum:\n                - follow\n              user: &id003\n                type: object\n                required:\n                - object\n                - fid\n                - custody_address\n                - username\n                - profile\n                - follower_count\n                - following_count\n                - verifications\n                - verified_addresses\n                - verified_accounts\n                - power_badge\n                properties:\n                  object:\n                    type: string\n                    enum:\n                    - user\n                  fid: &id002\n                    type: integer\n                    format: int32\n                    description: The unique identifier of a farcaster user (unsigned\n                      integer)\n                    examples:\n                    - 3\n                    - 191\n                    - 2\n                    - 194\n                    - 19960\n                  username:\n                    type: string\n                  display_name:\n                    type: string\n                  custody_address: &id001\n                    type: string\n                    pattern: ^0x[a-fA-F0-9]{40}$\n                    description: Ethereum address\n                  pfp_url:\n                    type: string\n                    description: The URL of the user's profile picture\n                  profile:\n                    type: object\n                    required:\n                    - bio\n                    properties:\n                      bio:\n                        type: object\n                        required:\n                        - text\n                        - mentioned_profiles\n                        properties:\n                          text:\n                            type: string\n                          mentioned_profiles:\n                            type: array\n                            items:\n                              type: string\n                            default: []\n                      location:\n                        description: Coordinates and place names for a location\n                        type: object\n                        required:\n                        - latitude\n                        - longitude\n                        properties:\n                          latitude:\n                            type: number\n                            format: double\n                            minimum: -90\n                            maximum: 90\n                          longitude:\n                            type: number\n                            format: double\n                            minimum: -180\n                            maximum: 180\n                          address:\n                            type: object\n                            required:\n                            - city\n                            - country\n                            properties:\n                              city:\n                                type: string\n                              state:\n                                type: string\n                              state_code:\n                                type: string\n                              country:\n                                type: string\n                              country_code:\n                                type: string\n                  follower_count:\n                    type: integer\n                    format: int32\n                    description: The number of followers the user has.\n                  following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id001\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id001\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5972, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b8e9c05a-3ec2-44bf-83e3-40e6eafcf646": {"__data__": {"id_": "b8e9c05a-3ec2-44bf-83e3-40e6eafcf646", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "498c0339-c99b-46c6-9da7-f40bb8231d16", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8554bc4b-e62e-4a32-a490-d887fe491494", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "2267d4b6d33886182c15f6fa56b209fa2a7528b2f18d88e7a66879ceb989c792", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "117d8be0-a941-469e-b96d-b1f41e5be856", "node_type": "1", "metadata": {}, "hash": "169a59319fb9d24fb0317dd2e49f2266fc7dc58ad08b58979bc54f908f94fb5b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id001\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id001\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.\n                        items:\n                          type: string\n                          pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                          description: Solana address\n                  verified_accounts:\n                    type: array\n                    description: Verified accounts of the user on other platforms,\n                      currently only X is supported.\n                    items:\n                      type: object\n                      properties:\n                        platform:\n                          type: string\n                          enum:\n                          - x\n                          - github\n                        username:\n                          type: string\n                  power_badge:\n                    type: boolean\n                  experimental:\n                    type: object\n                    required:\n                    - neynar_user_score\n                    properties:\n                      neynar_user_score:\n                        type: number\n                        format: double\n                        description: Score that represents the probability that the\n                          account is not spam.\n                  viewer_context:\n                    type: object\n                    description: Adds context on the viewer's follow relationship\n                      with the user.\n                    required:\n                    - following\n                    - followed_by\n                    - blocking\n                    - blocked_by\n                    properties:\n                      following:\n                        description: Indicates if the viewer is following the user.\n                        type: boolean\n                      followed_by:\n                        description: Indicates if the viewer is followed by the user.\n                        type: boolean\n                      blocking:\n                        description: Indicates if the viewer is blocking the user.\n                        type: boolean\n                      blocked_by:\n                        description: Indicates if the viewer is blocked by the user.\n                        type: boolean\n        cast:\n          allOf:\n          - type: object\n            required:\n            - hash\n            - parent_hash\n            - parent_url\n            - root_parent_url\n            - parent_author\n            - author\n            - text\n            - timestamp\n            - embeds\n            properties:\n              hash:\n                type: string\n              parent_hash:\n                type:\n                - string\n                - 'null'\n              parent_url:\n                type:\n                - string\n                - 'null'\n              root_parent_url:\n                type:\n                - string\n                - 'null'\n              parent_author:\n                type: object\n                required:\n                - fid\n                properties:\n                  fid:", "mimetype": "text/plain", "start_char_idx": 5038, "end_char_idx": 9008, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "117d8be0-a941-469e-b96d-b1f41e5be856": {"__data__": {"id_": "117d8be0-a941-469e-b96d-b1f41e5be856", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "498c0339-c99b-46c6-9da7-f40bb8231d16", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b8e9c05a-3ec2-44bf-83e3-40e6eafcf646", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "9605cb97cd7d172a2557456279d15cb894db72c7d3d0d3f32619473824a647db", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "46d45469-0c91-4159-aa8c-eccf9f71eca1", "node_type": "1", "metadata": {}, "hash": "52b458f77ee592d48e4766ccc889da44564713474057d1e23c41c84ca3b9781e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- 'null'\n              root_parent_url:\n                type:\n                - string\n                - 'null'\n              parent_author:\n                type: object\n                required:\n                - fid\n                properties:\n                  fid:\n                    oneOf:\n                    - type: 'null'\n                    - *id002\n              author: *id003\n              text:\n                type: string\n              timestamp: &id007\n                type: string\n                format: date-time\n              embeds:\n                type: array\n                items:\n                  oneOf:\n                  - &id008\n                    type: object\n                    required:\n                    - url\n                    properties:\n                      url:\n                        type: string\n                      metadata:\n                        type: object\n                        required:\n                        - _status\n                        properties:\n                          _status:\n                            type: string\n                          content_type:\n                            type:\n                            - string\n                            - 'null'\n                          content_length:\n                            type:", "mimetype": "text/plain", "start_char_idx": 8740, "end_char_idx": 10055, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "46d45469-0c91-4159-aa8c-eccf9f71eca1": {"__data__": {"id_": "46d45469-0c91-4159-aa8c-eccf9f71eca1", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "498c0339-c99b-46c6-9da7-f40bb8231d16", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "117d8be0-a941-469e-b96d-b1f41e5be856", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "c71f27b24a46626082ebe097b9e37445c88f6a113b3da9344c6fa272b56b30f9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e8bed4e1-1032-4ddf-bc44-8086a16dedba", "node_type": "1", "metadata": {}, "hash": "7ea3d4f5bcc4e2b23c3433b940f18b8ed7326f3f93f19b3c40f71a892b859eef", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "string\n                          content_type:\n                            type:\n                            - string\n                            - 'null'\n                          content_length:\n                            type:\n                            - integer\n                            - 'null'\n                          image:\n                            type: object\n                            properties:\n                              height_px:\n                                type: integer\n                              width_px:\n                                type: integer\n                          video:\n                            type: object\n                            properties:\n                              duration_s:\n                                type: number\n                              stream:\n                                type: array\n                                items:\n                                  type: object\n                                  properties:\n                                    codec_name:\n                                      type: string\n                                    height_px:\n                                      type: integer\n                                    width_px:", "mimetype": "text/plain", "start_char_idx": 9825, "end_char_idx": 11076, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e8bed4e1-1032-4ddf-bc44-8086a16dedba": {"__data__": {"id_": "e8bed4e1-1032-4ddf-bc44-8086a16dedba", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "498c0339-c99b-46c6-9da7-f40bb8231d16", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "46d45469-0c91-4159-aa8c-eccf9f71eca1", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "94fadc0f6ec0d2b1b20065421dfdb1cdb4ad42027cc2f6dbd72cc540aeddaa25", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fb919233-5614-4352-889f-b2e98a96fb4a", "node_type": "1", "metadata": {}, "hash": "989c46f75b41c4c0d531bc62cea994519459af3c051739d6747b5be10cc53c11", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "codec_name:\n                                      type: string\n                                    height_px:\n                                      type: integer\n                                    width_px:\n                                      type: integer\n                          html:\n                            allOf:\n                            - type: object\n                              properties:\n                                favicon:\n                                  type: string\n                                modifiedTime:\n                                  type: string\n                                ogArticleAuthor:\n                                  type: string\n                                ogArticleExpirationTime:\n                                  type: string\n                                ogArticleModifiedTime:\n                                  type: string\n                                ogArticlePublishedTime:\n                                  type: string\n                                ogArticlePublisher:\n                                  type: string\n                                ogArticleSection:\n                                  type: string\n                                ogArticleTag:", "mimetype": "text/plain", "start_char_idx": 10869, "end_char_idx": 12108, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fb919233-5614-4352-889f-b2e98a96fb4a": {"__data__": {"id_": "fb919233-5614-4352-889f-b2e98a96fb4a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "498c0339-c99b-46c6-9da7-f40bb8231d16", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e8bed4e1-1032-4ddf-bc44-8086a16dedba", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "aff92ff5e6948930a1afad962f1347a4c02cddf970cce9fb032af8507a911376", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6b5210ac-6af6-413c-8c27-616a5abb1127", "node_type": "1", "metadata": {}, "hash": "eb1b37b820dfcf3988165f8ee339eab4ab3683dff99edb7c1c3ccbc05abe0f44", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ogArticlePublisher:\n                                  type: string\n                                ogArticleSection:\n                                  type: string\n                                ogArticleTag:\n                                  type: string\n                                ogAudio:\n                                  type: string\n                                ogAudioSecureURL:\n                                  type: string\n                                ogAudioType:\n                                  type: string\n                                ogAudioURL:\n                                  type: string\n                                ogAvailability:\n                                  type: string\n                                ogDate:\n                                  type: string\n                                ogDescription:\n                                  type: string\n                                ogDeterminer:\n                                  type: string\n                                ogEpisode:\n                                  type: string\n                                ogImage:\n                                  type: array\n                                  items:", "mimetype": "text/plain", "start_char_idx": 11899, "end_char_idx": 13110, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6b5210ac-6af6-413c-8c27-616a5abb1127": {"__data__": {"id_": "6b5210ac-6af6-413c-8c27-616a5abb1127", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "498c0339-c99b-46c6-9da7-f40bb8231d16", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fb919233-5614-4352-889f-b2e98a96fb4a", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "dec44d95e6c43af2a7e944aca9518a6a4861766710f5f9037f4f8dfce61a5214", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9e5438a6-3abb-4d15-9195-20bf71b5d581", "node_type": "1", "metadata": {}, "hash": "20092ce7ecad094163eff191a397e80dc92a3a31b128997758d8bac50bed075b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ogEpisode:\n                                  type: string\n                                ogImage:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                      alt:\n                                        type: string\n                                    required:\n                                    - url\n                                ogLocale:\n                                  type: string\n                                ogLocaleAlternate:\n                                  type: string\n                                ogLogo:\n                                  type: string\n                                ogMovie:", "mimetype": "text/plain", "start_char_idx": 12925, "end_char_idx": 14096, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9e5438a6-3abb-4d15-9195-20bf71b5d581": {"__data__": {"id_": "9e5438a6-3abb-4d15-9195-20bf71b5d581", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "498c0339-c99b-46c6-9da7-f40bb8231d16", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6b5210ac-6af6-413c-8c27-616a5abb1127", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "7b3c360ec9c7ba6d0aab82b3244425ac7bb100a5df6d15f3261b87eee7042954", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "faef0c51-e77a-441b-b857-35f17aa1ee2e", "node_type": "1", "metadata": {}, "hash": "a7ef150ba359ec8557cc65d99f66b228f2b0f0d1c95eff0430a24242c093774b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: string\n                                ogLocaleAlternate:\n                                  type: string\n                                ogLogo:\n                                  type: string\n                                ogMovie:\n                                  type: string\n                                ogPriceAmount:\n                                  type: string\n                                ogPriceCurrency:\n                                  type: string\n                                ogProductAvailability:\n                                  type: string\n                                ogProductCondition:\n                                  type: string\n                                ogProductPriceAmount:\n                                  type: string\n                                ogProductPriceCurrency:\n                                  type: string\n                                ogProductRetailerItemId:\n                                  type: string\n                                ogSiteName:\n                                  type: string\n                                ogTitle:\n                                  type: string\n                                ogType:\n                                  type: string\n                                ogUrl:", "mimetype": "text/plain", "start_char_idx": 13858, "end_char_idx": 15147, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "faef0c51-e77a-441b-b857-35f17aa1ee2e": {"__data__": {"id_": "faef0c51-e77a-441b-b857-35f17aa1ee2e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "498c0339-c99b-46c6-9da7-f40bb8231d16", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9e5438a6-3abb-4d15-9195-20bf71b5d581", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "b5756fa4b192511859e6088452543c2f8494db6a4a490549887cf21e75ebb81f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "13f0b994-59d6-4167-a3b0-9136cec76a3e", "node_type": "1", "metadata": {}, "hash": "3af02eeccf7cb54b27140a88acbaf831ea435731c97df9d48ec12e63ebceff8e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: string\n                                ogTitle:\n                                  type: string\n                                ogType:\n                                  type: string\n                                ogUrl:\n                                  type: string\n                                ogVideo:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                    required:\n                                    - url\n                                ogVideoActor:\n                                  type: string\n                                ogVideoActorId:\n                                  type: string", "mimetype": "text/plain", "start_char_idx": 14921, "end_char_idx": 16085, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "13f0b994-59d6-4167-a3b0-9136cec76a3e": {"__data__": {"id_": "13f0b994-59d6-4167-a3b0-9136cec76a3e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "498c0339-c99b-46c6-9da7-f40bb8231d16", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "faef0c51-e77a-441b-b857-35f17aa1ee2e", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "cb89b007697b1b3a8127d9d5e2d8b8e02c1aee7873ef6706a894e0fe926bf824", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "96d9ca5f-1e72-4008-ad58-017d5f8c0a5a", "node_type": "1", "metadata": {}, "hash": "58ef074b7bcac2403bf389dca37ffee37fd85c01a6e303f9d6e9b0b6ccc2e4af", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- url\n                                ogVideoActor:\n                                  type: string\n                                ogVideoActorId:\n                                  type: string\n                                ogVideoActorRole:\n                                  type: string\n                                ogVideoDirector:\n                                  type: string\n                                ogVideoDuration:\n                                  type: string\n                                ogVideoOther:\n                                  type: string\n                                ogVideoReleaseDate:\n                                  type: string\n                                ogVideoSecureURL:\n                                  type: string\n                                ogVideoSeries:\n                                  type: string\n                                ogVideoTag:\n                                  type: string\n                                ogVideoTvShow:\n                                  type: string\n                                ogVideoWriter:\n                                  type: string\n                                ogWebsite:\n                                  type: string", "mimetype": "text/plain", "start_char_idx": 15892, "end_char_idx": 17126, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "96d9ca5f-1e72-4008-ad58-017d5f8c0a5a": {"__data__": {"id_": "96d9ca5f-1e72-4008-ad58-017d5f8c0a5a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "498c0339-c99b-46c6-9da7-f40bb8231d16", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "13f0b994-59d6-4167-a3b0-9136cec76a3e", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "7811a0d3ba7fa1e952e5c74c8822a8b4d6839f50a741e114c75b44a5545e1c51", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ede76c0e-c452-4365-b09c-d192bac32b0b", "node_type": "1", "metadata": {}, "hash": "351c428f60b47a81478c53e7dccf44c0c50b56b5373abf41bbc2294c725f7ea3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: string\n                                ogVideoWriter:\n                                  type: string\n                                ogWebsite:\n                                  type: string\n                                updatedTime:\n                                  type: string\n                            - type: object\n                              properties:\n                                oembed:\n                                  oneOf:\n                                  - allOf:\n                                    - &id004\n                                      type: object\n                                      description: Basic data structure of every oembed\n                                        response see https://oembed.com/\n                                      required:\n                                      - type\n                                      - version\n                                      properties:\n                                        type:\n                                          type: string\n                                        version:\n                                          type:\n                                          - string\n                                          - 'null'\n                                        title:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A text title, describing the\n                                            resource.\n                                        author_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the author/owner\n                                            of the resource.\n                                        author_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL for the author/owner\n                                            of the resource.\n                                        provider_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the resource provider.\n                                        provider_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The url of the resource provider.\n                                        cache_age:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The suggested cache lifetime\n                                            for this resource, in seconds. Consumers\n                                            may choose to use this value or not.\n                                        thumbnail_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL to a thumbnail image\n                                            representing the resource. The thumbnail\n                                            must respect any maxwidth and maxheight\n                                            parameters. If this parameter is present,\n                                            thumbnail_width and thumbnail_height must\n                                            also be present.\n                                        thumbnail_width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width of the optional thumbnail.\n                                            If this parameter is present, thumbnail_url\n                                            and thumbnail_height must also be present.\n                                        thumbnail_height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height of the optional\n                                            thumbnail. If this parameter is present,\n                                            thumbnail_url and thumbnail_width must\n                                            also be present.", "mimetype": "text/plain", "start_char_idx": 16930, "end_char_idx": 21924, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ede76c0e-c452-4365-b09c-d192bac32b0b": {"__data__": {"id_": "ede76c0e-c452-4365-b09c-d192bac32b0b", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "498c0339-c99b-46c6-9da7-f40bb8231d16", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "96d9ca5f-1e72-4008-ad58-017d5f8c0a5a", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d2cfb7fc054518eebd07efabb1439f033ff4a16638739d728bc829fcc3aa71ca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4e31c8ec-a3d6-46b1-bab2-6b187c82b25c", "node_type": "1", "metadata": {}, "hash": "8d9eab161584c6914f00db415326f13b4659f496da5188af18a808772433f07b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Consumers\n                                            may choose to use this value or not.\n                                        thumbnail_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL to a thumbnail image\n                                            representing the resource. The thumbnail\n                                            must respect any maxwidth and maxheight\n                                            parameters. If this parameter is present,\n                                            thumbnail_width and thumbnail_height must\n                                            also be present.\n                                        thumbnail_width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width of the optional thumbnail.\n                                            If this parameter is present, thumbnail_url\n                                            and thumbnail_height must also be present.\n                                        thumbnail_height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height of the optional\n                                            thumbnail. If this parameter is present,\n                                            thumbnail_url and thumbnail_width must\n                                            also be present.\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - rich\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to display\n                                            the resource. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities. The markup\n                                            should be valid XHTML 1.0 Basic.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - video\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to embed\n                                            a video player. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 20152, "end_char_idx": 27613, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4e31c8ec-a3d6-46b1-bab2-6b187c82b25c": {"__data__": {"id_": "4e31c8ec-a3d6-46b1-bab2-6b187c82b25c", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "498c0339-c99b-46c6-9da7-f40bb8231d16", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ede76c0e-c452-4365-b09c-d192bac32b0b", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "ff4f4725c09b111a3d0d42c80c4c53eae5d72e5e7e2401176a734348699ff163", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1ccdcbb8-b5dc-4faa-a112-ecf3c980be9e", "node_type": "1", "metadata": {}, "hash": "a027f1d3aa0f63f1af93da32e5ea91007c869a127a6f300f43465241edf0789d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.\n                                  - allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - link\n                                  discriminator:\n                                    propertyName: type\n                                    mapping:\n                                      rich: '#/components/schemas/OembedRichData'\n                                      video: '#/components/schemas/OembedVideoData'\n                                      photo: '#/components/schemas/OembedPhotoData'\n                                      link: '#/components/schemas/OembedLinkData'\n                          frame: &id011\n                            discriminator:\n                              propertyName: version\n                            oneOf:\n                            - description: Frame v1 object\n                              allOf:\n                              - &id005\n                                description: Frame base object used across all versions\n                                type: object\n                                required:\n                                - version\n                                - image\n                                - frames_url\n                                properties:\n                                  version:\n                                    type: string\n                                    description: Version of the frame, 'next' for\n                                      v2, 'vNext' for v1\n                                  image:\n                                    type: string\n                                    description: URL of the image\n                                  frames_url:\n                                    type: string\n                                    description: Launch URL of the frame\n                              - type: object\n                                properties:\n                                  buttons:\n                                    type: array\n                                    items:\n                                      type: object\n                                      required:\n                                      - index\n                                      - action_type\n                                      properties:\n                                        title:\n                                          type: string\n                                          description: Title of the button\n                                        index:\n                                          type: integer\n                                          description: Index of the button\n                                        action_type:\n                                          type: string\n                                          description: The action type of a frame\n                                            button. Action types \"mint\" & \"link\" are\n                                            to be handled on the client side only\n                                            and so they will produce a no/op for POST\n                                            /farcaster/frame/action.\n                                          enum:\n                                          - post\n                                          - post_redirect\n                                          - tx\n                                          - link\n                                          - mint\n                                        target:\n                                          type: string\n                                          description: Target of the button\n                                        post_url:\n                                          type: string\n                                          description: Used specifically for the tx\n                                            action type to post a successful transaction\n                                            hash\n                                  post_url:\n                                    type: string\n                                    description: Post URL to take an action on this\n                                      frame\n                                  title:\n                                    type: string\n                                  image_aspect_ratio:\n                                    type: string\n                                  input:\n                                    type: object\n                                    properties:\n                                      text:\n                                        type: string\n                                        description: Input text for the frame\n                                  state:\n                                    type: object\n                                    properties:\n                                      serialized:\n                                        type: string\n                                        description: State for the frame in a serialized\n                                          format\n                            - description: Frame v2 object\n                              allOf:\n                              - *id005\n                              - type: object\n                                required:\n                                - title\n                                - name\n                                - icon\n                                properties:\n                                  manifest:\n                                    type: object\n                                    properties:\n                                      account_association:\n                                        type: object\n                                        properties:\n                                          header:\n                                            type: string\n                                          payload:\n                                            type: string\n                                          signature:\n                                            type: string\n                                        required:\n                                        - header\n                                        - payload\n                                        - signature\n                                      frame:\n                                        type: object\n                                        properties:\n                                          version:\n                                            type: string\n                                            enum:\n                                            - 0.0.0\n                                            - 0.0.", "mimetype": "text/plain", "start_char_idx": 25792, "end_char_idx": 34655, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1ccdcbb8-b5dc-4faa-a112-ecf3c980be9e": {"__data__": {"id_": "1ccdcbb8-b5dc-4faa-a112-ecf3c980be9e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "498c0339-c99b-46c6-9da7-f40bb8231d16", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4e31c8ec-a3d6-46b1-bab2-6b187c82b25c", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "9f66aeb086ccad5a1046516df5cd7d6e58c2659ad3b2d941e2155a559ea6c66b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ea493015-5381-427d-a81b-b8e1ff449a68", "node_type": "1", "metadata": {}, "hash": "26d36fbb0caec6026b91aa3ecf03098312b6fd65f2e50432df9195ee34007f99", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                            - 0.0.1\n                                            - '1'\n                                            - next\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                          home_url:\n                                            type: string\n                                            maxLength: 512\n                                          icon_url:\n                                            type: string\n                                            maxLength: 512\n                                          image_url:\n                                            type: string\n                                            maxLength: 512\n                                          button_title:\n                                            type: string\n                                            maxLength: 32\n                                          splash_image_url:\n                                            type: string\n                                            maxLength: 512\n                                          splash_background_color:\n                                            type: string\n                                          webhook_url:\n                                            type: string\n                                            maxLength: 512\n                                        required:\n                                        - version\n                                        - name\n                                        - home_url\n                                        - icon_url\n                                      triggers:\n                                        type: array\n                                        items:\n                                          oneOf:\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - cast\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - composer\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                    required:\n                                    - account_association\n                                  author: &id006\n                                    type: object\n                                    required:\n                                    - object\n                                    - fid\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - user_dehydrated\n                                      fid: *id002\n                                      username:\n                                        type: string\n                                      display_name:\n                                        type: string\n                                      pfp_url:\n                                        type: string\n                            mapping:\n                              vNext: '#/components/schemas/FrameV1'\n                              next: '#/components/schemas/FrameV2'\n                              '1': '#/components/schemas/FrameV2'\n                              0.0.0: '#/components/schemas/FrameV2'\n                              0.0.1: '#/components/schemas/FrameV2'\n                  - type: object\n                    required:\n                    - cast\n                    properties:\n                      cast_id: &id009\n                        type: object\n                        required:\n                        - fid\n                        - hash\n                        properties:\n                          fid: *id002\n                          hash:\n                            type: string\n                      cast:\n                        type: object\n                        required:\n                        - hash\n                        - parent_hash\n                        - parent_url\n                        - root_parent_url\n                        - parent_author\n                        - author\n                        - text\n                        - timestamp\n                        - type\n                        - embeds\n                        - channel\n                        properties:\n                          hash:\n                            type: string\n                          parent_hash:\n                            type:\n                            - string\n                            - 'null'\n                          parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          root_parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          parent_author:\n                            type: object\n                            required:\n                            - fid\n                            properties:\n                              fid:\n                                oneOf:\n                                - type: 'null'\n                                - *id002\n                          author: *id006\n                          text:\n                            type: string\n                          timestamp: *id007\n                          type: &id010\n                            type: string\n                            enum:\n                            - cast-mention\n                            - cast-reply\n                            description: 'The notification type of a cast.\n\n                              '\n                          embeds:\n                            type: array\n                            items:\n                              oneOf:\n                              - *id008\n                              - type: object\n                                required:\n                                - cast\n                                properties:\n                                  cast_id: *id009\n                                  cast: &id014\n                                    type: object\n                                    required:\n                                    - object\n                                    - hash\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - cast_dehydrated\n                                      hash:\n                                        type: string\n                                      author: *id006\n                          channel:\n                            oneOf:\n                            - type: 'null'\n                            - &id013\n                              type: object\n                              required:\n                              - id\n                              - name\n                              - object\n                              properties:\n                                id:\n                                  type: string\n                                name:\n                                  type: string\n                                object:\n                                  type: string\n                                  enum:\n                                  - channel_dehydrated\n                                image_url:\n                                  type: string\n                                viewer_context: &id012\n                                  description: Adds context on the viewer's or author's\n                                    role in the channel.", "mimetype": "text/plain", "start_char_idx": 34601, "end_char_idx": 44191, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ea493015-5381-427d-a81b-b8e1ff449a68": {"__data__": {"id_": "ea493015-5381-427d-a81b-b8e1ff449a68", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "498c0339-c99b-46c6-9da7-f40bb8231d16", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1ccdcbb8-b5dc-4faa-a112-ecf3c980be9e", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "a31823ddca2eaab7681669a233404014faaf42d64f951a1227b9b7d4697b423a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                                  required:\n                                  - following\n                                  properties:\n                                    following:\n                                      description: Indicates if the user is following\n                                        the channel.\n                                      type: boolean\n                                    role:\n                                      type: string\n                                      description: The role of a channel member\n                                      enum:\n                                      - member\n                                      - moderator\n              type: *id010\n          - type: object\n            required:\n            - reactions\n            - replies\n            - thread_hash\n            - mentioned_profiles\n            - channel\n            properties:\n              frames:\n                type: array\n                items: *id011\n              reactions:\n                type: object\n                required:\n                - likes\n                - recasts\n                - likes_count\n                - recasts_count\n                properties:\n                  likes:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      properties:\n                        fid: *id002\n                  recasts:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      - fname\n                      properties:\n                        fid: *id002\n                        fname:\n                          type: string\n                  likes_count:\n                    type: integer\n                    format: int32\n                  recasts_count:\n                    type: integer\n                    format: int32\n              replies:\n                type: object\n                required:\n                - count\n                properties:\n                  count:\n                    type: integer\n                    format: int32\n              thread_hash:\n                type:\n                - string\n                - 'null'\n              mentioned_profiles:\n                type: array\n                items: *id003\n              channel:\n                oneOf:\n                - oneOf:\n                  - type: object\n                    required:\n                    - id\n                    - url\n                    - object\n                    properties:\n                      id:\n                        type: string\n                      url:\n                        type: string\n                      name:\n                        type: string\n                      description:\n                        type: string\n                      object:\n                        type: string\n                        enum:\n                        - channel\n                      created_at:\n                        description: Epoch timestamp in seconds.\n                        type: number\n                      follower_count:\n                        description: Number of followers the channel has.\n                        type: number\n                      external_link:\n                        type: object\n                        description: Channel's external link.\n                        properties:\n                          title:\n                            type: string\n                          url:\n                            type: string\n                      image_url:\n                        type: string\n                      parent_url:\n                        type: string\n                        format: uri\n                      lead: *id003\n                      moderator_fids:\n                        type: array\n                        items: *id002\n                      member_count:\n                        type: integer\n                        format: int32\n                      moderator: *id003\n                      pinned_cast_hash:\n                        type: string\n                        default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                        description: Cast Hash\n                      hosts:\n                        type: array\n                        deprecated: true\n                        items: *id003\n                      viewer_context: *id012\n                  - *id013\n                  discriminator:\n                    propertyName: object\n                    mapping:\n                      channel: '#/components/schemas/Channel'\n                      dehydrated_channel: '#/components/schemas/DehydratedChannel'\n                - type: 'null'\n              viewer_context:\n                type: object\n                description: Adds context on interactions the viewer has made with\n                  the cast.\n                required:\n                - liked\n                - recasted\n                properties:\n                  liked:\n                    description: Indicates if the viewer liked the cast.\n                    type: boolean\n                  recasted:\n                    description: Indicates if the viewer recasted the cast.\n                    type: boolean\n              author_channel_context: *id012\n        reactions:\n          type: array\n          items:\n            type: object\n            required:\n            - object\n            - cast\n            - user\n            properties:\n              object:\n                type: string\n                enum:\n                - likes\n                - recasts\n              cast: *id014\n              user: *id003\n        count:\n          type: integer\n          format: int32\n          description: The number of notifications of this(follows, likes, recast)\n            type bundled in a single notification.\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 44226, "end_char_idx": 50405, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "203ff23a-d255-406b-9940-b506e1f33b0d": {"__data__": {"id_": "203ff23a-d255-406b-9940-b506e1f33b0d", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "12ee5ab1-82af-4906-a4b0-a17830a35dc1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d84013fee861369e164a15d86fea703b4c2dcc498618677bb000a02170fb7b16", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ada81e08-098b-4692-8bf7-b8bc75640550", "node_type": "1", "metadata": {}, "hash": "5c551bf9b8e2c35fcc1cf384c95add49f00a3fc4b2edf11f1bfe16e591afba28", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-popular-casts-by-user\n\n**Endpoint**: `GET /farcaster/feed/user/popular`\n\n## Description\nFetch 10 most popular casts for a given user FID; popularity based on replies, likes and recasts; sorted by most popular first\n\n## Parameters\n- `fid` (query): FID of user whose feed you want to create\n- `viewer_fid` (query): No description\n\n## Response\n```yaml\ntype: object\nrequired:\n- casts\nproperties:\n  casts:\n    type: array\n    items:\n      allOf:\n      - type: object\n        required:\n        - hash\n        - parent_hash\n        - parent_url\n        - root_parent_url\n        - parent_author\n        - author\n        - text\n        - timestamp\n        - embeds\n        properties:\n          hash:\n            type: string\n          parent_hash:\n            type:\n            - string\n            - 'null'\n          parent_url:\n            type:\n            - string\n            - 'null'\n          root_parent_url:\n            type:\n            - string\n            - 'null'\n          parent_author:\n            type: object\n            required:\n            - fid\n            properties:\n              fid:\n                oneOf:\n                - type: 'null'\n                - &id001\n                  type: integer\n                  format: int32\n                  description: The unique identifier of a farcaster user (unsigned\n                    integer)\n                  examples:\n                  - 3\n                  - 191\n                  - 2\n                  - 194\n                  - 19960\n          author: &id011\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: *id001\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id002\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5568, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ada81e08-098b-4692-8bf7-b8bc75640550": {"__data__": {"id_": "ada81e08-098b-4692-8bf7-b8bc75640550", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "12ee5ab1-82af-4906-a4b0-a17830a35dc1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d84013fee861369e164a15d86fea703b4c2dcc498618677bb000a02170fb7b16", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "203ff23a-d255-406b-9940-b506e1f33b0d", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "af590976ba77d7b1d579be96de02a7f2cd2eaa4586e1868fce2c48da7e2e5ca5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "71dcad2d-3f94-4729-a722-115b9c441890", "node_type": "1", "metadata": {}, "hash": "fe0df8fb809538d41413faf06c0a270674cb9253987f2f1009b522ab38419e14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 4519, "end_char_idx": 7179, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "71dcad2d-3f94-4729-a722-115b9c441890": {"__data__": {"id_": "71dcad2d-3f94-4729-a722-115b9c441890", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "12ee5ab1-82af-4906-a4b0-a17830a35dc1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d84013fee861369e164a15d86fea703b4c2dcc498618677bb000a02170fb7b16", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ada81e08-098b-4692-8bf7-b8bc75640550", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "9c080156e30cd79652c3fb5df97ac6c04424fdd9da33c0d5b00dccb410700cb9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9deb15f4-7e25-4ab3-8cac-6cf14fb7d9b4", "node_type": "1", "metadata": {}, "hash": "7693468d1bce4d6458a0c00eb5858d0c52e0d3acfd9f809418886132f3cd260d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          text:\n            type: string\n          timestamp: &id006\n            type: string\n            format: date-time\n          embeds:\n            type: array\n            items:\n              oneOf:\n              - &id007\n                type: object\n                required:\n                - url\n                properties:\n                  url:\n                    type: string\n                  metadata:\n                    type: object\n                    required:\n                    - _status\n                    properties:\n                      _status:\n                        type: string\n                      content_type:\n                        type:\n                        - string\n                        - 'null'\n                      content_length:\n                        type:\n                        - integer\n                        - 'null'\n                      image:\n                        type: object\n                        properties:\n                          height_px:\n                            type: integer\n                          width_px:\n                            type: integer\n                      video:\n                        type: object\n                        properties:\n                          duration_s:\n                            type: number\n                          stream:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                codec_name:\n                                  type: string\n                                height_px:\n                                  type: integer\n                                width_px:\n                                  type: integer\n                      html:\n                        allOf:\n                        - type: object\n                          properties:\n                            favicon:\n                              type: string\n                            modifiedTime:\n                              type: string\n                            ogArticleAuthor:\n                              type: string\n                            ogArticleExpirationTime:\n                              type: string\n                            ogArticleModifiedTime:\n                              type: string\n                            ogArticlePublishedTime:\n                              type: string\n                            ogArticlePublisher:\n                              type: string\n                            ogArticleSection:\n                              type: string\n                            ogArticleTag:\n                              type: string\n                            ogAudio:\n                              type: string\n                            ogAudioSecureURL:\n                              type: string\n                            ogAudioType:\n                              type: string\n                            ogAudioURL:\n                              type: string\n                            ogAvailability:\n                              type: string\n                            ogDate:\n                              type: string\n                            ogDescription:\n                              type: string\n                            ogDeterminer:\n                              type: string\n                            ogEpisode:\n                              type: string\n                            ogImage:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                  alt:\n                                    type: string\n                                required:\n                                - url\n                            ogLocale:\n                              type: string\n                            ogLocaleAlternate:\n                              type: string\n                            ogLogo:\n                              type: string\n                            ogMovie:\n                              type: string\n                            ogPriceAmount:\n                              type: string\n                            ogPriceCurrency:\n                              type: string\n                            ogProductAvailability:\n                              type: string\n                            ogProductCondition:\n                              type: string\n                            ogProductPriceAmount:\n                              type: string\n                            ogProductPriceCurrency:\n                              type: string\n                            ogProductRetailerItemId:\n                              type: string\n                            ogSiteName:\n                              type: string\n                            ogTitle:\n                              type: string\n                            ogType:\n                              type: string\n                            ogUrl:\n                              type: string\n                            ogVideo:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                required:\n                                - url\n                            ogVideoActor:\n                              type: string\n                            ogVideoActorId:\n                              type: string\n                            ogVideoActorRole:\n                              type: string\n                            ogVideoDirector:\n                              type: string\n                            ogVideoDuration:\n                              type: string\n                            ogVideoOther:\n                              type: string\n                            ogVideoReleaseDate:\n                              type: string\n                            ogVideoSecureURL:\n                              type: string\n                            ogVideoSeries:\n                              type: string\n                            ogVideoTag:\n                              type: string\n                            ogVideoTvShow:\n                              type: string\n                            ogVideoWriter:\n                              type: string\n                            ogWebsite:\n                              type: string\n                            updatedTime:\n                              type: string\n                        - type: object\n                          properties:\n                            oembed:\n                              oneOf:\n                              - allOf:\n                                - &id003\n                                  type: object\n                                  description: Basic data structure of every oembed\n                                    response see https://oembed.com/\n                                  required:\n                                  - type\n                                  - version\n                                  properties:\n                                    type:\n                                      type: string\n                                    version:\n                                      type:\n                                      - string\n                                      - 'null'\n                                    title:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A text title, describing the resource.", "mimetype": "text/plain", "start_char_idx": 6314, "end_char_idx": 15719, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9deb15f4-7e25-4ab3-8cac-6cf14fb7d9b4": {"__data__": {"id_": "9deb15f4-7e25-4ab3-8cac-6cf14fb7d9b4", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "12ee5ab1-82af-4906-a4b0-a17830a35dc1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d84013fee861369e164a15d86fea703b4c2dcc498618677bb000a02170fb7b16", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "71dcad2d-3f94-4729-a722-115b9c441890", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "575fefe8b9e961d40bc34ce6a36cbee170efcf251b36dff0587cd17ddca55895", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5265d51a-ca90-4b1c-a5ce-c53bd7202d8d", "node_type": "1", "metadata": {}, "hash": "02bb5551c6319ad9c9e131ba050e77c2a58a5756c4a5f538be3d18d6c2b844c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the author/owner of\n                                        the resource.\n                                    author_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL for the author/owner of the\n                                        resource.\n                                    provider_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the resource provider.\n                                    provider_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The url of the resource provider.\n                                    cache_age:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The suggested cache lifetime for\n                                        this resource, in seconds. Consumers may choose\n                                        to use this value or not.\n                                    thumbnail_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL to a thumbnail image representing\n                                        the resource. The thumbnail must respect any\n                                        maxwidth and maxheight parameters. If this\n                                        parameter is present, thumbnail_width and\n                                        thumbnail_height must also be present.\n                                    thumbnail_width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_height must also be present.\n                                    thumbnail_height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_width must also be present.\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - rich\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to display the\n                                        resource. The HTML should have no padding\n                                        or margins. Consumers may wish to load the\n                                        HTML in an off-domain iframe to avoid XSS\n                                        vulnerabilities. The markup should be valid\n                                        XHTML 1.0 Basic.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - video\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to embed a video\n                                        player. The HTML should have no padding or\n                                        margins. Consumers may wish to load the HTML\n                                        in an off-domain iframe to avoid XSS vulnerabilities.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 15756, "end_char_idx": 24086, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5265d51a-ca90-4b1c-a5ce-c53bd7202d8d": {"__data__": {"id_": "5265d51a-ca90-4b1c-a5ce-c53bd7202d8d", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "12ee5ab1-82af-4906-a4b0-a17830a35dc1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d84013fee861369e164a15d86fea703b4c2dcc498618677bb000a02170fb7b16", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9deb15f4-7e25-4ab3-8cac-6cf14fb7d9b4", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "31c7775dae63404646a584ac69b190fc32f418026e8aeb4749818201c3f0f8db", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0998f06f-797f-4c4e-bd23-65a669e1087d", "node_type": "1", "metadata": {}, "hash": "4bf0e8989166b44509d34059a21981076b724bc3fd8b9c3a31d03109f5c8881a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - link\n                              discriminator:\n                                propertyName: type\n                                mapping:\n                                  rich: '#/components/schemas/OembedRichData'\n                                  video: '#/components/schemas/OembedVideoData'\n                                  photo: '#/components/schemas/OembedPhotoData'\n                                  link: '#/components/schemas/OembedLinkData'\n                      frame: &id010\n                        discriminator:\n                          propertyName: version\n                        oneOf:\n                        - description: Frame v1 object\n                          allOf:\n                          - &id004\n                            description: Frame base object used across all versions\n                            type: object\n                            required:\n                            - version\n                            - image\n                            - frames_url\n                            properties:\n                              version:\n                                type: string\n                                description: Version of the frame, 'next' for v2,\n                                  'vNext' for v1\n                              image:\n                                type: string\n                                description: URL of the image\n                              frames_url:\n                                type: string\n                                description: Launch URL of the frame\n                          - type: object\n                            properties:\n                              buttons:\n                                type: array\n                                items:\n                                  type: object\n                                  required:\n                                  - index\n                                  - action_type\n                                  properties:\n                                    title:\n                                      type: string\n                                      description: Title of the button\n                                    index:\n                                      type: integer\n                                      description: Index of the button\n                                    action_type:\n                                      type: string\n                                      description: The action type of a frame button.\n                                        Action types \"mint\" & \"link\" are to be handled\n                                        on the client side only and so they will produce\n                                        a no/op for POST /farcaster/frame/action.\n                                      enum:\n                                      - post\n                                      - post_redirect\n                                      - tx\n                                      - link\n                                      - mint\n                                    target:\n                                      type: string\n                                      description: Target of the button\n                                    post_url:\n                                      type: string\n                                      description: Used specifically for the tx action\n                                        type to post a successful transaction hash\n                              post_url:\n                                type: string\n                                description: Post URL to take an action on this frame\n                              title:\n                                type: string\n                              image_aspect_ratio:\n                                type: string\n                              input:\n                                type: object\n                                properties:\n                                  text:\n                                    type: string\n                                    description: Input text for the frame\n                              state:\n                                type: object\n                                properties:\n                                  serialized:\n                                    type: string\n                                    description: State for the frame in a serialized\n                                      format\n                        - description: Frame v2 object\n                          allOf:\n                          - *id004\n                          - type: object\n                            required:\n                            - title\n                            - name\n                            - icon\n                            properties:\n                              manifest:\n                                type: object\n                                properties:\n                                  account_association:\n                                    type: object\n                                    properties:\n                                      header:\n                                        type: string\n                                      payload:\n                                        type: string\n                                      signature:\n                                        type: string\n                                    required:\n                                    - header\n                                    - payload\n                                    - signature\n                                  frame:\n                                    type: object\n                                    properties:\n                                      version:\n                                        type: string\n                                        enum:\n                                        - 0.0.0\n                                        - 0.0.", "mimetype": "text/plain", "start_char_idx": 22393, "end_char_idx": 30486, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0998f06f-797f-4c4e-bd23-65a669e1087d": {"__data__": {"id_": "0998f06f-797f-4c4e-bd23-65a669e1087d", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "12ee5ab1-82af-4906-a4b0-a17830a35dc1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d84013fee861369e164a15d86fea703b4c2dcc498618677bb000a02170fb7b16", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5265d51a-ca90-4b1c-a5ce-c53bd7202d8d", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "7de0ac51b4a9fc0f622d65b01973b01491c49080db802afd7823a3981a67d799", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "69516814-07a2-4e11-b12e-19f7699e6a82", "node_type": "1", "metadata": {}, "hash": "1b52ac5af209a0426a92c2f19a37bb99d486308b3c5997979a49d30657d920ad", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                        - 0.0.1\n                                        - '1'\n                                        - next\n                                      name:\n                                        type: string\n                                        maxLength: 32\n                                      home_url:\n                                        type: string\n                                        maxLength: 512\n                                      icon_url:\n                                        type: string\n                                        maxLength: 512\n                                      image_url:\n                                        type: string\n                                        maxLength: 512\n                                      button_title:\n                                        type: string\n                                        maxLength: 32\n                                      splash_image_url:\n                                        type: string\n                                        maxLength: 512\n                                      splash_background_color:\n                                        type: string\n                                      webhook_url:\n                                        type: string\n                                        maxLength: 512\n                                    required:\n                                    - version\n                                    - name\n                                    - home_url\n                                    - icon_url\n                                  triggers:\n                                    type: array\n                                    items:\n                                      oneOf:\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - cast\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - composer\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                required:\n                                - account_association\n                              author: &id005\n                                type: object\n                                required:\n                                - object\n                                - fid\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - user_dehydrated\n                                  fid: *id001\n                                  username:\n                                    type: string\n                                  display_name:\n                                    type: string\n                                  pfp_url:\n                                    type: string\n                        mapping:\n                          vNext: '#/components/schemas/FrameV1'\n                          next: '#/components/schemas/FrameV2'\n                          '1': '#/components/schemas/FrameV2'\n                          0.0.0: '#/components/schemas/FrameV2'\n                          0.0.1: '#/components/schemas/FrameV2'\n              - type: object\n                required:\n                - cast\n                properties:\n                  cast_id: &id008\n                    type: object\n                    required:\n                    - fid\n                    - hash\n                    properties:\n                      fid: *id001\n                      hash:\n                        type: string\n                  cast:\n                    type: object\n                    required:\n                    - hash\n                    - parent_hash\n                    - parent_url\n                    - root_parent_url\n                    - parent_author\n                    - author\n                    - text\n                    - timestamp\n                    - type\n                    - embeds\n                    - channel\n                    properties:\n                      hash:\n                        type: string\n                      parent_hash:\n                        type:\n                        - string\n                        - 'null'\n                      parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      root_parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      parent_author:\n                        type: object\n                        required:\n                        - fid\n                        properties:\n                          fid:\n                            oneOf:\n                            - type: 'null'\n                            - *id001\n                      author: *id005\n                      text:\n                        type: string\n                      timestamp: *id006\n                      type: &id009\n                        type: string\n                        enum:\n                        - cast-mention\n                        - cast-reply\n                        description: 'The notification type of a cast.\n\n                          '\n                      embeds:\n                        type: array\n                        items:\n                          oneOf:\n                          - *id007\n                          - type: object\n                            required:\n                            - cast\n                            properties:\n                              cast_id: *id008\n                              cast:\n                                type: object\n                                required:\n                                - object\n                                - hash\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - cast_dehydrated\n                                  hash:\n                                    type: string\n                                  author: *id005\n                      channel:\n                        oneOf:\n                        - type: 'null'\n                        - &id013\n                          type: object\n                          required:\n                          - id\n                          - name\n                          - object\n                          properties:\n                            id:\n                              type: string\n                            name:\n                              type: string\n                            object:\n                              type: string\n                              enum:\n                              - channel_dehydrated\n                            image_url:\n                              type: string\n                            viewer_context: &id012\n                              description: Adds context on the viewer's or author's\n                                role in the channel.", "mimetype": "text/plain", "start_char_idx": 30436, "end_char_idx": 39203, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "69516814-07a2-4e11-b12e-19f7699e6a82": {"__data__": {"id_": "69516814-07a2-4e11-b12e-19f7699e6a82", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "12ee5ab1-82af-4906-a4b0-a17830a35dc1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d84013fee861369e164a15d86fea703b4c2dcc498618677bb000a02170fb7b16", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0998f06f-797f-4c4e-bd23-65a669e1087d", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "cc55e965d801514bafc9643a32b9d2deeb393bbc8d7c2e86fd59e1f064551ff2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                              required:\n                              - following\n                              properties:\n                                following:\n                                  description: Indicates if the user is following\n                                    the channel.\n                                  type: boolean\n                                role:\n                                  type: string\n                                  description: The role of a channel member\n                                  enum:\n                                  - member\n                                  - moderator\n          type: *id009\n      - type: object\n        required:\n        - reactions\n        - replies\n        - thread_hash\n        - mentioned_profiles\n        - channel\n        properties:\n          frames:\n            type: array\n            items: *id010\n          reactions:\n            type: object\n            required:\n            - likes\n            - recasts\n            - likes_count\n            - recasts_count\n            properties:\n              likes:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  properties:\n                    fid: *id001\n              recasts:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  - fname\n                  properties:\n                    fid: *id001\n                    fname:\n                      type: string\n              likes_count:\n                type: integer\n                format: int32\n              recasts_count:\n                type: integer\n                format: int32\n          replies:\n            type: object\n            required:\n            - count\n            properties:\n              count:\n                type: integer\n                format: int32\n          thread_hash:\n            type:\n            - string\n            - 'null'\n          mentioned_profiles:\n            type: array\n            items: *id011\n          channel:\n            oneOf:\n            - oneOf:\n              - type: object\n                required:\n                - id\n                - url\n                - object\n                properties:\n                  id:\n                    type: string\n                  url:\n                    type: string\n                  name:\n                    type: string\n                  description:\n                    type: string\n                  object:\n                    type: string\n                    enum:\n                    - channel\n                  created_at:\n                    description: Epoch timestamp in seconds.\n                    type: number\n                  follower_count:\n                    description: Number of followers the channel has.\n                    type: number\n                  external_link:\n                    type: object\n                    description: Channel's external link.\n                    properties:\n                      title:\n                        type: string\n                      url:\n                        type: string\n                  image_url:\n                    type: string\n                  parent_url:\n                    type: string\n                    format: uri\n                  lead: *id011\n                  moderator_fids:\n                    type: array\n                    items: *id001\n                  member_count:\n                    type: integer\n                    format: int32\n                  moderator: *id011\n                  pinned_cast_hash:\n                    type: string\n                    default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                    description: Cast Hash\n                  hosts:\n                    type: array\n                    deprecated: true\n                    items: *id011\n                  viewer_context: *id012\n              - *id013\n              discriminator:\n                propertyName: object\n                mapping:\n                  channel: '#/components/schemas/Channel'\n                  dehydrated_channel: '#/components/schemas/DehydratedChannel'\n            - type: 'null'\n          viewer_context:\n            type: object\n            description: Adds context on interactions the viewer has made with the\n              cast.\n            required:\n            - liked\n            - recasted\n            properties:\n              liked:\n                description: Indicates if the viewer liked the cast.\n                type: boolean\n              recasted:\n                description: Indicates if the viewer recasted the cast.\n                type: boolean\n          author_channel_context: *id012\n```", "mimetype": "text/plain", "start_char_idx": 39234, "end_char_idx": 44076, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ec2801d3-b041-4b73-a415-d9cf13e15153": {"__data__": {"id_": "ec2801d3-b041-4b73-a415-d9cf13e15153", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-power-users-lite.md", "file_name": "neynar_fetch-power-users-lite.md", "file_type": "text/markdown", "file_size": 664, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c1f53172-b5b2-4faa-b806-d55395f24284", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-power-users-lite.md", "file_name": "neynar_fetch-power-users-lite.md", "file_type": "text/markdown", "file_size": 664, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "fdafa2d4f69026fa03004cd0a8297be7080a7d7a837b7055677fa9f701d931c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-power-users-lite\n\n**Endpoint**: `GET /farcaster/user/power_lite`\n\n## Description\nFetches power users and respond in a backwards compatible format to Warpcast's deprecated power badge endpoint.\n\n## Parameters\n\n## Response\n```yaml\ntype: object\nrequired:\n- result\nproperties:\n  result:\n    type: object\n    required:\n    - fids\n    properties:\n      fids:\n        type: array\n        items:\n          type: integer\n          format: int32\n          description: The unique identifier of a farcaster user (unsigned integer)\n          examples:\n          - 3\n          - 191\n          - 2\n          - 194\n          - 19960\n        description: List of FIDs\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 663, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "18850c5c-ef6d-4824-b7a1-b25d617032d2": {"__data__": {"id_": "18850c5c-ef6d-4824-b7a1-b25d617032d2", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-power-users.md", "file_name": "neynar_fetch-power-users.md", "file_type": "text/markdown", "file_size": 5521, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7647f46b-342e-4dd8-b042-3bfaf2bc0717", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-power-users.md", "file_name": "neynar_fetch-power-users.md", "file_type": "text/markdown", "file_size": 5521, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "6a83066bf527405de68601ca93192c62fe6c2e800e123b38f028abddd33e678c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "faba5244-e35b-4022-ae99-d77817f348aa", "node_type": "1", "metadata": {}, "hash": "a14a716ecac17de8916767d591b1cc5c15ebd32207abe7ff02890f9018d468dd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-power-users\n\n**Endpoint**: `GET /farcaster/user/power`\n\n## Description\nFetches power users based on Warpcast power badges. Information is updated once a day.\n\n## Parameters\n- `viewer_fid` (query): No description\n- `limit` (query): Number of power users to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- users\n- next\nproperties:\n  users:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - fid\n      - custody_address\n      - username\n      - profile\n      - follower_count\n      - following_count\n      - verifications\n      - verified_addresses\n      - verified_accounts\n      - power_badge\n      properties:\n        object:\n          type: string\n          enum:\n          - user\n        fid:\n          type: integer\n          format: int32\n          description: The unique identifier of a farcaster user (unsigned integer)\n          examples:\n          - 3\n          - 191\n          - 2\n          - 194\n          - 19960\n        username:\n          type: string\n        display_name:\n          type: string\n        custody_address: &id001\n          type: string\n          pattern: ^0x[a-fA-F0-9]{40}$\n          description: Ethereum address\n        pfp_url:\n          type: string\n          description: The URL of the user's profile picture\n        profile:\n          type: object\n          required:\n          - bio\n          properties:\n            bio:\n              type: object\n              required:\n              - text\n              - mentioned_profiles\n              properties:\n                text:\n                  type: string\n                mentioned_profiles:\n                  type: array\n                  items:\n                    type: string\n                  default: []\n            location:\n              description: Coordinates and place names for a location\n              type: object\n              required:\n              - latitude\n              - longitude\n              properties:\n                latitude:\n                  type: number\n                  format: double\n                  minimum: -90\n                  maximum: 90\n                longitude:\n                  type: number\n                  format: double\n                  minimum: -180\n                  maximum: 180\n                address:\n                  type: object\n                  required:\n                  - city\n                  - country\n                  properties:\n                    city:\n                      type: string\n                    state:\n                      type: string\n                    state_code:\n                      type: string\n                    country:\n                      type: string\n                    country_code:\n                      type: string\n        follower_count:\n          type: integer\n          format: int32\n          description: The number of followers the user has.\n        following_count:\n          type: integer\n          format: int32\n          description: The number of users the user is following.\n        verifications:\n          type: array\n          items: *id001\n        verified_addresses:\n          type: object\n          required:\n          - eth_addresses\n          - sol_addresses\n          properties:\n            eth_addresses:\n              type: array\n              description: List of verified Ethereum addresses of the user sorted\n                by oldest to most recent.\n              items: *id001\n            sol_addresses:\n              type: array\n              description: List of verified Solana addresses of the user sorted by\n                oldest to most recent.\n              items:\n                type: string\n                pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                description: Solana address\n        verified_accounts:\n          type: array\n          description: Verified accounts of the user on other platforms, currently\n            only X is supported.\n          items:\n            type: object\n            properties:\n              platform:\n                type: string\n                enum:\n                - x\n                - github\n              username:\n                type: string\n        power_badge:\n          type: boolean\n        experimental:\n          type: object\n          required:\n          - neynar_user_score\n          properties:\n            neynar_user_score:\n              type: number\n              format: double\n              description: Score that represents the probability that the account\n                is not spam.\n        viewer_context:\n          type: object\n          description: Adds context on the viewer's follow relationship with the user.\n          required:\n          - following\n          - followed_by\n          - blocking\n          - blocked_by\n          properties:\n            following:\n              description: Indicates if the viewer is following the user.\n              type: boolean\n            followed_by:\n              description: Indicates if the viewer is followed by the user.\n              type: boolean\n            blocking:\n              description: Indicates if the viewer is blocking the user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5194, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "faba5244-e35b-4022-ae99-d77817f348aa": {"__data__": {"id_": "faba5244-e35b-4022-ae99-d77817f348aa", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-power-users.md", "file_name": "neynar_fetch-power-users.md", "file_type": "text/markdown", "file_size": 5521, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7647f46b-342e-4dd8-b042-3bfaf2bc0717", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-power-users.md", "file_name": "neynar_fetch-power-users.md", "file_type": "text/markdown", "file_size": 5521, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "6a83066bf527405de68601ca93192c62fe6c2e800e123b38f028abddd33e678c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "18850c5c-ef6d-4824-b7a1-b25d617032d2", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-power-users.md", "file_name": "neynar_fetch-power-users.md", "file_type": "text/markdown", "file_size": 5521, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "a05306c22b3fe39e1b5db4ce41e1aac62ae25f0a09ecb8ca46c84bdd0bbfdc0a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n          type: object\n          description: Adds context on the viewer's follow relationship with the user.\n          required:\n          - following\n          - followed_by\n          - blocking\n          - blocked_by\n          properties:\n            following:\n              description: Indicates if the viewer is following the user.\n              type: boolean\n            followed_by:\n              description: Indicates if the viewer is followed by the user.\n              type: boolean\n            blocking:\n              description: Indicates if the viewer is blocking the user.\n              type: boolean\n            blocked_by:\n              description: Indicates if the viewer is blocked by the user.\n              type: boolean\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4588, "end_char_idx": 5520, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "084f86b0-d2c2-4ecc-9b6d-49db3f53bdf8": {"__data__": {"id_": "084f86b0-d2c2-4ecc-9b6d-49db3f53bdf8", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers-for-a-channel.md", "file_name": "neynar_fetch-relevant-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 7009, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a52aba7f-2f91-44e4-bb88-604b60435ad9", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers-for-a-channel.md", "file_name": "neynar_fetch-relevant-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 7009, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "5365d082cca8306f08753ad43aaf1783cf41951ab52ed8d98b616ca36b8f24ad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "16577123-accf-4c68-9a73-5c47b6905071", "node_type": "1", "metadata": {}, "hash": "1eed8a835c8bb92600f4ab2581d3677e76dcdf4f1042618c2aa5021bb85c885d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-relevant-followers-for-a-channel\n\n**Endpoint**: `GET /farcaster/channel/followers/relevant`\n\n## Description\nReturns a list of relevant channel followers for a specific FID. This usually shows on a channel as \"X, Y, Z follow this channel\".\n\n## Parameters\n- `id` (query): Channel ID being queried\n- `viewer_fid` (query): The FID of the user to customize this response for. Providing this will also return a list of followers that respects this user's mutes and blocks and includes `viewer_context`.\n\n## Response\n```yaml\ntype: object\nrequired:\n- top_relevant_followers_hydrated\n- all_relevant_followers_dehydrated\nproperties:\n  top_relevant_followers_hydrated:\n    type: array\n    items:\n      type: object\n      properties:\n        object:\n          type: string\n          enum:\n          - follow\n        user:\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid: &id002\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5572, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "16577123-accf-4c68-9a73-5c47b6905071": {"__data__": {"id_": "16577123-accf-4c68-9a73-5c47b6905071", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers-for-a-channel.md", "file_name": "neynar_fetch-relevant-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 7009, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a52aba7f-2f91-44e4-bb88-604b60435ad9", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers-for-a-channel.md", "file_name": "neynar_fetch-relevant-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 7009, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "5365d082cca8306f08753ad43aaf1783cf41951ab52ed8d98b616ca36b8f24ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "084f86b0-d2c2-4ecc-9b6d-49db3f53bdf8", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers-for-a-channel.md", "file_name": "neynar_fetch-relevant-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 7009, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "4591a6357f976f5b7d1b8b6fedb8400ecffd87e5dfe5f55f8924ed01923433ad", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n  all_relevant_followers_dehydrated:\n    type: array\n    items:\n      type: object\n      properties:\n        object:\n          type: string\n          enum:\n          - follow\n        user:\n          type: object\n          required:\n          - object\n          - fid\n          properties:\n            object:\n              type: string\n              enum:\n              - user_dehydrated\n            fid: *id002\n            username:\n              type: string\n            display_name:\n              type: string\n            pfp_url:\n              type: string\n```", "mimetype": "text/plain", "start_char_idx": 4558, "end_char_idx": 7008, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "93cb844f-bbe3-45b6-b1ec-9e1c18df074b": {"__data__": {"id_": "93cb844f-bbe3-45b6-b1ec-9e1c18df074b", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers.md", "file_name": "neynar_fetch-relevant-followers.md", "file_type": "text/markdown", "file_size": 7000, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5b0a8fa8-6d08-4e30-acae-7b22be6c937d", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers.md", "file_name": "neynar_fetch-relevant-followers.md", "file_type": "text/markdown", "file_size": 7000, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "69d45480ee13be1cfcb65b4360d6d4e683505ccb36d8489c7f28e09a3e036a0a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "13be11fd-c002-47d3-b2c1-071339f08893", "node_type": "1", "metadata": {}, "hash": "1eed8a835c8bb92600f4ab2581d3677e76dcdf4f1042618c2aa5021bb85c885d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-relevant-followers\n\n**Endpoint**: `GET /farcaster/followers/relevant`\n\n## Description\nReturns a list of relevant followers for a specific FID. This usually shows on a profile as \"X, Y and Z follow this user\".\n\n## Parameters\n- `target_fid` (query): User who's profile you are looking at\n- `viewer_fid` (query): The FID of the user to customize this response for. Providing this will also return a list of followers that respects this user's mutes and blocks and includes `viewer_context`.\n\n## Response\n```yaml\ntype: object\nrequired:\n- top_relevant_followers_hydrated\n- all_relevant_followers_dehydrated\nproperties:\n  top_relevant_followers_hydrated:\n    type: array\n    items:\n      type: object\n      properties:\n        object:\n          type: string\n          enum:\n          - follow\n        user:\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid: &id002\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5725, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "13be11fd-c002-47d3-b2c1-071339f08893": {"__data__": {"id_": "13be11fd-c002-47d3-b2c1-071339f08893", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers.md", "file_name": "neynar_fetch-relevant-followers.md", "file_type": "text/markdown", "file_size": 7000, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5b0a8fa8-6d08-4e30-acae-7b22be6c937d", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers.md", "file_name": "neynar_fetch-relevant-followers.md", "file_type": "text/markdown", "file_size": 7000, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "69d45480ee13be1cfcb65b4360d6d4e683505ccb36d8489c7f28e09a3e036a0a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "93cb844f-bbe3-45b6-b1ec-9e1c18df074b", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers.md", "file_name": "neynar_fetch-relevant-followers.md", "file_type": "text/markdown", "file_size": 7000, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "28e8f16bf64b7bf207f3486f02f1f772f88f7aac3f178fe3967f802749f37f59", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n  all_relevant_followers_dehydrated:\n    type: array\n    items:\n      type: object\n      properties:\n        object:\n          type: string\n          enum:\n          - follow\n        user:\n          type: object\n          required:\n          - object\n          - fid\n          properties:\n            object:\n              type: string\n              enum:\n              - user_dehydrated\n            fid: *id002\n            username:\n              type: string\n            display_name:\n              type: string\n            pfp_url:\n              type: string\n```", "mimetype": "text/plain", "start_char_idx": 4549, "end_char_idx": 6999, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "46ba6189-c447-424b-afa7-3f276e58e2ac": {"__data__": {"id_": "46ba6189-c447-424b-afa7-3f276e58e2ac", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-fungible-owners.md", "file_name": "neynar_fetch-relevant-fungible-owners.md", "file_type": "text/markdown", "file_size": 5860, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24935a9d-0ae4-440b-b953-5d217bec2e89", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-fungible-owners.md", "file_name": "neynar_fetch-relevant-fungible-owners.md", "file_type": "text/markdown", "file_size": 5860, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "39685a06d9f21c2c036df8e1d12a5b0487e9986526eff724e46214bdc6b20a6b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "36803f1e-0729-405a-bf44-1f1847fbd3aa", "node_type": "1", "metadata": {}, "hash": "2e957ef945eb3ef0191e2c5a1d2ffedb36c695cf694c562308b5711cb0711368", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-relevant-fungible-owners\n\n**Endpoint**: `GET /farcaster/fungible/owner/relevant`\n\n## Description\nFetch a list of relevant owners for a specific FID. This usually shows on a fungible asset page as \"X, Y, Z and N others you know own this asset\".\n\n## Parameters\n- `contract_address` (query): Contract address of the fungible asset\n- `networks` (query): Comma separated list of networks to fetch balances for. Currently, only \"base\" is supported.\n- `viewer_fid` (query): The FID of the user to customize this response for. Providing this will also return a list of owners that respects this user's mutes and blocks and includes `viewer_context`.\n\n## Response\n```yaml\ntype: object\nrequired:\n- top_relevant_fungible_owners_hydrated\n- all_relevant_fungible_owners_dehydrated\nproperties:\n  top_relevant_owners_hydrated:\n    type: array\n    items: &id002\n      type: object\n      required:\n      - object\n      - fid\n      - custody_address\n      - username\n      - profile\n      - follower_count\n      - following_count\n      - verifications\n      - verified_addresses\n      - verified_accounts\n      - power_badge\n      properties:\n        object:\n          type: string\n          enum:\n          - user\n        fid:\n          type: integer\n          format: int32\n          description: The unique identifier of a farcaster user (unsigned integer)\n          examples:\n          - 3\n          - 191\n          - 2\n          - 194\n          - 19960\n        username:\n          type: string\n        display_name:\n          type: string\n        custody_address: &id001\n          type: string\n          pattern: ^0x[a-fA-F0-9]{40}$\n          description: Ethereum address\n        pfp_url:\n          type: string\n          description: The URL of the user's profile picture\n        profile:\n          type: object\n          required:\n          - bio\n          properties:\n            bio:\n              type: object\n              required:\n              - text\n              - mentioned_profiles\n              properties:\n                text:\n                  type: string\n                mentioned_profiles:\n                  type: array\n                  items:\n                    type: string\n                  default: []\n            location:\n              description: Coordinates and place names for a location\n              type: object\n              required:\n              - latitude\n              - longitude\n              properties:\n                latitude:\n                  type: number\n                  format: double\n                  minimum: -90\n                  maximum: 90\n                longitude:\n                  type: number\n                  format: double\n                  minimum: -180\n                  maximum: 180\n                address:\n                  type: object\n                  required:\n                  - city\n                  - country\n                  properties:\n                    city:\n                      type: string\n                    state:\n                      type: string\n                    state_code:\n                      type: string\n                    country:\n                      type: string\n                    country_code:\n                      type: string\n        follower_count:\n          type: integer\n          format: int32\n          description: The number of followers the user has.\n        following_count:\n          type: integer\n          format: int32\n          description: The number of users the user is following.\n        verifications:\n          type: array\n          items: *id001\n        verified_addresses:\n          type: object\n          required:\n          - eth_addresses\n          - sol_addresses\n          properties:\n            eth_addresses:\n              type: array\n              description: List of verified Ethereum addresses of the user sorted\n                by oldest to most recent.\n              items: *id001\n            sol_addresses:\n              type: array\n              description: List of verified Solana addresses of the user sorted by\n                oldest to most recent.\n              items:\n                type: string\n                pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                description: Solana address\n        verified_accounts:\n          type: array\n          description: Verified accounts of the user on other platforms, currently\n            only X is supported.\n          items:\n            type: object\n            properties:\n              platform:\n                type: string\n                enum:\n                - x\n                - github\n              username:\n                type: string\n        power_badge:\n          type: boolean\n        experimental:\n          type: object\n          required:\n          - neynar_user_score\n          properties:\n            neynar_user_score:\n              type: number\n              format: double\n              description: Score that represents the probability that the account\n                is not spam.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5017, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "36803f1e-0729-405a-bf44-1f1847fbd3aa": {"__data__": {"id_": "36803f1e-0729-405a-bf44-1f1847fbd3aa", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-fungible-owners.md", "file_name": "neynar_fetch-relevant-fungible-owners.md", "file_type": "text/markdown", "file_size": 5860, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24935a9d-0ae4-440b-b953-5d217bec2e89", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-fungible-owners.md", "file_name": "neynar_fetch-relevant-fungible-owners.md", "file_type": "text/markdown", "file_size": 5860, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "39685a06d9f21c2c036df8e1d12a5b0487e9986526eff724e46214bdc6b20a6b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "46ba6189-c447-424b-afa7-3f276e58e2ac", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-fungible-owners.md", "file_name": "neynar_fetch-relevant-fungible-owners.md", "file_type": "text/markdown", "file_size": 5860, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "b1ab35d61abc86e219ce0552da81c8c69a8d016cf166ad253f35b2bfc776f7ad", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                type: string\n                pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                description: Solana address\n        verified_accounts:\n          type: array\n          description: Verified accounts of the user on other platforms, currently\n            only X is supported.\n          items:\n            type: object\n            properties:\n              platform:\n                type: string\n                enum:\n                - x\n                - github\n              username:\n                type: string\n        power_badge:\n          type: boolean\n        experimental:\n          type: object\n          required:\n          - neynar_user_score\n          properties:\n            neynar_user_score:\n              type: number\n              format: double\n              description: Score that represents the probability that the account\n                is not spam.\n        viewer_context:\n          type: object\n          description: Adds context on the viewer's follow relationship with the user.\n          required:\n          - following\n          - followed_by\n          - blocking\n          - blocked_by\n          properties:\n            following:\n              description: Indicates if the viewer is following the user.\n              type: boolean\n            followed_by:\n              description: Indicates if the viewer is followed by the user.\n              type: boolean\n            blocking:\n              description: Indicates if the viewer is blocking the user.\n              type: boolean\n            blocked_by:\n              description: Indicates if the viewer is blocked by the user.\n              type: boolean\n  all_relevant_owners_dehydrated:\n    type: array\n    items: *id002\n```", "mimetype": "text/plain", "start_char_idx": 4119, "end_char_idx": 5859, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3e230300-b33c-4029-b775-96238d35efc6": {"__data__": {"id_": "3e230300-b33c-4029-b775-96238d35efc6", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8e61ef0d-2fc3-4c00-9d0a-821514a1aebd", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "355b8426e1df6cf9116d365ca6767aca6205f9062921341e4398e1874d08ca13", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6f028d34-ef15-4a67-8ab5-d89b0dce3731", "node_type": "1", "metadata": {}, "hash": "276d9829bd28ca7c832cf3651919d5f3d9662484a0269ecacb934ce07c8af95d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-replies-and-recasts-for-user\n\n**Endpoint**: `GET /farcaster/feed/user/replies_and_recasts`\n\n## Description\nFetch recent replies and recasts for a given user FID; sorted by most recent first\n\n## Parameters\n- `fid` (query): FID of user whose replies and recasts you want to fetch\n- `filter` (query): filter to fetch only replies or recasts\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n- `viewer_fid` (query): Providing this will return a feed that respects this user's mutes and blocks and includes `viewer_context`.\n\n## Response\n```yaml\ntype: object\nrequired:\n- casts\n- next\nproperties:\n  casts:\n    type: array\n    items:\n      allOf:\n      - type: object\n        required:\n        - hash\n        - parent_hash\n        - parent_url\n        - root_parent_url\n        - parent_author\n        - author\n        - text\n        - timestamp\n        - embeds\n        properties:\n          hash:\n            type: string\n          parent_hash:\n            type:\n            - string\n            - 'null'\n          parent_url:\n            type:\n            - string\n            - 'null'\n          root_parent_url:\n            type:\n            - string\n            - 'null'\n          parent_author:\n            type: object\n            required:\n            - fid\n            properties:\n              fid:\n                oneOf:\n                - type: 'null'\n                - &id001\n                  type: integer\n                  format: int32\n                  description: The unique identifier of a farcaster user (unsigned\n                    integer)\n                  examples:\n                  - 3\n                  - 191\n                  - 2\n                  - 194\n                  - 19960\n          author: &id011\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: *id001\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id002\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5440, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6f028d34-ef15-4a67-8ab5-d89b0dce3731": {"__data__": {"id_": "6f028d34-ef15-4a67-8ab5-d89b0dce3731", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8e61ef0d-2fc3-4c00-9d0a-821514a1aebd", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "355b8426e1df6cf9116d365ca6767aca6205f9062921341e4398e1874d08ca13", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3e230300-b33c-4029-b775-96238d35efc6", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "94835c1b36dd6ec678b0384e1ccef1d4096768a3b347b29879b01ae43c2f7a66", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3f60c2b2-3f69-42f7-af10-027741125f46", "node_type": "1", "metadata": {}, "hash": "fe0df8fb809538d41413faf06c0a270674cb9253987f2f1009b522ab38419e14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 4590, "end_char_idx": 7413, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3f60c2b2-3f69-42f7-af10-027741125f46": {"__data__": {"id_": "3f60c2b2-3f69-42f7-af10-027741125f46", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8e61ef0d-2fc3-4c00-9d0a-821514a1aebd", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "355b8426e1df6cf9116d365ca6767aca6205f9062921341e4398e1874d08ca13", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6f028d34-ef15-4a67-8ab5-d89b0dce3731", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "b56971ff7a7ce04f9e23c998f99313e63eefe0a7eaacf4261c8582ca4dbab1e9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "671ca948-695b-4511-8945-1e269db3803b", "node_type": "1", "metadata": {}, "hash": "7693468d1bce4d6458a0c00eb5858d0c52e0d3acfd9f809418886132f3cd260d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          text:\n            type: string\n          timestamp: &id006\n            type: string\n            format: date-time\n          embeds:\n            type: array\n            items:\n              oneOf:\n              - &id007\n                type: object\n                required:\n                - url\n                properties:\n                  url:\n                    type: string\n                  metadata:\n                    type: object\n                    required:\n                    - _status\n                    properties:\n                      _status:\n                        type: string\n                      content_type:\n                        type:\n                        - string\n                        - 'null'\n                      content_length:\n                        type:\n                        - integer\n                        - 'null'\n                      image:\n                        type: object\n                        properties:\n                          height_px:\n                            type: integer\n                          width_px:\n                            type: integer\n                      video:\n                        type: object\n                        properties:\n                          duration_s:\n                            type: number\n                          stream:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                codec_name:\n                                  type: string\n                                height_px:\n                                  type: integer\n                                width_px:\n                                  type: integer\n                      html:\n                        allOf:\n                        - type: object\n                          properties:\n                            favicon:\n                              type: string\n                            modifiedTime:\n                              type: string\n                            ogArticleAuthor:\n                              type: string\n                            ogArticleExpirationTime:\n                              type: string\n                            ogArticleModifiedTime:\n                              type: string\n                            ogArticlePublishedTime:\n                              type: string\n                            ogArticlePublisher:\n                              type: string\n                            ogArticleSection:\n                              type: string\n                            ogArticleTag:\n                              type: string\n                            ogAudio:\n                              type: string\n                            ogAudioSecureURL:\n                              type: string\n                            ogAudioType:\n                              type: string\n                            ogAudioURL:\n                              type: string\n                            ogAvailability:\n                              type: string\n                            ogDate:\n                              type: string\n                            ogDescription:\n                              type: string\n                            ogDeterminer:\n                              type: string\n                            ogEpisode:\n                              type: string\n                            ogImage:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                  alt:\n                                    type: string\n                                required:\n                                - url\n                            ogLocale:\n                              type: string\n                            ogLocaleAlternate:\n                              type: string\n                            ogLogo:\n                              type: string\n                            ogMovie:\n                              type: string\n                            ogPriceAmount:\n                              type: string\n                            ogPriceCurrency:\n                              type: string\n                            ogProductAvailability:\n                              type: string\n                            ogProductCondition:\n                              type: string\n                            ogProductPriceAmount:\n                              type: string\n                            ogProductPriceCurrency:\n                              type: string\n                            ogProductRetailerItemId:\n                              type: string\n                            ogSiteName:\n                              type: string\n                            ogTitle:\n                              type: string\n                            ogType:\n                              type: string\n                            ogUrl:\n                              type: string\n                            ogVideo:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                required:\n                                - url\n                            ogVideoActor:\n                              type: string\n                            ogVideoActorId:\n                              type: string\n                            ogVideoActorRole:\n                              type: string\n                            ogVideoDirector:\n                              type: string\n                            ogVideoDuration:\n                              type: string\n                            ogVideoOther:\n                              type: string\n                            ogVideoReleaseDate:\n                              type: string\n                            ogVideoSecureURL:\n                              type: string\n                            ogVideoSeries:\n                              type: string\n                            ogVideoTag:\n                              type: string\n                            ogVideoTvShow:\n                              type: string\n                            ogVideoWriter:\n                              type: string\n                            ogWebsite:\n                              type: string\n                            updatedTime:\n                              type: string\n                        - type: object\n                          properties:\n                            oembed:\n                              oneOf:\n                              - allOf:\n                                - &id003\n                                  type: object\n                                  description: Basic data structure of every oembed\n                                    response see https://oembed.com/\n                                  required:\n                                  - type\n                                  - version\n                                  properties:\n                                    type:\n                                      type: string\n                                    version:\n                                      type:\n                                      - string\n                                      - 'null'\n                                    title:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A text title, describing the resource.", "mimetype": "text/plain", "start_char_idx": 6548, "end_char_idx": 15953, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "671ca948-695b-4511-8945-1e269db3803b": {"__data__": {"id_": "671ca948-695b-4511-8945-1e269db3803b", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8e61ef0d-2fc3-4c00-9d0a-821514a1aebd", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "355b8426e1df6cf9116d365ca6767aca6205f9062921341e4398e1874d08ca13", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3f60c2b2-3f69-42f7-af10-027741125f46", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "1c39536cf54c46354fa30a9c63f7f5de4960715720e6dc62bfa99a779ea89a71", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "12d77081-1b8e-4e65-b0bd-2a8f4d1e45ae", "node_type": "1", "metadata": {}, "hash": "02bb5551c6319ad9c9e131ba050e77c2a58a5756c4a5f538be3d18d6c2b844c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the author/owner of\n                                        the resource.\n                                    author_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL for the author/owner of the\n                                        resource.\n                                    provider_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the resource provider.\n                                    provider_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The url of the resource provider.\n                                    cache_age:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The suggested cache lifetime for\n                                        this resource, in seconds. Consumers may choose\n                                        to use this value or not.\n                                    thumbnail_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL to a thumbnail image representing\n                                        the resource. The thumbnail must respect any\n                                        maxwidth and maxheight parameters. If this\n                                        parameter is present, thumbnail_width and\n                                        thumbnail_height must also be present.\n                                    thumbnail_width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_height must also be present.\n                                    thumbnail_height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_width must also be present.\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - rich\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to display the\n                                        resource. The HTML should have no padding\n                                        or margins. Consumers may wish to load the\n                                        HTML in an off-domain iframe to avoid XSS\n                                        vulnerabilities. The markup should be valid\n                                        XHTML 1.0 Basic.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - video\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to embed a video\n                                        player. The HTML should have no padding or\n                                        margins. Consumers may wish to load the HTML\n                                        in an off-domain iframe to avoid XSS vulnerabilities.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 15990, "end_char_idx": 24320, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "12d77081-1b8e-4e65-b0bd-2a8f4d1e45ae": {"__data__": {"id_": "12d77081-1b8e-4e65-b0bd-2a8f4d1e45ae", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8e61ef0d-2fc3-4c00-9d0a-821514a1aebd", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "355b8426e1df6cf9116d365ca6767aca6205f9062921341e4398e1874d08ca13", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "671ca948-695b-4511-8945-1e269db3803b", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "9785f81fa5f414ca79d47722ab92b205a20d97ddede4d123b805aceec989c442", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0aa7e29b-6bc4-4fa3-933e-543ebcaad5bf", "node_type": "1", "metadata": {}, "hash": "4bf0e8989166b44509d34059a21981076b724bc3fd8b9c3a31d03109f5c8881a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - link\n                              discriminator:\n                                propertyName: type\n                                mapping:\n                                  rich: '#/components/schemas/OembedRichData'\n                                  video: '#/components/schemas/OembedVideoData'\n                                  photo: '#/components/schemas/OembedPhotoData'\n                                  link: '#/components/schemas/OembedLinkData'\n                      frame: &id010\n                        discriminator:\n                          propertyName: version\n                        oneOf:\n                        - description: Frame v1 object\n                          allOf:\n                          - &id004\n                            description: Frame base object used across all versions\n                            type: object\n                            required:\n                            - version\n                            - image\n                            - frames_url\n                            properties:\n                              version:\n                                type: string\n                                description: Version of the frame, 'next' for v2,\n                                  'vNext' for v1\n                              image:\n                                type: string\n                                description: URL of the image\n                              frames_url:\n                                type: string\n                                description: Launch URL of the frame\n                          - type: object\n                            properties:\n                              buttons:\n                                type: array\n                                items:\n                                  type: object\n                                  required:\n                                  - index\n                                  - action_type\n                                  properties:\n                                    title:\n                                      type: string\n                                      description: Title of the button\n                                    index:\n                                      type: integer\n                                      description: Index of the button\n                                    action_type:\n                                      type: string\n                                      description: The action type of a frame button.\n                                        Action types \"mint\" & \"link\" are to be handled\n                                        on the client side only and so they will produce\n                                        a no/op for POST /farcaster/frame/action.\n                                      enum:\n                                      - post\n                                      - post_redirect\n                                      - tx\n                                      - link\n                                      - mint\n                                    target:\n                                      type: string\n                                      description: Target of the button\n                                    post_url:\n                                      type: string\n                                      description: Used specifically for the tx action\n                                        type to post a successful transaction hash\n                              post_url:\n                                type: string\n                                description: Post URL to take an action on this frame\n                              title:\n                                type: string\n                              image_aspect_ratio:\n                                type: string\n                              input:\n                                type: object\n                                properties:\n                                  text:\n                                    type: string\n                                    description: Input text for the frame\n                              state:\n                                type: object\n                                properties:\n                                  serialized:\n                                    type: string\n                                    description: State for the frame in a serialized\n                                      format\n                        - description: Frame v2 object\n                          allOf:\n                          - *id004\n                          - type: object\n                            required:\n                            - title\n                            - name\n                            - icon\n                            properties:\n                              manifest:\n                                type: object\n                                properties:\n                                  account_association:\n                                    type: object\n                                    properties:\n                                      header:\n                                        type: string\n                                      payload:\n                                        type: string\n                                      signature:\n                                        type: string\n                                    required:\n                                    - header\n                                    - payload\n                                    - signature\n                                  frame:\n                                    type: object\n                                    properties:\n                                      version:\n                                        type: string\n                                        enum:\n                                        - 0.0.0\n                                        - 0.0.", "mimetype": "text/plain", "start_char_idx": 22627, "end_char_idx": 30720, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0aa7e29b-6bc4-4fa3-933e-543ebcaad5bf": {"__data__": {"id_": "0aa7e29b-6bc4-4fa3-933e-543ebcaad5bf", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8e61ef0d-2fc3-4c00-9d0a-821514a1aebd", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "355b8426e1df6cf9116d365ca6767aca6205f9062921341e4398e1874d08ca13", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "12d77081-1b8e-4e65-b0bd-2a8f4d1e45ae", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "e56490707af8cefd5e8d185dabb5b3b42d3b0e72a975af807fb29dcc90377d52", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40acee70-481e-4ad0-97c3-3dcd248e9c3f", "node_type": "1", "metadata": {}, "hash": "256dbc3a053302772e68551d3c8ed80cd3cc87d6cacee7a7b90bcf151cedcd80", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                        - 0.0.1\n                                        - '1'\n                                        - next\n                                      name:\n                                        type: string\n                                        maxLength: 32\n                                      home_url:\n                                        type: string\n                                        maxLength: 512\n                                      icon_url:\n                                        type: string\n                                        maxLength: 512\n                                      image_url:\n                                        type: string\n                                        maxLength: 512\n                                      button_title:\n                                        type: string\n                                        maxLength: 32\n                                      splash_image_url:\n                                        type: string\n                                        maxLength: 512\n                                      splash_background_color:\n                                        type: string\n                                      webhook_url:\n                                        type: string\n                                        maxLength: 512\n                                    required:\n                                    - version\n                                    - name\n                                    - home_url\n                                    - icon_url\n                                  triggers:\n                                    type: array\n                                    items:\n                                      oneOf:\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - cast\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - composer\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                required:\n                                - account_association\n                              author: &id005\n                                type: object\n                                required:\n                                - object\n                                - fid\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - user_dehydrated\n                                  fid: *id001\n                                  username:\n                                    type: string\n                                  display_name:\n                                    type: string\n                                  pfp_url:\n                                    type: string\n                        mapping:\n                          vNext: '#/components/schemas/FrameV1'\n                          next: '#/components/schemas/FrameV2'\n                          '1': '#/components/schemas/FrameV2'\n                          0.0.0: '#/components/schemas/FrameV2'\n                          0.0.1: '#/components/schemas/FrameV2'\n              - type: object\n                required:\n                - cast\n                properties:\n                  cast_id: &id008\n                    type: object\n                    required:\n                    - fid\n                    - hash\n                    properties:\n                      fid: *id001\n                      hash:\n                        type: string\n                  cast:\n                    type: object\n                    required:\n                    - hash\n                    - parent_hash\n                    - parent_url\n                    - root_parent_url\n                    - parent_author\n                    - author\n                    - text\n                    - timestamp\n                    - type\n                    - embeds\n                    - channel\n                    properties:\n                      hash:\n                        type: string\n                      parent_hash:\n                        type:\n                        - string\n                        - 'null'\n                      parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      root_parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      parent_author:\n                        type: object\n                        required:\n                        - fid\n                        properties:\n                          fid:\n                            oneOf:\n                            - type: 'null'\n                            - *id001\n                      author: *id005\n                      text:\n                        type: string\n                      timestamp: *id006\n                      type: &id009\n                        type: string\n                        enum:\n                        - cast-mention\n                        - cast-reply\n                        description: 'The notification type of a cast.\n\n                          '\n                      embeds:\n                        type: array\n                        items:\n                          oneOf:\n                          - *id007\n                          - type: object\n                            required:\n                            - cast\n                            properties:\n                              cast_id: *id008\n                              cast:\n                                type: object\n                                required:\n                                - object\n                                - hash\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - cast_dehydrated\n                                  hash:\n                                    type: string\n                                  author: *id005\n                      channel:\n                        oneOf:\n                        - type: 'null'\n                        - &id013\n                          type: object\n                          required:\n                          - id\n                          - name\n                          - object\n                          properties:\n                            id:\n                              type: string\n                            name:\n                              type: string\n                            object:\n                              type: string\n                              enum:\n                              - channel_dehydrated\n                            image_url:\n                              type: string\n                            viewer_context: &id012\n                              description: Adds context on the viewer's or author's\n                                role in the channel.", "mimetype": "text/plain", "start_char_idx": 30670, "end_char_idx": 39437, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "40acee70-481e-4ad0-97c3-3dcd248e9c3f": {"__data__": {"id_": "40acee70-481e-4ad0-97c3-3dcd248e9c3f", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8e61ef0d-2fc3-4c00-9d0a-821514a1aebd", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "355b8426e1df6cf9116d365ca6767aca6205f9062921341e4398e1874d08ca13", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0aa7e29b-6bc4-4fa3-933e-543ebcaad5bf", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f4e78f06e193c9e3fb982237baed933dd15b6a61f5b1a53aa5becb923b27696b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                              required:\n                              - following\n                              properties:\n                                following:\n                                  description: Indicates if the user is following\n                                    the channel.\n                                  type: boolean\n                                role:\n                                  type: string\n                                  description: The role of a channel member\n                                  enum:\n                                  - member\n                                  - moderator\n          type: *id009\n      - type: object\n        required:\n        - reactions\n        - replies\n        - thread_hash\n        - mentioned_profiles\n        - channel\n        properties:\n          frames:\n            type: array\n            items: *id010\n          reactions:\n            type: object\n            required:\n            - likes\n            - recasts\n            - likes_count\n            - recasts_count\n            properties:\n              likes:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  properties:\n                    fid: *id001\n              recasts:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  - fname\n                  properties:\n                    fid: *id001\n                    fname:\n                      type: string\n              likes_count:\n                type: integer\n                format: int32\n              recasts_count:\n                type: integer\n                format: int32\n          replies:\n            type: object\n            required:\n            - count\n            properties:\n              count:\n                type: integer\n                format: int32\n          thread_hash:\n            type:\n            - string\n            - 'null'\n          mentioned_profiles:\n            type: array\n            items: *id011\n          channel:\n            oneOf:\n            - oneOf:\n              - type: object\n                required:\n                - id\n                - url\n                - object\n                properties:\n                  id:\n                    type: string\n                  url:\n                    type: string\n                  name:\n                    type: string\n                  description:\n                    type: string\n                  object:\n                    type: string\n                    enum:\n                    - channel\n                  created_at:\n                    description: Epoch timestamp in seconds.\n                    type: number\n                  follower_count:\n                    description: Number of followers the channel has.\n                    type: number\n                  external_link:\n                    type: object\n                    description: Channel's external link.\n                    properties:\n                      title:\n                        type: string\n                      url:\n                        type: string\n                  image_url:\n                    type: string\n                  parent_url:\n                    type: string\n                    format: uri\n                  lead: *id011\n                  moderator_fids:\n                    type: array\n                    items: *id001\n                  member_count:\n                    type: integer\n                    format: int32\n                  moderator: *id011\n                  pinned_cast_hash:\n                    type: string\n                    default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                    description: Cast Hash\n                  hosts:\n                    type: array\n                    deprecated: true\n                    items: *id011\n                  viewer_context: *id012\n              - *id013\n              discriminator:\n                propertyName: object\n                mapping:\n                  channel: '#/components/schemas/Channel'\n                  dehydrated_channel: '#/components/schemas/DehydratedChannel'\n            - type: 'null'\n          viewer_context:\n            type: object\n            description: Adds context on interactions the viewer has made with the\n              cast.\n            required:\n            - liked\n            - recasted\n            properties:\n              liked:\n                description: Indicates if the viewer liked the cast.\n                type: boolean\n              recasted:\n                description: Indicates if the viewer recasted the cast.\n                type: boolean\n          author_channel_context: *id012\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 39468, "end_char_idx": 44477, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ed8c0b97-e122-47df-b2cf-4caca11f7135": {"__data__": {"id_": "ed8c0b97-e122-47df-b2cf-4caca11f7135", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribed-to-for-fid.md", "file_name": "neynar_fetch-subscribed-to-for-fid.md", "file_type": "text/markdown", "file_size": 10101, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1d3ffb40-bad4-4f35-a5b3-443cfe14b6b3", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribed-to-for-fid.md", "file_name": "neynar_fetch-subscribed-to-for-fid.md", "file_type": "text/markdown", "file_size": 10101, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "126c74d9f1c2ccdc9b532c96143e9cdb0844769497aed56d1171619827b26afc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3092330e-9fdb-4e35-a70d-11f2ef397ace", "node_type": "1", "metadata": {}, "hash": "ba8f437399380739603c2291c35939275282167afadcef7d47e30ad6b1a810ec", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-subscribed-to-for-fid\n\n**Endpoint**: `GET /farcaster/user/subscribed_to`\n\n## Description\nFetch what FIDs and contracts a FID is subscribed to.\n\n## Parameters\n- `fid` (query): No description\n- `viewer_fid` (query): No description\n- `subscription_provider` (query): No description\n\n## Response\n```yaml\ntype: object\nproperties:\n  subscribed_to:\n    type: array\n    items:\n      allOf:\n      - type: object\n        required:\n        - object\n        - contract_address\n        - chain\n        - metadata\n        - owner_address\n        - price\n        - protocol_version\n        - token\n        properties:\n          object:\n            type: string\n            examples:\n            - subscription\n          provider_name:\n            type: string\n            examples:\n            - fabric_stp\n          contract_address:\n            type: string\n            examples:\n            - '0xff63fc310d47ef80961056ac8df0b3f1a9e3ef58'\n          chain:\n            type: integer\n            examples:\n            - 8453\n          metadata:\n            type: object\n            properties:\n              title:\n                type: string\n                examples:\n                - /memes channel sub\n              symbol:\n                type: string\n                examples:\n                - MMS\n              art_url:\n                type: string\n                examples:\n                - https://storage.withfabric.xyz/loom/403fdc10-95f3-4b25-9d77-5aac7ccb9fd1.jpg\n            required:\n            - title\n            - symbol\n            - art_url\n          owner_address:\n            type: string\n            examples:\n            - '0xb6f6dce6000ca88cc936b450cedb16a5c15f157f'\n          price:\n            type: object\n            properties:\n              period_duration_seconds:\n                type: integer\n                examples:\n                - 2592000\n              tokens_per_period:\n                type: string\n                examples:\n                - '350574998400000'\n              initial_mint_price:\n                type: string\n                examples:\n                - '0'\n            required:\n            - period_duration_seconds\n            - tokens_per_period\n            - initial_mint_price\n          tiers:\n            type: array\n            items: &id001\n              type: object\n              properties:\n                id:\n                  type: integer\n                  examples:\n                  - 1\n                price:\n                  type: object\n                  properties:\n                    period_duration_seconds:\n                      type: integer\n                      examples:\n                      - 2592000\n                    tokens_per_period:\n                      type: string\n                      examples:\n                      - '3000000000000000'\n                    initial_mint_price:\n                      type: string\n                      examples:\n                      - '0'\n          protocol_version:\n            type: integer\n            examples:\n            - 1\n          token:\n            type: object\n            properties:\n              symbol:\n                type: string\n                examples:\n                - ETH\n              address:\n                type:\n                - string\n                - 'null'\n                examples:\n                - null\n              decimals:\n                type: integer\n                examples:\n                - 18\n              erc20:\n                type: boolean\n                examples:\n                - false\n            required:\n            - symbol\n            - address\n            - decimals\n            - erc20\n      - type: object\n        required:\n        - expires_at\n        - subscribed_at\n        - tier\n        - creator\n        properties:\n          expires_at:\n            type: string\n            format: date-time\n            examples:\n            - '2023-09-13T22:10:22.000Z'\n          subscribed_at:\n            type: string\n            format: date-time\n            examples:\n            - '2023-09-13T22:10:22.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4095, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3092330e-9fdb-4e35-a70d-11f2ef397ace": {"__data__": {"id_": "3092330e-9fdb-4e35-a70d-11f2ef397ace", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribed-to-for-fid.md", "file_name": "neynar_fetch-subscribed-to-for-fid.md", "file_type": "text/markdown", "file_size": 10101, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1d3ffb40-bad4-4f35-a5b3-443cfe14b6b3", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribed-to-for-fid.md", "file_name": "neynar_fetch-subscribed-to-for-fid.md", "file_type": "text/markdown", "file_size": 10101, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "126c74d9f1c2ccdc9b532c96143e9cdb0844769497aed56d1171619827b26afc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ed8c0b97-e122-47df-b2cf-4caca11f7135", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribed-to-for-fid.md", "file_name": "neynar_fetch-subscribed-to-for-fid.md", "file_type": "text/markdown", "file_size": 10101, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "c03115e063525595b9952b9d899f2cb40627e15a5ce81b96be81884657b767f9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "000Z'\n          subscribed_at:\n            type: string\n            format: date-time\n            examples:\n            - '2023-09-13T22:10:22.000Z'\n          tier: *id001\n          creator:\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid:\n                type: integer\n                format: int32\n                description: The unique identifier of a farcaster user (unsigned integer)\n                examples:\n                - 3\n                - 191\n                - 2\n                - 194\n                - 19960\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id002\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n```", "mimetype": "text/plain", "start_char_idx": 3952, "end_char_idx": 10100, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7421fee0-9425-4180-9f5a-ff0989b9aa9e": {"__data__": {"id_": "7421fee0-9425-4180-9f5a-ff0989b9aa9e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribers-for-fid.md", "file_name": "neynar_fetch-subscribers-for-fid.md", "file_type": "text/markdown", "file_size": 7312, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "178a7c9a-6b41-4b42-bf7b-00921368bae5", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribers-for-fid.md", "file_name": "neynar_fetch-subscribers-for-fid.md", "file_type": "text/markdown", "file_size": 7312, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "4151233ddf21b29f4c80a606ce3be0ee085e9fe704477342d12123872d7ce891", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4b1abe5f-c5f0-4f76-aef0-465daed7d680", "node_type": "1", "metadata": {}, "hash": "9b736745c42ae93e420470b2a2fda4a6505ae06a7f41d66a91263db052ce1c60", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-subscribers-for-fid\n\n**Endpoint**: `GET /farcaster/user/subscribers`\n\n## Description\nFetch subscribers for a given FID's contracts. Doesn't return addresses that don't have an FID.\n\n## Parameters\n- `fid` (query): No description\n- `viewer_fid` (query): No description\n- `subscription_provider` (query): No description\n\n## Response\n```yaml\ntype: object\nproperties:\n  subscribers:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - user\n      - subscribed_to\n      properties:\n        object:\n          type: string\n          examples:\n          - subscriber\n        user:\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid:\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5782, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4b1abe5f-c5f0-4f76-aef0-465daed7d680": {"__data__": {"id_": "4b1abe5f-c5f0-4f76-aef0-465daed7d680", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribers-for-fid.md", "file_name": "neynar_fetch-subscribers-for-fid.md", "file_type": "text/markdown", "file_size": 7312, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "178a7c9a-6b41-4b42-bf7b-00921368bae5", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribers-for-fid.md", "file_name": "neynar_fetch-subscribers-for-fid.md", "file_type": "text/markdown", "file_size": 7312, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "4151233ddf21b29f4c80a606ce3be0ee085e9fe704477342d12123872d7ce891", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7421fee0-9425-4180-9f5a-ff0989b9aa9e", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribers-for-fid.md", "file_name": "neynar_fetch-subscribers-for-fid.md", "file_type": "text/markdown", "file_size": 7312, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "1cc365123e6f30325268e6dad5f48096652af26d1b014abd4001e1a2d69c9e7a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        subscribed_to:\n          type: object\n          properties:\n            object:\n              type: string\n              examples:\n              - subscription_dehydrated\n            provider_name:\n              type: string\n              examples:\n              - fabric_stp\n            contract_address:\n              type: string\n              examples:\n              - '0x325b3e2c19f4900f8f4eb5f6872dc2715e77cbac'\n            protocol_version:\n              type: integer\n              examples:\n              - 1\n            chain:\n              type: integer\n              examples:\n              - 8453\n            expires_at:\n              type: string\n              format: date-time\n              examples:\n              - '2023-09-13T22:10:22.000Z'\n            subscribed_at:\n              type: string\n              format: date-time\n              examples:\n              - '2023-09-13T22:10:22.000Z'\n            tier_id:\n              type: string\n              examples:\n              - '0'\n          required:\n          - object\n          - provider_name\n```", "mimetype": "text/plain", "start_char_idx": 4687, "end_char_idx": 7311, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "93ce0b4b-405e-4e02-beef-e5b737c0ec8e": {"__data__": {"id_": "93ce0b4b-405e-4e02-beef-e5b737c0ec8e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscription-check.md", "file_name": "neynar_fetch-subscription-check.md", "file_type": "text/markdown", "file_size": 1118, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "398510a7-0b3f-4e24-ae6c-f3a4180f833e", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscription-check.md", "file_name": "neynar_fetch-subscription-check.md", "file_type": "text/markdown", "file_size": 1118, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "2a1384b24e22f818ea4b6c30803270c2ab99c5548c068412f1ae12dd19662ef0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-subscription-check\n\n**Endpoint**: `GET /stp/subscription_check`\n\n## Description\nCheck if a wallet address is subscribed to a given STP (Hypersub) contract.\n\n## Parameters\n- `addresses` (query): Comma separated list of Ethereum addresses, up to 350 at a time\n- `contract_address` (query): Ethereum address of the STP contract\n- `chain_id` (query): Chain ID of the STP contract\n\n## Response\n```yaml\ntype: object\nadditionalProperties:\n  $ref: '#/components/schemas/SubscriptionStatus'\nexamples:\n- summary: Active subscription example\n  value:\n    '0xedd3783e8c7c52b80cfbd026a63c207edc9cbee7':\n      object: subscribed_to_dehydrated\n      status: true\n      expires_at: 1748890497000\n      subscribed_at: 1719256819704\n      tier:\n        id: 1\n        price:\n          period_duration_seconds: 2592000\n          tokens_per_period: '3499999997472000'\n          initial_mint_price: '0'\n- summary: Inactive subscription example\n  value:\n    '0x5a927ac639636e534b678e81768ca19e2c6280b7':\n      object: subscribed_to_dehydrated\n      status: false\n      expires_at: null\n      subscribed_at: null\n      tier: null\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1117, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9f26f686-b339-4d20-99b6-41d617087cba": {"__data__": {"id_": "9f26f686-b339-4d20-99b6-41d617087cba", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscriptions-for-fid.md", "file_name": "neynar_fetch-subscriptions-for-fid.md", "file_type": "text/markdown", "file_size": 4334, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ce30f5c1-8d7b-483a-b46a-35dcad801512", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscriptions-for-fid.md", "file_name": "neynar_fetch-subscriptions-for-fid.md", "file_type": "text/markdown", "file_size": 4334, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "3e6e555f085feeb1496cedc9c4ff65378ffb24ef6099eb6bcff0373f8e8ab95b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-subscriptions-for-fid\n\n**Endpoint**: `GET /farcaster/user/subscriptions_created`\n\n## Description\nFetch created subscriptions for a given FID's.\n\n## Parameters\n- `fid` (query): No description\n- `subscription_provider` (query): No description\n\n## Response\n```yaml\ntype: object\nproperties:\n  subscriptions_created:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - subscriptions_created\n      properties:\n        object:\n          type: string\n        subscriptions_created:\n          type: array\n          items:\n            type: object\n            required:\n            - object\n            - contract_address\n            - chain\n            - metadata\n            - owner_address\n            - price\n            - protocol_version\n            - token\n            properties:\n              object:\n                type: string\n                examples:\n                - subscription\n              provider_name:\n                type: string\n                examples:\n                - fabric_stp\n              contract_address:\n                type: string\n                examples:\n                - '0xff63fc310d47ef80961056ac8df0b3f1a9e3ef58'\n              chain:\n                type: integer\n                examples:\n                - 8453\n              metadata:\n                type: object\n                properties:\n                  title:\n                    type: string\n                    examples:\n                    - /memes channel sub\n                  symbol:\n                    type: string\n                    examples:\n                    - MMS\n                  art_url:\n                    type: string\n                    examples:\n                    - https://storage.withfabric.xyz/loom/403fdc10-95f3-4b25-9d77-5aac7ccb9fd1.jpg\n                required:\n                - title\n                - symbol\n                - art_url\n              owner_address:\n                type: string\n                examples:\n                - '0xb6f6dce6000ca88cc936b450cedb16a5c15f157f'\n              price:\n                type: object\n                properties:\n                  period_duration_seconds:\n                    type: integer\n                    examples:\n                    - 2592000\n                  tokens_per_period:\n                    type: string\n                    examples:\n                    - '350574998400000'\n                  initial_mint_price:\n                    type: string\n                    examples:\n                    - '0'\n                required:\n                - period_duration_seconds\n                - tokens_per_period\n                - initial_mint_price\n              tiers:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: integer\n                      examples:\n                      - 1\n                    price:\n                      type: object\n                      properties:\n                        period_duration_seconds:\n                          type: integer\n                          examples:\n                          - 2592000\n                        tokens_per_period:\n                          type: string\n                          examples:\n                          - '3000000000000000'\n                        initial_mint_price:\n                          type: string\n                          examples:\n                          - '0'\n              protocol_version:\n                type: integer\n                examples:\n                - 1\n              token:\n                type: object\n                properties:\n                  symbol:\n                    type: string\n                    examples:\n                    - ETH\n                  address:\n                    type:\n                    - string\n                    - 'null'\n                    examples:\n                    - null\n                  decimals:\n                    type: integer\n                    examples:\n                    - 18\n                  erc20:\n                    type: boolean\n                    examples:\n                    - false\n                required:\n                - symbol\n                - address\n                - decimals\n                - erc20\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4333, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2c23eb0f-2057-4a6e-9d4b-420367a85b45": {"__data__": {"id_": "2c23eb0f-2057-4a6e-9d4b-420367a85b45", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-channels.md", "file_name": "neynar_fetch-trending-channels.md", "file_type": "text/markdown", "file_size": 9294, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ce76623c-be70-411d-b117-ebb37e1f2f47", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-channels.md", "file_name": "neynar_fetch-trending-channels.md", "file_type": "text/markdown", "file_size": 9294, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "2b12fa953e3f76380a6ab9b6b5451b798cc3a07e155f47f5bcc1710dd16d266c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7d36a4fa-8830-470b-b0aa-f44d3fcc2790", "node_type": "1", "metadata": {}, "hash": "d73dd98aeb5c8df5f53c3e00320655c38a1f7d8daa60ce10d4c458e0c0e165ae", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-trending-channels\n\n**Endpoint**: `GET /farcaster/channel/trending`\n\n## Description\nReturns a list of trending channels based on activity\n\n## Parameters\n- `time_window` (query): No description\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- channels\n- next\nproperties:\n  channels:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - cast_count_1d\n      - cast_count_7d\n      - cast_count_30d\n      - channel\n      properties:\n        object:\n          type: string\n          enum:\n          - channel_activity\n        cast_count_1d:\n          type: string\n        cast_count_7d:\n          type: string\n        cast_count_30d:\n          type: string\n        channel:\n          type: object\n          required:\n          - id\n          - url\n          - object\n          properties:\n            id:\n              type: string\n            url:\n              type: string\n            name:\n              type: string\n            description:\n              type: string\n            object:\n              type: string\n              enum:\n              - channel\n            created_at:\n              description: Epoch timestamp in seconds.\n              type: number\n            follower_count:\n              description: Number of followers the channel has.\n              type: number\n            external_link:\n              type: object\n              description: Channel's external link.\n              properties:\n                title:\n                  type: string\n                url:\n                  type: string\n            image_url:\n              type: string\n            parent_url:\n              type: string\n              format: uri\n            lead: &id003\n              type: object\n              required:\n              - object\n              - fid\n              - custody_address\n              - username\n              - profile\n              - follower_count\n              - following_count\n              - verifications\n              - verified_addresses\n              - verified_accounts\n              - power_badge\n              properties:\n                object:\n                  type: string\n                  enum:\n                  - user\n                fid: &id002\n                  type: integer\n                  format: int32\n                  description: The unique identifier of a farcaster user (unsigned\n                    integer)\n                  examples:\n                  - 3\n                  - 191\n                  - 2\n                  - 194\n                  - 19960\n                username:\n                  type: string\n                display_name:\n                  type: string\n                custody_address: &id001\n                  type: string\n                  pattern: ^0x[a-fA-F0-9]{40}$\n                  description: Ethereum address\n                pfp_url:\n                  type: string\n                  description: The URL of the user's profile picture\n                profile:\n                  type: object\n                  required:\n                  - bio\n                  properties:\n                    bio:\n                      type: object\n                      required:\n                      - text\n                      - mentioned_profiles\n                      properties:\n                        text:\n                          type: string\n                        mentioned_profiles:\n                          type: array\n                          items:\n                            type: string\n                          default: []\n                    location:\n                      description: Coordinates and place names for a location\n                      type: object\n                      required:\n                      - latitude\n                      - longitude\n                      properties:\n                        latitude:\n                          type: number\n                          format: double\n                          minimum: -90\n                          maximum: 90\n                        longitude:\n                          type: number\n                          format: double\n                          minimum: -180\n                          maximum: 180\n                        address:\n                          type: object\n                          required:\n                          - city\n                          - country\n                          properties:\n                            city:\n                              type: string\n                            state:\n                              type: string\n                            state_code:\n                              type: string\n                            country:\n                              type: string\n                            country_code:\n                              type: string\n                follower_count:\n                  type: integer\n                  format: int32\n                  description: The number of followers the user has.\n                following_count:\n                  type: integer\n                  format: int32\n                  description: The number of users the user is following.\n                verifications:\n                  type: array\n                  items: *id001\n                verified_addresses:\n                  type: object\n                  required:\n                  - eth_addresses\n                  - sol_addresses\n                  properties:\n                    eth_addresses:\n                      type: array\n                      description: List of verified Ethereum addresses of the user\n                        sorted by oldest to most recent.\n                      items: *id001\n                    sol_addresses:\n                      type: array\n                      description: List of verified Solana addresses of the user sorted\n                        by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5999, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7d36a4fa-8830-470b-b0aa-f44d3fcc2790": {"__data__": {"id_": "7d36a4fa-8830-470b-b0aa-f44d3fcc2790", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-channels.md", "file_name": "neynar_fetch-trending-channels.md", "file_type": "text/markdown", "file_size": 9294, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ce76623c-be70-411d-b117-ebb37e1f2f47", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-channels.md", "file_name": "neynar_fetch-trending-channels.md", "file_type": "text/markdown", "file_size": 9294, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "2b12fa953e3f76380a6ab9b6b5451b798cc3a07e155f47f5bcc1710dd16d266c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c23eb0f-2057-4a6e-9d4b-420367a85b45", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-channels.md", "file_name": "neynar_fetch-trending-channels.md", "file_type": "text/markdown", "file_size": 9294, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "9e1131ca13cc5f627e8b6c531caa22ed09c14a17dc66d95c4e5a9854eed9db20", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                  type: integer\n                  format: int32\n                  description: The number of users the user is following.\n                verifications:\n                  type: array\n                  items: *id001\n                verified_addresses:\n                  type: object\n                  required:\n                  - eth_addresses\n                  - sol_addresses\n                  properties:\n                    eth_addresses:\n                      type: array\n                      description: List of verified Ethereum addresses of the user\n                        sorted by oldest to most recent.\n                      items: *id001\n                    sol_addresses:\n                      type: array\n                      description: List of verified Solana addresses of the user sorted\n                        by oldest to most recent.\n                      items:\n                        type: string\n                        pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                        description: Solana address\n                verified_accounts:\n                  type: array\n                  description: Verified accounts of the user on other platforms, currently\n                    only X is supported.\n                  items:\n                    type: object\n                    properties:\n                      platform:\n                        type: string\n                        enum:\n                        - x\n                        - github\n                      username:\n                        type: string\n                power_badge:\n                  type: boolean\n                experimental:\n                  type: object\n                  required:\n                  - neynar_user_score\n                  properties:\n                    neynar_user_score:\n                      type: number\n                      format: double\n                      description: Score that represents the probability that the\n                        account is not spam.\n                viewer_context:\n                  type: object\n                  description: Adds context on the viewer's follow relationship with\n                    the user.\n                  required:\n                  - following\n                  - followed_by\n                  - blocking\n                  - blocked_by\n                  properties:\n                    following:\n                      description: Indicates if the viewer is following the user.\n                      type: boolean\n                    followed_by:\n                      description: Indicates if the viewer is followed by the user.\n                      type: boolean\n                    blocking:\n                      description: Indicates if the viewer is blocking the user.\n                      type: boolean\n                    blocked_by:\n                      description: Indicates if the viewer is blocked by the user.\n                      type: boolean\n            moderator_fids:\n              type: array\n              items: *id002\n            member_count:\n              type: integer\n              format: int32\n            moderator: *id003\n            pinned_cast_hash:\n              type: string\n              default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n              description: Cast Hash\n            hosts:\n              type: array\n              deprecated: true\n              items: *id003\n            viewer_context:\n              description: Adds context on the viewer's or author's role in the channel.\n              type: object\n              required:\n              - following\n              properties:\n                following:\n                  description: Indicates if the user is following the channel.\n                  type: boolean\n                role:\n                  type: string\n                  description: The role of a channel member\n                  enum:\n                  - member\n                  - moderator\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 5107, "end_char_idx": 9293, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eeb4de19-cd16-4e4d-a4b3-eb2e40ce1793": {"__data__": {"id_": "eeb4de19-cd16-4e4d-a4b3-eb2e40ce1793", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "44ff65cc-54ff-45ff-a0f4-6dd31e0426a2", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "204ec5e36a6738c85fb637621109e18392555c2b6ac120bc2eed32b0d3b60207", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "36fc3c88-bb9d-4ec5-af0a-e9846fc01d90", "node_type": "1", "metadata": {}, "hash": "276d9829bd28ca7c832cf3651919d5f3d9662484a0269ecacb934ce07c8af95d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-trending-feed\n\n**Endpoint**: `GET /farcaster/feed/trending`\n\n## Description\nFetch trending casts or on the global feed or channels feeds. 7d time window available for channel feeds only.\n\n## Parameters\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor\n- `viewer_fid` (query): Providing this will return a feed that respects this user's mutes and blocks and includes `viewer_context`.\n- `time_window` (query): Time window for trending casts (7d window for channel feeds only)\n- `channel_id` (query): Channel ID to filter trending casts. Less active channels might have no casts in the time window selected.\n- `provider` (query): The provider of the trending casts feed.\n- `provider_metadata` (query): provider_metadata is a URI-encoded stringified JSON object that can be used to pass additional metadata to the provider. Only available for mbd provider right now. See [here](https://docs.neynar.com/docs/feed-for-you-w-external-providers) on how to use.\n\n\n## Response\n```yaml\ntype: object\nrequired:\n- casts\n- next\nproperties:\n  casts:\n    type: array\n    items:\n      allOf:\n      - type: object\n        required:\n        - hash\n        - parent_hash\n        - parent_url\n        - root_parent_url\n        - parent_author\n        - author\n        - text\n        - timestamp\n        - embeds\n        properties:\n          hash:\n            type: string\n          parent_hash:\n            type:\n            - string\n            - 'null'\n          parent_url:\n            type:\n            - string\n            - 'null'\n          root_parent_url:\n            type:\n            - string\n            - 'null'\n          parent_author:\n            type: object\n            required:\n            - fid\n            properties:\n              fid:\n                oneOf:\n                - type: 'null'\n                - &id001\n                  type: integer\n                  format: int32\n                  description: The unique identifier of a farcaster user (unsigned\n                    integer)\n                  examples:\n                  - 3\n                  - 191\n                  - 2\n                  - 194\n                  - 19960\n          author: &id011\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: *id001\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id002\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5641, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "36fc3c88-bb9d-4ec5-af0a-e9846fc01d90": {"__data__": {"id_": "36fc3c88-bb9d-4ec5-af0a-e9846fc01d90", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "44ff65cc-54ff-45ff-a0f4-6dd31e0426a2", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "204ec5e36a6738c85fb637621109e18392555c2b6ac120bc2eed32b0d3b60207", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eeb4de19-cd16-4e4d-a4b3-eb2e40ce1793", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "31574fb239a9601611b9fdda2852c6e14db0b77967d4cdae976558c1d7d0b3b8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1d0d3144-9db0-42e7-8cf1-9a1cb7428a12", "node_type": "1", "metadata": {}, "hash": "fe0df8fb809538d41413faf06c0a270674cb9253987f2f1009b522ab38419e14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 5024, "end_char_idx": 7847, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1d0d3144-9db0-42e7-8cf1-9a1cb7428a12": {"__data__": {"id_": "1d0d3144-9db0-42e7-8cf1-9a1cb7428a12", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "44ff65cc-54ff-45ff-a0f4-6dd31e0426a2", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "204ec5e36a6738c85fb637621109e18392555c2b6ac120bc2eed32b0d3b60207", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36fc3c88-bb9d-4ec5-af0a-e9846fc01d90", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "ac274382a28854a8c7d3f35011486bdff16d3f3216a741e9e5997aa7ac94bcdb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e54ad82c-fff5-4cee-a207-49f992ae0633", "node_type": "1", "metadata": {}, "hash": "7693468d1bce4d6458a0c00eb5858d0c52e0d3acfd9f809418886132f3cd260d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          text:\n            type: string\n          timestamp: &id006\n            type: string\n            format: date-time\n          embeds:\n            type: array\n            items:\n              oneOf:\n              - &id007\n                type: object\n                required:\n                - url\n                properties:\n                  url:\n                    type: string\n                  metadata:\n                    type: object\n                    required:\n                    - _status\n                    properties:\n                      _status:\n                        type: string\n                      content_type:\n                        type:\n                        - string\n                        - 'null'\n                      content_length:\n                        type:\n                        - integer\n                        - 'null'\n                      image:\n                        type: object\n                        properties:\n                          height_px:\n                            type: integer\n                          width_px:\n                            type: integer\n                      video:\n                        type: object\n                        properties:\n                          duration_s:\n                            type: number\n                          stream:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                codec_name:\n                                  type: string\n                                height_px:\n                                  type: integer\n                                width_px:\n                                  type: integer\n                      html:\n                        allOf:\n                        - type: object\n                          properties:\n                            favicon:\n                              type: string\n                            modifiedTime:\n                              type: string\n                            ogArticleAuthor:\n                              type: string\n                            ogArticleExpirationTime:\n                              type: string\n                            ogArticleModifiedTime:\n                              type: string\n                            ogArticlePublishedTime:\n                              type: string\n                            ogArticlePublisher:\n                              type: string\n                            ogArticleSection:\n                              type: string\n                            ogArticleTag:\n                              type: string\n                            ogAudio:\n                              type: string\n                            ogAudioSecureURL:\n                              type: string\n                            ogAudioType:\n                              type: string\n                            ogAudioURL:\n                              type: string\n                            ogAvailability:\n                              type: string\n                            ogDate:\n                              type: string\n                            ogDescription:\n                              type: string\n                            ogDeterminer:\n                              type: string\n                            ogEpisode:\n                              type: string\n                            ogImage:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                  alt:\n                                    type: string\n                                required:\n                                - url\n                            ogLocale:\n                              type: string\n                            ogLocaleAlternate:\n                              type: string\n                            ogLogo:\n                              type: string\n                            ogMovie:\n                              type: string\n                            ogPriceAmount:\n                              type: string\n                            ogPriceCurrency:\n                              type: string\n                            ogProductAvailability:\n                              type: string\n                            ogProductCondition:\n                              type: string\n                            ogProductPriceAmount:\n                              type: string\n                            ogProductPriceCurrency:\n                              type: string\n                            ogProductRetailerItemId:\n                              type: string\n                            ogSiteName:\n                              type: string\n                            ogTitle:\n                              type: string\n                            ogType:\n                              type: string\n                            ogUrl:\n                              type: string\n                            ogVideo:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                required:\n                                - url\n                            ogVideoActor:\n                              type: string\n                            ogVideoActorId:\n                              type: string\n                            ogVideoActorRole:\n                              type: string\n                            ogVideoDirector:\n                              type: string\n                            ogVideoDuration:\n                              type: string\n                            ogVideoOther:\n                              type: string\n                            ogVideoReleaseDate:\n                              type: string\n                            ogVideoSecureURL:\n                              type: string\n                            ogVideoSeries:\n                              type: string\n                            ogVideoTag:\n                              type: string\n                            ogVideoTvShow:\n                              type: string\n                            ogVideoWriter:\n                              type: string\n                            ogWebsite:\n                              type: string\n                            updatedTime:\n                              type: string\n                        - type: object\n                          properties:\n                            oembed:\n                              oneOf:\n                              - allOf:\n                                - &id003\n                                  type: object\n                                  description: Basic data structure of every oembed\n                                    response see https://oembed.com/\n                                  required:\n                                  - type\n                                  - version\n                                  properties:\n                                    type:\n                                      type: string\n                                    version:\n                                      type:\n                                      - string\n                                      - 'null'\n                                    title:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A text title, describing the resource.", "mimetype": "text/plain", "start_char_idx": 6982, "end_char_idx": 16387, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e54ad82c-fff5-4cee-a207-49f992ae0633": {"__data__": {"id_": "e54ad82c-fff5-4cee-a207-49f992ae0633", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "44ff65cc-54ff-45ff-a0f4-6dd31e0426a2", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "204ec5e36a6738c85fb637621109e18392555c2b6ac120bc2eed32b0d3b60207", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1d0d3144-9db0-42e7-8cf1-9a1cb7428a12", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "cfca40412d188aa445981c886b23116a02bb23b731fcf08275ecb02a2c71d354", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "29aab2ad-e355-46f2-a363-55ee743e3f7e", "node_type": "1", "metadata": {}, "hash": "02bb5551c6319ad9c9e131ba050e77c2a58a5756c4a5f538be3d18d6c2b844c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the author/owner of\n                                        the resource.\n                                    author_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL for the author/owner of the\n                                        resource.\n                                    provider_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the resource provider.\n                                    provider_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The url of the resource provider.\n                                    cache_age:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The suggested cache lifetime for\n                                        this resource, in seconds. Consumers may choose\n                                        to use this value or not.\n                                    thumbnail_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL to a thumbnail image representing\n                                        the resource. The thumbnail must respect any\n                                        maxwidth and maxheight parameters. If this\n                                        parameter is present, thumbnail_width and\n                                        thumbnail_height must also be present.\n                                    thumbnail_width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_height must also be present.\n                                    thumbnail_height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_width must also be present.\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - rich\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to display the\n                                        resource. The HTML should have no padding\n                                        or margins. Consumers may wish to load the\n                                        HTML in an off-domain iframe to avoid XSS\n                                        vulnerabilities. The markup should be valid\n                                        XHTML 1.0 Basic.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - video\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to embed a video\n                                        player. The HTML should have no padding or\n                                        margins. Consumers may wish to load the HTML\n                                        in an off-domain iframe to avoid XSS vulnerabilities.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 16424, "end_char_idx": 24754, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "29aab2ad-e355-46f2-a363-55ee743e3f7e": {"__data__": {"id_": "29aab2ad-e355-46f2-a363-55ee743e3f7e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "44ff65cc-54ff-45ff-a0f4-6dd31e0426a2", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "204ec5e36a6738c85fb637621109e18392555c2b6ac120bc2eed32b0d3b60207", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e54ad82c-fff5-4cee-a207-49f992ae0633", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "3208b4883cbf4ed052266783dc3cc48a96fee02d95cb89c2990fca857d3d7533", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6681d6ad-21f3-488b-9ab2-02e7249d68d2", "node_type": "1", "metadata": {}, "hash": "4bf0e8989166b44509d34059a21981076b724bc3fd8b9c3a31d03109f5c8881a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - link\n                              discriminator:\n                                propertyName: type\n                                mapping:\n                                  rich: '#/components/schemas/OembedRichData'\n                                  video: '#/components/schemas/OembedVideoData'\n                                  photo: '#/components/schemas/OembedPhotoData'\n                                  link: '#/components/schemas/OembedLinkData'\n                      frame: &id010\n                        discriminator:\n                          propertyName: version\n                        oneOf:\n                        - description: Frame v1 object\n                          allOf:\n                          - &id004\n                            description: Frame base object used across all versions\n                            type: object\n                            required:\n                            - version\n                            - image\n                            - frames_url\n                            properties:\n                              version:\n                                type: string\n                                description: Version of the frame, 'next' for v2,\n                                  'vNext' for v1\n                              image:\n                                type: string\n                                description: URL of the image\n                              frames_url:\n                                type: string\n                                description: Launch URL of the frame\n                          - type: object\n                            properties:\n                              buttons:\n                                type: array\n                                items:\n                                  type: object\n                                  required:\n                                  - index\n                                  - action_type\n                                  properties:\n                                    title:\n                                      type: string\n                                      description: Title of the button\n                                    index:\n                                      type: integer\n                                      description: Index of the button\n                                    action_type:\n                                      type: string\n                                      description: The action type of a frame button.\n                                        Action types \"mint\" & \"link\" are to be handled\n                                        on the client side only and so they will produce\n                                        a no/op for POST /farcaster/frame/action.\n                                      enum:\n                                      - post\n                                      - post_redirect\n                                      - tx\n                                      - link\n                                      - mint\n                                    target:\n                                      type: string\n                                      description: Target of the button\n                                    post_url:\n                                      type: string\n                                      description: Used specifically for the tx action\n                                        type to post a successful transaction hash\n                              post_url:\n                                type: string\n                                description: Post URL to take an action on this frame\n                              title:\n                                type: string\n                              image_aspect_ratio:\n                                type: string\n                              input:\n                                type: object\n                                properties:\n                                  text:\n                                    type: string\n                                    description: Input text for the frame\n                              state:\n                                type: object\n                                properties:\n                                  serialized:\n                                    type: string\n                                    description: State for the frame in a serialized\n                                      format\n                        - description: Frame v2 object\n                          allOf:\n                          - *id004\n                          - type: object\n                            required:\n                            - title\n                            - name\n                            - icon\n                            properties:\n                              manifest:\n                                type: object\n                                properties:\n                                  account_association:\n                                    type: object\n                                    properties:\n                                      header:\n                                        type: string\n                                      payload:\n                                        type: string\n                                      signature:\n                                        type: string\n                                    required:\n                                    - header\n                                    - payload\n                                    - signature\n                                  frame:\n                                    type: object\n                                    properties:\n                                      version:\n                                        type: string\n                                        enum:\n                                        - 0.0.0\n                                        - 0.0.", "mimetype": "text/plain", "start_char_idx": 23061, "end_char_idx": 31154, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6681d6ad-21f3-488b-9ab2-02e7249d68d2": {"__data__": {"id_": "6681d6ad-21f3-488b-9ab2-02e7249d68d2", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "44ff65cc-54ff-45ff-a0f4-6dd31e0426a2", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "204ec5e36a6738c85fb637621109e18392555c2b6ac120bc2eed32b0d3b60207", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "29aab2ad-e355-46f2-a363-55ee743e3f7e", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "5fa77bbff34e95ea9e425ae0ecc557c53aaa2f944a5e9107396727a54a6212d5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "55439464-c6b4-4754-8ab1-3ce6baaa091e", "node_type": "1", "metadata": {}, "hash": "256dbc3a053302772e68551d3c8ed80cd3cc87d6cacee7a7b90bcf151cedcd80", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                        - 0.0.1\n                                        - '1'\n                                        - next\n                                      name:\n                                        type: string\n                                        maxLength: 32\n                                      home_url:\n                                        type: string\n                                        maxLength: 512\n                                      icon_url:\n                                        type: string\n                                        maxLength: 512\n                                      image_url:\n                                        type: string\n                                        maxLength: 512\n                                      button_title:\n                                        type: string\n                                        maxLength: 32\n                                      splash_image_url:\n                                        type: string\n                                        maxLength: 512\n                                      splash_background_color:\n                                        type: string\n                                      webhook_url:\n                                        type: string\n                                        maxLength: 512\n                                    required:\n                                    - version\n                                    - name\n                                    - home_url\n                                    - icon_url\n                                  triggers:\n                                    type: array\n                                    items:\n                                      oneOf:\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - cast\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - composer\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                required:\n                                - account_association\n                              author: &id005\n                                type: object\n                                required:\n                                - object\n                                - fid\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - user_dehydrated\n                                  fid: *id001\n                                  username:\n                                    type: string\n                                  display_name:\n                                    type: string\n                                  pfp_url:\n                                    type: string\n                        mapping:\n                          vNext: '#/components/schemas/FrameV1'\n                          next: '#/components/schemas/FrameV2'\n                          '1': '#/components/schemas/FrameV2'\n                          0.0.0: '#/components/schemas/FrameV2'\n                          0.0.1: '#/components/schemas/FrameV2'\n              - type: object\n                required:\n                - cast\n                properties:\n                  cast_id: &id008\n                    type: object\n                    required:\n                    - fid\n                    - hash\n                    properties:\n                      fid: *id001\n                      hash:\n                        type: string\n                  cast:\n                    type: object\n                    required:\n                    - hash\n                    - parent_hash\n                    - parent_url\n                    - root_parent_url\n                    - parent_author\n                    - author\n                    - text\n                    - timestamp\n                    - type\n                    - embeds\n                    - channel\n                    properties:\n                      hash:\n                        type: string\n                      parent_hash:\n                        type:\n                        - string\n                        - 'null'\n                      parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      root_parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      parent_author:\n                        type: object\n                        required:\n                        - fid\n                        properties:\n                          fid:\n                            oneOf:\n                            - type: 'null'\n                            - *id001\n                      author: *id005\n                      text:\n                        type: string\n                      timestamp: *id006\n                      type: &id009\n                        type: string\n                        enum:\n                        - cast-mention\n                        - cast-reply\n                        description: 'The notification type of a cast.\n\n                          '\n                      embeds:\n                        type: array\n                        items:\n                          oneOf:\n                          - *id007\n                          - type: object\n                            required:\n                            - cast\n                            properties:\n                              cast_id: *id008\n                              cast:\n                                type: object\n                                required:\n                                - object\n                                - hash\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - cast_dehydrated\n                                  hash:\n                                    type: string\n                                  author: *id005\n                      channel:\n                        oneOf:\n                        - type: 'null'\n                        - &id013\n                          type: object\n                          required:\n                          - id\n                          - name\n                          - object\n                          properties:\n                            id:\n                              type: string\n                            name:\n                              type: string\n                            object:\n                              type: string\n                              enum:\n                              - channel_dehydrated\n                            image_url:\n                              type: string\n                            viewer_context: &id012\n                              description: Adds context on the viewer's or author's\n                                role in the channel.", "mimetype": "text/plain", "start_char_idx": 31104, "end_char_idx": 39871, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "55439464-c6b4-4754-8ab1-3ce6baaa091e": {"__data__": {"id_": "55439464-c6b4-4754-8ab1-3ce6baaa091e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "44ff65cc-54ff-45ff-a0f4-6dd31e0426a2", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "204ec5e36a6738c85fb637621109e18392555c2b6ac120bc2eed32b0d3b60207", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6681d6ad-21f3-488b-9ab2-02e7249d68d2", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f16b56c5c61d7730bf375228f6063013bc55b5e182433d8cdaa431e214132371", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                              required:\n                              - following\n                              properties:\n                                following:\n                                  description: Indicates if the user is following\n                                    the channel.\n                                  type: boolean\n                                role:\n                                  type: string\n                                  description: The role of a channel member\n                                  enum:\n                                  - member\n                                  - moderator\n          type: *id009\n      - type: object\n        required:\n        - reactions\n        - replies\n        - thread_hash\n        - mentioned_profiles\n        - channel\n        properties:\n          frames:\n            type: array\n            items: *id010\n          reactions:\n            type: object\n            required:\n            - likes\n            - recasts\n            - likes_count\n            - recasts_count\n            properties:\n              likes:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  properties:\n                    fid: *id001\n              recasts:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  - fname\n                  properties:\n                    fid: *id001\n                    fname:\n                      type: string\n              likes_count:\n                type: integer\n                format: int32\n              recasts_count:\n                type: integer\n                format: int32\n          replies:\n            type: object\n            required:\n            - count\n            properties:\n              count:\n                type: integer\n                format: int32\n          thread_hash:\n            type:\n            - string\n            - 'null'\n          mentioned_profiles:\n            type: array\n            items: *id011\n          channel:\n            oneOf:\n            - oneOf:\n              - type: object\n                required:\n                - id\n                - url\n                - object\n                properties:\n                  id:\n                    type: string\n                  url:\n                    type: string\n                  name:\n                    type: string\n                  description:\n                    type: string\n                  object:\n                    type: string\n                    enum:\n                    - channel\n                  created_at:\n                    description: Epoch timestamp in seconds.\n                    type: number\n                  follower_count:\n                    description: Number of followers the channel has.\n                    type: number\n                  external_link:\n                    type: object\n                    description: Channel's external link.\n                    properties:\n                      title:\n                        type: string\n                      url:\n                        type: string\n                  image_url:\n                    type: string\n                  parent_url:\n                    type: string\n                    format: uri\n                  lead: *id011\n                  moderator_fids:\n                    type: array\n                    items: *id001\n                  member_count:\n                    type: integer\n                    format: int32\n                  moderator: *id011\n                  pinned_cast_hash:\n                    type: string\n                    default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                    description: Cast Hash\n                  hosts:\n                    type: array\n                    deprecated: true\n                    items: *id011\n                  viewer_context: *id012\n              - *id013\n              discriminator:\n                propertyName: object\n                mapping:\n                  channel: '#/components/schemas/Channel'\n                  dehydrated_channel: '#/components/schemas/DehydratedChannel'\n            - type: 'null'\n          viewer_context:\n            type: object\n            description: Adds context on interactions the viewer has made with the\n              cast.\n            required:\n            - liked\n            - recasted\n            properties:\n              liked:\n                description: Indicates if the viewer liked the cast.\n                type: boolean\n              recasted:\n                description: Indicates if the viewer recasted the cast.\n                type: boolean\n          author_channel_context: *id012\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 39902, "end_char_idx": 44911, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "61224a1d-4fb3-459a-85e3-c58485824cfa": {"__data__": {"id_": "61224a1d-4fb3-459a-85e3-c58485824cfa", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-balance.md", "file_name": "neynar_fetch-user-balance.md", "file_type": "text/markdown", "file_size": 3777, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "939b4bde-b0f8-40eb-aae3-6b09cb3a29a8", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-balance.md", "file_name": "neynar_fetch-user-balance.md", "file_type": "text/markdown", "file_size": 3777, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "c06b0ff8adad7b63823fba5a91599f9768916489241864cc9c91f6ea0c335e9f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-user-balance\n\n**Endpoint**: `GET /farcaster/user/balance`\n\n## Description\nFetches the token balances of a user given their FID\n\n## Parameters\n- `fid` (query): FID of the user to fetch\n- `networks` (query): Comma separated list of networks to fetch balances for. Currently, only \"base\" is supported.\n\n## Response\n```yaml\ntype: object\nproperties:\n  user_balance:\n    type: object\n    required:\n    - object\n    - user\n    - address_balances\n    properties:\n      object:\n        type: string\n        enum:\n        - user_balance\n      user:\n        type: object\n        required:\n        - object\n        - fid\n        properties:\n          object:\n            type: string\n            enum:\n            - user_dehydrated\n          fid:\n            type: integer\n            format: int32\n            description: The unique identifier of a farcaster user (unsigned integer)\n            examples:\n            - 3\n            - 191\n            - 2\n            - 194\n            - 19960\n          username:\n            type: string\n          display_name:\n            type: string\n          pfp_url:\n            type: string\n      address_balances:\n        type: array\n        items:\n          type: object\n          description: The token balances associated with a wallet address\n          required:\n          - object\n          - verified_address\n          - token_balances\n          properties:\n            object:\n              type: string\n              enum:\n              - address_balance\n            verified_address:\n              type: object\n              required:\n              - address\n              - network\n              properties:\n                address:\n                  type: string\n                  description: The wallet address\n                network:\n                  type: string\n                  description: A blockchain network e.g. \"base\"\n                  enum:\n                  - base\n            token_balances:\n              type: array\n              items:\n                type: object\n                description: The token balance associated with a wallet address and\n                  a network\n                required:\n                - object\n                - token\n                - balance\n                properties:\n                  object:\n                    type: string\n                    enum:\n                    - token_balance\n                  token:\n                    type: object\n                    required:\n                    - object\n                    - name\n                    - symbol\n                    properties:\n                      object:\n                        type: string\n                        enum:\n                        - token\n                      name:\n                        type: string\n                        description: The token name e.g. \"Ethereum\"\n                      symbol:\n                        type: string\n                        description: The token symbol e.g. \"ETH\"\n                      address:\n                        type: string\n                        description: The contract address of the token (omitted for\n                          native token)\n                      decimals:\n                        type: integer\n                        description: The number of decimals the token uses\n                  balance:\n                    type: object\n                    required:\n                    - in_token\n                    - in_usdc\n                    properties:\n                      in_token:\n                        type: string\n                        description: The balance in the token\n                      in_usdc:\n                        type: string\n                        description: The balance in USDC\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3776, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0f21b5d9-9b12-44fd-bcd7-b777e9c15a55": {"__data__": {"id_": "0f21b5d9-9b12-44fd-bcd7-b777e9c15a55", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channel-memberships.md", "file_name": "neynar_fetch-user-channel-memberships.md", "file_type": "text/markdown", "file_size": 9855, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "98e65e4e-7f3e-4748-9516-6d8f8da866a0", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channel-memberships.md", "file_name": "neynar_fetch-user-channel-memberships.md", "file_type": "text/markdown", "file_size": 9855, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "b0a6576f863e04ecf27fa3c502fdd7e2283bd5dc493d2c067ed830afd9dc5eda", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0ff32025-cf8c-496f-88a3-a074d0dea92b", "node_type": "1", "metadata": {}, "hash": "4df8622b9a903cd4b4c520dd66079d29d68d3dba729e3a548f3397e1f3aae731", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-user-channel-memberships\n\n**Endpoint**: `GET /farcaster/user/memberships/list`\n\n## Description\nReturns a list of all channels with their details that an FID is a member of. Data may have a delay of up to 1 hour.\n\n## Parameters\n- `fid` (query): The FID of the user.\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- members\n- next\nproperties:\n  members:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - role\n      - user\n      - channel\n      properties:\n        object:\n          type: string\n          enum:\n          - member\n        role: &id004\n          type: string\n          description: The role of a channel member\n          enum:\n          - member\n          - moderator\n        user:\n          oneOf:\n          - &id003\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: &id002\n                type: integer\n                format: int32\n                description: The unique identifier of a farcaster user (unsigned integer)\n                examples:\n                - 3\n                - 191\n                - 2\n                - 194\n                - 19960\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id001\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id001\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id001\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5902, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0ff32025-cf8c-496f-88a3-a074d0dea92b": {"__data__": {"id_": "0ff32025-cf8c-496f-88a3-a074d0dea92b", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channel-memberships.md", "file_name": "neynar_fetch-user-channel-memberships.md", "file_type": "text/markdown", "file_size": 9855, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "98e65e4e-7f3e-4748-9516-6d8f8da866a0", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channel-memberships.md", "file_name": "neynar_fetch-user-channel-memberships.md", "file_type": "text/markdown", "file_size": 9855, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "b0a6576f863e04ecf27fa3c502fdd7e2283bd5dc493d2c067ed830afd9dc5eda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f21b5d9-9b12-44fd-bcd7-b777e9c15a55", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channel-memberships.md", "file_name": "neynar_fetch-user-channel-memberships.md", "file_type": "text/markdown", "file_size": 9855, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "431b4353c4caa6dbd3e2e075fc61bae9b1a88c61b45ee47bfc148616ef8fbc4d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          - type: object\n            required:\n            - object\n            - fid\n            properties:\n              object:\n                type: string\n                enum:\n                - user_dehydrated\n              fid: *id002\n              username:\n                type: string\n              display_name:\n                type: string\n              pfp_url:\n                type: string\n        channel:\n          oneOf:\n          - type: object\n            required:\n            - id\n            - url\n            - object\n            properties:\n              id:\n                type: string\n              url:\n                type: string\n              name:\n                type: string\n              description:\n                type: string\n              object:\n                type: string\n                enum:\n                - channel\n              created_at:\n                description: Epoch timestamp in seconds.\n                type: number\n              follower_count:\n                description: Number of followers the channel has.\n                type: number\n              external_link:\n                type: object\n                description: Channel's external link.\n                properties:\n                  title:\n                    type: string\n                  url:\n                    type: string\n              image_url:\n                type: string\n              parent_url:\n                type: string\n                format: uri\n              lead: *id003\n              moderator_fids:\n                type: array\n                items: *id002\n              member_count:\n                type: integer\n                format: int32\n              moderator: *id003\n              pinned_cast_hash:\n                type: string\n                default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                description: Cast Hash\n              hosts:\n                type: array\n                deprecated: true\n                items: *id003\n              viewer_context: &id005\n                description: Adds context on the viewer's or author's role in the\n                  channel.\n                type: object\n                required:\n                - following\n                properties:\n                  following:\n                    description: Indicates if the user is following the channel.\n                    type: boolean\n                  role: *id004\n          - type: object\n            required:\n            - id\n            - name\n            - object\n            properties:\n              id:\n                type: string\n              name:\n                type: string\n              object:\n                type: string\n                enum:\n                - channel_dehydrated\n              image_url:\n                type: string\n              viewer_context: *id005\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4830, "end_char_idx": 9854, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "83a9fbbb-0b40-4d0d-9b87-7ea77488dd2b": {"__data__": {"id_": "83a9fbbb-0b40-4d0d-9b87-7ea77488dd2b", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channels.md", "file_name": "neynar_fetch-user-channels.md", "file_type": "text/markdown", "file_size": 7939, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9adfac0b-d555-4e13-ae0c-95797fa3df22", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channels.md", "file_name": "neynar_fetch-user-channels.md", "file_type": "text/markdown", "file_size": 7939, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "78014355356023a815c144998dd98101b73e0bc5382a1f544b100baadb692f6b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "23f49b19-de2f-41eb-a4fd-47ee017ecf2f", "node_type": "1", "metadata": {}, "hash": "9d0c9b940e135b0c04a55010e78e0dd02d0fb493419219de7ca70c5a002aa1a6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-user-channels\n\n**Endpoint**: `GET /farcaster/user/channels`\n\n## Description\nReturns a list of all channels with their details that a FID follows.\n\n## Parameters\n- `fid` (query): The FID of the user.\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- channels\nproperties:\n  channels:\n    type: array\n    items:\n      type: object\n      required:\n      - id\n      - url\n      - object\n      properties:\n        id:\n          type: string\n        url:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        object:\n          type: string\n          enum:\n          - channel\n        created_at:\n          description: Epoch timestamp in seconds.\n          type: number\n        follower_count:\n          description: Number of followers the channel has.\n          type: number\n        external_link:\n          type: object\n          description: Channel's external link.\n          properties:\n            title:\n              type: string\n            url:\n              type: string\n        image_url:\n          type: string\n        parent_url:\n          type: string\n          format: uri\n        lead: &id003\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid: &id002\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5318, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "23f49b19-de2f-41eb-a4fd-47ee017ecf2f": {"__data__": {"id_": "23f49b19-de2f-41eb-a4fd-47ee017ecf2f", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channels.md", "file_name": "neynar_fetch-user-channels.md", "file_type": "text/markdown", "file_size": 7939, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9adfac0b-d555-4e13-ae0c-95797fa3df22", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channels.md", "file_name": "neynar_fetch-user-channels.md", "file_type": "text/markdown", "file_size": 7939, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "78014355356023a815c144998dd98101b73e0bc5382a1f544b100baadb692f6b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "83a9fbbb-0b40-4d0d-9b87-7ea77488dd2b", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channels.md", "file_name": "neynar_fetch-user-channels.md", "file_type": "text/markdown", "file_size": 7939, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "34eacb272ab1d9d4fb5dda8927a506bd48cee4d828ce6a768e71b0ca05481848", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        moderator_fids:\n          type: array\n          items: *id002\n        member_count:\n          type: integer\n          format: int32\n        moderator: *id003\n        pinned_cast_hash:\n          type: string\n          default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n          description: Cast Hash\n        hosts:\n          type: array\n          deprecated: true\n          items: *id003\n        viewer_context:\n          description: Adds context on the viewer's or author's role in the channel.\n          type: object\n          required:\n          - following\n          properties:\n            following:\n              description: Indicates if the user is following the channel.\n              type: boolean\n            role:\n              type: string\n              description: The role of a channel member\n              enum:\n              - member\n              - moderator\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4319, "end_char_idx": 7938, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c55451f5-8d00-4fdb-909c-cd2456895f50": {"__data__": {"id_": "c55451f5-8d00-4fdb-909c-cd2456895f50", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-followers.md", "file_name": "neynar_fetch-user-followers.md", "file_type": "text/markdown", "file_size": 6528, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ae0cec2c-5c1e-4056-925b-037774210e3e", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-followers.md", "file_name": "neynar_fetch-user-followers.md", "file_type": "text/markdown", "file_size": 6528, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "a6bc117841d7202b1a67dcd2da9e6cf37b009ce590e030a174fc92a09ce4f326", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b195c5f4-a7ef-46c4-b5ec-689d847a7031", "node_type": "1", "metadata": {}, "hash": "7a5f8826c6f2b3e5d81fa8f79be03fe46f46482a2e31880b00b590a324d25ccb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-user-followers\n\n**Endpoint**: `GET /farcaster/followers`\n\n## Description\nReturns a list of followers for a specific FID.\n\n## Parameters\n- `fid` (query): User who's profile you are looking at\n- `viewer_fid` (query): Providing this will return a list of followers that respects this user's mutes and blocks and includes `viewer_context`.\n- `sort_type` (query): Sort type for fetch followers. Default is `desc_chron`\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- users\n- next\nproperties:\n  users:\n    type: array\n    items:\n      type: object\n      properties:\n        object:\n          type: string\n          enum:\n          - follow\n        user:\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid:\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5648, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b195c5f4-a7ef-46c4-b5ec-689d847a7031": {"__data__": {"id_": "b195c5f4-a7ef-46c4-b5ec-689d847a7031", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-followers.md", "file_name": "neynar_fetch-user-followers.md", "file_type": "text/markdown", "file_size": 6528, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ae0cec2c-5c1e-4056-925b-037774210e3e", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-followers.md", "file_name": "neynar_fetch-user-followers.md", "file_type": "text/markdown", "file_size": 6528, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "a6bc117841d7202b1a67dcd2da9e6cf37b009ce590e030a174fc92a09ce4f326", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c55451f5-8d00-4fdb-909c-cd2456895f50", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-followers.md", "file_name": "neynar_fetch-user-followers.md", "file_type": "text/markdown", "file_size": 6528, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "41bc11e3cdc2cd8d362a910c8586a8dce30818b17f0df0332a88e0347afebb78", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4472, "end_char_idx": 6527, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "556a32c4-58bc-4741-b284-c5c44b307355": {"__data__": {"id_": "556a32c4-58bc-4741-b284-c5c44b307355", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b515e0f6-863c-4266-9a76-df6068f22897", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "22ca61817ca2c2acb89be483adee4f0dedd9283e9c49bc8cfbd44a2f28a81fad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "642ced32-df36-483d-93c9-38bdaa6eae8d", "node_type": "1", "metadata": {}, "hash": "5c551bf9b8e2c35fcc1cf384c95add49f00a3fc4b2edf11f1bfe16e591afba28", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-user-following-feed\n\n**Endpoint**: `GET /farcaster/feed/following`\n\n## Description\nFetch feed based on who a user is following\n\n## Parameters\n- `fid` (query): FID of user whose feed you want to create\n- `viewer_fid` (query): Providing this will return a feed that respects this user's mutes and blocks and includes `viewer_context`.\n- `with_recasts` (query): Include recasts in the response, true by default\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- casts\n- next\nproperties:\n  casts:\n    type: array\n    items:\n      allOf:\n      - type: object\n        required:\n        - hash\n        - parent_hash\n        - parent_url\n        - root_parent_url\n        - parent_author\n        - author\n        - text\n        - timestamp\n        - embeds\n        properties:\n          hash:\n            type: string\n          parent_hash:\n            type:\n            - string\n            - 'null'\n          parent_url:\n            type:\n            - string\n            - 'null'\n          root_parent_url:\n            type:\n            - string\n            - 'null'\n          parent_author:\n            type: object\n            required:\n            - fid\n            properties:\n              fid:\n                oneOf:\n                - type: 'null'\n                - &id001\n                  type: integer\n                  format: int32\n                  description: The unique identifier of a farcaster user (unsigned\n                    integer)\n                  examples:\n                  - 3\n                  - 191\n                  - 2\n                  - 194\n                  - 19960\n          author: &id011\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: *id001\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id002\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5740, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "642ced32-df36-483d-93c9-38bdaa6eae8d": {"__data__": {"id_": "642ced32-df36-483d-93c9-38bdaa6eae8d", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b515e0f6-863c-4266-9a76-df6068f22897", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "22ca61817ca2c2acb89be483adee4f0dedd9283e9c49bc8cfbd44a2f28a81fad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "556a32c4-58bc-4741-b284-c5c44b307355", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "da08a784f01ec29e57f5e6a0b16b4c07fededf08092d2c698eb34d3231279876", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6770a7f8-0f89-487c-b7fa-c6ce6058b3db", "node_type": "1", "metadata": {}, "hash": "fe0df8fb809538d41413faf06c0a270674cb9253987f2f1009b522ab38419e14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 4691, "end_char_idx": 7351, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6770a7f8-0f89-487c-b7fa-c6ce6058b3db": {"__data__": {"id_": "6770a7f8-0f89-487c-b7fa-c6ce6058b3db", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b515e0f6-863c-4266-9a76-df6068f22897", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "22ca61817ca2c2acb89be483adee4f0dedd9283e9c49bc8cfbd44a2f28a81fad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "642ced32-df36-483d-93c9-38bdaa6eae8d", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "b8e2ce880c00b55f1b883576fa8f86c2a14408badb867ea6af76bb4ca067963f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "793bda9b-b2ab-43ef-87e0-8511388ec865", "node_type": "1", "metadata": {}, "hash": "7693468d1bce4d6458a0c00eb5858d0c52e0d3acfd9f809418886132f3cd260d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          text:\n            type: string\n          timestamp: &id006\n            type: string\n            format: date-time\n          embeds:\n            type: array\n            items:\n              oneOf:\n              - &id007\n                type: object\n                required:\n                - url\n                properties:\n                  url:\n                    type: string\n                  metadata:\n                    type: object\n                    required:\n                    - _status\n                    properties:\n                      _status:\n                        type: string\n                      content_type:\n                        type:\n                        - string\n                        - 'null'\n                      content_length:\n                        type:\n                        - integer\n                        - 'null'\n                      image:\n                        type: object\n                        properties:\n                          height_px:\n                            type: integer\n                          width_px:\n                            type: integer\n                      video:\n                        type: object\n                        properties:\n                          duration_s:\n                            type: number\n                          stream:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                codec_name:\n                                  type: string\n                                height_px:\n                                  type: integer\n                                width_px:\n                                  type: integer\n                      html:\n                        allOf:\n                        - type: object\n                          properties:\n                            favicon:\n                              type: string\n                            modifiedTime:\n                              type: string\n                            ogArticleAuthor:\n                              type: string\n                            ogArticleExpirationTime:\n                              type: string\n                            ogArticleModifiedTime:\n                              type: string\n                            ogArticlePublishedTime:\n                              type: string\n                            ogArticlePublisher:\n                              type: string\n                            ogArticleSection:\n                              type: string\n                            ogArticleTag:\n                              type: string\n                            ogAudio:\n                              type: string\n                            ogAudioSecureURL:\n                              type: string\n                            ogAudioType:\n                              type: string\n                            ogAudioURL:\n                              type: string\n                            ogAvailability:\n                              type: string\n                            ogDate:\n                              type: string\n                            ogDescription:\n                              type: string\n                            ogDeterminer:\n                              type: string\n                            ogEpisode:\n                              type: string\n                            ogImage:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                  alt:\n                                    type: string\n                                required:\n                                - url\n                            ogLocale:\n                              type: string\n                            ogLocaleAlternate:\n                              type: string\n                            ogLogo:\n                              type: string\n                            ogMovie:\n                              type: string\n                            ogPriceAmount:\n                              type: string\n                            ogPriceCurrency:\n                              type: string\n                            ogProductAvailability:\n                              type: string\n                            ogProductCondition:\n                              type: string\n                            ogProductPriceAmount:\n                              type: string\n                            ogProductPriceCurrency:\n                              type: string\n                            ogProductRetailerItemId:\n                              type: string\n                            ogSiteName:\n                              type: string\n                            ogTitle:\n                              type: string\n                            ogType:\n                              type: string\n                            ogUrl:\n                              type: string\n                            ogVideo:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                required:\n                                - url\n                            ogVideoActor:\n                              type: string\n                            ogVideoActorId:\n                              type: string\n                            ogVideoActorRole:\n                              type: string\n                            ogVideoDirector:\n                              type: string\n                            ogVideoDuration:\n                              type: string\n                            ogVideoOther:\n                              type: string\n                            ogVideoReleaseDate:\n                              type: string\n                            ogVideoSecureURL:\n                              type: string\n                            ogVideoSeries:\n                              type: string\n                            ogVideoTag:\n                              type: string\n                            ogVideoTvShow:\n                              type: string\n                            ogVideoWriter:\n                              type: string\n                            ogWebsite:\n                              type: string\n                            updatedTime:\n                              type: string\n                        - type: object\n                          properties:\n                            oembed:\n                              oneOf:\n                              - allOf:\n                                - &id003\n                                  type: object\n                                  description: Basic data structure of every oembed\n                                    response see https://oembed.com/\n                                  required:\n                                  - type\n                                  - version\n                                  properties:\n                                    type:\n                                      type: string\n                                    version:\n                                      type:\n                                      - string\n                                      - 'null'\n                                    title:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A text title, describing the resource.", "mimetype": "text/plain", "start_char_idx": 6486, "end_char_idx": 15891, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "793bda9b-b2ab-43ef-87e0-8511388ec865": {"__data__": {"id_": "793bda9b-b2ab-43ef-87e0-8511388ec865", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b515e0f6-863c-4266-9a76-df6068f22897", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "22ca61817ca2c2acb89be483adee4f0dedd9283e9c49bc8cfbd44a2f28a81fad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6770a7f8-0f89-487c-b7fa-c6ce6058b3db", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "880f954614bc22e647a32d6b68588667edef694e3fe5842ad899e72da908fb2b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8b6f6867-cdda-49ae-95bb-91681f098455", "node_type": "1", "metadata": {}, "hash": "02bb5551c6319ad9c9e131ba050e77c2a58a5756c4a5f538be3d18d6c2b844c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the author/owner of\n                                        the resource.\n                                    author_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL for the author/owner of the\n                                        resource.\n                                    provider_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the resource provider.\n                                    provider_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The url of the resource provider.\n                                    cache_age:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The suggested cache lifetime for\n                                        this resource, in seconds. Consumers may choose\n                                        to use this value or not.\n                                    thumbnail_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL to a thumbnail image representing\n                                        the resource. The thumbnail must respect any\n                                        maxwidth and maxheight parameters. If this\n                                        parameter is present, thumbnail_width and\n                                        thumbnail_height must also be present.\n                                    thumbnail_width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_height must also be present.\n                                    thumbnail_height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_width must also be present.\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - rich\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to display the\n                                        resource. The HTML should have no padding\n                                        or margins. Consumers may wish to load the\n                                        HTML in an off-domain iframe to avoid XSS\n                                        vulnerabilities. The markup should be valid\n                                        XHTML 1.0 Basic.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - video\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to embed a video\n                                        player. The HTML should have no padding or\n                                        margins. Consumers may wish to load the HTML\n                                        in an off-domain iframe to avoid XSS vulnerabilities.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 15928, "end_char_idx": 24258, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8b6f6867-cdda-49ae-95bb-91681f098455": {"__data__": {"id_": "8b6f6867-cdda-49ae-95bb-91681f098455", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b515e0f6-863c-4266-9a76-df6068f22897", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "22ca61817ca2c2acb89be483adee4f0dedd9283e9c49bc8cfbd44a2f28a81fad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "793bda9b-b2ab-43ef-87e0-8511388ec865", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d81cf46840c56188dbd29347696e8110626f33e45995706b079358d1cf9d21f7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8c73ad8d-ac05-4fbd-bb6a-7b6de1c634e6", "node_type": "1", "metadata": {}, "hash": "4bf0e8989166b44509d34059a21981076b724bc3fd8b9c3a31d03109f5c8881a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - link\n                              discriminator:\n                                propertyName: type\n                                mapping:\n                                  rich: '#/components/schemas/OembedRichData'\n                                  video: '#/components/schemas/OembedVideoData'\n                                  photo: '#/components/schemas/OembedPhotoData'\n                                  link: '#/components/schemas/OembedLinkData'\n                      frame: &id010\n                        discriminator:\n                          propertyName: version\n                        oneOf:\n                        - description: Frame v1 object\n                          allOf:\n                          - &id004\n                            description: Frame base object used across all versions\n                            type: object\n                            required:\n                            - version\n                            - image\n                            - frames_url\n                            properties:\n                              version:\n                                type: string\n                                description: Version of the frame, 'next' for v2,\n                                  'vNext' for v1\n                              image:\n                                type: string\n                                description: URL of the image\n                              frames_url:\n                                type: string\n                                description: Launch URL of the frame\n                          - type: object\n                            properties:\n                              buttons:\n                                type: array\n                                items:\n                                  type: object\n                                  required:\n                                  - index\n                                  - action_type\n                                  properties:\n                                    title:\n                                      type: string\n                                      description: Title of the button\n                                    index:\n                                      type: integer\n                                      description: Index of the button\n                                    action_type:\n                                      type: string\n                                      description: The action type of a frame button.\n                                        Action types \"mint\" & \"link\" are to be handled\n                                        on the client side only and so they will produce\n                                        a no/op for POST /farcaster/frame/action.\n                                      enum:\n                                      - post\n                                      - post_redirect\n                                      - tx\n                                      - link\n                                      - mint\n                                    target:\n                                      type: string\n                                      description: Target of the button\n                                    post_url:\n                                      type: string\n                                      description: Used specifically for the tx action\n                                        type to post a successful transaction hash\n                              post_url:\n                                type: string\n                                description: Post URL to take an action on this frame\n                              title:\n                                type: string\n                              image_aspect_ratio:\n                                type: string\n                              input:\n                                type: object\n                                properties:\n                                  text:\n                                    type: string\n                                    description: Input text for the frame\n                              state:\n                                type: object\n                                properties:\n                                  serialized:\n                                    type: string\n                                    description: State for the frame in a serialized\n                                      format\n                        - description: Frame v2 object\n                          allOf:\n                          - *id004\n                          - type: object\n                            required:\n                            - title\n                            - name\n                            - icon\n                            properties:\n                              manifest:\n                                type: object\n                                properties:\n                                  account_association:\n                                    type: object\n                                    properties:\n                                      header:\n                                        type: string\n                                      payload:\n                                        type: string\n                                      signature:\n                                        type: string\n                                    required:\n                                    - header\n                                    - payload\n                                    - signature\n                                  frame:\n                                    type: object\n                                    properties:\n                                      version:\n                                        type: string\n                                        enum:\n                                        - 0.0.0\n                                        - 0.0.", "mimetype": "text/plain", "start_char_idx": 22565, "end_char_idx": 30658, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8c73ad8d-ac05-4fbd-bb6a-7b6de1c634e6": {"__data__": {"id_": "8c73ad8d-ac05-4fbd-bb6a-7b6de1c634e6", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b515e0f6-863c-4266-9a76-df6068f22897", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "22ca61817ca2c2acb89be483adee4f0dedd9283e9c49bc8cfbd44a2f28a81fad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b6f6867-cdda-49ae-95bb-91681f098455", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "62c7b83187a659715b6c75300fd1a84d49323272b3c3e194a248b3485ea3876d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b2da5f0e-a54e-46d5-840c-2a9c80f5c993", "node_type": "1", "metadata": {}, "hash": "256dbc3a053302772e68551d3c8ed80cd3cc87d6cacee7a7b90bcf151cedcd80", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                        - 0.0.1\n                                        - '1'\n                                        - next\n                                      name:\n                                        type: string\n                                        maxLength: 32\n                                      home_url:\n                                        type: string\n                                        maxLength: 512\n                                      icon_url:\n                                        type: string\n                                        maxLength: 512\n                                      image_url:\n                                        type: string\n                                        maxLength: 512\n                                      button_title:\n                                        type: string\n                                        maxLength: 32\n                                      splash_image_url:\n                                        type: string\n                                        maxLength: 512\n                                      splash_background_color:\n                                        type: string\n                                      webhook_url:\n                                        type: string\n                                        maxLength: 512\n                                    required:\n                                    - version\n                                    - name\n                                    - home_url\n                                    - icon_url\n                                  triggers:\n                                    type: array\n                                    items:\n                                      oneOf:\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - cast\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - composer\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                required:\n                                - account_association\n                              author: &id005\n                                type: object\n                                required:\n                                - object\n                                - fid\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - user_dehydrated\n                                  fid: *id001\n                                  username:\n                                    type: string\n                                  display_name:\n                                    type: string\n                                  pfp_url:\n                                    type: string\n                        mapping:\n                          vNext: '#/components/schemas/FrameV1'\n                          next: '#/components/schemas/FrameV2'\n                          '1': '#/components/schemas/FrameV2'\n                          0.0.0: '#/components/schemas/FrameV2'\n                          0.0.1: '#/components/schemas/FrameV2'\n              - type: object\n                required:\n                - cast\n                properties:\n                  cast_id: &id008\n                    type: object\n                    required:\n                    - fid\n                    - hash\n                    properties:\n                      fid: *id001\n                      hash:\n                        type: string\n                  cast:\n                    type: object\n                    required:\n                    - hash\n                    - parent_hash\n                    - parent_url\n                    - root_parent_url\n                    - parent_author\n                    - author\n                    - text\n                    - timestamp\n                    - type\n                    - embeds\n                    - channel\n                    properties:\n                      hash:\n                        type: string\n                      parent_hash:\n                        type:\n                        - string\n                        - 'null'\n                      parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      root_parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      parent_author:\n                        type: object\n                        required:\n                        - fid\n                        properties:\n                          fid:\n                            oneOf:\n                            - type: 'null'\n                            - *id001\n                      author: *id005\n                      text:\n                        type: string\n                      timestamp: *id006\n                      type: &id009\n                        type: string\n                        enum:\n                        - cast-mention\n                        - cast-reply\n                        description: 'The notification type of a cast.\n\n                          '\n                      embeds:\n                        type: array\n                        items:\n                          oneOf:\n                          - *id007\n                          - type: object\n                            required:\n                            - cast\n                            properties:\n                              cast_id: *id008\n                              cast:\n                                type: object\n                                required:\n                                - object\n                                - hash\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - cast_dehydrated\n                                  hash:\n                                    type: string\n                                  author: *id005\n                      channel:\n                        oneOf:\n                        - type: 'null'\n                        - &id013\n                          type: object\n                          required:\n                          - id\n                          - name\n                          - object\n                          properties:\n                            id:\n                              type: string\n                            name:\n                              type: string\n                            object:\n                              type: string\n                              enum:\n                              - channel_dehydrated\n                            image_url:\n                              type: string\n                            viewer_context: &id012\n                              description: Adds context on the viewer's or author's\n                                role in the channel.", "mimetype": "text/plain", "start_char_idx": 30608, "end_char_idx": 39375, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b2da5f0e-a54e-46d5-840c-2a9c80f5c993": {"__data__": {"id_": "b2da5f0e-a54e-46d5-840c-2a9c80f5c993", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b515e0f6-863c-4266-9a76-df6068f22897", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "22ca61817ca2c2acb89be483adee4f0dedd9283e9c49bc8cfbd44a2f28a81fad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8c73ad8d-ac05-4fbd-bb6a-7b6de1c634e6", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "99b7a6cd948c097dc0d126fcde78c5e68586ef5a4d264c8de5b889c9d13f7415", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                              required:\n                              - following\n                              properties:\n                                following:\n                                  description: Indicates if the user is following\n                                    the channel.\n                                  type: boolean\n                                role:\n                                  type: string\n                                  description: The role of a channel member\n                                  enum:\n                                  - member\n                                  - moderator\n          type: *id009\n      - type: object\n        required:\n        - reactions\n        - replies\n        - thread_hash\n        - mentioned_profiles\n        - channel\n        properties:\n          frames:\n            type: array\n            items: *id010\n          reactions:\n            type: object\n            required:\n            - likes\n            - recasts\n            - likes_count\n            - recasts_count\n            properties:\n              likes:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  properties:\n                    fid: *id001\n              recasts:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  - fname\n                  properties:\n                    fid: *id001\n                    fname:\n                      type: string\n              likes_count:\n                type: integer\n                format: int32\n              recasts_count:\n                type: integer\n                format: int32\n          replies:\n            type: object\n            required:\n            - count\n            properties:\n              count:\n                type: integer\n                format: int32\n          thread_hash:\n            type:\n            - string\n            - 'null'\n          mentioned_profiles:\n            type: array\n            items: *id011\n          channel:\n            oneOf:\n            - oneOf:\n              - type: object\n                required:\n                - id\n                - url\n                - object\n                properties:\n                  id:\n                    type: string\n                  url:\n                    type: string\n                  name:\n                    type: string\n                  description:\n                    type: string\n                  object:\n                    type: string\n                    enum:\n                    - channel\n                  created_at:\n                    description: Epoch timestamp in seconds.\n                    type: number\n                  follower_count:\n                    description: Number of followers the channel has.\n                    type: number\n                  external_link:\n                    type: object\n                    description: Channel's external link.\n                    properties:\n                      title:\n                        type: string\n                      url:\n                        type: string\n                  image_url:\n                    type: string\n                  parent_url:\n                    type: string\n                    format: uri\n                  lead: *id011\n                  moderator_fids:\n                    type: array\n                    items: *id001\n                  member_count:\n                    type: integer\n                    format: int32\n                  moderator: *id011\n                  pinned_cast_hash:\n                    type: string\n                    default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                    description: Cast Hash\n                  hosts:\n                    type: array\n                    deprecated: true\n                    items: *id011\n                  viewer_context: *id012\n              - *id013\n              discriminator:\n                propertyName: object\n                mapping:\n                  channel: '#/components/schemas/Channel'\n                  dehydrated_channel: '#/components/schemas/DehydratedChannel'\n            - type: 'null'\n          viewer_context:\n            type: object\n            description: Adds context on interactions the viewer has made with the\n              cast.\n            required:\n            - liked\n            - recasted\n            properties:\n              liked:\n                description: Indicates if the viewer liked the cast.\n                type: boolean\n              recasted:\n                description: Indicates if the viewer recasted the cast.\n                type: boolean\n          author_channel_context: *id012\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 39406, "end_char_idx": 44415, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "daab3ef8-10ba-48a5-8683-2c73c19850f5": {"__data__": {"id_": "daab3ef8-10ba-48a5-8683-2c73c19850f5", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following.md", "file_name": "neynar_fetch-user-following.md", "file_type": "text/markdown", "file_size": 6593, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "23ee1484-af0d-48e5-bab2-814c7ca349fc", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following.md", "file_name": "neynar_fetch-user-following.md", "file_type": "text/markdown", "file_size": 6593, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "38ba9ab13249535ff12316a5fac71c69ad041a8e92181a5948c5519a348ac337", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "266588b2-a06f-4947-a964-4bcd369c6aaa", "node_type": "1", "metadata": {}, "hash": "7a5f8826c6f2b3e5d81fa8f79be03fe46f46482a2e31880b00b590a324d25ccb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-user-following\n\n**Endpoint**: `GET /farcaster/following`\n\n## Description\nFetch a list of users followed by a user. Can optionally include a viewer_fid and sort_type.\n\n## Parameters\n- `fid` (query): FID of the user whose following you want to fetch.\n- `viewer_fid` (query): Providing this will return a list of users that respects this user's mutes and blocks and includes `viewer_context`.\n- `sort_type` (query): Optional parameter to sort the users based on different criteria.\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- users\n- next\nproperties:\n  users:\n    type: array\n    items:\n      type: object\n      properties:\n        object:\n          type: string\n          enum:\n          - follow\n        user:\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid:\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5713, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "266588b2-a06f-4947-a964-4bcd369c6aaa": {"__data__": {"id_": "266588b2-a06f-4947-a964-4bcd369c6aaa", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following.md", "file_name": "neynar_fetch-user-following.md", "file_type": "text/markdown", "file_size": 6593, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "23ee1484-af0d-48e5-bab2-814c7ca349fc", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following.md", "file_name": "neynar_fetch-user-following.md", "file_type": "text/markdown", "file_size": 6593, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "38ba9ab13249535ff12316a5fac71c69ad041a8e92181a5948c5519a348ac337", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "daab3ef8-10ba-48a5-8683-2c73c19850f5", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following.md", "file_name": "neynar_fetch-user-following.md", "file_type": "text/markdown", "file_size": 6593, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "91aaada0efae1ae304cd8c42b79c256395a5a54ebec94ea058b0c3c112ac7e30", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4537, "end_char_idx": 6592, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c88c2f92-1710-4400-a308-08a412f1add8": {"__data__": {"id_": "c88c2f92-1710-4400-a308-08a412f1add8", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d87903c7-0fdd-425c-86cd-8ab5350884a0", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "7be8a7a70ae569ebc86e83fa8059a2b77d488c155110e84879fad6f46564c20c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "32cc1f06-678c-42c3-9718-a3a5ffcc995c", "node_type": "1", "metadata": {}, "hash": "02f587cd3aa3383dd0364ccf187a476f3733ff55999517f15538a4b8d31fd576", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-user-reactions\n\n**Endpoint**: `GET /farcaster/reactions/user`\n\n## Description\nFetches reactions for a given user\n\n## Parameters\n- `fid` (query): No description\n- `viewer_fid` (query): Providing this will return a list of reactions that respects this user's mutes and blocks and includes `viewer_context`.\n- `type` (query): Type of reaction to fetch (likes or recasts or all)\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- reactions\n- next\nproperties:\n  reactions:\n    type: array\n    items:\n      type: object\n      required:\n      - reaction_type\n      - cast\n      - reaction_timestamp\n      - object\n      - user\n      properties:\n        reaction_type:\n          type: string\n          enum:\n          - like\n          - recast\n        cast:\n          allOf:\n          - type: object\n            required:\n            - hash\n            - parent_hash\n            - parent_url\n            - root_parent_url\n            - parent_author\n            - author\n            - text\n            - timestamp\n            - embeds\n            properties:\n              hash:\n                type: string\n              parent_hash:\n                type:\n                - string\n                - 'null'\n              parent_url:\n                type:\n                - string\n                - 'null'\n              root_parent_url:\n                type:\n                - string\n                - 'null'\n              parent_author:\n                type: object\n                required:\n                - fid\n                properties:\n                  fid:\n                    oneOf:\n                    - type: 'null'\n                    - &id001\n                      type: integer\n                      format: int32\n                      description: The unique identifier of a farcaster user (unsigned\n                        integer)\n                      examples:\n                      - 3\n                      - 191\n                      - 2\n                      - 194\n                      - 19960\n              author: &id011\n                type: object\n                required:\n                - object\n                - fid\n                - custody_address\n                - username\n                - profile\n                - follower_count\n                - following_count\n                - verifications\n                - verified_addresses\n                - verified_accounts\n                - power_badge\n                properties:\n                  object:\n                    type: string\n                    enum:\n                    - user\n                  fid: *id001\n                  username:\n                    type: string\n                  display_name:\n                    type: string\n                  custody_address: &id002\n                    type: string\n                    pattern: ^0x[a-fA-F0-9]{40}$\n                    description: Ethereum address\n                  pfp_url:\n                    type: string\n                    description: The URL of the user's profile picture\n                  profile:\n                    type: object\n                    required:\n                    - bio\n                    properties:\n                      bio:\n                        type: object\n                        required:\n                        - text\n                        - mentioned_profiles\n                        properties:\n                          text:\n                            type: string\n                          mentioned_profiles:\n                            type: array\n                            items:\n                              type: string\n                            default: []\n                      location:\n                        description: Coordinates and place names for a location\n                        type: object\n                        required:\n                        - latitude\n                        - longitude\n                        properties:\n                          latitude:\n                            type: number\n                            format: double\n                            minimum: -90\n                            maximum: 90\n                          longitude:\n                            type: number\n                            format: double\n                            minimum: -180\n                            maximum: 180\n                          address:\n                            type: object\n                            required:\n                            - city\n                            - country\n                            properties:\n                              city:\n                                type: string\n                              state:\n                                type: string\n                              state_code:\n                                type: string\n                              country:\n                                type: string\n                              country_code:\n                                type: string\n                  follower_count:\n                    type: integer\n                    format: int32\n                    description: The number of followers the user has.\n                  following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id002\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id002\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 6224, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "32cc1f06-678c-42c3-9718-a3a5ffcc995c": {"__data__": {"id_": "32cc1f06-678c-42c3-9718-a3a5ffcc995c", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d87903c7-0fdd-425c-86cd-8ab5350884a0", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "7be8a7a70ae569ebc86e83fa8059a2b77d488c155110e84879fad6f46564c20c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c88c2f92-1710-4400-a308-08a412f1add8", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "8b36a38f751bf6ce68dde16f5584959122b5f3b01f08e43b689a50e331385938", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c252acca-0de6-4410-a411-d1af5d611055", "node_type": "1", "metadata": {}, "hash": "9ebc3fd550923fdff8ab84e34c75e2105afeae99bba64bf4a496052492dc326d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id002\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id002\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.\n                        items:\n                          type: string\n                          pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                          description: Solana address\n                  verified_accounts:\n                    type: array\n                    description: Verified accounts of the user on other platforms,\n                      currently only X is supported.\n                    items:\n                      type: object\n                      properties:\n                        platform:\n                          type: string\n                          enum:\n                          - x\n                          - github\n                        username:\n                          type: string\n                  power_badge:\n                    type: boolean\n                  experimental:\n                    type: object\n                    required:\n                    - neynar_user_score\n                    properties:\n                      neynar_user_score:\n                        type: number\n                        format: double\n                        description: Score that represents the probability that the\n                          account is not spam.\n                  viewer_context:\n                    type: object\n                    description: Adds context on the viewer's follow relationship\n                      with the user.\n                    required:\n                    - following\n                    - followed_by\n                    - blocking\n                    - blocked_by\n                    properties:\n                      following:\n                        description: Indicates if the viewer is following the user.\n                        type: boolean\n                      followed_by:\n                        description: Indicates if the viewer is followed by the user.\n                        type: boolean\n                      blocking:\n                        description: Indicates if the viewer is blocking the user.\n                        type: boolean\n                      blocked_by:\n                        description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 5290, "end_char_idx": 8401, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c252acca-0de6-4410-a411-d1af5d611055": {"__data__": {"id_": "c252acca-0de6-4410-a411-d1af5d611055", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d87903c7-0fdd-425c-86cd-8ab5350884a0", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "7be8a7a70ae569ebc86e83fa8059a2b77d488c155110e84879fad6f46564c20c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "32cc1f06-678c-42c3-9718-a3a5ffcc995c", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "e04f3d3c84e5e9fac5d8be932784aa01b74f25f66ff7ba670a08b99d87d11865", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "823fe4ae-7a67-45c1-8a30-e416e6f69b5b", "node_type": "1", "metadata": {}, "hash": "1ba7c92044a2c3addbb8adb178277cf9c49e5a8c99bbe3676369af19c345a358", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                    type: object\n                    description: Adds context on the viewer's follow relationship\n                      with the user.\n                    required:\n                    - following\n                    - followed_by\n                    - blocking\n                    - blocked_by\n                    properties:\n                      following:\n                        description: Indicates if the viewer is following the user.\n                        type: boolean\n                      followed_by:\n                        description: Indicates if the viewer is followed by the user.\n                        type: boolean\n                      blocking:\n                        description: Indicates if the viewer is blocking the user.\n                        type: boolean\n                      blocked_by:\n                        description: Indicates if the viewer is blocked by the user.\n                        type: boolean\n              text:\n                type: string\n              timestamp: &id006\n                type: string\n                format: date-time\n              embeds:\n                type: array\n                items:\n                  oneOf:\n                  - &id007\n                    type: object\n                    required:\n                    - url\n                    properties:\n                      url:\n                        type: string\n                      metadata:\n                        type: object\n                        required:\n                        - _status\n                        properties:\n                          _status:\n                            type: string\n                          content_type:\n                            type:\n                            - string\n                            - 'null'\n                          content_length:\n                            type:\n                            - integer\n                            - 'null'\n                          image:\n                            type: object\n                            properties:\n                              height_px:\n                                type: integer\n                              width_px:\n                                type: integer\n                          video:\n                            type: object\n                            properties:\n                              duration_s:\n                                type: number\n                              stream:\n                                type: array\n                                items:\n                                  type: object\n                                  properties:\n                                    codec_name:\n                                      type: string\n                                    height_px:\n                                      type: integer\n                                    width_px:\n                                      type: integer\n                          html:\n                            allOf:\n                            - type: object\n                              properties:\n                                favicon:\n                                  type: string\n                                modifiedTime:\n                                  type: string\n                                ogArticleAuthor:\n                                  type: string\n                                ogArticleExpirationTime:\n                                  type: string\n                                ogArticleModifiedTime:\n                                  type: string\n                                ogArticlePublishedTime:\n                                  type: string\n                                ogArticlePublisher:\n                                  type: string\n                                ogArticleSection:\n                                  type: string\n                                ogArticleTag:\n                                  type: string\n                                ogAudio:\n                                  type: string\n                                ogAudioSecureURL:\n                                  type: string\n                                ogAudioType:\n                                  type: string\n                                ogAudioURL:\n                                  type: string\n                                ogAvailability:\n                                  type: string\n                                ogDate:\n                                  type: string\n                                ogDescription:\n                                  type: string\n                                ogDeterminer:\n                                  type: string\n                                ogEpisode:\n                                  type: string\n                                ogImage:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                      alt:\n                                        type: string\n                                    required:\n                                    - url\n                                ogLocale:\n                                  type: string\n                                ogLocaleAlternate:\n                                  type: string\n                                ogLogo:\n                                  type: string\n                                ogMovie:\n                                  type: string\n                                ogPriceAmount:\n                                  type: string\n                                ogPriceCurrency:\n                                  type: string\n                                ogProductAvailability:\n                                  type: string\n                                ogProductCondition:\n                                  type: string\n                                ogProductPriceAmount:\n                                  type: string\n                                ogProductPriceCurrency:\n                                  type: string\n                                ogProductRetailerItemId:\n                                  type: string\n                                ogSiteName:\n                                  type: string\n                                ogTitle:\n                                  type: string\n                                ogType:\n                                  type: string\n                                ogUrl:\n                                  type: string\n                                ogVideo:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                    required:\n                                    - url\n                                ogVideoActor:\n                                  type: string\n                                ogVideoActorId:\n                                  type: string\n                                ogVideoActorRole:\n                                  type: string\n                                ogVideoDirector:\n                                  type: string\n                                ogVideoDuration:\n                                  type: string\n                                ogVideoOther:\n                                  type: string\n                                ogVideoReleaseDate:\n                                  type: string\n                                ogVideoSecureURL:\n                                  type: string\n                                ogVideoSeries:\n                                  type: string\n                                ogVideoTag:\n                                  type: string\n                                ogVideoTvShow:\n                                  type: string\n                                ogVideoWriter:\n                                  type: string\n                                ogWebsite:\n                                  type: string\n                                updatedTime:\n                                  type: string\n                            - type: object\n                              properties:\n                                oembed:\n                                  oneOf:\n                                  - allOf:\n                                    - &id003\n                                      type: object\n                                      description: Basic data structure of every oembed\n                                        response see https://oembed.com/\n                                      required:\n                                      - type\n                                      - version\n                                      properties:\n                                        type:\n                                          type: string\n                                        version:\n                                          type:\n                                          - string\n                                          - 'null'\n                                        title:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A text title, describing the\n                                            resource.", "mimetype": "text/plain", "start_char_idx": 7456, "end_char_idx": 17821, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "823fe4ae-7a67-45c1-8a30-e416e6f69b5b": {"__data__": {"id_": "823fe4ae-7a67-45c1-8a30-e416e6f69b5b", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d87903c7-0fdd-425c-86cd-8ab5350884a0", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "7be8a7a70ae569ebc86e83fa8059a2b77d488c155110e84879fad6f46564c20c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c252acca-0de6-4410-a411-d1af5d611055", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "bbd324a087f54eb56df6011f8e8227a23abcca75269fca2caf954d47ff04ae95", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ca38417f-9889-4237-bc4e-b36a231748d8", "node_type": "1", "metadata": {}, "hash": "23a04483365d8bcc2b18a2d1ac96edd50ac2b76ebbbf7ad056f6abdb7ce9a7f4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the author/owner\n                                            of the resource.\n                                        author_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL for the author/owner\n                                            of the resource.\n                                        provider_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the resource provider.\n                                        provider_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The url of the resource provider.\n                                        cache_age:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The suggested cache lifetime\n                                            for this resource, in seconds. Consumers\n                                            may choose to use this value or not.\n                                        thumbnail_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL to a thumbnail image\n                                            representing the resource. The thumbnail\n                                            must respect any maxwidth and maxheight\n                                            parameters. If this parameter is present,\n                                            thumbnail_width and thumbnail_height must\n                                            also be present.\n                                        thumbnail_width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width of the optional thumbnail.\n                                            If this parameter is present, thumbnail_url\n                                            and thumbnail_height must also be present.\n                                        thumbnail_height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height of the optional\n                                            thumbnail. If this parameter is present,\n                                            thumbnail_url and thumbnail_width must\n                                            also be present.\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - rich\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to display\n                                            the resource. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities. The markup\n                                            should be valid XHTML 1.0 Basic.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - video\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to embed\n                                            a video player. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 17862, "end_char_idx": 26924, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ca38417f-9889-4237-bc4e-b36a231748d8": {"__data__": {"id_": "ca38417f-9889-4237-bc4e-b36a231748d8", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d87903c7-0fdd-425c-86cd-8ab5350884a0", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "7be8a7a70ae569ebc86e83fa8059a2b77d488c155110e84879fad6f46564c20c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "823fe4ae-7a67-45c1-8a30-e416e6f69b5b", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f3faff639c9c274ddf5bba493833a595fa8ed8abcbfc573a3d5c64ca91814e53", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f28d5c05-215c-4c21-a9f7-cbbb067c2f38", "node_type": "1", "metadata": {}, "hash": "d2c745055c34b05df38156a53e572587481b7019a7d17c71b53ebf72656e7c1e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - link\n                                  discriminator:\n                                    propertyName: type\n                                    mapping:\n                                      rich: '#/components/schemas/OembedRichData'\n                                      video: '#/components/schemas/OembedVideoData'\n                                      photo: '#/components/schemas/OembedPhotoData'\n                                      link: '#/components/schemas/OembedLinkData'\n                          frame: &id010\n                            discriminator:\n                              propertyName: version\n                            oneOf:\n                            - description: Frame v1 object\n                              allOf:\n                              - &id004\n                                description: Frame base object used across all versions\n                                type: object\n                                required:\n                                - version\n                                - image\n                                - frames_url\n                                properties:\n                                  version:\n                                    type: string\n                                    description: Version of the frame, 'next' for\n                                      v2, 'vNext' for v1\n                                  image:\n                                    type: string\n                                    description: URL of the image\n                                  frames_url:\n                                    type: string\n                                    description: Launch URL of the frame\n                              - type: object\n                                properties:\n                                  buttons:\n                                    type: array\n                                    items:\n                                      type: object\n                                      required:\n                                      - index\n                                      - action_type\n                                      properties:\n                                        title:\n                                          type: string\n                                          description: Title of the button\n                                        index:\n                                          type: integer\n                                          description: Index of the button\n                                        action_type:\n                                          type: string\n                                          description: The action type of a frame\n                                            button. Action types \"mint\" & \"link\" are\n                                            to be handled on the client side only\n                                            and so they will produce a no/op for POST\n                                            /farcaster/frame/action.\n                                          enum:\n                                          - post\n                                          - post_redirect\n                                          - tx\n                                          - link\n                                          - mint\n                                        target:\n                                          type: string\n                                          description: Target of the button\n                                        post_url:\n                                          type: string\n                                          description: Used specifically for the tx\n                                            action type to post a successful transaction\n                                            hash\n                                  post_url:\n                                    type: string\n                                    description: Post URL to take an action on this\n                                      frame\n                                  title:\n                                    type: string\n                                  image_aspect_ratio:\n                                    type: string\n                                  input:\n                                    type: object\n                                    properties:\n                                      text:\n                                        type: string\n                                        description: Input text for the frame\n                                  state:\n                                    type: object\n                                    properties:\n                                      serialized:\n                                        type: string\n                                        description: State for the frame in a serialized\n                                          format\n                            - description: Frame v2 object\n                              allOf:\n                              - *id004\n                              - type: object\n                                required:\n                                - title\n                                - name\n                                - icon\n                                properties:\n                                  manifest:\n                                    type: object\n                                    properties:\n                                      account_association:\n                                        type: object\n                                        properties:\n                                          header:\n                                            type: string\n                                          payload:\n                                            type: string\n                                          signature:\n                                            type: string\n                                        required:\n                                        - header\n                                        - payload\n                                        - signature\n                                      frame:\n                                        type: object\n                                        properties:\n                                          version:\n                                            type: string\n                                            enum:\n                                            - 0.0.0\n                                            - 0.0.", "mimetype": "text/plain", "start_char_idx": 25103, "end_char_idx": 33966, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f28d5c05-215c-4c21-a9f7-cbbb067c2f38": {"__data__": {"id_": "f28d5c05-215c-4c21-a9f7-cbbb067c2f38", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d87903c7-0fdd-425c-86cd-8ab5350884a0", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "7be8a7a70ae569ebc86e83fa8059a2b77d488c155110e84879fad6f46564c20c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ca38417f-9889-4237-bc4e-b36a231748d8", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "e180c15b94a84a938d1656e6494f0999506f6c5b44454f7f6b11ad5db3c5fb31", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "af3776e5-324b-4b12-b101-ffafee03f34a", "node_type": "1", "metadata": {}, "hash": "c527a4018989db2cbb830dd28b7ff51be65ef4b845943825e166f4764a944b6f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                            - 0.0.1\n                                            - '1'\n                                            - next\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                          home_url:\n                                            type: string\n                                            maxLength: 512\n                                          icon_url:\n                                            type: string\n                                            maxLength: 512\n                                          image_url:\n                                            type: string\n                                            maxLength: 512\n                                          button_title:\n                                            type: string\n                                            maxLength: 32\n                                          splash_image_url:\n                                            type: string\n                                            maxLength: 512\n                                          splash_background_color:\n                                            type: string\n                                          webhook_url:\n                                            type: string\n                                            maxLength: 512\n                                        required:\n                                        - version\n                                        - name\n                                        - home_url\n                                        - icon_url\n                                      triggers:\n                                        type: array\n                                        items:\n                                          oneOf:\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - cast\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - composer\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                    required:\n                                    - account_association\n                                  author: &id005\n                                    type: object\n                                    required:\n                                    - object\n                                    - fid\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - user_dehydrated\n                                      fid: *id001\n                                      username:\n                                        type: string\n                                      display_name:\n                                        type: string\n                                      pfp_url:\n                                        type: string\n                            mapping:\n                              vNext: '#/components/schemas/FrameV1'\n                              next: '#/components/schemas/FrameV2'\n                              '1': '#/components/schemas/FrameV2'\n                              0.0.0: '#/components/schemas/FrameV2'\n                              0.0.1: '#/components/schemas/FrameV2'\n                  - type: object\n                    required:\n                    - cast\n                    properties:\n                      cast_id: &id008\n                        type: object\n                        required:\n                        - fid\n                        - hash\n                        properties:\n                          fid: *id001\n                          hash:\n                            type: string\n                      cast:\n                        type: object\n                        required:\n                        - hash\n                        - parent_hash\n                        - parent_url\n                        - root_parent_url\n                        - parent_author\n                        - author\n                        - text\n                        - timestamp\n                        - type\n                        - embeds\n                        - channel\n                        properties:\n                          hash:\n                            type: string\n                          parent_hash:\n                            type:\n                            - string\n                            - 'null'\n                          parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          root_parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          parent_author:\n                            type: object\n                            required:\n                            - fid\n                            properties:\n                              fid:\n                                oneOf:\n                                - type: 'null'\n                                - *id001\n                          author: *id005\n                          text:\n                            type: string\n                          timestamp: *id006\n                          type: &id009\n                            type: string\n                            enum:\n                            - cast-mention\n                            - cast-reply\n                            description: 'The notification type of a cast.\n\n                              '\n                          embeds:\n                            type: array\n                            items:\n                              oneOf:\n                              - *id007\n                              - type: object\n                                required:\n                                - cast\n                                properties:\n                                  cast_id: *id008\n                                  cast:\n                                    type: object\n                                    required:\n                                    - object\n                                    - hash\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - cast_dehydrated\n                                      hash:\n                                        type: string\n                                      author: *id005\n                          channel:\n                            oneOf:\n                            - type: 'null'\n                            - &id013\n                              type: object\n                              required:\n                              - id\n                              - name\n                              - object\n                              properties:\n                                id:\n                                  type: string\n                                name:\n                                  type: string\n                                object:\n                                  type: string\n                                  enum:\n                                  - channel_dehydrated\n                                image_url:\n                                  type: string\n                                viewer_context: &id012\n                                  description: Adds context on the viewer's or author's\n                                    role in the channel.", "mimetype": "text/plain", "start_char_idx": 33912, "end_char_idx": 43495, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "af3776e5-324b-4b12-b101-ffafee03f34a": {"__data__": {"id_": "af3776e5-324b-4b12-b101-ffafee03f34a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d87903c7-0fdd-425c-86cd-8ab5350884a0", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "7be8a7a70ae569ebc86e83fa8059a2b77d488c155110e84879fad6f46564c20c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f28d5c05-215c-4c21-a9f7-cbbb067c2f38", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "9bb999a7499b6d0ede57336436b3d39bb5917158d1720e29596568b877c8a43c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                                  required:\n                                  - following\n                                  properties:\n                                    following:\n                                      description: Indicates if the user is following\n                                        the channel.\n                                      type: boolean\n                                    role:\n                                      type: string\n                                      description: The role of a channel member\n                                      enum:\n                                      - member\n                                      - moderator\n              type: *id009\n          - type: object\n            required:\n            - reactions\n            - replies\n            - thread_hash\n            - mentioned_profiles\n            - channel\n            properties:\n              frames:\n                type: array\n                items: *id010\n              reactions:\n                type: object\n                required:\n                - likes\n                - recasts\n                - likes_count\n                - recasts_count\n                properties:\n                  likes:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      properties:\n                        fid: *id001\n                  recasts:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      - fname\n                      properties:\n                        fid: *id001\n                        fname:\n                          type: string\n                  likes_count:\n                    type: integer\n                    format: int32\n                  recasts_count:\n                    type: integer\n                    format: int32\n              replies:\n                type: object\n                required:\n                - count\n                properties:\n                  count:\n                    type: integer\n                    format: int32\n              thread_hash:\n                type:\n                - string\n                - 'null'\n              mentioned_profiles:\n                type: array\n                items: *id011\n              channel:\n                oneOf:\n                - oneOf:\n                  - type: object\n                    required:\n                    - id\n                    - url\n                    - object\n                    properties:\n                      id:\n                        type: string\n                      url:\n                        type: string\n                      name:\n                        type: string\n                      description:\n                        type: string\n                      object:\n                        type: string\n                        enum:\n                        - channel\n                      created_at:\n                        description: Epoch timestamp in seconds.\n                        type: number\n                      follower_count:\n                        description: Number of followers the channel has.\n                        type: number\n                      external_link:\n                        type: object\n                        description: Channel's external link.\n                        properties:\n                          title:\n                            type: string\n                          url:\n                            type: string\n                      image_url:\n                        type: string\n                      parent_url:\n                        type: string\n                        format: uri\n                      lead: *id011\n                      moderator_fids:\n                        type: array\n                        items: *id001\n                      member_count:\n                        type: integer\n                        format: int32\n                      moderator: *id011\n                      pinned_cast_hash:\n                        type: string\n                        default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                        description: Cast Hash\n                      hosts:\n                        type: array\n                        deprecated: true\n                        items: *id011\n                      viewer_context: *id012\n                  - *id013\n                  discriminator:\n                    propertyName: object\n                    mapping:\n                      channel: '#/components/schemas/Channel'\n                      dehydrated_channel: '#/components/schemas/DehydratedChannel'\n                - type: 'null'\n              viewer_context:\n                type: object\n                description: Adds context on interactions the viewer has made with\n                  the cast.\n                required:\n                - liked\n                - recasted\n                properties:\n                  liked:\n                    description: Indicates if the viewer liked the cast.\n                    type: boolean\n                  recasted:\n                    description: Indicates if the viewer recasted the cast.\n                    type: boolean\n              author_channel_context: *id012\n        reaction_timestamp:\n          type: string\n          format: date-time\n        object:\n          type: string\n          enum:\n          - likes\n          - recasts\n        user: *id005\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 43530, "end_char_idx": 49340, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c38fb932-294b-43c0-8c70-3815b647d56e": {"__data__": {"id_": "c38fb932-294b-43c0-8c70-3815b647d56e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-active-channels.md", "file_name": "neynar_fetch-users-active-channels.md", "file_type": "text/markdown", "file_size": 7942, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b307c9d7-d78e-4ad4-95d3-414e7a7d1834", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-active-channels.md", "file_name": "neynar_fetch-users-active-channels.md", "file_type": "text/markdown", "file_size": 7942, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "02af12b27552f13ccf8846a6513f366f9cdb4cb877fc43b5d50c665543b0a49e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a7543f97-15b8-4993-bfa0-b120a7ba5ab2", "node_type": "1", "metadata": {}, "hash": "9d0c9b940e135b0c04a55010e78e0dd02d0fb493419219de7ca70c5a002aa1a6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-users-active-channels\n\n**Endpoint**: `GET /farcaster/channel/user`\n\n## Description\nFetches all channels that a user has casted in, in reverse chronological order.\n\n## Parameters\n- `fid` (query): The user's FID (identifier)\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nproperties:\n  channels:\n    type: array\n    items:\n      type: object\n      required:\n      - id\n      - url\n      - object\n      properties:\n        id:\n          type: string\n        url:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        object:\n          type: string\n          enum:\n          - channel\n        created_at:\n          description: Epoch timestamp in seconds.\n          type: number\n        follower_count:\n          description: Number of followers the channel has.\n          type: number\n        external_link:\n          type: object\n          description: Channel's external link.\n          properties:\n            title:\n              type: string\n            url:\n              type: string\n        image_url:\n          type: string\n        parent_url:\n          type: string\n          format: uri\n        lead: &id003\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid: &id002\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5321, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a7543f97-15b8-4993-bfa0-b120a7ba5ab2": {"__data__": {"id_": "a7543f97-15b8-4993-bfa0-b120a7ba5ab2", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-active-channels.md", "file_name": "neynar_fetch-users-active-channels.md", "file_type": "text/markdown", "file_size": 7942, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b307c9d7-d78e-4ad4-95d3-414e7a7d1834", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-active-channels.md", "file_name": "neynar_fetch-users-active-channels.md", "file_type": "text/markdown", "file_size": 7942, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "02af12b27552f13ccf8846a6513f366f9cdb4cb877fc43b5d50c665543b0a49e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c38fb932-294b-43c0-8c70-3815b647d56e", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-active-channels.md", "file_name": "neynar_fetch-users-active-channels.md", "file_type": "text/markdown", "file_size": 7942, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "218d190dfb98c1a1aaef57b167f71ef959e9954e4d110dd09a41342972735df7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        moderator_fids:\n          type: array\n          items: *id002\n        member_count:\n          type: integer\n          format: int32\n        moderator: *id003\n        pinned_cast_hash:\n          type: string\n          default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n          description: Cast Hash\n        hosts:\n          type: array\n          deprecated: true\n          items: *id003\n        viewer_context:\n          description: Adds context on the viewer's or author's role in the channel.\n          type: object\n          required:\n          - following\n          properties:\n            following:\n              description: Indicates if the user is following the channel.\n              type: boolean\n            role:\n              type: string\n              description: The role of a channel member\n              enum:\n              - member\n              - moderator\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4322, "end_char_idx": 7941, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a977fcd2-472a-4f2b-97b9-909006a6d797": {"__data__": {"id_": "a977fcd2-472a-4f2b-97b9-909006a6d797", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-by-location.md", "file_name": "neynar_fetch-users-by-location.md", "file_type": "text/markdown", "file_size": 5714, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "004fa39f-8aa7-4f4e-9a1c-39d8241d7259", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-by-location.md", "file_name": "neynar_fetch-users-by-location.md", "file_type": "text/markdown", "file_size": 5714, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "34c37b6b3da7bd79fc0ac492c2f10ddbf9c03a4160f4c97edbc939b8f6265336", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "db3dee86-3066-40ad-a64a-0e79ff2f78e8", "node_type": "1", "metadata": {}, "hash": "29c2991ce65ad25d30a51b153b3a7546f709e524636f4813ed06b4f33eee85f2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-users-by-location\n\n**Endpoint**: `GET /farcaster/user/by_location`\n\n## Description\nFetches a list of users given a location\n\n## Parameters\n- `latitude` (query): Latitude of the location\n- `longitude` (query): Longitude of the location\n- `viewer_fid` (query): FID of the user viewing the feed. Providing this will return a list of users that respects this user's mutes and blocks and includes `viewer_context`.\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor\n\n## Response\n```yaml\ntype: object\nrequired:\n- users\n- next\nproperties:\n  users:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - fid\n      - custody_address\n      - username\n      - profile\n      - follower_count\n      - following_count\n      - verifications\n      - verified_addresses\n      - verified_accounts\n      - power_badge\n      properties:\n        object:\n          type: string\n          enum:\n          - user\n        fid:\n          type: integer\n          format: int32\n          description: The unique identifier of a farcaster user (unsigned integer)\n          examples:\n          - 3\n          - 191\n          - 2\n          - 194\n          - 19960\n        username:\n          type: string\n        display_name:\n          type: string\n        custody_address: &id001\n          type: string\n          pattern: ^0x[a-fA-F0-9]{40}$\n          description: Ethereum address\n        pfp_url:\n          type: string\n          description: The URL of the user's profile picture\n        profile:\n          type: object\n          required:\n          - bio\n          properties:\n            bio:\n              type: object\n              required:\n              - text\n              - mentioned_profiles\n              properties:\n                text:\n                  type: string\n                mentioned_profiles:\n                  type: array\n                  items:\n                    type: string\n                  default: []\n            location:\n              description: Coordinates and place names for a location\n              type: object\n              required:\n              - latitude\n              - longitude\n              properties:\n                latitude:\n                  type: number\n                  format: double\n                  minimum: -90\n                  maximum: 90\n                longitude:\n                  type: number\n                  format: double\n                  minimum: -180\n                  maximum: 180\n                address:\n                  type: object\n                  required:\n                  - city\n                  - country\n                  properties:\n                    city:\n                      type: string\n                    state:\n                      type: string\n                    state_code:\n                      type: string\n                    country:\n                      type: string\n                    country_code:\n                      type: string\n        follower_count:\n          type: integer\n          format: int32\n          description: The number of followers the user has.\n        following_count:\n          type: integer\n          format: int32\n          description: The number of users the user is following.\n        verifications:\n          type: array\n          items: *id001\n        verified_addresses:\n          type: object\n          required:\n          - eth_addresses\n          - sol_addresses\n          properties:\n            eth_addresses:\n              type: array\n              description: List of verified Ethereum addresses of the user sorted\n                by oldest to most recent.\n              items: *id001\n            sol_addresses:\n              type: array\n              description: List of verified Solana addresses of the user sorted by\n                oldest to most recent.\n              items:\n                type: string\n                pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                description: Solana address\n        verified_accounts:\n          type: array\n          description: Verified accounts of the user on other platforms, currently\n            only X is supported.\n          items:\n            type: object\n            properties:\n              platform:\n                type: string\n                enum:\n                - x\n                - github\n              username:\n                type: string\n        power_badge:\n          type: boolean\n        experimental:\n          type: object\n          required:\n          - neynar_user_score\n          properties:\n            neynar_user_score:\n              type: number\n              format: double\n              description: Score that represents the probability that the account\n                is not spam.\n        viewer_context:\n          type: object\n          description: Adds context on the viewer's follow relationship with the user.\n          required:\n          - following\n          - followed_by\n          - blocking\n          - blocked_by\n          properties:\n            following:\n              description: Indicates if the viewer is following the user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5135, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "db3dee86-3066-40ad-a64a-0e79ff2f78e8": {"__data__": {"id_": "db3dee86-3066-40ad-a64a-0e79ff2f78e8", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-by-location.md", "file_name": "neynar_fetch-users-by-location.md", "file_type": "text/markdown", "file_size": 5714, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "004fa39f-8aa7-4f4e-9a1c-39d8241d7259", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-by-location.md", "file_name": "neynar_fetch-users-by-location.md", "file_type": "text/markdown", "file_size": 5714, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "34c37b6b3da7bd79fc0ac492c2f10ddbf9c03a4160f4c97edbc939b8f6265336", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a977fcd2-472a-4f2b-97b9-909006a6d797", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-by-location.md", "file_name": "neynar_fetch-users-by-location.md", "file_type": "text/markdown", "file_size": 5714, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "101fc74e58764ac48948924d53aa6801e5ce9aba5e98d4dedbeb439f5d8f4b18", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n            type: object\n            properties:\n              platform:\n                type: string\n                enum:\n                - x\n                - github\n              username:\n                type: string\n        power_badge:\n          type: boolean\n        experimental:\n          type: object\n          required:\n          - neynar_user_score\n          properties:\n            neynar_user_score:\n              type: number\n              format: double\n              description: Score that represents the probability that the account\n                is not spam.\n        viewer_context:\n          type: object\n          description: Adds context on the viewer's follow relationship with the user.\n          required:\n          - following\n          - followed_by\n          - blocking\n          - blocked_by\n          properties:\n            following:\n              description: Indicates if the viewer is following the user.\n              type: boolean\n            followed_by:\n              description: Indicates if the viewer is followed by the user.\n              type: boolean\n            blocking:\n              description: Indicates if the viewer is blocking the user.\n              type: boolean\n            blocked_by:\n              description: Indicates if the viewer is blocked by the user.\n              type: boolean\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4184, "end_char_idx": 5713, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "70936f0e-5134-4f63-8286-81fb8017729a": {"__data__": {"id_": "70936f0e-5134-4f63-8286-81fb8017729a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-validate-frame-analytics.md", "file_name": "neynar_fetch-validate-frame-analytics.md", "file_type": "text/markdown", "file_size": 2117, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ee3206c5-4ad5-4890-a5c9-36b47c327d9c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-validate-frame-analytics.md", "file_name": "neynar_fetch-validate-frame-analytics.md", "file_type": "text/markdown", "file_size": 2117, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "e13dc53b0fb3c01e0320d0026a3441b4c6cd6d62a95b65bdb9705e34e6e48eee", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-validate-frame-analytics\n\n**Endpoint**: `GET /farcaster/frame/validate/analytics`\n\n## Description\nFetch analytics for total-interactors, interactors, nteractions-per-cast and input-text.\n\n## Parameters\n- `frame_url` (query): No description\n- `analytics_type` (query): No description\n- `start` (query): No description\n- `stop` (query): No description\n- `aggregate_window` (query): Required for `analytics_type=interactions-per-cast`\n\n## Response\n```yaml\noneOf:\n- type: object\n  required:\n  - interactors\n  properties:\n    interactors:\n      type: array\n      items:\n        type: object\n        required:\n        - fid\n        - username\n        - interaction_count\n        properties:\n          fid: &id001\n            type: integer\n            format: int32\n            description: The unique identifier of a farcaster user (unsigned integer)\n            examples:\n            - 3\n            - 191\n            - 2\n            - 194\n            - 19960\n          username:\n            type: string\n          interaction_count:\n            type: number\n- type: object\n  required:\n  - total_interactors\n  properties:\n    total_interactors:\n      type: number\n- type: object\n  required:\n  - interactions_per_cast\n  properties:\n    interactions_per_cast:\n      type: array\n      items:\n        type: object\n        required:\n        - start\n        - stop\n        - time\n        - interaction_count\n        - cast_url\n        properties:\n          start:\n            type: string\n            format: date-time\n          stop:\n            type: string\n            format: date-time\n          time:\n            type: string\n            format: date-time\n          interaction_count:\n            type: number\n          cast_url:\n            type: string\n            format: uri\n- type: object\n  required:\n  - input_texts\n  properties:\n    input_texts:\n      type: array\n      items:\n        type: object\n        required:\n        - fid\n        - username\n        - input_text\n        properties:\n          fid: *id001\n          username:\n            type: string\n          input_text:\n            type: string\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2116, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7bae3697-e225-4796-af64-d9627bea7eb4": {"__data__": {"id_": "7bae3697-e225-4796-af64-d9627bea7eb4", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-validate-frame-list.md", "file_name": "neynar_fetch-validate-frame-list.md", "file_type": "text/markdown", "file_size": 290, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9ac152c5-f50f-4a6d-835d-0d01b9276191", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-validate-frame-list.md", "file_name": "neynar_fetch-validate-frame-list.md", "file_type": "text/markdown", "file_size": 290, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "aa4f925dc95ef6d82a243261e5b8b2f0833a51fe11f1f48e03f53183a90f6dcd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-validate-frame-list\n\n**Endpoint**: `GET /farcaster/frame/validate/list`\n\n## Description\nFetch a list of all the frames validated by a user\n\n## Response\n```yaml\ntype: object\nrequired:\n- frames\nproperties:\n  frames:\n    type: array\n    items:\n      type: string\n      format: uri\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 289, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e4faa00a-7507-49ed-87f1-d42143b179d5": {"__data__": {"id_": "e4faa00a-7507-49ed-87f1-d42143b179d5", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_follow-channel.md", "file_name": "neynar_follow-channel.md", "file_type": "text/markdown", "file_size": 205, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bdb922e5-53be-45b0-a527-1a61b598b632", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_follow-channel.md", "file_name": "neynar_follow-channel.md", "file_type": "text/markdown", "file_size": 205, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "140d473982f60d7f94a78df9b761aa135d567172f4c04e97739ee16805c21d47", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# follow-channel\n\n**Endpoint**: `POST /farcaster/channel/follow`\n\n## Description\nFollow a channel\n\n## Response\n```yaml\ntype: object\nproperties:\n  success:\n    type: boolean\n  message:\n    type: string\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 204, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9be8feac-f99a-446a-803a-db52c45ce30d": {"__data__": {"id_": "9be8feac-f99a-446a-803a-db52c45ce30d", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_get-fresh-account-FID.md", "file_name": "neynar_get-fresh-account-FID.md", "file_type": "text/markdown", "file_size": 278, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "261e5497-18e7-48ce-862b-4095551c0cd0", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_get-fresh-account-FID.md", "file_name": "neynar_get-fresh-account-FID.md", "file_type": "text/markdown", "file_size": 278, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "90f5a40d2bbe54987fb5377cbf79c50f937b9878d14b9e005c54b1aba3721c33", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# get-fresh-account-FID\n\n**Endpoint**: `GET /farcaster/user/fid`\n\n## Description\nFetches FID to [assign it to new user](https://docs.neynar.com/reference/register-account)\n\n## Parameters\n\n## Response\n```yaml\ntype: object\nrequired:\n- fid\nproperties:\n  fid:\n    type: integer\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 277, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "21f0c4f3-b711-4de4-a6fd-eea4c2c69759": {"__data__": {"id_": "21f0c4f3-b711-4de4-a6fd-eea4c2c69759", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_invite-channel-member.md", "file_name": "neynar_invite-channel-member.md", "file_type": "text/markdown", "file_size": 229, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "39d7a9b3-1e56-4cfe-bb94-659ac50e28d7", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_invite-channel-member.md", "file_name": "neynar_invite-channel-member.md", "file_type": "text/markdown", "file_size": 229, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "4ccbffcffef01a93159b700f2ab1158281e6d478a02257e535a8b0eb10f649c0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# invite-channel-member\n\n**Endpoint**: `POST /farcaster/channel/member/invite`\n\n## Description\nInvite a user to a channel\n\n## Response\n```yaml\ntype: object\nproperties:\n  success:\n    type: boolean\n  message:\n    type: string\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 228, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4367a247-7bc0-4a2a-8d0b-f5ed9bb46d9f": {"__data__": {"id_": "4367a247-7bc0-4a2a-8d0b-f5ed9bb46d9f", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_is-fname-available.md", "file_name": "neynar_is-fname-available.md", "file_type": "text/markdown", "file_size": 276, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f947c0c7-a296-4e50-a8aa-3fe254075d68", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_is-fname-available.md", "file_name": "neynar_is-fname-available.md", "file_type": "text/markdown", "file_size": 276, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "fd0dd43ef9a6ac9b24d8f1a60582a137f54f04ffd848b0825833b74e4283e491", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# is-fname-available\n\n**Endpoint**: `GET /farcaster/fname/availability`\n\n## Description\nCheck if a given fname is available\n\n## Parameters\n- `fname` (query): No description\n\n## Response\n```yaml\ntype: object\nrequired:\n- available\nproperties:\n  available:\n    type: boolean\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 275, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c945aea2-b9b6-4fe4-afac-3606cafee345": {"__data__": {"id_": "c945aea2-b9b6-4fe4-afac-3606cafee345", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "82875dee-f7cd-435d-bbf7-b4de07fbb1f5", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "6c5f43340bc9e0187691e5b436f78f19bfadcca1585084387badb7e69ab14405", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dac6fb09-c264-42a1-b430-c7f9591a4a8f", "node_type": "1", "metadata": {}, "hash": "fb204e0c63a22c6629af67f64c76737ae6a964cb79da329e81dc197993f00ab4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# lookup-cast-by-hash-or-warpcast-url\n\n**Endpoint**: `GET /farcaster/cast`\n\n## Description\nGets information about an individual cast by passing in a Warpcast web URL or cast hash\n\n## Parameters\n- `identifier` (query): Cast identifier (Its either a url or a hash)\n- `type` (query): No description\n- `viewer_fid` (query): adds viewer_context to cast object to show whether viewer has liked or recasted the cast.\n\n## Response\n```yaml\ntype: object\nrequired:\n- cast\nproperties:\n  cast:\n    allOf:\n    - type: object\n      required:\n      - hash\n      - parent_hash\n      - parent_url\n      - root_parent_url\n      - parent_author\n      - author\n      - text\n      - timestamp\n      - embeds\n      properties:\n        hash:\n          type: string\n        parent_hash:\n          type:\n          - string\n          - 'null'\n        parent_url:\n          type:\n          - string\n          - 'null'\n        root_parent_url:\n          type:\n          - string\n          - 'null'\n        parent_author:\n          type: object\n          required:\n          - fid\n          properties:\n            fid:\n              oneOf:\n              - type: 'null'\n              - &id001\n                type: integer\n                format: int32\n                description: The unique identifier of a farcaster user (unsigned integer)\n                examples:\n                - 3\n                - 191\n                - 2\n                - 194\n                - 19960\n        author: &id011\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid: *id001\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id002\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id002\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id002\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5271, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dac6fb09-c264-42a1-b430-c7f9591a4a8f": {"__data__": {"id_": "dac6fb09-c264-42a1-b430-c7f9591a4a8f", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "82875dee-f7cd-435d-bbf7-b4de07fbb1f5", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "6c5f43340bc9e0187691e5b436f78f19bfadcca1585084387badb7e69ab14405", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c945aea2-b9b6-4fe4-afac-3606cafee345", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "8ef7fe9fba949ab6dd153d170f30b7436a631a820ceb6e3373159712aa445d74", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c8b2070a-b542-4e82-9237-39e84e6a00e4", "node_type": "1", "metadata": {}, "hash": "dec6309dccfeabb74a41ef2c4b7452c5c39b9c6fd6716f6f95144395e0ff2e72", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n              type: array\n              items: *id002\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id002\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 4272, "end_char_idx": 6796, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c8b2070a-b542-4e82-9237-39e84e6a00e4": {"__data__": {"id_": "c8b2070a-b542-4e82-9237-39e84e6a00e4", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "82875dee-f7cd-435d-bbf7-b4de07fbb1f5", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "6c5f43340bc9e0187691e5b436f78f19bfadcca1585084387badb7e69ab14405", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dac6fb09-c264-42a1-b430-c7f9591a4a8f", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "406c520c749d591f8a868f10027292c7eebda8affc0977fd4a20aeb59b0d6849", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "17aac1cd-969c-4118-b0c3-9afaa407b8cc", "node_type": "1", "metadata": {}, "hash": "0f86d80ad501e54bdf3a00ac30be1c049851a334f1426e04190fb8c11cec1c08", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        text:\n          type: string\n        timestamp: &id006\n          type: string\n          format: date-time\n        embeds:\n          type: array\n          items:\n            oneOf:\n            - &id007\n              type: object\n              required:\n              - url\n              properties:\n                url:\n                  type: string\n                metadata:\n                  type: object\n                  required:\n                  - _status\n                  properties:\n                    _status:\n                      type: string\n                    content_type:\n                      type:\n                      - string\n                      - 'null'\n                    content_length:\n                      type:\n                      - integer\n                      - 'null'\n                    image:\n                      type: object\n                      properties:\n                        height_px:\n                          type: integer\n                        width_px:\n                          type: integer\n                    video:\n                      type: object\n                      properties:\n                        duration_s:\n                          type: number\n                        stream:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              codec_name:\n                                type: string\n                              height_px:\n                                type: integer\n                              width_px:\n                                type: integer\n                    html:\n                      allOf:\n                      - type: object\n                        properties:\n                          favicon:\n                            type: string\n                          modifiedTime:\n                            type: string\n                          ogArticleAuthor:\n                            type: string\n                          ogArticleExpirationTime:\n                            type: string\n                          ogArticleModifiedTime:\n                            type: string\n                          ogArticlePublishedTime:\n                            type: string\n                          ogArticlePublisher:\n                            type: string\n                          ogArticleSection:\n                            type: string\n                          ogArticleTag:\n                            type: string\n                          ogAudio:\n                            type: string\n                          ogAudioSecureURL:\n                            type: string\n                          ogAudioType:\n                            type: string\n                          ogAudioURL:\n                            type: string\n                          ogAvailability:\n                            type: string\n                          ogDate:\n                            type: string\n                          ogDescription:\n                            type: string\n                          ogDeterminer:\n                            type: string\n                          ogEpisode:\n                            type: string\n                          ogImage:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                height:\n                                  type: string\n                                type:\n                                  type: string\n                                url:\n                                  type: string\n                                width:\n                                  type: string\n                                alt:\n                                  type: string\n                              required:\n                              - url\n                          ogLocale:\n                            type: string\n                          ogLocaleAlternate:\n                            type: string\n                          ogLogo:\n                            type: string\n                          ogMovie:\n                            type: string\n                          ogPriceAmount:\n                            type: string\n                          ogPriceCurrency:\n                            type: string\n                          ogProductAvailability:\n                            type: string\n                          ogProductCondition:\n                            type: string\n                          ogProductPriceAmount:\n                            type: string\n                          ogProductPriceCurrency:\n                            type: string\n                          ogProductRetailerItemId:\n                            type: string\n                          ogSiteName:\n                            type: string\n                          ogTitle:\n                            type: string\n                          ogType:\n                            type: string\n                          ogUrl:\n                            type: string\n                          ogVideo:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                height:\n                                  type: string\n                                type:\n                                  type: string\n                                url:\n                                  type: string\n                                width:\n                                  type: string\n                              required:\n                              - url\n                          ogVideoActor:\n                            type: string\n                          ogVideoActorId:\n                            type: string\n                          ogVideoActorRole:\n                            type: string\n                          ogVideoDirector:\n                            type: string\n                          ogVideoDuration:\n                            type: string\n                          ogVideoOther:\n                            type: string\n                          ogVideoReleaseDate:\n                            type: string\n                          ogVideoSecureURL:\n                            type: string\n                          ogVideoSeries:\n                            type: string\n                          ogVideoTag:\n                            type: string\n                          ogVideoTvShow:\n                            type: string\n                          ogVideoWriter:\n                            type: string\n                          ogWebsite:\n                            type: string\n                          updatedTime:\n                            type: string\n                      - type: object\n                        properties:\n                          oembed:\n                            oneOf:\n                            - allOf:\n                              - &id003\n                                type: object\n                                description: Basic data structure of every oembed\n                                  response see https://oembed.com/\n                                required:\n                                - type\n                                - version\n                                properties:\n                                  type:\n                                    type: string\n                                  version:\n                                    type:\n                                    - string\n                                    - 'null'\n                                  title:\n                                    type:\n                                    - string\n                                    - 'null'\n                                    description: A text title, describing the resource.", "mimetype": "text/plain", "start_char_idx": 5971, "end_char_idx": 14918, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "17aac1cd-969c-4118-b0c3-9afaa407b8cc": {"__data__": {"id_": "17aac1cd-969c-4118-b0c3-9afaa407b8cc", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "82875dee-f7cd-435d-bbf7-b4de07fbb1f5", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "6c5f43340bc9e0187691e5b436f78f19bfadcca1585084387badb7e69ab14405", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c8b2070a-b542-4e82-9237-39e84e6a00e4", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "27805ba9ef0abf3e0487928768b7b379c1b08968c4707cc5280f73ce0b70f9a6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "45d0dda5-b12c-486b-9554-bde878dba12d", "node_type": "1", "metadata": {}, "hash": "c0d465939c9c23a6c9a8c463ef4c19cc33d8f1988deada456e710686014f179b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                    type:\n                                    - string\n                                    - 'null'\n                                    description: The name of the author/owner of the\n                                      resource.\n                                  author_url:\n                                    type:\n                                    - string\n                                    - 'null'\n                                    description: A URL for the author/owner of the\n                                      resource.\n                                  provider_name:\n                                    type:\n                                    - string\n                                    - 'null'\n                                    description: The name of the resource provider.\n                                  provider_url:\n                                    type:\n                                    - string\n                                    - 'null'\n                                    description: The url of the resource provider.\n                                  cache_age:\n                                    type:\n                                    - string\n                                    - 'null'\n                                    description: The suggested cache lifetime for\n                                      this resource, in seconds. Consumers may choose\n                                      to use this value or not.\n                                  thumbnail_url:\n                                    type:\n                                    - string\n                                    - 'null'\n                                    description: A URL to a thumbnail image representing\n                                      the resource. The thumbnail must respect any\n                                      maxwidth and maxheight parameters. If this parameter\n                                      is present, thumbnail_width and thumbnail_height\n                                      must also be present.\n                                  thumbnail_width:\n                                    type:\n                                    - number\n                                    - 'null'\n                                    description: The width of the optional thumbnail.\n                                      If this parameter is present, thumbnail_url\n                                      and thumbnail_height must also be present.\n                                  thumbnail_height:\n                                    type:\n                                    - number\n                                    - 'null'\n                                    description: The height of the optional thumbnail.\n                                      If this parameter is present, thumbnail_url\n                                      and thumbnail_width must also be present.\n                              - type: object\n                                required:\n                                - type\n                                - html\n                                - width\n                                - height\n                                properties:\n                                  type:\n                                    type: string\n                                    enum:\n                                    - rich\n                                  html:\n                                    type:\n                                    - string\n                                    - 'null'\n                                    description: The HTML required to display the\n                                      resource. The HTML should have no padding or\n                                      margins. Consumers may wish to load the HTML\n                                      in an off-domain iframe to avoid XSS vulnerabilities.\n                                      The markup should be valid XHTML 1.0 Basic.\n                                  width:\n                                    type:\n                                    - number\n                                    - 'null'\n                                    description: The width in pixels required to display\n                                      the HTML.\n                                  height:\n                                    type:\n                                    - number\n                                    - 'null'\n                                    description: The height in pixels required to\n                                      display the HTML.\n                            - allOf:\n                              - *id003\n                              - type: object\n                                required:\n                                - type\n                                - html\n                                - width\n                                - height\n                                properties:\n                                  type:\n                                    type: string\n                                    enum:\n                                    - video\n                                  html:\n                                    type:\n                                    - string\n                                    - 'null'\n                                    description: The HTML required to embed a video\n                                      player. The HTML should have no padding or margins.\n                                      Consumers may wish to load the HTML in an off-domain\n                                      iframe to avoid XSS vulnerabilities.\n                                  width:\n                                    type:\n                                    - number\n                                    - 'null'\n                                    description: The width in pixels required to display\n                                      the HTML.\n                                  height:\n                                    type:\n                                    - number\n                                    - 'null'\n                                    description: The height in pixels required to\n                                      display the HTML.\n                            - allOf:\n                              - *id003\n                              - type: object\n                                required:\n                                - type\n                                - url\n                                - width\n                                - height\n                                properties:\n                                  type:\n                                    type: string\n                                    enum:\n                                    - photo\n                                  url:\n                                    type:\n                                    - string\n                                    - 'null'\n                                    description: The source URL of the image. Consumers\n                                      should be able to insert this URL into an <img>\n                                      element. Only HTTP and HTTPS URLs are valid.\n                                  width:\n                                    type:\n                                    - number\n                                    - 'null'\n                                    description: The width in pixels of the image\n                                      specified in the url parameter.\n                                  height:\n                                    type:\n                                    - number\n                                    - 'null'\n                                    description: The height in pixels of the image\n                                      specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 14953, "end_char_idx": 22907, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "45d0dda5-b12c-486b-9554-bde878dba12d": {"__data__": {"id_": "45d0dda5-b12c-486b-9554-bde878dba12d", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "82875dee-f7cd-435d-bbf7-b4de07fbb1f5", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "6c5f43340bc9e0187691e5b436f78f19bfadcca1585084387badb7e69ab14405", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "17aac1cd-969c-4118-b0c3-9afaa407b8cc", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "c10c331457436fcd534b0358725a4cae24751f8bd7a139764138171b82d6484d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9e05029d-171e-4433-b15c-4d60a331a252", "node_type": "1", "metadata": {}, "hash": "5bf765300554356f79e3ffdb61925c95376647997b0f6c32bdb6a5c9a0c7e9df", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                              - *id003\n                              - type: object\n                                required:\n                                - type\n                                - url\n                                - width\n                                - height\n                                properties:\n                                  type:\n                                    type: string\n                                    enum:\n                                    - photo\n                                  url:\n                                    type:\n                                    - string\n                                    - 'null'\n                                    description: The source URL of the image. Consumers\n                                      should be able to insert this URL into an <img>\n                                      element. Only HTTP and HTTPS URLs are valid.\n                                  width:\n                                    type:\n                                    - number\n                                    - 'null'\n                                    description: The width in pixels of the image\n                                      specified in the url parameter.\n                                  height:\n                                    type:\n                                    - number\n                                    - 'null'\n                                    description: The height in pixels of the image\n                                      specified in the url parameter.\n                            - allOf:\n                              - *id003\n                              - type: object\n                                required:\n                                - type\n                                properties:\n                                  type:\n                                    type: string\n                                    enum:\n                                    - link\n                            discriminator:\n                              propertyName: type\n                              mapping:\n                                rich: '#/components/schemas/OembedRichData'\n                                video: '#/components/schemas/OembedVideoData'\n                                photo: '#/components/schemas/OembedPhotoData'\n                                link: '#/components/schemas/OembedLinkData'\n                    frame: &id010\n                      discriminator:\n                        propertyName: version\n                      oneOf:\n                      - description: Frame v1 object\n                        allOf:\n                        - &id004\n                          description: Frame base object used across all versions\n                          type: object\n                          required:\n                          - version\n                          - image\n                          - frames_url\n                          properties:\n                            version:\n                              type: string\n                              description: Version of the frame, 'next' for v2, 'vNext'\n                                for v1\n                            image:\n                              type: string\n                              description: URL of the image\n                            frames_url:\n                              type: string\n                              description: Launch URL of the frame\n                        - type: object\n                          properties:\n                            buttons:\n                              type: array\n                              items:\n                                type: object\n                                required:\n                                - index\n                                - action_type\n                                properties:\n                                  title:\n                                    type: string\n                                    description: Title of the button\n                                  index:\n                                    type: integer\n                                    description: Index of the button\n                                  action_type:\n                                    type: string\n                                    description: The action type of a frame button.\n                                      Action types \"mint\" & \"link\" are to be handled\n                                      on the client side only and so they will produce\n                                      a no/op for POST /farcaster/frame/action.\n                                    enum:\n                                    - post\n                                    - post_redirect\n                                    - tx\n                                    - link\n                                    - mint\n                                  target:\n                                    type: string\n                                    description: Target of the button\n                                  post_url:\n                                    type: string\n                                    description: Used specifically for the tx action\n                                      type to post a successful transaction hash\n                            post_url:\n                              type: string\n                              description: Post URL to take an action on this frame\n                            title:\n                              type: string\n                            image_aspect_ratio:\n                              type: string\n                            input:\n                              type: object\n                              properties:\n                                text:\n                                  type: string\n                                  description: Input text for the frame\n                            state:\n                              type: object\n                              properties:\n                                serialized:\n                                  type: string\n                                  description: State for the frame in a serialized\n                                    format\n                      - description: Frame v2 object\n                        allOf:\n                        - *id004\n                        - type: object\n                          required:\n                          - title\n                          - name\n                          - icon\n                          properties:\n                            manifest:\n                              type: object\n                              properties:\n                                account_association:\n                                  type: object\n                                  properties:\n                                    header:\n                                      type: string\n                                    payload:\n                                      type: string\n                                    signature:\n                                      type: string\n                                  required:\n                                  - header\n                                  - payload\n                                  - signature\n                                frame:\n                                  type: object\n                                  properties:\n                                    version:\n                                      type: string\n                                      enum:\n                                      - 0.0.0\n                                      - 0.0.", "mimetype": "text/plain", "start_char_idx": 21316, "end_char_idx": 29049, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9e05029d-171e-4433-b15c-4d60a331a252": {"__data__": {"id_": "9e05029d-171e-4433-b15c-4d60a331a252", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "82875dee-f7cd-435d-bbf7-b4de07fbb1f5", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "6c5f43340bc9e0187691e5b436f78f19bfadcca1585084387badb7e69ab14405", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "45d0dda5-b12c-486b-9554-bde878dba12d", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "c5fe876997f6bb887c7b4e1c5db7487f9edda03c6ddfbf8ccb9486ded2d4bff0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "56bbd500-8234-4ad6-b99d-ce2b2a5c9aa0", "node_type": "1", "metadata": {}, "hash": "e7b4c6b1dd1e874359d49a52ea8d9fc8df6d6f5d86b7b14b83f9184f330a880b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                      - 0.0.1\n                                      - '1'\n                                      - next\n                                    name:\n                                      type: string\n                                      maxLength: 32\n                                    home_url:\n                                      type: string\n                                      maxLength: 512\n                                    icon_url:\n                                      type: string\n                                      maxLength: 512\n                                    image_url:\n                                      type: string\n                                      maxLength: 512\n                                    button_title:\n                                      type: string\n                                      maxLength: 32\n                                    splash_image_url:\n                                      type: string\n                                      maxLength: 512\n                                    splash_background_color:\n                                      type: string\n                                    webhook_url:\n                                      type: string\n                                      maxLength: 512\n                                  required:\n                                  - version\n                                  - name\n                                  - home_url\n                                  - icon_url\n                                triggers:\n                                  type: array\n                                  items:\n                                    oneOf:\n                                    - type: object\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - cast\n                                        id:\n                                          type: string\n                                        url:\n                                          type: string\n                                          maxLength: 512\n                                        name:\n                                          type: string\n                                          maxLength: 32\n                                      required:\n                                      - type\n                                      - id\n                                      - url\n                                    - type: object\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - composer\n                                        id:\n                                          type: string\n                                        url:\n                                          type: string\n                                          maxLength: 512\n                                        name:\n                                          type: string\n                                          maxLength: 32\n                                      required:\n                                      - type\n                                      - id\n                                      - url\n                              required:\n                              - account_association\n                            author: &id005\n                              type: object\n                              required:\n                              - object\n                              - fid\n                              properties:\n                                object:\n                                  type: string\n                                  enum:\n                                  - user_dehydrated\n                                fid: *id001\n                                username:\n                                  type: string\n                                display_name:\n                                  type: string\n                                pfp_url:\n                                  type: string\n                      mapping:\n                        vNext: '#/components/schemas/FrameV1'\n                        next: '#/components/schemas/FrameV2'\n                        '1': '#/components/schemas/FrameV2'\n                        0.0.0: '#/components/schemas/FrameV2'\n                        0.0.1: '#/components/schemas/FrameV2'\n            - type: object\n              required:\n              - cast\n              properties:\n                cast_id: &id008\n                  type: object\n                  required:\n                  - fid\n                  - hash\n                  properties:\n                    fid: *id001\n                    hash:\n                      type: string\n                cast:\n                  type: object\n                  required:\n                  - hash\n                  - parent_hash\n                  - parent_url\n                  - root_parent_url\n                  - parent_author\n                  - author\n                  - text\n                  - timestamp\n                  - type\n                  - embeds\n                  - channel\n                  properties:\n                    hash:\n                      type: string\n                    parent_hash:\n                      type:\n                      - string\n                      - 'null'\n                    parent_url:\n                      type:\n                      - string\n                      - 'null'\n                    root_parent_url:\n                      type:\n                      - string\n                      - 'null'\n                    parent_author:\n                      type: object\n                      required:\n                      - fid\n                      properties:\n                        fid:\n                          oneOf:\n                          - type: 'null'\n                          - *id001\n                    author: *id005\n                    text:\n                      type: string\n                    timestamp: *id006\n                    type: &id009\n                      type: string\n                      enum:\n                      - cast-mention\n                      - cast-reply\n                      description: 'The notification type of a cast.\n\n                        '\n                    embeds:\n                      type: array\n                      items:\n                        oneOf:\n                        - *id007\n                        - type: object\n                          required:\n                          - cast\n                          properties:\n                            cast_id: *id008\n                            cast:\n                              type: object\n                              required:\n                              - object\n                              - hash\n                              properties:\n                                object:\n                                  type: string\n                                  enum:\n                                  - cast_dehydrated\n                                hash:\n                                  type: string\n                                author: *id005\n                    channel:\n                      oneOf:\n                      - type: 'null'\n                      - &id013\n                        type: object\n                        required:\n                        - id\n                        - name\n                        - object\n                        properties:\n                          id:\n                            type: string\n                          name:\n                            type: string\n                          object:\n                            type: string\n                            enum:\n                            - channel_dehydrated\n                          image_url:\n                            type: string\n                          viewer_context: &id012\n                            description: Adds context on the viewer's or author's\n                              role in the channel.", "mimetype": "text/plain", "start_char_idx": 29001, "end_char_idx": 37360, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "56bbd500-8234-4ad6-b99d-ce2b2a5c9aa0": {"__data__": {"id_": "56bbd500-8234-4ad6-b99d-ce2b2a5c9aa0", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "82875dee-f7cd-435d-bbf7-b4de07fbb1f5", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "6c5f43340bc9e0187691e5b436f78f19bfadcca1585084387badb7e69ab14405", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9e05029d-171e-4433-b15c-4d60a331a252", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "9de674538330e7aee9af51ec70922c3e5028ce4e4337e261f09ef7236a67ee50", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                            required:\n                            - following\n                            properties:\n                              following:\n                                description: Indicates if the user is following the\n                                  channel.\n                                type: boolean\n                              role:\n                                type: string\n                                description: The role of a channel member\n                                enum:\n                                - member\n                                - moderator\n        type: *id009\n    - type: object\n      required:\n      - reactions\n      - replies\n      - thread_hash\n      - mentioned_profiles\n      - channel\n      properties:\n        frames:\n          type: array\n          items: *id010\n        reactions:\n          type: object\n          required:\n          - likes\n          - recasts\n          - likes_count\n          - recasts_count\n          properties:\n            likes:\n              type: array\n              items:\n                type: object\n                required:\n                - fid\n                properties:\n                  fid: *id001\n            recasts:\n              type: array\n              items:\n                type: object\n                required:\n                - fid\n                - fname\n                properties:\n                  fid: *id001\n                  fname:\n                    type: string\n            likes_count:\n              type: integer\n              format: int32\n            recasts_count:\n              type: integer\n              format: int32\n        replies:\n          type: object\n          required:\n          - count\n          properties:\n            count:\n              type: integer\n              format: int32\n        thread_hash:\n          type:\n          - string\n          - 'null'\n        mentioned_profiles:\n          type: array\n          items: *id011\n        channel:\n          oneOf:\n          - oneOf:\n            - type: object\n              required:\n              - id\n              - url\n              - object\n              properties:\n                id:\n                  type: string\n                url:\n                  type: string\n                name:\n                  type: string\n                description:\n                  type: string\n                object:\n                  type: string\n                  enum:\n                  - channel\n                created_at:\n                  description: Epoch timestamp in seconds.\n                  type: number\n                follower_count:\n                  description: Number of followers the channel has.\n                  type: number\n                external_link:\n                  type: object\n                  description: Channel's external link.\n                  properties:\n                    title:\n                      type: string\n                    url:\n                      type: string\n                image_url:\n                  type: string\n                parent_url:\n                  type: string\n                  format: uri\n                lead: *id011\n                moderator_fids:\n                  type: array\n                  items: *id001\n                member_count:\n                  type: integer\n                  format: int32\n                moderator: *id011\n                pinned_cast_hash:\n                  type: string\n                  default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                  description: Cast Hash\n                hosts:\n                  type: array\n                  deprecated: true\n                  items: *id011\n                viewer_context: *id012\n            - *id013\n            discriminator:\n              propertyName: object\n              mapping:\n                channel: '#/components/schemas/Channel'\n                dehydrated_channel: '#/components/schemas/DehydratedChannel'\n          - type: 'null'\n        viewer_context:\n          type: object\n          description: Adds context on interactions the viewer has made with the cast.\n          required:\n          - liked\n          - recasted\n          properties:\n            liked:\n              description: Indicates if the viewer liked the cast.\n              type: boolean\n            recasted:\n              description: Indicates if the viewer recasted the cast.\n              type: boolean\n        author_channel_context: *id012\n```", "mimetype": "text/plain", "start_char_idx": 37389, "end_char_idx": 41915, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "97553b2e-c7f1-4b02-b26a-0da17c89e4bb": {"__data__": {"id_": "97553b2e-c7f1-4b02-b26a-0da17c89e4bb", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation-summary.md", "file_name": "neynar_lookup-cast-conversation-summary.md", "file_type": "text/markdown", "file_size": 6704, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1f108b07-b30d-48cc-ad09-75f3ac65eb06", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation-summary.md", "file_name": "neynar_lookup-cast-conversation-summary.md", "file_type": "text/markdown", "file_size": 6704, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "56ca2fff4248543c51114fa5fc0463b9a076e29e7b352620b87b0ea4d520db36", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "03ee2891-e554-405d-b9f8-c08c32890b07", "node_type": "1", "metadata": {}, "hash": "3f8ec94405a1ce6630a62613c8ae1183ee0f33c5b7d250684de38a92350d8f4f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# lookup-cast-conversation-summary\n\n**Endpoint**: `GET /farcaster/cast/conversation/summary`\n\n## Description\nGenerates a summary of all casts related to a conversation surrounding a cast by passing in a cast hash or Warpcast URL.  Summary is generated by an LLM and is intended to be passed as a context to AI agents.\n\n\n## Parameters\n- `identifier` (query): Cast identifier (Its either a url or a hash)\n- `limit` (query): Number of casts to consider in a summary up to a point of target cast\n- `prompt` (query): Additional prompt used to generate a summary\n\n## Response\n```yaml\ntype: object\nrequired:\n- summary\nproperties:\n  summary:\n    type: object\n    required:\n    - text\n    - participants\n    - mentioned_profiles\n    properties:\n      text:\n        type: string\n        description: Summary generated by an LLM\n      participants:\n        type: array\n        items: &id002\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid:\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5627, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "03ee2891-e554-405d-b9f8-c08c32890b07": {"__data__": {"id_": "03ee2891-e554-405d-b9f8-c08c32890b07", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation-summary.md", "file_name": "neynar_lookup-cast-conversation-summary.md", "file_type": "text/markdown", "file_size": 6704, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1f108b07-b30d-48cc-ad09-75f3ac65eb06", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation-summary.md", "file_name": "neynar_lookup-cast-conversation-summary.md", "file_type": "text/markdown", "file_size": 6704, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "56ca2fff4248543c51114fa5fc0463b9a076e29e7b352620b87b0ea4d520db36", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "97553b2e-c7f1-4b02-b26a-0da17c89e4bb", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation-summary.md", "file_name": "neynar_lookup-cast-conversation-summary.md", "file_type": "text/markdown", "file_size": 6704, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "80aa91d2cc431746486562ab10b1191372f8116877c5e7e2fc6eef143956ee72", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        description: Users who casted in a conversation thread\n      mentioned_profiles:\n        type: array\n        items: *id002\n        description: Users who were mentioned in a conversation thread\n```", "mimetype": "text/plain", "start_char_idx": 4613, "end_char_idx": 6703, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "df415cec-5072-438b-be34-5b99a22473bc": {"__data__": {"id_": "df415cec-5072-438b-be34-5b99a22473bc", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2517957b-aaed-4bc5-9a18-99e9c29716f1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "2cdac9838e5c499839513c753f4516740d7ebfdf9d8bef75736ade43d7cff746", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dc40887f-b974-485b-939e-c25bafc0e28b", "node_type": "1", "metadata": {}, "hash": "02f587cd3aa3383dd0364ccf187a476f3733ff55999517f15538a4b8d31fd576", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# lookup-cast-conversation\n\n**Endpoint**: `GET /farcaster/cast/conversation`\n\n## Description\nGets all casts related to a conversation surrounding a cast by passing in a cast hash or Warpcast URL. Includes all the ancestors of a cast up to the root parent in a chronological order. Includes all direct_replies to the cast up to the reply_depth specified in the query parameter.\n\n## Parameters\n- `identifier` (query): Cast identifier (Its either a url or a hash)\n- `type` (query): No description\n- `reply_depth` (query): The depth of replies in the conversation that will be returned (default 2)\n- `include_chronological_parent_casts` (query): Include all parent casts in chronological order\n- `viewer_fid` (query): Providing this will return a conversation that respects this user's mutes and blocks and includes `viewer_context`.\n- `sort_type` (query): Sort type for the ordering of descendants. Default is `chron`\n- `fold` (query): Show conversation above or below the fold. Lower quality responses are hidden below the fold. Not passing in a value shows the full conversation without any folding.\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- conversation\nproperties:\n  conversation:\n    type: object\n    required:\n    - cast\n    properties:\n      cast:\n        allOf:\n        - &id014\n          allOf:\n          - type: object\n            required:\n            - hash\n            - parent_hash\n            - parent_url\n            - root_parent_url\n            - parent_author\n            - author\n            - text\n            - timestamp\n            - embeds\n            properties:\n              hash:\n                type: string\n              parent_hash:\n                type:\n                - string\n                - 'null'\n              parent_url:\n                type:\n                - string\n                - 'null'\n              root_parent_url:\n                type:\n                - string\n                - 'null'\n              parent_author:\n                type: object\n                required:\n                - fid\n                properties:\n                  fid:\n                    oneOf:\n                    - type: 'null'\n                    - &id001\n                      type: integer\n                      format: int32\n                      description: The unique identifier of a farcaster user (unsigned\n                        integer)\n                      examples:\n                      - 3\n                      - 191\n                      - 2\n                      - 194\n                      - 19960\n              author: &id011\n                type: object\n                required:\n                - object\n                - fid\n                - custody_address\n                - username\n                - profile\n                - follower_count\n                - following_count\n                - verifications\n                - verified_addresses\n                - verified_accounts\n                - power_badge\n                properties:\n                  object:\n                    type: string\n                    enum:\n                    - user\n                  fid: *id001\n                  username:\n                    type: string\n                  display_name:\n                    type: string\n                  custody_address: &id002\n                    type: string\n                    pattern: ^0x[a-fA-F0-9]{40}$\n                    description: Ethereum address\n                  pfp_url:\n                    type: string\n                    description: The URL of the user's profile picture\n                  profile:\n                    type: object\n                    required:\n                    - bio\n                    properties:\n                      bio:\n                        type: object\n                        required:\n                        - text\n                        - mentioned_profiles\n                        properties:\n                          text:\n                            type: string\n                          mentioned_profiles:\n                            type: array\n                            items:\n                              type: string\n                            default: []\n                      location:\n                        description: Coordinates and place names for a location\n                        type: object\n                        required:\n                        - latitude\n                        - longitude\n                        properties:\n                          latitude:\n                            type: number\n                            format: double\n                            minimum: -90\n                            maximum: 90\n                          longitude:\n                            type: number\n                            format: double\n                            minimum: -180\n                            maximum: 180\n                          address:\n                            type: object\n                            required:\n                            - city\n                            - country\n                            properties:\n                              city:\n                                type: string\n                              state:\n                                type: string\n                              state_code:\n                                type: string\n                              country:\n                                type: string\n                              country_code:\n                                type: string\n                  follower_count:\n                    type: integer\n                    format: int32\n                    description: The number of followers the user has.\n                  following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5985, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dc40887f-b974-485b-939e-c25bafc0e28b": {"__data__": {"id_": "dc40887f-b974-485b-939e-c25bafc0e28b", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2517957b-aaed-4bc5-9a18-99e9c29716f1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "2cdac9838e5c499839513c753f4516740d7ebfdf9d8bef75736ade43d7cff746", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "df415cec-5072-438b-be34-5b99a22473bc", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "8dfb9dd2af66f8931413467a6a098854ef28efdd54316307f3b15ea88c7267b9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8bc7519b-d495-4b32-a879-a93f9647c39a", "node_type": "1", "metadata": {}, "hash": "9ebc3fd550923fdff8ab84e34c75e2105afeae99bba64bf4a496052492dc326d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id002\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id002\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.\n                        items:\n                          type: string\n                          pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                          description: Solana address\n                  verified_accounts:\n                    type: array\n                    description: Verified accounts of the user on other platforms,\n                      currently only X is supported.\n                    items:\n                      type: object\n                      properties:\n                        platform:\n                          type: string\n                          enum:\n                          - x\n                          - github\n                        username:\n                          type: string\n                  power_badge:\n                    type: boolean\n                  experimental:\n                    type: object\n                    required:\n                    - neynar_user_score\n                    properties:\n                      neynar_user_score:\n                        type: number\n                        format: double\n                        description: Score that represents the probability that the\n                          account is not spam.\n                  viewer_context:\n                    type: object\n                    description: Adds context on the viewer's follow relationship\n                      with the user.\n                    required:\n                    - following\n                    - followed_by\n                    - blocking\n                    - blocked_by\n                    properties:\n                      following:\n                        description: Indicates if the viewer is following the user.\n                        type: boolean\n                      followed_by:\n                        description: Indicates if the viewer is followed by the user.\n                        type: boolean\n                      blocking:\n                        description: Indicates if the viewer is blocking the user.\n                        type: boolean\n                      blocked_by:\n                        description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 5825, "end_char_idx": 8936, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8bc7519b-d495-4b32-a879-a93f9647c39a": {"__data__": {"id_": "8bc7519b-d495-4b32-a879-a93f9647c39a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2517957b-aaed-4bc5-9a18-99e9c29716f1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "2cdac9838e5c499839513c753f4516740d7ebfdf9d8bef75736ade43d7cff746", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dc40887f-b974-485b-939e-c25bafc0e28b", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "86311f15614d0b2a6b7b186c1cfb48ea377dec9f5d2acb7fa2f3e31945da95e9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3e6cd3b0-d562-4344-90e6-2fab8892caba", "node_type": "1", "metadata": {}, "hash": "1ba7c92044a2c3addbb8adb178277cf9c49e5a8c99bbe3676369af19c345a358", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                    type: object\n                    description: Adds context on the viewer's follow relationship\n                      with the user.\n                    required:\n                    - following\n                    - followed_by\n                    - blocking\n                    - blocked_by\n                    properties:\n                      following:\n                        description: Indicates if the viewer is following the user.\n                        type: boolean\n                      followed_by:\n                        description: Indicates if the viewer is followed by the user.\n                        type: boolean\n                      blocking:\n                        description: Indicates if the viewer is blocking the user.\n                        type: boolean\n                      blocked_by:\n                        description: Indicates if the viewer is blocked by the user.\n                        type: boolean\n              text:\n                type: string\n              timestamp: &id006\n                type: string\n                format: date-time\n              embeds:\n                type: array\n                items:\n                  oneOf:\n                  - &id007\n                    type: object\n                    required:\n                    - url\n                    properties:\n                      url:\n                        type: string\n                      metadata:\n                        type: object\n                        required:\n                        - _status\n                        properties:\n                          _status:\n                            type: string\n                          content_type:\n                            type:\n                            - string\n                            - 'null'\n                          content_length:\n                            type:\n                            - integer\n                            - 'null'\n                          image:\n                            type: object\n                            properties:\n                              height_px:\n                                type: integer\n                              width_px:\n                                type: integer\n                          video:\n                            type: object\n                            properties:\n                              duration_s:\n                                type: number\n                              stream:\n                                type: array\n                                items:\n                                  type: object\n                                  properties:\n                                    codec_name:\n                                      type: string\n                                    height_px:\n                                      type: integer\n                                    width_px:\n                                      type: integer\n                          html:\n                            allOf:\n                            - type: object\n                              properties:\n                                favicon:\n                                  type: string\n                                modifiedTime:\n                                  type: string\n                                ogArticleAuthor:\n                                  type: string\n                                ogArticleExpirationTime:\n                                  type: string\n                                ogArticleModifiedTime:\n                                  type: string\n                                ogArticlePublishedTime:\n                                  type: string\n                                ogArticlePublisher:\n                                  type: string\n                                ogArticleSection:\n                                  type: string\n                                ogArticleTag:\n                                  type: string\n                                ogAudio:\n                                  type: string\n                                ogAudioSecureURL:\n                                  type: string\n                                ogAudioType:\n                                  type: string\n                                ogAudioURL:\n                                  type: string\n                                ogAvailability:\n                                  type: string\n                                ogDate:\n                                  type: string\n                                ogDescription:\n                                  type: string\n                                ogDeterminer:\n                                  type: string\n                                ogEpisode:\n                                  type: string\n                                ogImage:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                      alt:\n                                        type: string\n                                    required:\n                                    - url\n                                ogLocale:\n                                  type: string\n                                ogLocaleAlternate:\n                                  type: string\n                                ogLogo:\n                                  type: string\n                                ogMovie:\n                                  type: string\n                                ogPriceAmount:\n                                  type: string\n                                ogPriceCurrency:\n                                  type: string\n                                ogProductAvailability:\n                                  type: string\n                                ogProductCondition:\n                                  type: string\n                                ogProductPriceAmount:\n                                  type: string\n                                ogProductPriceCurrency:\n                                  type: string\n                                ogProductRetailerItemId:\n                                  type: string\n                                ogSiteName:\n                                  type: string\n                                ogTitle:\n                                  type: string\n                                ogType:\n                                  type: string\n                                ogUrl:\n                                  type: string\n                                ogVideo:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                    required:\n                                    - url\n                                ogVideoActor:\n                                  type: string\n                                ogVideoActorId:\n                                  type: string\n                                ogVideoActorRole:\n                                  type: string\n                                ogVideoDirector:\n                                  type: string\n                                ogVideoDuration:\n                                  type: string\n                                ogVideoOther:\n                                  type: string\n                                ogVideoReleaseDate:\n                                  type: string\n                                ogVideoSecureURL:\n                                  type: string\n                                ogVideoSeries:\n                                  type: string\n                                ogVideoTag:\n                                  type: string\n                                ogVideoTvShow:\n                                  type: string\n                                ogVideoWriter:\n                                  type: string\n                                ogWebsite:\n                                  type: string\n                                updatedTime:\n                                  type: string\n                            - type: object\n                              properties:\n                                oembed:\n                                  oneOf:\n                                  - allOf:\n                                    - &id003\n                                      type: object\n                                      description: Basic data structure of every oembed\n                                        response see https://oembed.com/\n                                      required:\n                                      - type\n                                      - version\n                                      properties:\n                                        type:\n                                          type: string\n                                        version:\n                                          type:\n                                          - string\n                                          - 'null'\n                                        title:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A text title, describing the\n                                            resource.", "mimetype": "text/plain", "start_char_idx": 7991, "end_char_idx": 18356, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3e6cd3b0-d562-4344-90e6-2fab8892caba": {"__data__": {"id_": "3e6cd3b0-d562-4344-90e6-2fab8892caba", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2517957b-aaed-4bc5-9a18-99e9c29716f1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "2cdac9838e5c499839513c753f4516740d7ebfdf9d8bef75736ade43d7cff746", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8bc7519b-d495-4b32-a879-a93f9647c39a", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "8cf333daf51bdaab9f97e927a1a4284fb4298890513c8c0374b10eecf920de5e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "76c29a58-558f-4c48-96c3-51050bd970eb", "node_type": "1", "metadata": {}, "hash": "23a04483365d8bcc2b18a2d1ac96edd50ac2b76ebbbf7ad056f6abdb7ce9a7f4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the author/owner\n                                            of the resource.\n                                        author_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL for the author/owner\n                                            of the resource.\n                                        provider_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the resource provider.\n                                        provider_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The url of the resource provider.\n                                        cache_age:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The suggested cache lifetime\n                                            for this resource, in seconds. Consumers\n                                            may choose to use this value or not.\n                                        thumbnail_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL to a thumbnail image\n                                            representing the resource. The thumbnail\n                                            must respect any maxwidth and maxheight\n                                            parameters. If this parameter is present,\n                                            thumbnail_width and thumbnail_height must\n                                            also be present.\n                                        thumbnail_width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width of the optional thumbnail.\n                                            If this parameter is present, thumbnail_url\n                                            and thumbnail_height must also be present.\n                                        thumbnail_height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height of the optional\n                                            thumbnail. If this parameter is present,\n                                            thumbnail_url and thumbnail_width must\n                                            also be present.\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - rich\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to display\n                                            the resource. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities. The markup\n                                            should be valid XHTML 1.0 Basic.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - video\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to embed\n                                            a video player. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 18397, "end_char_idx": 27459, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "76c29a58-558f-4c48-96c3-51050bd970eb": {"__data__": {"id_": "76c29a58-558f-4c48-96c3-51050bd970eb", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2517957b-aaed-4bc5-9a18-99e9c29716f1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "2cdac9838e5c499839513c753f4516740d7ebfdf9d8bef75736ade43d7cff746", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3e6cd3b0-d562-4344-90e6-2fab8892caba", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "850e19c918f0fb607feca1fb2bcbd8f81ba7d008bb65c8f97f98a4fef92e45dd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9c7b96ce-ba12-42f1-8ce5-286571996bdb", "node_type": "1", "metadata": {}, "hash": "d2c745055c34b05df38156a53e572587481b7019a7d17c71b53ebf72656e7c1e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - link\n                                  discriminator:\n                                    propertyName: type\n                                    mapping:\n                                      rich: '#/components/schemas/OembedRichData'\n                                      video: '#/components/schemas/OembedVideoData'\n                                      photo: '#/components/schemas/OembedPhotoData'\n                                      link: '#/components/schemas/OembedLinkData'\n                          frame: &id010\n                            discriminator:\n                              propertyName: version\n                            oneOf:\n                            - description: Frame v1 object\n                              allOf:\n                              - &id004\n                                description: Frame base object used across all versions\n                                type: object\n                                required:\n                                - version\n                                - image\n                                - frames_url\n                                properties:\n                                  version:\n                                    type: string\n                                    description: Version of the frame, 'next' for\n                                      v2, 'vNext' for v1\n                                  image:\n                                    type: string\n                                    description: URL of the image\n                                  frames_url:\n                                    type: string\n                                    description: Launch URL of the frame\n                              - type: object\n                                properties:\n                                  buttons:\n                                    type: array\n                                    items:\n                                      type: object\n                                      required:\n                                      - index\n                                      - action_type\n                                      properties:\n                                        title:\n                                          type: string\n                                          description: Title of the button\n                                        index:\n                                          type: integer\n                                          description: Index of the button\n                                        action_type:\n                                          type: string\n                                          description: The action type of a frame\n                                            button. Action types \"mint\" & \"link\" are\n                                            to be handled on the client side only\n                                            and so they will produce a no/op for POST\n                                            /farcaster/frame/action.\n                                          enum:\n                                          - post\n                                          - post_redirect\n                                          - tx\n                                          - link\n                                          - mint\n                                        target:\n                                          type: string\n                                          description: Target of the button\n                                        post_url:\n                                          type: string\n                                          description: Used specifically for the tx\n                                            action type to post a successful transaction\n                                            hash\n                                  post_url:\n                                    type: string\n                                    description: Post URL to take an action on this\n                                      frame\n                                  title:\n                                    type: string\n                                  image_aspect_ratio:\n                                    type: string\n                                  input:\n                                    type: object\n                                    properties:\n                                      text:\n                                        type: string\n                                        description: Input text for the frame\n                                  state:\n                                    type: object\n                                    properties:\n                                      serialized:\n                                        type: string\n                                        description: State for the frame in a serialized\n                                          format\n                            - description: Frame v2 object\n                              allOf:\n                              - *id004\n                              - type: object\n                                required:\n                                - title\n                                - name\n                                - icon\n                                properties:\n                                  manifest:\n                                    type: object\n                                    properties:\n                                      account_association:\n                                        type: object\n                                        properties:\n                                          header:\n                                            type: string\n                                          payload:\n                                            type: string\n                                          signature:\n                                            type: string\n                                        required:\n                                        - header\n                                        - payload\n                                        - signature\n                                      frame:\n                                        type: object\n                                        properties:\n                                          version:\n                                            type: string\n                                            enum:\n                                            - 0.0.0\n                                            - 0.0.", "mimetype": "text/plain", "start_char_idx": 25638, "end_char_idx": 34501, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9c7b96ce-ba12-42f1-8ce5-286571996bdb": {"__data__": {"id_": "9c7b96ce-ba12-42f1-8ce5-286571996bdb", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2517957b-aaed-4bc5-9a18-99e9c29716f1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "2cdac9838e5c499839513c753f4516740d7ebfdf9d8bef75736ade43d7cff746", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "76c29a58-558f-4c48-96c3-51050bd970eb", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "42ce2216782c0798afcd56d9fe2ece052cbf8e1feb3dbbacdae67f2aa73c7bc9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d425a0d7-2793-4fdc-9817-f88199708214", "node_type": "1", "metadata": {}, "hash": "0ce42071a4c05518bd4dd683cb3fe427908f320971bd60c3bbaab371144844c4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                            - 0.0.1\n                                            - '1'\n                                            - next\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                          home_url:\n                                            type: string\n                                            maxLength: 512\n                                          icon_url:\n                                            type: string\n                                            maxLength: 512\n                                          image_url:\n                                            type: string\n                                            maxLength: 512\n                                          button_title:\n                                            type: string\n                                            maxLength: 32\n                                          splash_image_url:\n                                            type: string\n                                            maxLength: 512\n                                          splash_background_color:\n                                            type: string\n                                          webhook_url:\n                                            type: string\n                                            maxLength: 512\n                                        required:\n                                        - version\n                                        - name\n                                        - home_url\n                                        - icon_url\n                                      triggers:\n                                        type: array\n                                        items:\n                                          oneOf:\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - cast\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - composer\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                    required:\n                                    - account_association\n                                  author: &id005\n                                    type: object\n                                    required:\n                                    - object\n                                    - fid\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - user_dehydrated\n                                      fid: *id001\n                                      username:\n                                        type: string\n                                      display_name:\n                                        type: string\n                                      pfp_url:\n                                        type: string\n                            mapping:\n                              vNext: '#/components/schemas/FrameV1'\n                              next: '#/components/schemas/FrameV2'\n                              '1': '#/components/schemas/FrameV2'\n                              0.0.0: '#/components/schemas/FrameV2'\n                              0.0.1: '#/components/schemas/FrameV2'\n                  - type: object\n                    required:\n                    - cast\n                    properties:\n                      cast_id: &id008\n                        type: object\n                        required:\n                        - fid\n                        - hash\n                        properties:\n                          fid: *id001\n                          hash:\n                            type: string\n                      cast:\n                        type: object\n                        required:\n                        - hash\n                        - parent_hash\n                        - parent_url\n                        - root_parent_url\n                        - parent_author\n                        - author\n                        - text\n                        - timestamp\n                        - type\n                        - embeds\n                        - channel\n                        properties:\n                          hash:\n                            type: string\n                          parent_hash:\n                            type:\n                            - string\n                            - 'null'\n                          parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          root_parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          parent_author:\n                            type: object\n                            required:\n                            - fid\n                            properties:\n                              fid:\n                                oneOf:\n                                - type: 'null'\n                                - *id001\n                          author: *id005\n                          text:\n                            type: string\n                          timestamp: *id006\n                          type: &id009\n                            type: string\n                            enum:\n                            - cast-mention\n                            - cast-reply\n                            description: 'The notification type of a cast.\n\n                              '\n                          embeds:\n                            type: array\n                            items:\n                              oneOf:\n                              - *id007\n                              - type: object\n                                required:\n                                - cast\n                                properties:\n                                  cast_id: *id008\n                                  cast:\n                                    type: object\n                                    required:\n                                    - object\n                                    - hash\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - cast_dehydrated\n                                      hash:\n                                        type: string\n                                      author: *id005\n                          channel:\n                            oneOf:\n                            - type: 'null'\n                            - &id013\n                              type: object\n                              required:\n                              - id\n                              - name\n                              - object\n                              properties:\n                                id:\n                                  type: string\n                                name:\n                                  type: string\n                                object:\n                                  type: string\n                                  enum:\n                                  - channel_dehydrated\n                                image_url:\n                                  type: string\n                                viewer_context: &id012\n                                  description: Adds context on the viewer's or author's\n                                    role in the channel.", "mimetype": "text/plain", "start_char_idx": 34447, "end_char_idx": 44030, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d425a0d7-2793-4fdc-9817-f88199708214": {"__data__": {"id_": "d425a0d7-2793-4fdc-9817-f88199708214", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2517957b-aaed-4bc5-9a18-99e9c29716f1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "2cdac9838e5c499839513c753f4516740d7ebfdf9d8bef75736ade43d7cff746", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9c7b96ce-ba12-42f1-8ce5-286571996bdb", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "de8bada4c7cfa36c875ca1b159ead726fef3b4ca64cdb45dbfc60bba202a91ba", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                                  required:\n                                  - following\n                                  properties:\n                                    following:\n                                      description: Indicates if the user is following\n                                        the channel.\n                                      type: boolean\n                                    role:\n                                      type: string\n                                      description: The role of a channel member\n                                      enum:\n                                      - member\n                                      - moderator\n              type: *id009\n          - type: object\n            required:\n            - reactions\n            - replies\n            - thread_hash\n            - mentioned_profiles\n            - channel\n            properties:\n              frames:\n                type: array\n                items: *id010\n              reactions:\n                type: object\n                required:\n                - likes\n                - recasts\n                - likes_count\n                - recasts_count\n                properties:\n                  likes:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      properties:\n                        fid: *id001\n                  recasts:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      - fname\n                      properties:\n                        fid: *id001\n                        fname:\n                          type: string\n                  likes_count:\n                    type: integer\n                    format: int32\n                  recasts_count:\n                    type: integer\n                    format: int32\n              replies:\n                type: object\n                required:\n                - count\n                properties:\n                  count:\n                    type: integer\n                    format: int32\n              thread_hash:\n                type:\n                - string\n                - 'null'\n              mentioned_profiles:\n                type: array\n                items: *id011\n              channel:\n                oneOf:\n                - oneOf:\n                  - type: object\n                    required:\n                    - id\n                    - url\n                    - object\n                    properties:\n                      id:\n                        type: string\n                      url:\n                        type: string\n                      name:\n                        type: string\n                      description:\n                        type: string\n                      object:\n                        type: string\n                        enum:\n                        - channel\n                      created_at:\n                        description: Epoch timestamp in seconds.\n                        type: number\n                      follower_count:\n                        description: Number of followers the channel has.\n                        type: number\n                      external_link:\n                        type: object\n                        description: Channel's external link.\n                        properties:\n                          title:\n                            type: string\n                          url:\n                            type: string\n                      image_url:\n                        type: string\n                      parent_url:\n                        type: string\n                        format: uri\n                      lead: *id011\n                      moderator_fids:\n                        type: array\n                        items: *id001\n                      member_count:\n                        type: integer\n                        format: int32\n                      moderator: *id011\n                      pinned_cast_hash:\n                        type: string\n                        default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                        description: Cast Hash\n                      hosts:\n                        type: array\n                        deprecated: true\n                        items: *id011\n                      viewer_context: *id012\n                  - *id013\n                  discriminator:\n                    propertyName: object\n                    mapping:\n                      channel: '#/components/schemas/Channel'\n                      dehydrated_channel: '#/components/schemas/DehydratedChannel'\n                - type: 'null'\n              viewer_context:\n                type: object\n                description: Adds context on interactions the viewer has made with\n                  the cast.\n                required:\n                - liked\n                - recasted\n                properties:\n                  liked:\n                    description: Indicates if the viewer liked the cast.\n                    type: boolean\n                  recasted:\n                    description: Indicates if the viewer recasted the cast.\n                    type: boolean\n              author_channel_context: *id012\n        - type: object\n          required:\n          - direct_replies\n          properties:\n            direct_replies:\n              type: array\n              items:\n                description: Reference to CastWithInteractionsAndConversations to\n                  avoid circular reference\n                allOf:\n                - *id014\n                - type: object\n                  required:\n                  - direct_replies\n                  properties:\n                    direct_replies:\n                      type: array\n                      items:\n                        type: object\n                      description: 'note: This is recursive. It contains the direct\n                        replies to the cast and their direct replies up to n reply_depth.'\n              description: 'note: This is recursive. It contains the direct replies\n                to the cast and their direct replies up to n reply_depth.'\n      chronological_parent_casts:\n        type: array\n        items: *id014\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 44065, "end_char_idx": 50692, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "81d9dc81-d34e-4eb8-ae8a-b19fdf24c305": {"__data__": {"id_": "81d9dc81-d34e-4eb8-ae8a-b19fdf24c305", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-channel.md", "file_name": "neynar_lookup-channel.md", "file_type": "text/markdown", "file_size": 7300, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3b0d5bc4-34b4-42e2-8b8e-14c8562acff3", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-channel.md", "file_name": "neynar_lookup-channel.md", "file_type": "text/markdown", "file_size": 7300, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "4642013ee644c6f4e00d304ce775e9613f001ccd632a1643d940c3d8a4d4975e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3640dcbb-9203-441f-9500-645d60013da9", "node_type": "1", "metadata": {}, "hash": "3e7bfce45c8ee7ba1a1af1334c4ce4c551d68d1b33c4244b2d17395d10fca878", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# lookup-channel\n\n**Endpoint**: `GET /farcaster/channel`\n\n## Description\nReturns details of a channel\n\n## Parameters\n- `id` (query): Channel ID for the channel being queried\n- `type` (query): Type of identifier being used to query the channel. Defaults to ID.\n- `viewer_fid` (query): FID of the user viewing the channel.\n\n## Response\n```yaml\ntype: object\nrequired:\n- channel\nproperties:\n  channel:\n    type: object\n    required:\n    - id\n    - url\n    - object\n    properties:\n      id:\n        type: string\n      url:\n        type: string\n      name:\n        type: string\n      description:\n        type: string\n      object:\n        type: string\n        enum:\n        - channel\n      created_at:\n        description: Epoch timestamp in seconds.\n        type: number\n      follower_count:\n        description: Number of followers the channel has.\n        type: number\n      external_link:\n        type: object\n        description: Channel's external link.\n        properties:\n          title:\n            type: string\n          url:\n            type: string\n      image_url:\n        type: string\n      parent_url:\n        type: string\n        format: uri\n      lead: &id003\n        type: object\n        required:\n        - object\n        - fid\n        - custody_address\n        - username\n        - profile\n        - follower_count\n        - following_count\n        - verifications\n        - verified_addresses\n        - verified_accounts\n        - power_badge\n        properties:\n          object:\n            type: string\n            enum:\n            - user\n          fid: &id002\n            type: integer\n            format: int32\n            description: The unique identifier of a farcaster user (unsigned integer)\n            examples:\n            - 3\n            - 191\n            - 2\n            - 194\n            - 19960\n          username:\n            type: string\n          display_name:\n            type: string\n          custody_address: &id001\n            type: string\n            pattern: ^0x[a-fA-F0-9]{40}$\n            description: Ethereum address\n          pfp_url:\n            type: string\n            description: The URL of the user's profile picture\n          profile:\n            type: object\n            required:\n            - bio\n            properties:\n              bio:\n                type: object\n                required:\n                - text\n                - mentioned_profiles\n                properties:\n                  text:\n                    type: string\n                  mentioned_profiles:\n                    type: array\n                    items:\n                      type: string\n                    default: []\n              location:\n                description: Coordinates and place names for a location\n                type: object\n                required:\n                - latitude\n                - longitude\n                properties:\n                  latitude:\n                    type: number\n                    format: double\n                    minimum: -90\n                    maximum: 90\n                  longitude:\n                    type: number\n                    format: double\n                    minimum: -180\n                    maximum: 180\n                  address:\n                    type: object\n                    required:\n                    - city\n                    - country\n                    properties:\n                      city:\n                        type: string\n                      state:\n                        type: string\n                      state_code:\n                        type: string\n                      country:\n                        type: string\n                      country_code:\n                        type: string\n          follower_count:\n            type: integer\n            format: int32\n            description: The number of followers the user has.\n          following_count:\n            type: integer\n            format: int32\n            description: The number of users the user is following.\n          verifications:\n            type: array\n            items: *id001\n          verified_addresses:\n            type: object\n            required:\n            - eth_addresses\n            - sol_addresses\n            properties:\n              eth_addresses:\n                type: array\n                description: List of verified Ethereum addresses of the user sorted\n                  by oldest to most recent.\n                items: *id001\n              sol_addresses:\n                type: array\n                description: List of verified Solana addresses of the user sorted\n                  by oldest to most recent.\n                items:\n                  type: string\n                  pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                  description: Solana address\n          verified_accounts:\n            type: array\n            description: Verified accounts of the user on other platforms, currently\n              only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4994, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3640dcbb-9203-441f-9500-645d60013da9": {"__data__": {"id_": "3640dcbb-9203-441f-9500-645d60013da9", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-channel.md", "file_name": "neynar_lookup-channel.md", "file_type": "text/markdown", "file_size": 7300, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3b0d5bc4-34b4-42e2-8b8e-14c8562acff3", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-channel.md", "file_name": "neynar_lookup-channel.md", "file_type": "text/markdown", "file_size": 7300, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "4642013ee644c6f4e00d304ce775e9613f001ccd632a1643d940c3d8a4d4975e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "81d9dc81-d34e-4eb8-ae8a-b19fdf24c305", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-channel.md", "file_name": "neynar_lookup-channel.md", "file_type": "text/markdown", "file_size": 7300, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "e4764867e4193a91f695a20c59a1a5200f95a6301c1f2915b1ac37946f53e60b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n            type: array\n            items: *id001\n          verified_addresses:\n            type: object\n            required:\n            - eth_addresses\n            - sol_addresses\n            properties:\n              eth_addresses:\n                type: array\n                description: List of verified Ethereum addresses of the user sorted\n                  by oldest to most recent.\n                items: *id001\n              sol_addresses:\n                type: array\n                description: List of verified Solana addresses of the user sorted\n                  by oldest to most recent.\n                items:\n                  type: string\n                  pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                  description: Solana address\n          verified_accounts:\n            type: array\n            description: Verified accounts of the user on other platforms, currently\n              only X is supported.\n            items:\n              type: object\n              properties:\n                platform:\n                  type: string\n                  enum:\n                  - x\n                  - github\n                username:\n                  type: string\n          power_badge:\n            type: boolean\n          experimental:\n            type: object\n            required:\n            - neynar_user_score\n            properties:\n              neynar_user_score:\n                type: number\n                format: double\n                description: Score that represents the probability that the account\n                  is not spam.\n          viewer_context:\n            type: object\n            description: Adds context on the viewer's follow relationship with the\n              user.\n            required:\n            - following\n            - followed_by\n            - blocking\n            - blocked_by\n            properties:\n              following:\n                description: Indicates if the viewer is following the user.\n                type: boolean\n              followed_by:\n                description: Indicates if the viewer is followed by the user.\n                type: boolean\n              blocking:\n                description: Indicates if the viewer is blocking the user.\n                type: boolean\n              blocked_by:\n                description: Indicates if the viewer is blocked by the user.\n                type: boolean\n      moderator_fids:\n        type: array\n        items: *id002\n      member_count:\n        type: integer\n        format: int32\n      moderator: *id003\n      pinned_cast_hash:\n        type: string\n        default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n        description: Cast Hash\n      hosts:\n        type: array\n        deprecated: true\n        items: *id003\n      viewer_context:\n        description: Adds context on the viewer's or author's role in the channel.\n        type: object\n        required:\n        - following\n        properties:\n          following:\n            description: Indicates if the user is following the channel.\n            type: boolean\n          role:\n            type: string\n            description: The role of a channel member\n            enum:\n            - member\n            - moderator\n```", "mimetype": "text/plain", "start_char_idx": 4045, "end_char_idx": 7299, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8be81a61-b2af-4028-afc7-e6c26907c12a": {"__data__": {"id_": "8be81a61-b2af-4028-afc7-e6c26907c12a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-neynar-frame.md", "file_name": "neynar_lookup-neynar-frame.md", "file_type": "text/markdown", "file_size": 3783, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c0158aed-8723-4d76-aa49-eadd831d5ab5", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-neynar-frame.md", "file_name": "neynar_lookup-neynar-frame.md", "file_type": "text/markdown", "file_size": 3783, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "0caee5db7bb4119bf1a70f19311b14a29fc775f6f4784f3e95150a8a48c14c31", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# lookup-neynar-frame\n\n**Endpoint**: `GET /farcaster/frame`\n\n## Description\nFetch a frame either by UUID or Neynar URL\n\n## Parameters\n- `type` (query): No description\n- `uuid` (query): UUID of the frame to fetch\n- `url` (query): URL of the Neynar frame to fetch\n\n## Response\n```yaml\ntype: object\nproperties:\n  uuid:\n    type: string\n    format: uuid\n    description: Unique identifier for the frame.\n  name:\n    type: string\n    description: Name of the frame.\n  link:\n    type: string\n    format: uri\n    description: Generated link for the frame's first page.\n  pages:\n    type: array\n    items:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n          description: Unique identifier for the page.\n        version:\n          type: string\n          default: vNext\n          examples:\n          - vNext\n          description: The version of the page schema.\n        title:\n          type: string\n          examples:\n          - Welcome to Neynar\n          description: The title of the page.\n        image:\n          type: object\n          properties:\n            url:\n              type: string\n              format: uri\n              examples:\n              - https://i.imgur.com/qo2AzBf.jpeg\n              description: The URL of the page's image.\n            aspect_ratio:\n              type: string\n              description: The aspect ratio of the image.\n              enum:\n              - 1.91:1\n              - '1:1'\n          required:\n          - url\n          - aspect_ratio\n        buttons:\n          type: array\n          items:\n            type: object\n            properties:\n              title:\n                type: string\n                description: The title of the button.\n              index:\n                type: integer\n                description: The index of the button, first button should have index\n                  1 and so on.\n              action_type:\n                type: string\n                description: The type of action that the button performs.\n                enum:\n                - post\n                - post_redirect\n                - mint\n                - link\n              next_page:\n                oneOf:\n                - type: object\n                  properties:\n                    uuid:\n                      type: string\n                      format: uuid\n                      description: The UUID of the next page.\n                  required:\n                  - uuid\n                - type: object\n                  properties:\n                    redirect_url:\n                      type: string\n                      format: uri\n                      description: The URL to redirect to.\n                  required:\n                  - redirect_url\n                - type: object\n                  properties:\n                    mint_url:\n                      type: string\n                      description: The URL for minting, specific to the mint action.\n                  required:\n                  - mint_url\n            required:\n            - title\n            - index\n            - action_type\n        input:\n          type: object\n          properties:\n            text:\n              type: object\n              properties:\n                enabled:\n                  type: boolean\n                  default: false\n                  description: Indicates if text input is enabled.\n                placeholder:\n                  type: string\n                  description: The placeholder text for the input.\n              required:\n              - enabled\n      required:\n      - uuid\n      - title\n      - version\n      - image\n  valid:\n    type: boolean\n    description: Indicates if the frame is valid.\nrequired:\n- uuid\n- name\n- pages\n- link\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3782, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "394cdeb3-0a91-4a42-9d1a-ff1106e31142": {"__data__": {"id_": "394cdeb3-0a91-4a42-9d1a-ff1106e31142", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-by-custody-address.md", "file_name": "neynar_lookup-user-by-custody-address.md", "file_type": "text/markdown", "file_size": 4895, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "677d6e97-90eb-447f-8058-b9482ea54f95", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-by-custody-address.md", "file_name": "neynar_lookup-user-by-custody-address.md", "file_type": "text/markdown", "file_size": 4895, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "eacb6cbf1434f10ca0d11bbf5cb3c7b93f26c39a168de46dc6d0b314b82371c6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# lookup-user-by-custody-address\n\n**Endpoint**: `GET /farcaster/user/custody-address`\n\n## Description\nLookup a user by custody-address\n\n## Parameters\n- `custody_address` (query): Custody Address associated with mnemonic\n\n## Response\n```yaml\ntype: object\nrequired:\n- user\nproperties:\n  user:\n    type: object\n    required:\n    - object\n    - fid\n    - custody_address\n    - username\n    - profile\n    - follower_count\n    - following_count\n    - verifications\n    - verified_addresses\n    - verified_accounts\n    - power_badge\n    properties:\n      object:\n        type: string\n        enum:\n        - user\n      fid:\n        type: integer\n        format: int32\n        description: The unique identifier of a farcaster user (unsigned integer)\n        examples:\n        - 3\n        - 191\n        - 2\n        - 194\n        - 19960\n      username:\n        type: string\n      display_name:\n        type: string\n      custody_address: &id001\n        type: string\n        pattern: ^0x[a-fA-F0-9]{40}$\n        description: Ethereum address\n      pfp_url:\n        type: string\n        description: The URL of the user's profile picture\n      profile:\n        type: object\n        required:\n        - bio\n        properties:\n          bio:\n            type: object\n            required:\n            - text\n            - mentioned_profiles\n            properties:\n              text:\n                type: string\n              mentioned_profiles:\n                type: array\n                items:\n                  type: string\n                default: []\n          location:\n            description: Coordinates and place names for a location\n            type: object\n            required:\n            - latitude\n            - longitude\n            properties:\n              latitude:\n                type: number\n                format: double\n                minimum: -90\n                maximum: 90\n              longitude:\n                type: number\n                format: double\n                minimum: -180\n                maximum: 180\n              address:\n                type: object\n                required:\n                - city\n                - country\n                properties:\n                  city:\n                    type: string\n                  state:\n                    type: string\n                  state_code:\n                    type: string\n                  country:\n                    type: string\n                  country_code:\n                    type: string\n      follower_count:\n        type: integer\n        format: int32\n        description: The number of followers the user has.\n      following_count:\n        type: integer\n        format: int32\n        description: The number of users the user is following.\n      verifications:\n        type: array\n        items: *id001\n      verified_addresses:\n        type: object\n        required:\n        - eth_addresses\n        - sol_addresses\n        properties:\n          eth_addresses:\n            type: array\n            description: List of verified Ethereum addresses of the user sorted by\n              oldest to most recent.\n            items: *id001\n          sol_addresses:\n            type: array\n            description: List of verified Solana addresses of the user sorted by oldest\n              to most recent.\n            items:\n              type: string\n              pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n              description: Solana address\n      verified_accounts:\n        type: array\n        description: Verified accounts of the user on other platforms, currently only\n          X is supported.\n        items:\n          type: object\n          properties:\n            platform:\n              type: string\n              enum:\n              - x\n              - github\n            username:\n              type: string\n      power_badge:\n        type: boolean\n      experimental:\n        type: object\n        required:\n        - neynar_user_score\n        properties:\n          neynar_user_score:\n            type: number\n            format: double\n            description: Score that represents the probability that the account is\n              not spam.\n      viewer_context:\n        type: object\n        description: Adds context on the viewer's follow relationship with the user.\n        required:\n        - following\n        - followed_by\n        - blocking\n        - blocked_by\n        properties:\n          following:\n            description: Indicates if the viewer is following the user.\n            type: boolean\n          followed_by:\n            description: Indicates if the viewer is followed by the user.\n            type: boolean\n          blocking:\n            description: Indicates if the viewer is blocking the user.\n            type: boolean\n          blocked_by:\n            description: Indicates if the viewer is blocked by the user.\n            type: boolean\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4894, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5de23fc6-3f65-4a3a-a675-885449f8cb53": {"__data__": {"id_": "5de23fc6-3f65-4a3a-a675-885449f8cb53", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-by-username.md", "file_name": "neynar_lookup-user-by-username.md", "file_type": "text/markdown", "file_size": 4927, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a3c16477-2926-4c75-b592-4cef083158db", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-by-username.md", "file_name": "neynar_lookup-user-by-username.md", "file_type": "text/markdown", "file_size": 4927, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d0c9ef07ffdfcc69d555c6a122304486c5e485e9b4bd34173df0f9349188cd9e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# lookup-user-by-username\n\n**Endpoint**: `GET /farcaster/user/by_username`\n\n## Description\nFetches a single hydrated user object given a username\n\n## Parameters\n- `username` (query): Username of the user to fetch\n- `viewer_fid` (query): No description\n\n## Response\n```yaml\ntype: object\nrequired:\n- user\nproperties:\n  user:\n    type: object\n    required:\n    - object\n    - fid\n    - custody_address\n    - username\n    - profile\n    - follower_count\n    - following_count\n    - verifications\n    - verified_addresses\n    - verified_accounts\n    - power_badge\n    properties:\n      object:\n        type: string\n        enum:\n        - user\n      fid:\n        type: integer\n        format: int32\n        description: The unique identifier of a farcaster user (unsigned integer)\n        examples:\n        - 3\n        - 191\n        - 2\n        - 194\n        - 19960\n      username:\n        type: string\n      display_name:\n        type: string\n      custody_address: &id001\n        type: string\n        pattern: ^0x[a-fA-F0-9]{40}$\n        description: Ethereum address\n      pfp_url:\n        type: string\n        description: The URL of the user's profile picture\n      profile:\n        type: object\n        required:\n        - bio\n        properties:\n          bio:\n            type: object\n            required:\n            - text\n            - mentioned_profiles\n            properties:\n              text:\n                type: string\n              mentioned_profiles:\n                type: array\n                items:\n                  type: string\n                default: []\n          location:\n            description: Coordinates and place names for a location\n            type: object\n            required:\n            - latitude\n            - longitude\n            properties:\n              latitude:\n                type: number\n                format: double\n                minimum: -90\n                maximum: 90\n              longitude:\n                type: number\n                format: double\n                minimum: -180\n                maximum: 180\n              address:\n                type: object\n                required:\n                - city\n                - country\n                properties:\n                  city:\n                    type: string\n                  state:\n                    type: string\n                  state_code:\n                    type: string\n                  country:\n                    type: string\n                  country_code:\n                    type: string\n      follower_count:\n        type: integer\n        format: int32\n        description: The number of followers the user has.\n      following_count:\n        type: integer\n        format: int32\n        description: The number of users the user is following.\n      verifications:\n        type: array\n        items: *id001\n      verified_addresses:\n        type: object\n        required:\n        - eth_addresses\n        - sol_addresses\n        properties:\n          eth_addresses:\n            type: array\n            description: List of verified Ethereum addresses of the user sorted by\n              oldest to most recent.\n            items: *id001\n          sol_addresses:\n            type: array\n            description: List of verified Solana addresses of the user sorted by oldest\n              to most recent.\n            items:\n              type: string\n              pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n              description: Solana address\n      verified_accounts:\n        type: array\n        description: Verified accounts of the user on other platforms, currently only\n          X is supported.\n        items:\n          type: object\n          properties:\n            platform:\n              type: string\n              enum:\n              - x\n              - github\n            username:\n              type: string\n      power_badge:\n        type: boolean\n      experimental:\n        type: object\n        required:\n        - neynar_user_score\n        properties:\n          neynar_user_score:\n            type: number\n            format: double\n            description: Score that represents the probability that the account is\n              not spam.\n      viewer_context:\n        type: object\n        description: Adds context on the viewer's follow relationship with the user.\n        required:\n        - following\n        - followed_by\n        - blocking\n        - blocked_by\n        properties:\n          following:\n            description: Indicates if the viewer is following the user.\n            type: boolean\n          followed_by:\n            description: Indicates if the viewer is followed by the user.\n            type: boolean\n          blocking:\n            description: Indicates if the viewer is blocking the user.\n            type: boolean\n          blocked_by:\n            description: Indicates if the viewer is blocked by the user.\n            type: boolean\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4926, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7ad51c97-bf42-4b66-9e04-a231da6ae3d8": {"__data__": {"id_": "7ad51c97-bf42-4b66-9e04-a231da6ae3d8", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-storage-allocations.md", "file_name": "neynar_lookup-user-storage-allocations.md", "file_type": "text/markdown", "file_size": 1451, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "39b547bb-804f-4f7a-8031-79b9b52f27be", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-storage-allocations.md", "file_name": "neynar_lookup-user-storage-allocations.md", "file_type": "text/markdown", "file_size": 1451, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "202d7e6747de18131be0a2da64c25ba3c731fd52002e9044259b7818482c7b9d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# lookup-user-storage-allocations\n\n**Endpoint**: `GET /farcaster/storage/allocations`\n\n## Description\nFetches storage allocations for a given user\n\n## Parameters\n- `fid` (query): No description\n\n## Response\n```yaml\ntype: object\nproperties:\n  total_active_units:\n    type: integer\n    examples:\n    - 13\n  allocations:\n    type: array\n    items:\n      type: object\n      properties:\n        object:\n          type: string\n          examples:\n          - storage_allocation\n        user:\n          type: object\n          required:\n          - object\n          - fid\n          properties:\n            object:\n              type: string\n              enum:\n              - user_dehydrated\n            fid:\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            pfp_url:\n              type: string\n        units:\n          type: integer\n          examples:\n          - 10\n        expiry:\n          type: string\n          format: date-time\n          examples:\n          - '2024-10-08T22:03:49.000Z'\n        timestamp:\n          type: string\n          format: date-time\n          examples:\n          - '2023-10-09T22:03:49.000Z'\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1450, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "71b9cd2f-4872-49e9-8658-78206b30fab7": {"__data__": {"id_": "71b9cd2f-4872-49e9-8658-78206b30fab7", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-storage-usage.md", "file_name": "neynar_lookup-user-storage-usage.md", "file_type": "text/markdown", "file_size": 1207, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ea0d6271-e730-4ee7-9b0f-4bfe425c7d0c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-storage-usage.md", "file_name": "neynar_lookup-user-storage-usage.md", "file_type": "text/markdown", "file_size": 1207, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "fadae49c7ce9b600182615fdf08b0ac889b0a0fd12bbde631e0724655b21df31", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# lookup-user-storage-usage\n\n**Endpoint**: `GET /farcaster/storage/usage`\n\n## Description\nFetches storage usage for a given user\n\n## Parameters\n- `fid` (query): No description\n\n## Response\n```yaml\ntype: object\nproperties:\n  object:\n    type: string\n    examples:\n    - storage_usage\n  user:\n    type: object\n    required:\n    - object\n    - fid\n    properties:\n      object:\n        type: string\n        enum:\n        - user_dehydrated\n      fid:\n        type: integer\n        format: int32\n        description: The unique identifier of a farcaster user (unsigned integer)\n        examples:\n        - 3\n        - 191\n        - 2\n        - 194\n        - 19960\n      username:\n        type: string\n      display_name:\n        type: string\n      pfp_url:\n        type: string\n  casts: &id001\n    type: object\n    properties:\n      object:\n        type: string\n        examples:\n        - storage\n      used:\n        type: integer\n        examples:\n        - 3659\n      capacity:\n        type: integer\n        examples:\n        - 10000\n  reactions: *id001\n  links: *id001\n  verified_addresses: *id001\n  username_proofs: *id001\n  signers: *id001\n  total_active_units:\n    type: integer\n    examples:\n    - 2\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1206, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e5665930-bc86-4b5d-b6de-7971d13c429a": {"__data__": {"id_": "e5665930-bc86-4b5d-b6de-7971d13c429a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_remove-channel-member.md", "file_name": "neynar_remove-channel-member.md", "file_type": "text/markdown", "file_size": 263, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8f0bbc13-f09e-4868-b5e0-828f7d848621", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_remove-channel-member.md", "file_name": "neynar_remove-channel-member.md", "file_type": "text/markdown", "file_size": 263, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "183735031b6aecc928e4571aa638758b3584af2787aa4db77744a4a70e515c05", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# remove-channel-member\n\n**Endpoint**: `DELETE /farcaster/channel/member`\n\n## Description\nRemove a user from a channel or a user's invite to a channel role\n\n## Response\n```yaml\ntype: object\nproperties:\n  success:\n    type: boolean\n  message:\n    type: string\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 262, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "654184e5-62f1-46a8-bc9c-a91dccbe7208": {"__data__": {"id_": "654184e5-62f1-46a8-bc9c-a91dccbe7208", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_respond-channel-invite.md", "file_name": "neynar_respond-channel-invite.md", "file_type": "text/markdown", "file_size": 236, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2c130b57-4957-4ad1-b83c-79aa855d2c71", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_respond-channel-invite.md", "file_name": "neynar_respond-channel-invite.md", "file_type": "text/markdown", "file_size": 236, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "b46b7d6c699b77c4dc10d10ae82b33e9fef81f053933d1ca7215d924a8657997", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# respond-channel-invite\n\n**Endpoint**: `PUT /farcaster/channel/member/invite`\n\n## Description\nAccept or reject a channel invite\n\n## Response\n```yaml\ntype: object\nproperties:\n  success:\n    type: boolean\n  message:\n    type: string\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 235, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fdc231e1-8a6c-4ada-8263-03e6fa57a516": {"__data__": {"id_": "fdc231e1-8a6c-4ada-8263-03e6fa57a516", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0c57a3ae-ce77-4b6b-a420-599c800e0cd3", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "2b5be6ac31bcc85d062ee50f3323dbb7cab319411b58be46cb7aed7c68211486", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eb633423-48fa-4d43-8ab6-886f45e851f1", "node_type": "1", "metadata": {}, "hash": "02f587cd3aa3383dd0364ccf187a476f3733ff55999517f15538a4b8d31fd576", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# search-casts\n\n**Endpoint**: `GET /farcaster/cast/search`\n\n## Description\nSearch for casts based on a query string, with optional AND filters\n\n## Parameters\n- `q` (query): Query string to search for casts. Include 'before:YYYY-MM-DD' or 'after:YYYY-MM-DD' to search for casts before or after a specific date.\n- `author_fid` (query): Fid of the user whose casts you want to search\n- `viewer_fid` (query): Providing this will return search results that respects this user's mutes and blocks and includes `viewer_context`.\n- `parent_url` (query): Parent URL of the casts you want to search\n- `channel_id` (query): Channel ID of the casts you want to search\n- `priority_mode` (query): When true, only returns search results from power badge users and users that the viewer follows (if viewer_fid is provided).\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor\n\n## Response\n```yaml\ntype: object\nrequired:\n- result\nproperties:\n  result:\n    type: object\n    required:\n    - casts\n    - next\n    properties:\n      casts:\n        type: array\n        items:\n          allOf:\n          - type: object\n            required:\n            - hash\n            - parent_hash\n            - parent_url\n            - root_parent_url\n            - parent_author\n            - author\n            - text\n            - timestamp\n            - embeds\n            properties:\n              hash:\n                type: string\n              parent_hash:\n                type:\n                - string\n                - 'null'\n              parent_url:\n                type:\n                - string\n                - 'null'\n              root_parent_url:\n                type:\n                - string\n                - 'null'\n              parent_author:\n                type: object\n                required:\n                - fid\n                properties:\n                  fid:\n                    oneOf:\n                    - type: 'null'\n                    - &id001\n                      type: integer\n                      format: int32\n                      description: The unique identifier of a farcaster user (unsigned\n                        integer)\n                      examples:\n                      - 3\n                      - 191\n                      - 2\n                      - 194\n                      - 19960\n              author: &id011\n                type: object\n                required:\n                - object\n                - fid\n                - custody_address\n                - username\n                - profile\n                - follower_count\n                - following_count\n                - verifications\n                - verified_addresses\n                - verified_accounts\n                - power_badge\n                properties:\n                  object:\n                    type: string\n                    enum:\n                    - user\n                  fid: *id001\n                  username:\n                    type: string\n                  display_name:\n                    type: string\n                  custody_address: &id002\n                    type: string\n                    pattern: ^0x[a-fA-F0-9]{40}$\n                    description: Ethereum address\n                  pfp_url:\n                    type: string\n                    description: The URL of the user's profile picture\n                  profile:\n                    type: object\n                    required:\n                    - bio\n                    properties:\n                      bio:\n                        type: object\n                        required:\n                        - text\n                        - mentioned_profiles\n                        properties:\n                          text:\n                            type: string\n                          mentioned_profiles:\n                            type: array\n                            items:\n                              type: string\n                            default: []\n                      location:\n                        description: Coordinates and place names for a location\n                        type: object\n                        required:\n                        - latitude\n                        - longitude\n                        properties:\n                          latitude:\n                            type: number\n                            format: double\n                            minimum: -90\n                            maximum: 90\n                          longitude:\n                            type: number\n                            format: double\n                            minimum: -180\n                            maximum: 180\n                          address:\n                            type: object\n                            required:\n                            - city\n                            - country\n                            properties:\n                              city:\n                                type: string\n                              state:\n                                type: string\n                              state_code:\n                                type: string\n                              country:\n                                type: string\n                              country_code:\n                                type: string\n                  follower_count:\n                    type: integer\n                    format: int32\n                    description: The number of followers the user has.\n                  following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id002\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 6217, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eb633423-48fa-4d43-8ab6-886f45e851f1": {"__data__": {"id_": "eb633423-48fa-4d43-8ab6-886f45e851f1", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0c57a3ae-ce77-4b6b-a420-599c800e0cd3", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "2b5be6ac31bcc85d062ee50f3323dbb7cab319411b58be46cb7aed7c68211486", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fdc231e1-8a6c-4ada-8263-03e6fa57a516", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "dc553fd57c078dd5fb840631414e0cf6efc6d5f670a15a804728ffef756beb39", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "817026f8-8ddd-439f-8321-0e5ae9061df5", "node_type": "1", "metadata": {}, "hash": "9ebc3fd550923fdff8ab84e34c75e2105afeae99bba64bf4a496052492dc326d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id002\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id002\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.\n                        items:\n                          type: string\n                          pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                          description: Solana address\n                  verified_accounts:\n                    type: array\n                    description: Verified accounts of the user on other platforms,\n                      currently only X is supported.\n                    items:\n                      type: object\n                      properties:\n                        platform:\n                          type: string\n                          enum:\n                          - x\n                          - github\n                        username:\n                          type: string\n                  power_badge:\n                    type: boolean\n                  experimental:\n                    type: object\n                    required:\n                    - neynar_user_score\n                    properties:\n                      neynar_user_score:\n                        type: number\n                        format: double\n                        description: Score that represents the probability that the\n                          account is not spam.\n                  viewer_context:\n                    type: object\n                    description: Adds context on the viewer's follow relationship\n                      with the user.\n                    required:\n                    - following\n                    - followed_by\n                    - blocking\n                    - blocked_by\n                    properties:\n                      following:\n                        description: Indicates if the viewer is following the user.\n                        type: boolean\n                      followed_by:\n                        description: Indicates if the viewer is followed by the user.\n                        type: boolean\n                      blocking:\n                        description: Indicates if the viewer is blocking the user.\n                        type: boolean\n                      blocked_by:\n                        description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 5536, "end_char_idx": 8647, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "817026f8-8ddd-439f-8321-0e5ae9061df5": {"__data__": {"id_": "817026f8-8ddd-439f-8321-0e5ae9061df5", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0c57a3ae-ce77-4b6b-a420-599c800e0cd3", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "2b5be6ac31bcc85d062ee50f3323dbb7cab319411b58be46cb7aed7c68211486", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eb633423-48fa-4d43-8ab6-886f45e851f1", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "9ef527fe4c77f71ec309dc87b7bccc4f8ae10901bea2158685ee20a6dab26915", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "af971455-2c1a-434b-acb3-51094d9bfa1a", "node_type": "1", "metadata": {}, "hash": "1ba7c92044a2c3addbb8adb178277cf9c49e5a8c99bbe3676369af19c345a358", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                    type: object\n                    description: Adds context on the viewer's follow relationship\n                      with the user.\n                    required:\n                    - following\n                    - followed_by\n                    - blocking\n                    - blocked_by\n                    properties:\n                      following:\n                        description: Indicates if the viewer is following the user.\n                        type: boolean\n                      followed_by:\n                        description: Indicates if the viewer is followed by the user.\n                        type: boolean\n                      blocking:\n                        description: Indicates if the viewer is blocking the user.\n                        type: boolean\n                      blocked_by:\n                        description: Indicates if the viewer is blocked by the user.\n                        type: boolean\n              text:\n                type: string\n              timestamp: &id006\n                type: string\n                format: date-time\n              embeds:\n                type: array\n                items:\n                  oneOf:\n                  - &id007\n                    type: object\n                    required:\n                    - url\n                    properties:\n                      url:\n                        type: string\n                      metadata:\n                        type: object\n                        required:\n                        - _status\n                        properties:\n                          _status:\n                            type: string\n                          content_type:\n                            type:\n                            - string\n                            - 'null'\n                          content_length:\n                            type:\n                            - integer\n                            - 'null'\n                          image:\n                            type: object\n                            properties:\n                              height_px:\n                                type: integer\n                              width_px:\n                                type: integer\n                          video:\n                            type: object\n                            properties:\n                              duration_s:\n                                type: number\n                              stream:\n                                type: array\n                                items:\n                                  type: object\n                                  properties:\n                                    codec_name:\n                                      type: string\n                                    height_px:\n                                      type: integer\n                                    width_px:\n                                      type: integer\n                          html:\n                            allOf:\n                            - type: object\n                              properties:\n                                favicon:\n                                  type: string\n                                modifiedTime:\n                                  type: string\n                                ogArticleAuthor:\n                                  type: string\n                                ogArticleExpirationTime:\n                                  type: string\n                                ogArticleModifiedTime:\n                                  type: string\n                                ogArticlePublishedTime:\n                                  type: string\n                                ogArticlePublisher:\n                                  type: string\n                                ogArticleSection:\n                                  type: string\n                                ogArticleTag:\n                                  type: string\n                                ogAudio:\n                                  type: string\n                                ogAudioSecureURL:\n                                  type: string\n                                ogAudioType:\n                                  type: string\n                                ogAudioURL:\n                                  type: string\n                                ogAvailability:\n                                  type: string\n                                ogDate:\n                                  type: string\n                                ogDescription:\n                                  type: string\n                                ogDeterminer:\n                                  type: string\n                                ogEpisode:\n                                  type: string\n                                ogImage:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                      alt:\n                                        type: string\n                                    required:\n                                    - url\n                                ogLocale:\n                                  type: string\n                                ogLocaleAlternate:\n                                  type: string\n                                ogLogo:\n                                  type: string\n                                ogMovie:\n                                  type: string\n                                ogPriceAmount:\n                                  type: string\n                                ogPriceCurrency:\n                                  type: string\n                                ogProductAvailability:\n                                  type: string\n                                ogProductCondition:\n                                  type: string\n                                ogProductPriceAmount:\n                                  type: string\n                                ogProductPriceCurrency:\n                                  type: string\n                                ogProductRetailerItemId:\n                                  type: string\n                                ogSiteName:\n                                  type: string\n                                ogTitle:\n                                  type: string\n                                ogType:\n                                  type: string\n                                ogUrl:\n                                  type: string\n                                ogVideo:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                    required:\n                                    - url\n                                ogVideoActor:\n                                  type: string\n                                ogVideoActorId:\n                                  type: string\n                                ogVideoActorRole:\n                                  type: string\n                                ogVideoDirector:\n                                  type: string\n                                ogVideoDuration:\n                                  type: string\n                                ogVideoOther:\n                                  type: string\n                                ogVideoReleaseDate:\n                                  type: string\n                                ogVideoSecureURL:\n                                  type: string\n                                ogVideoSeries:\n                                  type: string\n                                ogVideoTag:\n                                  type: string\n                                ogVideoTvShow:\n                                  type: string\n                                ogVideoWriter:\n                                  type: string\n                                ogWebsite:\n                                  type: string\n                                updatedTime:\n                                  type: string\n                            - type: object\n                              properties:\n                                oembed:\n                                  oneOf:\n                                  - allOf:\n                                    - &id003\n                                      type: object\n                                      description: Basic data structure of every oembed\n                                        response see https://oembed.com/\n                                      required:\n                                      - type\n                                      - version\n                                      properties:\n                                        type:\n                                          type: string\n                                        version:\n                                          type:\n                                          - string\n                                          - 'null'\n                                        title:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A text title, describing the\n                                            resource.", "mimetype": "text/plain", "start_char_idx": 7702, "end_char_idx": 18067, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "af971455-2c1a-434b-acb3-51094d9bfa1a": {"__data__": {"id_": "af971455-2c1a-434b-acb3-51094d9bfa1a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0c57a3ae-ce77-4b6b-a420-599c800e0cd3", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "2b5be6ac31bcc85d062ee50f3323dbb7cab319411b58be46cb7aed7c68211486", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "817026f8-8ddd-439f-8321-0e5ae9061df5", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "f7c74c11ccb83dfff965950b0ec6c18b00a2dd7c603dd1c4655d524fd5ca1f6c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7197cdcb-b20e-4bf3-a6ad-a9f16fd03e40", "node_type": "1", "metadata": {}, "hash": "23a04483365d8bcc2b18a2d1ac96edd50ac2b76ebbbf7ad056f6abdb7ce9a7f4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the author/owner\n                                            of the resource.\n                                        author_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL for the author/owner\n                                            of the resource.\n                                        provider_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the resource provider.\n                                        provider_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The url of the resource provider.\n                                        cache_age:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The suggested cache lifetime\n                                            for this resource, in seconds. Consumers\n                                            may choose to use this value or not.\n                                        thumbnail_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL to a thumbnail image\n                                            representing the resource. The thumbnail\n                                            must respect any maxwidth and maxheight\n                                            parameters. If this parameter is present,\n                                            thumbnail_width and thumbnail_height must\n                                            also be present.\n                                        thumbnail_width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width of the optional thumbnail.\n                                            If this parameter is present, thumbnail_url\n                                            and thumbnail_height must also be present.\n                                        thumbnail_height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height of the optional\n                                            thumbnail. If this parameter is present,\n                                            thumbnail_url and thumbnail_width must\n                                            also be present.\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - rich\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to display\n                                            the resource. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities. The markup\n                                            should be valid XHTML 1.0 Basic.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - video\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to embed\n                                            a video player. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 18108, "end_char_idx": 27170, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7197cdcb-b20e-4bf3-a6ad-a9f16fd03e40": {"__data__": {"id_": "7197cdcb-b20e-4bf3-a6ad-a9f16fd03e40", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0c57a3ae-ce77-4b6b-a420-599c800e0cd3", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "2b5be6ac31bcc85d062ee50f3323dbb7cab319411b58be46cb7aed7c68211486", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "af971455-2c1a-434b-acb3-51094d9bfa1a", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "3976a79717d8cfec64673ee3b79258a5c2bb961e6375b7fd5e314d009e479a7e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e2529b19-1d41-43b6-bb7a-717c61ccde14", "node_type": "1", "metadata": {}, "hash": "d2c745055c34b05df38156a53e572587481b7019a7d17c71b53ebf72656e7c1e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - link\n                                  discriminator:\n                                    propertyName: type\n                                    mapping:\n                                      rich: '#/components/schemas/OembedRichData'\n                                      video: '#/components/schemas/OembedVideoData'\n                                      photo: '#/components/schemas/OembedPhotoData'\n                                      link: '#/components/schemas/OembedLinkData'\n                          frame: &id010\n                            discriminator:\n                              propertyName: version\n                            oneOf:\n                            - description: Frame v1 object\n                              allOf:\n                              - &id004\n                                description: Frame base object used across all versions\n                                type: object\n                                required:\n                                - version\n                                - image\n                                - frames_url\n                                properties:\n                                  version:\n                                    type: string\n                                    description: Version of the frame, 'next' for\n                                      v2, 'vNext' for v1\n                                  image:\n                                    type: string\n                                    description: URL of the image\n                                  frames_url:\n                                    type: string\n                                    description: Launch URL of the frame\n                              - type: object\n                                properties:\n                                  buttons:\n                                    type: array\n                                    items:\n                                      type: object\n                                      required:\n                                      - index\n                                      - action_type\n                                      properties:\n                                        title:\n                                          type: string\n                                          description: Title of the button\n                                        index:\n                                          type: integer\n                                          description: Index of the button\n                                        action_type:\n                                          type: string\n                                          description: The action type of a frame\n                                            button. Action types \"mint\" & \"link\" are\n                                            to be handled on the client side only\n                                            and so they will produce a no/op for POST\n                                            /farcaster/frame/action.\n                                          enum:\n                                          - post\n                                          - post_redirect\n                                          - tx\n                                          - link\n                                          - mint\n                                        target:\n                                          type: string\n                                          description: Target of the button\n                                        post_url:\n                                          type: string\n                                          description: Used specifically for the tx\n                                            action type to post a successful transaction\n                                            hash\n                                  post_url:\n                                    type: string\n                                    description: Post URL to take an action on this\n                                      frame\n                                  title:\n                                    type: string\n                                  image_aspect_ratio:\n                                    type: string\n                                  input:\n                                    type: object\n                                    properties:\n                                      text:\n                                        type: string\n                                        description: Input text for the frame\n                                  state:\n                                    type: object\n                                    properties:\n                                      serialized:\n                                        type: string\n                                        description: State for the frame in a serialized\n                                          format\n                            - description: Frame v2 object\n                              allOf:\n                              - *id004\n                              - type: object\n                                required:\n                                - title\n                                - name\n                                - icon\n                                properties:\n                                  manifest:\n                                    type: object\n                                    properties:\n                                      account_association:\n                                        type: object\n                                        properties:\n                                          header:\n                                            type: string\n                                          payload:\n                                            type: string\n                                          signature:\n                                            type: string\n                                        required:\n                                        - header\n                                        - payload\n                                        - signature\n                                      frame:\n                                        type: object\n                                        properties:\n                                          version:\n                                            type: string\n                                            enum:\n                                            - 0.0.0\n                                            - 0.0.", "mimetype": "text/plain", "start_char_idx": 25349, "end_char_idx": 34212, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e2529b19-1d41-43b6-bb7a-717c61ccde14": {"__data__": {"id_": "e2529b19-1d41-43b6-bb7a-717c61ccde14", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0c57a3ae-ce77-4b6b-a420-599c800e0cd3", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "2b5be6ac31bcc85d062ee50f3323dbb7cab319411b58be46cb7aed7c68211486", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7197cdcb-b20e-4bf3-a6ad-a9f16fd03e40", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "82a9098258227d45ad21bf6865695f401b6366c8352ae234fa445378c274a54c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "05c76a94-1c45-4a31-8e8a-e4774172a84d", "node_type": "1", "metadata": {}, "hash": "aa47cbfe924a2131c13b5d8bcc0b8d3069087612f74a31aacb4bd27fb1e76912", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                            - 0.0.1\n                                            - '1'\n                                            - next\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                          home_url:\n                                            type: string\n                                            maxLength: 512\n                                          icon_url:\n                                            type: string\n                                            maxLength: 512\n                                          image_url:\n                                            type: string\n                                            maxLength: 512\n                                          button_title:\n                                            type: string\n                                            maxLength: 32\n                                          splash_image_url:\n                                            type: string\n                                            maxLength: 512\n                                          splash_background_color:\n                                            type: string\n                                          webhook_url:\n                                            type: string\n                                            maxLength: 512\n                                        required:\n                                        - version\n                                        - name\n                                        - home_url\n                                        - icon_url\n                                      triggers:\n                                        type: array\n                                        items:\n                                          oneOf:\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - cast\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - composer\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                    required:\n                                    - account_association\n                                  author: &id005\n                                    type: object\n                                    required:\n                                    - object\n                                    - fid\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - user_dehydrated\n                                      fid: *id001\n                                      username:\n                                        type: string\n                                      display_name:\n                                        type: string\n                                      pfp_url:\n                                        type: string\n                            mapping:\n                              vNext: '#/components/schemas/FrameV1'\n                              next: '#/components/schemas/FrameV2'\n                              '1': '#/components/schemas/FrameV2'\n                              0.0.0: '#/components/schemas/FrameV2'\n                              0.0.1: '#/components/schemas/FrameV2'\n                  - type: object\n                    required:\n                    - cast\n                    properties:\n                      cast_id: &id008\n                        type: object\n                        required:\n                        - fid\n                        - hash\n                        properties:\n                          fid: *id001\n                          hash:\n                            type: string\n                      cast:\n                        type: object\n                        required:\n                        - hash\n                        - parent_hash\n                        - parent_url\n                        - root_parent_url\n                        - parent_author\n                        - author\n                        - text\n                        - timestamp\n                        - type\n                        - embeds\n                        - channel\n                        properties:\n                          hash:\n                            type: string\n                          parent_hash:\n                            type:\n                            - string\n                            - 'null'\n                          parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          root_parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          parent_author:\n                            type: object\n                            required:\n                            - fid\n                            properties:\n                              fid:\n                                oneOf:\n                                - type: 'null'\n                                - *id001\n                          author: *id005\n                          text:\n                            type: string\n                          timestamp: *id006\n                          type: &id009\n                            type: string\n                            enum:\n                            - cast-mention\n                            - cast-reply\n                            description: 'The notification type of a cast.\n\n                              '\n                          embeds:\n                            type: array\n                            items:\n                              oneOf:\n                              - *id007\n                              - type: object\n                                required:\n                                - cast\n                                properties:\n                                  cast_id: *id008\n                                  cast:\n                                    type: object\n                                    required:\n                                    - object\n                                    - hash\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - cast_dehydrated\n                                      hash:\n                                        type: string\n                                      author: *id005\n                          channel:\n                            oneOf:\n                            - type: 'null'\n                            - &id013\n                              type: object\n                              required:\n                              - id\n                              - name\n                              - object\n                              properties:\n                                id:\n                                  type: string\n                                name:\n                                  type: string\n                                object:\n                                  type: string\n                                  enum:\n                                  - channel_dehydrated\n                                image_url:\n                                  type: string\n                                viewer_context: &id012\n                                  description: Adds context on the viewer's or author's\n                                    role in the channel.", "mimetype": "text/plain", "start_char_idx": 34158, "end_char_idx": 43741, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "05c76a94-1c45-4a31-8e8a-e4774172a84d": {"__data__": {"id_": "05c76a94-1c45-4a31-8e8a-e4774172a84d", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0c57a3ae-ce77-4b6b-a420-599c800e0cd3", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "2b5be6ac31bcc85d062ee50f3323dbb7cab319411b58be46cb7aed7c68211486", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e2529b19-1d41-43b6-bb7a-717c61ccde14", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "00c5eeb43f9a63976507b562fdf31e1878651de62f78a61bd94d9df09cc8c64f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                                  required:\n                                  - following\n                                  properties:\n                                    following:\n                                      description: Indicates if the user is following\n                                        the channel.\n                                      type: boolean\n                                    role:\n                                      type: string\n                                      description: The role of a channel member\n                                      enum:\n                                      - member\n                                      - moderator\n              type: *id009\n          - type: object\n            required:\n            - reactions\n            - replies\n            - thread_hash\n            - mentioned_profiles\n            - channel\n            properties:\n              frames:\n                type: array\n                items: *id010\n              reactions:\n                type: object\n                required:\n                - likes\n                - recasts\n                - likes_count\n                - recasts_count\n                properties:\n                  likes:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      properties:\n                        fid: *id001\n                  recasts:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      - fname\n                      properties:\n                        fid: *id001\n                        fname:\n                          type: string\n                  likes_count:\n                    type: integer\n                    format: int32\n                  recasts_count:\n                    type: integer\n                    format: int32\n              replies:\n                type: object\n                required:\n                - count\n                properties:\n                  count:\n                    type: integer\n                    format: int32\n              thread_hash:\n                type:\n                - string\n                - 'null'\n              mentioned_profiles:\n                type: array\n                items: *id011\n              channel:\n                oneOf:\n                - oneOf:\n                  - type: object\n                    required:\n                    - id\n                    - url\n                    - object\n                    properties:\n                      id:\n                        type: string\n                      url:\n                        type: string\n                      name:\n                        type: string\n                      description:\n                        type: string\n                      object:\n                        type: string\n                        enum:\n                        - channel\n                      created_at:\n                        description: Epoch timestamp in seconds.\n                        type: number\n                      follower_count:\n                        description: Number of followers the channel has.\n                        type: number\n                      external_link:\n                        type: object\n                        description: Channel's external link.\n                        properties:\n                          title:\n                            type: string\n                          url:\n                            type: string\n                      image_url:\n                        type: string\n                      parent_url:\n                        type: string\n                        format: uri\n                      lead: *id011\n                      moderator_fids:\n                        type: array\n                        items: *id001\n                      member_count:\n                        type: integer\n                        format: int32\n                      moderator: *id011\n                      pinned_cast_hash:\n                        type: string\n                        default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                        description: Cast Hash\n                      hosts:\n                        type: array\n                        deprecated: true\n                        items: *id011\n                      viewer_context: *id012\n                  - *id013\n                  discriminator:\n                    propertyName: object\n                    mapping:\n                      channel: '#/components/schemas/Channel'\n                      dehydrated_channel: '#/components/schemas/DehydratedChannel'\n                - type: 'null'\n              viewer_context:\n                type: object\n                description: Adds context on interactions the viewer has made with\n                  the cast.\n                required:\n                - liked\n                - recasted\n                properties:\n                  liked:\n                    description: Indicates if the viewer liked the cast.\n                    type: boolean\n                  recasted:\n                    description: Indicates if the viewer recasted the cast.\n                    type: boolean\n              author_channel_context: *id012\n      next:\n        type: object\n        description: Returns next cursor\n        required:\n        - cursor\n        properties:\n          cursor:\n            type:\n            - string\n            - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 43776, "end_char_idx": 49433, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "700c380b-1748-4e10-b90c-0ebbde7e9321": {"__data__": {"id_": "700c380b-1748-4e10-b90c-0ebbde7e9321", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-channels.md", "file_name": "neynar_search-channels.md", "file_type": "text/markdown", "file_size": 7946, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2598f875-b30b-4020-b43b-9616f916613f", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-channels.md", "file_name": "neynar_search-channels.md", "file_type": "text/markdown", "file_size": 7946, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d0e303bbd4d23d17b2a9e7220f85e67c3ea9f539fc55ea6900551105501ad035", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9ee90095-c990-40a4-a1a6-8e924b99f958", "node_type": "1", "metadata": {}, "hash": "9d0c9b940e135b0c04a55010e78e0dd02d0fb493419219de7ca70c5a002aa1a6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# search-channels\n\n**Endpoint**: `GET /farcaster/channel/search`\n\n## Description\nReturns a list of channels based on ID or name\n\n## Parameters\n- `q` (query): Channel ID or name for the channel being queried\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- channels\n- next\nproperties:\n  channels:\n    type: array\n    items:\n      type: object\n      required:\n      - id\n      - url\n      - object\n      properties:\n        id:\n          type: string\n        url:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        object:\n          type: string\n          enum:\n          - channel\n        created_at:\n          description: Epoch timestamp in seconds.\n          type: number\n        follower_count:\n          description: Number of followers the channel has.\n          type: number\n        external_link:\n          type: object\n          description: Channel's external link.\n          properties:\n            title:\n              type: string\n            url:\n              type: string\n        image_url:\n          type: string\n        parent_url:\n          type: string\n          format: uri\n        lead: &id003\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid: &id002\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5325, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9ee90095-c990-40a4-a1a6-8e924b99f958": {"__data__": {"id_": "9ee90095-c990-40a4-a1a6-8e924b99f958", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-channels.md", "file_name": "neynar_search-channels.md", "file_type": "text/markdown", "file_size": 7946, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2598f875-b30b-4020-b43b-9616f916613f", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-channels.md", "file_name": "neynar_search-channels.md", "file_type": "text/markdown", "file_size": 7946, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "d0e303bbd4d23d17b2a9e7220f85e67c3ea9f539fc55ea6900551105501ad035", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "700c380b-1748-4e10-b90c-0ebbde7e9321", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-channels.md", "file_name": "neynar_search-channels.md", "file_type": "text/markdown", "file_size": 7946, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "55f6eb98867a15ee232b1705ac68aa48e28a3198cb97c87d33930b8ae6704327", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        moderator_fids:\n          type: array\n          items: *id002\n        member_count:\n          type: integer\n          format: int32\n        moderator: *id003\n        pinned_cast_hash:\n          type: string\n          default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n          description: Cast Hash\n        hosts:\n          type: array\n          deprecated: true\n          items: *id003\n        viewer_context:\n          description: Adds context on the viewer's or author's role in the channel.\n          type: object\n          required:\n          - following\n          properties:\n            following:\n              description: Indicates if the user is following the channel.\n              type: boolean\n            role:\n              type: string\n              description: The role of a channel member\n              enum:\n              - member\n              - moderator\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4326, "end_char_idx": 7945, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ad884085-f12d-4d88-b1ba-3f416ac85cf9": {"__data__": {"id_": "ad884085-f12d-4d88-b1ba-3f416ac85cf9", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-user.md", "file_name": "neynar_search-user.md", "file_type": "text/markdown", "file_size": 6996, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5852d18e-8e7d-4d5f-b076-8498e9714b1f", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-user.md", "file_name": "neynar_search-user.md", "file_type": "text/markdown", "file_size": 6996, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "157a8125a3b214169b4862cc2da2305204c77b3cd6d912860edf3ceb2d42b5dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a7ed84dc-df68-4a5d-9c19-c33cd2400962", "node_type": "1", "metadata": {}, "hash": "fed4c39c0214dafbdce593fa9eeac9fd444f9892b8ec1583498f0587522bd6ee", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# search-user\n\n**Endpoint**: `GET /farcaster/user/search`\n\n## Description\nSearch for Usernames\n\n## Parameters\n- `q` (query): No description\n- `viewer_fid` (query): Providing this will return search results that respects this user's mutes and blocks and includes `viewer_context`.\n- `limit` (query): Number of users to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- result\nproperties:\n  result:\n    type: object\n    required:\n    - users\n    properties:\n      users:\n        type: array\n        items:\n          anyOf:\n          - type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid:\n                type: integer\n                format: int32\n                description: The unique identifier of a farcaster user (unsigned integer)\n                examples:\n                - 3\n                - 191\n                - 2\n                - 194\n                - 19960\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id001\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id001\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id001\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 6195, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a7ed84dc-df68-4a5d-9c19-c33cd2400962": {"__data__": {"id_": "a7ed84dc-df68-4a5d-9c19-c33cd2400962", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-user.md", "file_name": "neynar_search-user.md", "file_type": "text/markdown", "file_size": 6996, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5852d18e-8e7d-4d5f-b076-8498e9714b1f", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-user.md", "file_name": "neynar_search-user.md", "file_type": "text/markdown", "file_size": 6996, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "157a8125a3b214169b4862cc2da2305204c77b3cd6d912860edf3ceb2d42b5dc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ad884085-f12d-4d88-b1ba-3f416ac85cf9", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-user.md", "file_name": "neynar_search-user.md", "file_type": "text/markdown", "file_size": 6996, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "142663df45bf7a97c1395fc70b7bf69144bc49cc3ae03c02001024d4063a6a63", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          - type: object\n            required:\n            - pfp\n            properties:\n              pfp:\n                type: object\n                required:\n                - url\n                properties:\n                  url:\n                    type: string\n      next:\n        type: object\n        description: Returns next cursor\n        required:\n        - cursor\n        properties:\n          cursor:\n            type:\n            - string\n            - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4887, "end_char_idx": 6995, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ee96270a-47f2-4cf9-9a9f-a8e3db290a13": {"__data__": {"id_": "ee96270a-47f2-4cf9-9a9f-a8e3db290a13", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/shared.md", "file_name": "shared.md", "file_type": "text/markdown", "file_size": 208, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "928e68cc-7792-4256-a025-c53311bf60a6", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/shared.md", "file_name": "shared.md", "file_type": "text/markdown", "file_size": 208, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}, "hash": "dc3cee809814716872256b6457757f864e333380df4dafa5f5d9dd196344b02b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Neynar API shared info:\n- API key is stored in env variable NEYNAR_API_KEY\n- it cannot be access from the frontend code and should be used only in the backend\n- create serverside functions to use the API key", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 207, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "70431359-b159-4f4d-9b34-8c7fb05e4882": {"__data__": {"id_": "70431359-b159-4f4d-9b34-8c7fb05e4882", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/other/wagmi_viem.md", "file_name": "wagmi_viem.md", "file_type": "text/markdown", "file_size": 3728, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "99274421-20d3-4808-8fd2-a4e9b82076fe", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/other/wagmi_viem.md", "file_name": "wagmi_viem.md", "file_type": "text/markdown", "file_size": 3728, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}, "hash": "a2572d6c1fcb48249171a165a728153131da7931ca33790749211b64508f3094", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Introduction to wagmi and viem\n\nwagmi is a cutting-edge TypeScript library built on React that simplifies Ethereum application development. It offers a rich set of hooks for wallet connection, contract interaction, and blockchain state management. By focusing on developer experience, type safety, and composability, wagmi provides an accessible yet powerful framework for building decentralized applications (dApps).\n\nviem complements wagmi by acting as a low-level, stateless Ethereum client. Designed with performance, bundle size, and developer productivity in mind, viem provides type-safe, highly optimized interfaces for interacting with Ethereum\u2019s JSON-RPC API and smart contracts.\n\nTogether, wagmi and viem form a robust stack for Ethereum development, catering to both high-level needs (via React hooks) and low-level blockchain interactions.\n\nRecent Updates and Migration Changes\n\nThe transition to wagmi v2 and deeper integration with viem marks a significant milestone in the evolution of Ethereum tooling. These changes enhance usability and performance but require developers to update their projects to align with the latest API design.\n\nKey Migration Highlights\n\t1.\tviem Integration:\n\t\u2022\twagmi now uses viem as its underlying Ethereum client, replacing the ethers.js peer dependency.\n\t\u2022\tviem\u2019s lightweight, TypeScript-first approach introduces better type inference and reduced bundle sizes.\n\t2.\tHook Renaming:\n\t\u2022\tHooks such as useSigner have been renamed to useWalletClient to align with viem\u2019s terminology.\n\t\u2022\tSimilar changes affect other hooks, e.g., getSigner is now getWalletClient.\n\t3.\tuseContractWrite Enhancements:\n\t\u2022\tThe abi parameter in useContractWrite now requires a const assertion to enable precise type inference for functionName and args.\n\t\u2022\tImproved API for dynamic argument passing during contract interactions.\n\t4.\tDeprecated Hooks:\n\t\u2022\tThe usePrepareContractWrite hook has been removed, simplifying the contract write workflow in favor of direct usage of writeContract from viem.\n\t5.\tImproved Error Handling and Types:\n\t\u2022\tviem provides better error messages, strict type enforcement, and an enhanced developer experience compared to ethers.js.\n\nWhy These Changes Matter\n\nThese updates prioritize:\n\t\u2022\tPerformance: Smaller and faster builds due to viem\u2019s optimized architecture.\n\t\u2022\tType Safety: Comprehensive TypeScript support with type inference for ABI definitions and contract calls.\n\t\u2022\tFuture-Proofing: A streamlined and modular API that encourages best practices in Ethereum development.\n\nExample: Updated useContractWrite\n\nBefore (wagmi v1 with ethers):\n\nimport { useContractWrite } from 'wagmi';\n\nconst { write } = useContractWrite({\n  addressOrName: '0xContractAddress',\n  contractInterface: abi,\n  functionName: 'mint',\n});\n\nAfter (wagmi v2 with viem):\n\nimport { useContractWrite } from 'wagmi';\n\nconst abi = [\n  {\n    name: 'mint',\n    type: 'function',\n    stateMutability: 'nonpayable',\n    inputs: [],\n    outputs: [],\n  },\n] as const;\n\nconst { write } = useContractWrite({\n  address: '0xContractAddress',\n  abi,\n  functionName: 'mint',\n});\n\nConclusion\n\nThe integration of wagmi and viem sets a new standard for Ethereum development by combining high-level abstractions with low-level control. While the migration introduces breaking changes, these updates unlock significant benefits for developers, including better performance, smaller bundles, and more robust type safety.\n\nBy adopting these changes and exploring their new capabilities, developers can build scalable, maintainable, and future-proof dApps. For migration details and updated documentation, visit:\n\nhttps://wagmi.sh/react/getting-started\n\nhttps://viem.sh/docs/getting-started.html", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3696, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"be98e7c9-4e90-49e2-81a7-07ac1fd35d92": {"node_ids": ["b224aa5d-5b20-4e74-ab95-37413dc20c6d", "16f92de5-2f38-4718-89d2-8d64f2d07972", "f3d3b81d-a2f6-4ccd-8c4b-1736bc161d29", "36e68ddb-d1a2-4f07-b231-a2cdee5be55e", "fa9f2621-dda8-4a65-9b71-e888083c5ff2", "c0615ec3-8c73-4e9b-9aad-e41283170e40", "ebdd7bdf-e134-4f1c-9463-bb9ba5c5c79c", "2a65a7c7-a69f-45fd-abac-11a4a7c5746d"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/degen/degen_api.md", "file_name": "degen_api.md", "file_type": "text/markdown", "file_size": 15673, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}}, "85e9bb06-be74-4639-94a1-004a8b9b2b54": {"node_ids": ["d9b04687-a1c6-43f5-bff3-7c99035b91fa"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/dune/dune_api.md", "file_name": "dune_api.md", "file_type": "text/markdown", "file_size": 880, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "8caffd14-0d92-4254-89fc-270d4d4cb2d2": {"node_ids": ["449b824c-79ea-42ee-bf70-601f801ac3e7"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/farcaster/farcaster.md", "file_name": "farcaster.md", "file_type": "text/markdown", "file_size": 1719, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}}, "aca655d4-48d0-4906-a1fc-59144bf88ae8": {"node_ids": ["e40006b3-5094-4355-87aa-c3b4887ff2c8", "e9472573-a72d-4cee-ac87-b5ada35366ab", "361611d3-d56e-4d79-a530-97066895fcbe"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/farcaster/frames.md", "file_name": "frames.md", "file_type": "text/markdown", "file_size": 10466, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}}, "5c79bfac-d660-49e6-8f49-a015b188b969": {"node_ids": ["dce3b43e-cc8b-4818-98b4-f0917ca105e4", "300c928a-fe98-41f3-93aa-668b157e538d", "9ab4a477-50a9-4d85-83af-cc895aeeef6c", "1df83d59-40b9-4e72-8ada-9a603f3666a1", "ae886e43-6248-4087-b0ef-e8205269e673"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "443aa579-8127-466b-bef0-cd9b6fca9960": {"node_ids": ["02b7d698-8726-4538-9623-eb5a6341c6d6", "97453c33-303a-478d-aa29-607143ed13a3"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-channels.md", "file_name": "neynar_fetch-all-channels.md", "file_type": "text/markdown", "file_size": 7879, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "97e4f35f-6bde-4b6f-8236-be5d706a4e46": {"node_ids": ["ea6047f5-dbcd-47cf-b040-3522d14d5587", "c3a62793-b06e-4cb7-adf6-bf2b4160b111", "ce4084df-57d8-4cc7-b3a3-7696cb2de52e", "54f00328-43e3-454d-91b3-e244c7acc80b", "a63ed03c-d6e8-4c7c-b828-c6add4a972f2", "edaba920-c91f-48ac-9994-a9501d25cd35", "4b9888f2-14c8-489a-b83e-98d23f3c1337", "dc64fef6-7908-4b23-8a41-f042fe7e53ba", "6e503e99-4014-42f3-a6ab-5708251a44da", "78938bf8-8cfe-4976-b8e3-1cbf6629b05f", "af4ccb0d-414f-420a-a190-d362b3bfca08", "bf76fe7b-669d-4672-abaa-cfe6307cb06a", "99e2ccae-6fbf-4b97-8d02-ff9238de3550", "d846f23e-2fc8-4086-993c-23bea8419b19", "8f7856d3-6413-4de0-95c2-779a72cbe8a3"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "7c561a0f-20f0-4cf6-b335-25671c5887d6": {"node_ids": ["0a2fe23e-55db-4de5-ac08-4cbe339f6379"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-authorization-url.md", "file_name": "neynar_fetch-authorization-url.md", "file_type": "text/markdown", "file_size": 400, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "be3c6b3a-b65e-4d4e-9879-6d718864d880": {"node_ids": ["36f25646-dabd-46c1-9f0d-25bf77fe6187", "ed2494eb-0d36-4fe7-8496-ae6052bc5fcd"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-ban-list.md", "file_name": "neynar_fetch-ban-list.md", "file_type": "text/markdown", "file_size": 6372, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "970fd705-2008-4368-9952-0b7a299d5685": {"node_ids": ["2504c661-7fb9-40d3-8573-8833b6268ebf", "99bdedcc-0a82-458a-8f21-0586be08b627"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-block-list.md", "file_name": "neynar_fetch-block-list.md", "file_type": "text/markdown", "file_size": 6616, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "6427ff42-612f-4121-b8a4-7a5f7c7ec8f5": {"node_ids": ["af4a8db1-7dd2-4463-a81c-1ca8f6cc5894", "a8585373-f66e-4eb1-808d-e85a03b1d4f2", "dde33635-f890-485b-bc29-a16db7f32c5f", "e64cab35-80ea-4c3b-8391-72913438ba57", "8fa46231-328a-4413-82ed-5f65454f935c", "476fc01b-a1b5-4be5-98d9-91f66f73b672", "cc756a10-eb5d-494f-a34a-2ffcf12fd13c"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "c3cab94f-0603-47d2-b3f3-4bc826e427c8": {"node_ids": ["d23bbf72-3cf5-4aa5-acdb-8969bb0e612a", "8fef941d-185d-4680-bcd2-77516555320c"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-channels.md", "file_name": "neynar_fetch-bulk-channels.md", "file_type": "text/markdown", "file_size": 7853, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "7349417f-d273-4fbb-a8e2-7d73519004aa": {"node_ids": ["c4fbab3c-c9ec-4704-bfd1-4cafc598f478"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-users-by-eth-or-sol-address.md", "file_name": "neynar_fetch-bulk-users-by-eth-or-sol-address.md", "file_type": "text/markdown", "file_size": 1264, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "f0898c9a-75ce-4de5-afef-397043b63c8d": {"node_ids": ["a2de6d7d-1cb7-4035-ae88-2c1b2c0a9303"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-users.md", "file_name": "neynar_fetch-bulk-users.md", "file_type": "text/markdown", "file_size": 5292, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "56e374f9-fc73-4572-916f-51bc5f6974af": {"node_ids": ["8487b2ec-4ed4-4a3a-bc75-28c74824a03f"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-cast-metrics.md", "file_name": "neynar_fetch-cast-metrics.md", "file_type": "text/markdown", "file_size": 856, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "fcff91c8-cebe-4135-8865-ef4a8daf384b": {"node_ids": ["1ed5b15b-7cf2-4d09-aace-cd8961c532d8", "838cd609-dd26-4182-b8b5-0ed34a33cf33"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-cast-reactions.md", "file_name": "neynar_fetch-cast-reactions.md", "file_type": "text/markdown", "file_size": 6993, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "db920cb1-1c33-4ffd-ab8d-42d6ded0b6b8": {"node_ids": ["329808fb-56a2-4f27-9675-89f8c8aa5ad8", "209ca758-f17d-4099-bd02-53e2124c728b", "1a750fa4-5467-4b6f-aa77-b3fb347c3883", "76015408-5fc2-4ab0-a11a-c9b7a2f2aff3", "e511f9a2-156d-44a3-9a9d-2304c96b45e7", "4c459735-9a34-449b-8a47-a07a20f5f886", "f7bddc7e-e3c5-4a55-9917-591a47a19856"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "2c6a9a9d-f5fc-4890-9cb8-cbee687e04f7": {"node_ids": ["89d7b5ed-84ad-4b4c-9789-6ba5849ef3c0", "bb5efd40-d06e-4010-a220-bc57f425958d"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-invites.md", "file_name": "neynar_fetch-channel-invites.md", "file_type": "text/markdown", "file_size": 6802, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "7f1f4b0d-1fd3-4fca-b61f-4bd7d2ff7ee0": {"node_ids": ["578dda64-2bfc-49d7-b8ca-12d89609831f", "bff4348a-86a9-43f9-9503-e1453bb23bfc"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-members.md", "file_name": "neynar_fetch-channel-members.md", "file_type": "text/markdown", "file_size": 9938, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "c7eb5e16-a4b3-45d2-979d-0f0c763eff50": {"node_ids": ["724f114f-6068-4305-a7b3-f415690422b7", "b1f07189-9788-4c79-961a-e896ed1ac29a", "a4d85283-3289-40b7-8059-61b7046a09e5", "393eac91-abe3-4c7c-ad6e-bc26e724b24e", "28fcd9f8-7f9c-4293-94a6-9e91d99f6702", "dfd27381-05c0-423d-bdad-60abfd0471c7", "ad23e2ff-0ade-4b91-8c39-339296e76fe3", "08140ac0-279e-4826-a4bf-739384ab10ae", "4240b43c-62d3-4648-b5c5-bc8349c41798", "25727a6b-2815-45e8-b262-bdfc5d8fe609", "2c7e82ec-d3da-4848-918d-22da95052611", "e913814e-a95d-4e7c-b918-d8567b4b1ef1", "479063a9-72b2-4fef-a8fd-9837d6a5853c", "8ca47cd8-b5de-4f52-a529-3c05633f6625", "91d28c67-874e-4318-a623-c86cf5ecc401"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "4bb52ffe-b46f-49f5-ba16-28fae42cda91": {"node_ids": ["5020c5c5-bcf8-4620-bba9-a1b6b1fc9cbb"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-composer-actions.md", "file_name": "neynar_fetch-composer-actions.md", "file_type": "text/markdown", "file_size": 2132, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "4f32464f-b65e-41e6-9a92-cdce7ff313ea": {"node_ids": ["975fbbfe-c223-4437-bed8-3199a07b3478", "a433ea1b-c232-4793-b983-6465f268cc7d", "9d320dac-f938-4a5e-8e74-5313e3f70bb4", "b156501d-6ff0-4ea1-a023-742be0cebd2d"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "5b06faa0-7f52-4c18-bd34-af9b4a9ea686": {"node_ids": ["a5c075f8-2c2a-4b8b-afb3-77cc5b42ae03", "50e9e701-b63a-4adb-a9b9-13401b0a6950", "63169379-b403-4430-a4da-98f0ddcda751", "0b292042-67de-4ed2-a1b8-539b4fcad411", "c453bb53-2b3f-4417-ac8d-aebe97791352", "50da09b0-e801-4283-8c10-f121c4c90b43", "bef25572-2a77-4ab6-b4e0-3dece54b4e8f"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "4546f37a-6116-4f95-b1cc-d1c1c6d3c197": {"node_ids": ["2d229f0f-d836-4864-859f-1618decc0d2d", "d42d3feb-9822-4239-a18c-b93c98854906", "da90dd0f-d760-4850-bfa0-19742a9d2edb", "590a69e2-5038-4c8b-82ca-0cf17add0c62", "b4ac11c7-bc93-4130-b165-415f6fb267e2", "5b2b2af8-231f-4e26-870e-7921a12475b9", "c98eade1-b599-440c-845c-bb0465015e8f"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "78cd45b9-c648-4b06-9121-1454b4a0e872": {"node_ids": ["2c08892d-dfc3-4c5c-9fe9-3c7138c3f002", "049d6fc5-8010-4b03-82cc-a85533ab751f", "c36628eb-7882-41e5-abf9-8cef42e679b5", "d7b5ab21-d2ad-430d-868b-4259eb7aba03", "64f46dab-e7fe-4d9d-8c8d-04240ea453b6", "90652fc0-d472-4c4d-a6be-01d3e0014b28", "42136b28-94d0-4d61-aae9-d32c8e1e6250"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "28b6e132-69f6-4b82-9ce8-0c6ddaa3101b": {"node_ids": ["97874739-7d53-4d23-a10d-29028a6a3200", "1db1089f-1035-4da4-8b88-10ed656a8316", "33ce1143-6f92-4d54-8d25-376555ecdb34", "e714b8eb-c5e0-495d-aed2-a60465a79271", "0426bcea-336d-470b-9440-df98d4d105fc", "e23f2fcb-b6e0-42a3-b5a9-21ea48728623", "1689833e-32a1-4be9-b4a8-d174b80077cd", "8cf394a7-e640-4d55-97bd-1571a7fc5c83"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "9714bf0e-f68a-4e29-acbb-2f45b68e1e31": {"node_ids": ["47bb9e4f-32a6-42ea-9997-178a75ea05db", "8c140788-68ec-40e4-b5d7-84c3bd80e9b9"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-follow-suggestions.md", "file_name": "neynar_fetch-follow-suggestions.md", "file_type": "text/markdown", "file_size": 5668, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "1650a337-55f4-4296-afe0-5724ee00fa47": {"node_ids": ["bec31f46-6982-4be1-a58b-a1cf99eac827", "6198d3d5-c02f-4fc7-bf30-833d439a8fbb"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-followers-for-a-channel.md", "file_name": "neynar_fetch-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 5712, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "eddce048-724b-46f1-a817-d0c000e9602e": {"node_ids": ["b3e0828a-e7cb-4f05-aaac-b629359bee45"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frame-catalog.md", "file_name": "neynar_fetch-frame-catalog.md", "file_type": "text/markdown", "file_size": 4732, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "5847923f-bb29-473f-8b21-c5af1b9aef7c": {"node_ids": ["a4d7874d-d430-4ee0-8b08-985e55df4388", "4739ad3a-9681-4601-9197-1a2a94eb5ec3"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frame-meta-tags-from-url.md", "file_name": "neynar_fetch-frame-meta-tags-from-url.md", "file_type": "text/markdown", "file_size": 6687, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "409be0c4-4d7c-4334-be34-033907d218ef": {"node_ids": ["c49e60a3-7542-41c9-a573-ae7963a37c56", "3064e34f-6016-4870-83db-8f9f3a49ffd6", "ec1e0243-7f36-4785-aa1f-601ad31bdf75", "aef21a3f-44e6-45b0-9e8e-e69d1d55a215", "f4ee5b94-c677-4e76-8c2c-1b8b13908cb9", "24946620-e2bd-4be8-9bfd-1fbe94d0e901", "cd0c2d95-ba59-4763-8828-359496f9279a"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "d59aaf51-68ba-445a-a31e-9207cef6e3a4": {"node_ids": ["f50412a1-0676-4321-a320-b2ba079598ed", "4a871066-1cfd-4eed-980d-77e5e22d3ac6"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-mute-list.md", "file_name": "neynar_fetch-mute-list.md", "file_type": "text/markdown", "file_size": 6430, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "72b8515f-4297-416b-a83b-786bb0e9a763": {"node_ids": ["1e3ffdca-8c7e-4652-8791-7e38af3e8b39"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-neynar-frames.md", "file_name": "neynar_fetch-neynar-frames.md", "file_type": "text/markdown", "file_size": 3946, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "55b6eb42-fb70-4251-b568-5f1336d0823d": {"node_ids": ["a0d95bc1-11dd-44ae-a852-97091b102b26"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notification-tokens.md", "file_name": "neynar_fetch-notification-tokens.md", "file_type": "text/markdown", "file_size": 1274, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "498c0339-c99b-46c6-9da7-f40bb8231d16": {"node_ids": ["8554bc4b-e62e-4a32-a490-d887fe491494", "b8e9c05a-3ec2-44bf-83e3-40e6eafcf646", "117d8be0-a941-469e-b96d-b1f41e5be856", "46d45469-0c91-4159-aa8c-eccf9f71eca1", "e8bed4e1-1032-4ddf-bc44-8086a16dedba", "fb919233-5614-4352-889f-b2e98a96fb4a", "6b5210ac-6af6-413c-8c27-616a5abb1127", "9e5438a6-3abb-4d15-9195-20bf71b5d581", "faef0c51-e77a-441b-b857-35f17aa1ee2e", "13f0b994-59d6-4167-a3b0-9136cec76a3e", "96d9ca5f-1e72-4008-ad58-017d5f8c0a5a", "ede76c0e-c452-4365-b09c-d192bac32b0b", "4e31c8ec-a3d6-46b1-bab2-6b187c82b25c", "1ccdcbb8-b5dc-4faa-a112-ecf3c980be9e", "ea493015-5381-427d-a81b-b8e1ff449a68"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "12ee5ab1-82af-4906-a4b0-a17830a35dc1": {"node_ids": ["203ff23a-d255-406b-9940-b506e1f33b0d", "ada81e08-098b-4692-8bf7-b8bc75640550", "71dcad2d-3f94-4729-a722-115b9c441890", "9deb15f4-7e25-4ab3-8cac-6cf14fb7d9b4", "5265d51a-ca90-4b1c-a5ce-c53bd7202d8d", "0998f06f-797f-4c4e-bd23-65a669e1087d", "69516814-07a2-4e11-b12e-19f7699e6a82"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "c1f53172-b5b2-4faa-b806-d55395f24284": {"node_ids": ["ec2801d3-b041-4b73-a415-d9cf13e15153"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-power-users-lite.md", "file_name": "neynar_fetch-power-users-lite.md", "file_type": "text/markdown", "file_size": 664, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "7647f46b-342e-4dd8-b042-3bfaf2bc0717": {"node_ids": ["18850c5c-ef6d-4824-b7a1-b25d617032d2", "faba5244-e35b-4022-ae99-d77817f348aa"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-power-users.md", "file_name": "neynar_fetch-power-users.md", "file_type": "text/markdown", "file_size": 5521, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "a52aba7f-2f91-44e4-bb88-604b60435ad9": {"node_ids": ["084f86b0-d2c2-4ecc-9b6d-49db3f53bdf8", "16577123-accf-4c68-9a73-5c47b6905071"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers-for-a-channel.md", "file_name": "neynar_fetch-relevant-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 7009, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "5b0a8fa8-6d08-4e30-acae-7b22be6c937d": {"node_ids": ["93cb844f-bbe3-45b6-b1ec-9e1c18df074b", "13be11fd-c002-47d3-b2c1-071339f08893"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers.md", "file_name": "neynar_fetch-relevant-followers.md", "file_type": "text/markdown", "file_size": 7000, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "24935a9d-0ae4-440b-b953-5d217bec2e89": {"node_ids": ["46ba6189-c447-424b-afa7-3f276e58e2ac", "36803f1e-0729-405a-bf44-1f1847fbd3aa"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-fungible-owners.md", "file_name": "neynar_fetch-relevant-fungible-owners.md", "file_type": "text/markdown", "file_size": 5860, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "8e61ef0d-2fc3-4c00-9d0a-821514a1aebd": {"node_ids": ["3e230300-b33c-4029-b775-96238d35efc6", "6f028d34-ef15-4a67-8ab5-d89b0dce3731", "3f60c2b2-3f69-42f7-af10-027741125f46", "671ca948-695b-4511-8945-1e269db3803b", "12d77081-1b8e-4e65-b0bd-2a8f4d1e45ae", "0aa7e29b-6bc4-4fa3-933e-543ebcaad5bf", "40acee70-481e-4ad0-97c3-3dcd248e9c3f"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "1d3ffb40-bad4-4f35-a5b3-443cfe14b6b3": {"node_ids": ["ed8c0b97-e122-47df-b2cf-4caca11f7135", "3092330e-9fdb-4e35-a70d-11f2ef397ace"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribed-to-for-fid.md", "file_name": "neynar_fetch-subscribed-to-for-fid.md", "file_type": "text/markdown", "file_size": 10101, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "178a7c9a-6b41-4b42-bf7b-00921368bae5": {"node_ids": ["7421fee0-9425-4180-9f5a-ff0989b9aa9e", "4b1abe5f-c5f0-4f76-aef0-465daed7d680"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribers-for-fid.md", "file_name": "neynar_fetch-subscribers-for-fid.md", "file_type": "text/markdown", "file_size": 7312, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "398510a7-0b3f-4e24-ae6c-f3a4180f833e": {"node_ids": ["93ce0b4b-405e-4e02-beef-e5b737c0ec8e"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscription-check.md", "file_name": "neynar_fetch-subscription-check.md", "file_type": "text/markdown", "file_size": 1118, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "ce30f5c1-8d7b-483a-b46a-35dcad801512": {"node_ids": ["9f26f686-b339-4d20-99b6-41d617087cba"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscriptions-for-fid.md", "file_name": "neynar_fetch-subscriptions-for-fid.md", "file_type": "text/markdown", "file_size": 4334, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "ce76623c-be70-411d-b117-ebb37e1f2f47": {"node_ids": ["2c23eb0f-2057-4a6e-9d4b-420367a85b45", "7d36a4fa-8830-470b-b0aa-f44d3fcc2790"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-channels.md", "file_name": "neynar_fetch-trending-channels.md", "file_type": "text/markdown", "file_size": 9294, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "44ff65cc-54ff-45ff-a0f4-6dd31e0426a2": {"node_ids": ["eeb4de19-cd16-4e4d-a4b3-eb2e40ce1793", "36fc3c88-bb9d-4ec5-af0a-e9846fc01d90", "1d0d3144-9db0-42e7-8cf1-9a1cb7428a12", "e54ad82c-fff5-4cee-a207-49f992ae0633", "29aab2ad-e355-46f2-a363-55ee743e3f7e", "6681d6ad-21f3-488b-9ab2-02e7249d68d2", "55439464-c6b4-4754-8ab1-3ce6baaa091e"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "939b4bde-b0f8-40eb-aae3-6b09cb3a29a8": {"node_ids": ["61224a1d-4fb3-459a-85e3-c58485824cfa"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-balance.md", "file_name": "neynar_fetch-user-balance.md", "file_type": "text/markdown", "file_size": 3777, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "98e65e4e-7f3e-4748-9516-6d8f8da866a0": {"node_ids": ["0f21b5d9-9b12-44fd-bcd7-b777e9c15a55", "0ff32025-cf8c-496f-88a3-a074d0dea92b"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channel-memberships.md", "file_name": "neynar_fetch-user-channel-memberships.md", "file_type": "text/markdown", "file_size": 9855, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "9adfac0b-d555-4e13-ae0c-95797fa3df22": {"node_ids": ["83a9fbbb-0b40-4d0d-9b87-7ea77488dd2b", "23f49b19-de2f-41eb-a4fd-47ee017ecf2f"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channels.md", "file_name": "neynar_fetch-user-channels.md", "file_type": "text/markdown", "file_size": 7939, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "ae0cec2c-5c1e-4056-925b-037774210e3e": {"node_ids": ["c55451f5-8d00-4fdb-909c-cd2456895f50", "b195c5f4-a7ef-46c4-b5ec-689d847a7031"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-followers.md", "file_name": "neynar_fetch-user-followers.md", "file_type": "text/markdown", "file_size": 6528, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "b515e0f6-863c-4266-9a76-df6068f22897": {"node_ids": ["556a32c4-58bc-4741-b284-c5c44b307355", "642ced32-df36-483d-93c9-38bdaa6eae8d", "6770a7f8-0f89-487c-b7fa-c6ce6058b3db", "793bda9b-b2ab-43ef-87e0-8511388ec865", "8b6f6867-cdda-49ae-95bb-91681f098455", "8c73ad8d-ac05-4fbd-bb6a-7b6de1c634e6", "b2da5f0e-a54e-46d5-840c-2a9c80f5c993"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "23ee1484-af0d-48e5-bab2-814c7ca349fc": {"node_ids": ["daab3ef8-10ba-48a5-8683-2c73c19850f5", "266588b2-a06f-4947-a964-4bcd369c6aaa"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following.md", "file_name": "neynar_fetch-user-following.md", "file_type": "text/markdown", "file_size": 6593, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "d87903c7-0fdd-425c-86cd-8ab5350884a0": {"node_ids": ["c88c2f92-1710-4400-a308-08a412f1add8", "32cc1f06-678c-42c3-9718-a3a5ffcc995c", "c252acca-0de6-4410-a411-d1af5d611055", "823fe4ae-7a67-45c1-8a30-e416e6f69b5b", "ca38417f-9889-4237-bc4e-b36a231748d8", "f28d5c05-215c-4c21-a9f7-cbbb067c2f38", "af3776e5-324b-4b12-b101-ffafee03f34a"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "b307c9d7-d78e-4ad4-95d3-414e7a7d1834": {"node_ids": ["c38fb932-294b-43c0-8c70-3815b647d56e", "a7543f97-15b8-4993-bfa0-b120a7ba5ab2"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-active-channels.md", "file_name": "neynar_fetch-users-active-channels.md", "file_type": "text/markdown", "file_size": 7942, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "004fa39f-8aa7-4f4e-9a1c-39d8241d7259": {"node_ids": ["a977fcd2-472a-4f2b-97b9-909006a6d797", "db3dee86-3066-40ad-a64a-0e79ff2f78e8"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-by-location.md", "file_name": "neynar_fetch-users-by-location.md", "file_type": "text/markdown", "file_size": 5714, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "ee3206c5-4ad5-4890-a5c9-36b47c327d9c": {"node_ids": ["70936f0e-5134-4f63-8286-81fb8017729a"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-validate-frame-analytics.md", "file_name": "neynar_fetch-validate-frame-analytics.md", "file_type": "text/markdown", "file_size": 2117, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "9ac152c5-f50f-4a6d-835d-0d01b9276191": {"node_ids": ["7bae3697-e225-4796-af64-d9627bea7eb4"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-validate-frame-list.md", "file_name": "neynar_fetch-validate-frame-list.md", "file_type": "text/markdown", "file_size": 290, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "bdb922e5-53be-45b0-a527-1a61b598b632": {"node_ids": ["e4faa00a-7507-49ed-87f1-d42143b179d5"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_follow-channel.md", "file_name": "neynar_follow-channel.md", "file_type": "text/markdown", "file_size": 205, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "261e5497-18e7-48ce-862b-4095551c0cd0": {"node_ids": ["9be8feac-f99a-446a-803a-db52c45ce30d"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_get-fresh-account-FID.md", "file_name": "neynar_get-fresh-account-FID.md", "file_type": "text/markdown", "file_size": 278, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "39d7a9b3-1e56-4cfe-bb94-659ac50e28d7": {"node_ids": ["21f0c4f3-b711-4de4-a6fd-eea4c2c69759"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_invite-channel-member.md", "file_name": "neynar_invite-channel-member.md", "file_type": "text/markdown", "file_size": 229, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "f947c0c7-a296-4e50-a8aa-3fe254075d68": {"node_ids": ["4367a247-7bc0-4a2a-8d0b-f5ed9bb46d9f"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_is-fname-available.md", "file_name": "neynar_is-fname-available.md", "file_type": "text/markdown", "file_size": 276, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "82875dee-f7cd-435d-bbf7-b4de07fbb1f5": {"node_ids": ["c945aea2-b9b6-4fe4-afac-3606cafee345", "dac6fb09-c264-42a1-b430-c7f9591a4a8f", "c8b2070a-b542-4e82-9237-39e84e6a00e4", "17aac1cd-969c-4118-b0c3-9afaa407b8cc", "45d0dda5-b12c-486b-9554-bde878dba12d", "9e05029d-171e-4433-b15c-4d60a331a252", "56bbd500-8234-4ad6-b99d-ce2b2a5c9aa0"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "1f108b07-b30d-48cc-ad09-75f3ac65eb06": {"node_ids": ["97553b2e-c7f1-4b02-b26a-0da17c89e4bb", "03ee2891-e554-405d-b9f8-c08c32890b07"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation-summary.md", "file_name": "neynar_lookup-cast-conversation-summary.md", "file_type": "text/markdown", "file_size": 6704, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "2517957b-aaed-4bc5-9a18-99e9c29716f1": {"node_ids": ["df415cec-5072-438b-be34-5b99a22473bc", "dc40887f-b974-485b-939e-c25bafc0e28b", "8bc7519b-d495-4b32-a879-a93f9647c39a", "3e6cd3b0-d562-4344-90e6-2fab8892caba", "76c29a58-558f-4c48-96c3-51050bd970eb", "9c7b96ce-ba12-42f1-8ce5-286571996bdb", "d425a0d7-2793-4fdc-9817-f88199708214"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "3b0d5bc4-34b4-42e2-8b8e-14c8562acff3": {"node_ids": ["81d9dc81-d34e-4eb8-ae8a-b19fdf24c305", "3640dcbb-9203-441f-9500-645d60013da9"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-channel.md", "file_name": "neynar_lookup-channel.md", "file_type": "text/markdown", "file_size": 7300, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "c0158aed-8723-4d76-aa49-eadd831d5ab5": {"node_ids": ["8be81a61-b2af-4028-afc7-e6c26907c12a"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-neynar-frame.md", "file_name": "neynar_lookup-neynar-frame.md", "file_type": "text/markdown", "file_size": 3783, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "677d6e97-90eb-447f-8058-b9482ea54f95": {"node_ids": ["394cdeb3-0a91-4a42-9d1a-ff1106e31142"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-by-custody-address.md", "file_name": "neynar_lookup-user-by-custody-address.md", "file_type": "text/markdown", "file_size": 4895, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "a3c16477-2926-4c75-b592-4cef083158db": {"node_ids": ["5de23fc6-3f65-4a3a-a675-885449f8cb53"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-by-username.md", "file_name": "neynar_lookup-user-by-username.md", "file_type": "text/markdown", "file_size": 4927, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "39b547bb-804f-4f7a-8031-79b9b52f27be": {"node_ids": ["7ad51c97-bf42-4b66-9e04-a231da6ae3d8"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-storage-allocations.md", "file_name": "neynar_lookup-user-storage-allocations.md", "file_type": "text/markdown", "file_size": 1451, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "ea0d6271-e730-4ee7-9b0f-4bfe425c7d0c": {"node_ids": ["71b9cd2f-4872-49e9-8658-78206b30fab7"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-storage-usage.md", "file_name": "neynar_lookup-user-storage-usage.md", "file_type": "text/markdown", "file_size": 1207, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "8f0bbc13-f09e-4868-b5e0-828f7d848621": {"node_ids": ["e5665930-bc86-4b5d-b6de-7971d13c429a"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_remove-channel-member.md", "file_name": "neynar_remove-channel-member.md", "file_type": "text/markdown", "file_size": 263, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "2c130b57-4957-4ad1-b83c-79aa855d2c71": {"node_ids": ["654184e5-62f1-46a8-bc9c-a91dccbe7208"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_respond-channel-invite.md", "file_name": "neynar_respond-channel-invite.md", "file_type": "text/markdown", "file_size": 236, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "0c57a3ae-ce77-4b6b-a420-599c800e0cd3": {"node_ids": ["fdc231e1-8a6c-4ada-8263-03e6fa57a516", "eb633423-48fa-4d43-8ab6-886f45e851f1", "817026f8-8ddd-439f-8321-0e5ae9061df5", "af971455-2c1a-434b-acb3-51094d9bfa1a", "7197cdcb-b20e-4bf3-a6ad-a9f16fd03e40", "e2529b19-1d41-43b6-bb7a-717c61ccde14", "05c76a94-1c45-4a31-8e8a-e4774172a84d"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "2598f875-b30b-4020-b43b-9616f916613f": {"node_ids": ["700c380b-1748-4e10-b90c-0ebbde7e9321", "9ee90095-c990-40a4-a1a6-8e924b99f958"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-channels.md", "file_name": "neynar_search-channels.md", "file_type": "text/markdown", "file_size": 7946, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "5852d18e-8e7d-4d5f-b076-8498e9714b1f": {"node_ids": ["ad884085-f12d-4d88-b1ba-3f416ac85cf9", "a7ed84dc-df68-4a5d-9c19-c33cd2400962"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-user.md", "file_name": "neynar_search-user.md", "file_type": "text/markdown", "file_size": 6996, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "928e68cc-7792-4256-a025-c53311bf60a6": {"node_ids": ["ee96270a-47f2-4cf9-9a9f-a8e3db290a13"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/shared.md", "file_name": "shared.md", "file_type": "text/markdown", "file_size": 208, "creation_date": "2025-02-18", "last_modified_date": "2025-02-18"}}, "99274421-20d3-4808-8fd2-a4e9b82076fe": {"node_ids": ["70431359-b159-4f4d-9b34-8c7fb05e4882"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/other/wagmi_viem.md", "file_name": "wagmi_viem.md", "file_type": "text/markdown", "file_size": 3728, "creation_date": "2025-02-19", "last_modified_date": "2025-02-19"}}}}