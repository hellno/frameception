{"docstore/metadata": {"b48593f2-ed3e-4266-882d-ec1d883803a2": {"doc_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"}, "9b054b66-ca01-49a9-9d7d-0ee8485abdc2": {"doc_hash": "bad59bddc70e6fc4cf1de6c6e55cb6110fdba4c33c0112bc39f65b1242b1ff36"}, "efc7ce4b-e652-4f41-8ad4-42370f1a58fd": {"doc_hash": "d19e4f3e7d6f951dbf6be0d75325739d301d75574ef8b643b84a7ed70e240d8b"}, "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c": {"doc_hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285"}, "2271936c-673f-462f-8cf8-ea5ec83a3d50": {"doc_hash": "f1abf830633499ceb94d3c8224a67dddd145209e16b9b76a9658426418e5b7ab"}, "70f168d9-009b-4805-8bbd-774229708a2e": {"doc_hash": "7090eaf69d87fc7ab5db7863e175f7a11fc584193e8947dfa32fa3eacd25f0de"}, "9f8417f3-5a22-4b2b-8195-711d5946f41b": {"doc_hash": "d199782ba01b5f5e1d802bcb908ef9e910bc64b7459945f393926466057acd2e"}, "c04b84e4-ad03-403a-b1aa-d58f3520624b": {"doc_hash": "5a518643069dce450a2cea05749cebcd714105fc61b56f80733f1c7ab7ffdf99"}, "80c6973b-abe6-4e91-ba5a-effb7ff66598": {"doc_hash": "40fd484fa3f43c4e34460b463ea7ed2e5d27ac6b517a91b6514369942d6d9ef5"}, "de1a1071-d1f5-4488-a9d5-6c573089538b": {"doc_hash": "af281357de40999493a733dd171b18be97bf03e8489e322b58150aa76a724ca4"}, "220e9856-b60b-41d1-b139-e7e15ac094c8": {"doc_hash": "2d2da2c9bc3f085cf4280bb21d1edab1abaf39328c1de0abfa9ffb3a3d4befd3"}, "98a73a61-96f1-47cc-8c05-e1b7dddacdcc": {"doc_hash": "eb465aa458287114ae6e23dcf1237f51ffbf72bf41615ae686bd51eab3a83fc9"}, "242e5282-687d-41c6-a785-f7e986ebdfa2": {"doc_hash": "9938ed5bc11fe5871587dcbe6d3dc4901b9e8664bf345bbf9a1e16d067a66371"}, "2af4645b-a548-4241-a7d0-d319a2a700ba": {"doc_hash": "59a92129b252d843d1e98b9857cf87e54f6ac5c2d616808d992e020943480328"}, "6183c71c-576a-4d8d-b5a3-3d9d1cec4c03": {"doc_hash": "eb00a041a0cc8a0238fda604cdf00143b4abdebc0a6920e7d3a183cabcaacd87"}, "a02b6dd6-999b-443b-80c2-48582c81ec47": {"doc_hash": "c7ab9d7c790ea277589c976dd8aa11242f9ffba6c34044ee0178c147efddf4bd"}, "facf980b-c336-4b8e-b6f6-63af1c3941b1": {"doc_hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8"}, "a12e66c5-3251-4dc2-b0d0-a807e2d3eb8e": {"doc_hash": "2a0f1442e457e6c3953ac9cfab265843ce6aedfa1530ba3a76fbf0aa2993b320"}, "4e43eb19-3a56-4808-bd92-9f9cd86dae61": {"doc_hash": "e4225998885746169a1b178fd6fdc12ca0bf6cadde6b74155f06d6f7bbf8a606"}, "48362c28-add9-4247-918e-7b63f8b7427c": {"doc_hash": "deae3f2702c68fb55a1c2e58ef4c5795f9b980d301e244f90a1cb6c3dbcd08b0"}, "4c911618-3208-4176-ac5e-e33c757deeda": {"doc_hash": "f6fbe03a9abd15d7e0b974dad5d3fca8061a50213aba41802d067292533bf06e"}, "a493eef0-c14f-4b1d-8f1c-032c0fe859bd": {"doc_hash": "d930ea6153b3d60cc2393590da00e149d44276e89d5222f9812b72640ccc6898"}, "a3183841-210f-4f53-8d51-622c70d427e8": {"doc_hash": "5bcd5a619ec5ea1b6c74ae9a30c7a8596b0ef24b8d3988b0746a4e1b61502174"}, "951c8c62-f569-456f-aa6b-9a389d6d4772": {"doc_hash": "819747f1039d3d8fba7c122de0199c55c7d08ecd90b2c0eab58e1a974f2b6d1c"}, "0c3d6bce-267c-49a7-8e62-749aa5ac90cd": {"doc_hash": "b4f8b01d7f79d15a323ea1a2b16d3e9e489dbdbdaae33d78debec6d90faf9f03"}, "f3675b9c-2725-43d9-855c-9d80f9896275": {"doc_hash": "45e27a36dc612fb311f21924dd794a0cd21b4aec0b494e25ef63b2e1024e8d76"}, "74793ae7-2e0b-43e1-b2e0-c974182ddee6": {"doc_hash": "cb4b0b8f349201e7d57ada650ce2ebc8ce256f1102833c3bc020560cf5a4828a"}, "babf25b7-4762-43b1-bd99-bed26c60a2a7": {"doc_hash": "7650a3268912e139f8b9d679d1cb33de81ac932f35e602989a77dc8896f420cc"}, "1ff9fb3d-a03c-4586-b3cd-cec5a4cb6f19": {"doc_hash": "9d6bb4086248d06accae3c1baaa34cc477186c85167706eb476daddada9f70dc"}, "02d83d0b-7bcf-4f2d-a9e1-f16922bdd0e5": {"doc_hash": "31bbf03643d0ad19d58fe8ec945eaa893bf004124d3aaa3858b61be6070ab3b5"}, "3bf3e08c-dadd-4e67-ae29-bc1b8831c917": {"doc_hash": "a738d920a21a7cc7eab708e0581a204e156c8a54b1a74e10e7c4894f0e2866de"}, "27098a12-910d-4a45-bb4a-cf81fa0396dc": {"doc_hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a"}, "fdae7d65-0b77-4e7e-98a6-a56375798dde": {"doc_hash": "d84013fee861369e164a15d86fea703b4c2dcc498618677bb000a02170fb7b16"}, "d2df5bc0-bc8c-4f7d-bf68-f227c1fe6e3d": {"doc_hash": "fdafa2d4f69026fa03004cd0a8297be7080a7d7a837b7055677fa9f701d931c8"}, "0229706e-3ab3-4de6-80cf-2adbfce12529": {"doc_hash": "6a83066bf527405de68601ca93192c62fe6c2e800e123b38f028abddd33e678c"}, "c68543cd-99fe-4c67-ad79-6f77f5afdf64": {"doc_hash": "5365d082cca8306f08753ad43aaf1783cf41951ab52ed8d98b616ca36b8f24ad"}, "4c84833b-95a6-457f-9999-f6f1e212a3ad": {"doc_hash": "69d45480ee13be1cfcb65b4360d6d4e683505ccb36d8489c7f28e09a3e036a0a"}, "741d6fed-4413-463d-a6f2-2ff9e23b5d9d": {"doc_hash": "39685a06d9f21c2c036df8e1d12a5b0487e9986526eff724e46214bdc6b20a6b"}, "67caaf31-0abd-45ff-8aee-a8fd39ad2dca": {"doc_hash": "355b8426e1df6cf9116d365ca6767aca6205f9062921341e4398e1874d08ca13"}, "f69422f9-3bbf-42ab-a90b-6dfd4de29c6b": {"doc_hash": "126c74d9f1c2ccdc9b532c96143e9cdb0844769497aed56d1171619827b26afc"}, "b7651718-c022-4b9a-84c6-55af40abf08e": {"doc_hash": "4151233ddf21b29f4c80a606ce3be0ee085e9fe704477342d12123872d7ce891"}, "e4ace45a-51e2-4bf6-a4bd-c15ac40c1d88": {"doc_hash": "2a1384b24e22f818ea4b6c30803270c2ab99c5548c068412f1ae12dd19662ef0"}, "615a3998-f805-43b5-abfa-6298517a81c2": {"doc_hash": "3e6e555f085feeb1496cedc9c4ff65378ffb24ef6099eb6bcff0373f8e8ab95b"}, "a460c8ee-dc48-4652-a367-01965f59667d": {"doc_hash": "2b12fa953e3f76380a6ab9b6b5451b798cc3a07e155f47f5bcc1710dd16d266c"}, "15c15a95-fc5f-4b58-8490-aa52eaed33ef": {"doc_hash": "204ec5e36a6738c85fb637621109e18392555c2b6ac120bc2eed32b0d3b60207"}, "5f2edb2f-eb39-44c4-a3b6-cc756152e550": {"doc_hash": "c06b0ff8adad7b63823fba5a91599f9768916489241864cc9c91f6ea0c335e9f"}, "c4f348d0-ee7d-4342-8e5a-ba0c45af1230": {"doc_hash": "b0a6576f863e04ecf27fa3c502fdd7e2283bd5dc493d2c067ed830afd9dc5eda"}, "2a2db8b3-1661-4454-930a-9f7e80dcc03e": {"doc_hash": "78014355356023a815c144998dd98101b73e0bc5382a1f544b100baadb692f6b"}, "480aee47-3d73-4005-a011-a2cdf3e5c36b": {"doc_hash": "a6bc117841d7202b1a67dcd2da9e6cf37b009ce590e030a174fc92a09ce4f326"}, "b538b4d3-fb8a-4f2e-9349-c0f9d4620e3f": {"doc_hash": "22ca61817ca2c2acb89be483adee4f0dedd9283e9c49bc8cfbd44a2f28a81fad"}, "1c7be2fa-8287-4845-a5e1-d12a3f1f8b6a": {"doc_hash": "38ba9ab13249535ff12316a5fac71c69ad041a8e92181a5948c5519a348ac337"}, "9163378a-17bd-44d7-99ca-4db49ce71038": {"doc_hash": "7be8a7a70ae569ebc86e83fa8059a2b77d488c155110e84879fad6f46564c20c"}, "0841d887-6c2e-4726-8d80-e1b1276bfbf4": {"doc_hash": "02af12b27552f13ccf8846a6513f366f9cdb4cb877fc43b5d50c665543b0a49e"}, "88854f72-5bc3-4eb6-9d97-37a11e6d00cb": {"doc_hash": "34c37b6b3da7bd79fc0ac492c2f10ddbf9c03a4160f4c97edbc939b8f6265336"}, "ee109f25-ba0c-4a93-af47-c7737d3534fe": {"doc_hash": "e13dc53b0fb3c01e0320d0026a3441b4c6cd6d62a95b65bdb9705e34e6e48eee"}, "21fc4d23-2342-4854-9d3a-9c182580c80b": {"doc_hash": "aa4f925dc95ef6d82a243261e5b8b2f0833a51fe11f1f48e03f53183a90f6dcd"}, "c072613c-baec-4287-9adc-d80350737e07": {"doc_hash": "140d473982f60d7f94a78df9b761aa135d567172f4c04e97739ee16805c21d47"}, "7c38a766-2006-49e9-8faf-523c26f7e9bb": {"doc_hash": "90f5a40d2bbe54987fb5377cbf79c50f937b9878d14b9e005c54b1aba3721c33"}, "0a18e2e4-3fdf-4cf6-b442-4e8d1f6f08cd": {"doc_hash": "4ccbffcffef01a93159b700f2ab1158281e6d478a02257e535a8b0eb10f649c0"}, "122838c8-d639-4921-93fb-5955862e46b1": {"doc_hash": "fd0dd43ef9a6ac9b24d8f1a60582a137f54f04ffd848b0825833b74e4283e491"}, "05701ad3-36a7-453a-8b0b-c9307eaa10fa": {"doc_hash": "6c5f43340bc9e0187691e5b436f78f19bfadcca1585084387badb7e69ab14405"}, "ad321512-8ac2-4b6d-ba02-5224d7e8bf31": {"doc_hash": "56ca2fff4248543c51114fa5fc0463b9a076e29e7b352620b87b0ea4d520db36"}, "bd615567-0e53-4243-a9d7-ddc0f6531d78": {"doc_hash": "2cdac9838e5c499839513c753f4516740d7ebfdf9d8bef75736ade43d7cff746"}, "f98d43a4-c75c-44e1-8b88-783448616469": {"doc_hash": "4642013ee644c6f4e00d304ce775e9613f001ccd632a1643d940c3d8a4d4975e"}, "018571e4-d492-4eb5-ad51-6e9535271bea": {"doc_hash": "0caee5db7bb4119bf1a70f19311b14a29fc775f6f4784f3e95150a8a48c14c31"}, "8da3c507-947f-42fd-8338-09dfc8efc536": {"doc_hash": "eacb6cbf1434f10ca0d11bbf5cb3c7b93f26c39a168de46dc6d0b314b82371c6"}, "6b008b47-fd07-4e11-997f-e35767657214": {"doc_hash": "d0c9ef07ffdfcc69d555c6a122304486c5e485e9b4bd34173df0f9349188cd9e"}, "196038fc-1366-4d00-9964-9a79a3506aca": {"doc_hash": "202d7e6747de18131be0a2da64c25ba3c731fd52002e9044259b7818482c7b9d"}, "65a4e1ae-01df-4a75-8dab-d2614b3f90f4": {"doc_hash": "fadae49c7ce9b600182615fdf08b0ac889b0a0fd12bbde631e0724655b21df31"}, "1638439e-312c-49db-a171-783fba222374": {"doc_hash": "183735031b6aecc928e4571aa638758b3584af2787aa4db77744a4a70e515c05"}, "b4d27173-2a9e-4a5d-9c7e-df39b946ef87": {"doc_hash": "b46b7d6c699b77c4dc10d10ae82b33e9fef81f053933d1ca7215d924a8657997"}, "0d5366e3-720d-4296-b3b8-0bc8ea181d53": {"doc_hash": "2b5be6ac31bcc85d062ee50f3323dbb7cab319411b58be46cb7aed7c68211486"}, "42794a6d-e39a-408f-b501-25d2e5075e43": {"doc_hash": "d0e303bbd4d23d17b2a9e7220f85e67c3ea9f539fc55ea6900551105501ad035"}, "645beb4b-3593-4ade-a39a-049bc36835ef": {"doc_hash": "157a8125a3b214169b4862cc2da2305204c77b3cd6d912860edf3ceb2d42b5dc"}, "4723f997-cf60-41aa-8790-7e5946369504": {"doc_hash": "dc3cee809814716872256b6457757f864e333380df4dafa5f5d9dd196344b02b"}, "8d5804f3-511b-4db7-a348-7ff770daf7e2": {"doc_hash": "cd4675e461820dce5893cb04b2e568f12b74ce2e9ec3331abedbc0cd9ae84671", "ref_doc_id": "b48593f2-ed3e-4266-882d-ec1d883803a2"}, "1b0df254-b641-4a14-9251-a51170ac9e6e": {"doc_hash": "ef3e4585c1019285f26a77ee797df621ea32949781a863290b0a5203de1e27e0", "ref_doc_id": "9b054b66-ca01-49a9-9d7d-0ee8485abdc2"}, "cf3b7f08-a7e9-4674-b2b9-1313cddc8899": {"doc_hash": "b589263cf757559eb91370fb77b4c707a61e5302d60098be1b6690efb2aa0ee8", "ref_doc_id": "9b054b66-ca01-49a9-9d7d-0ee8485abdc2"}, "3cb91a60-9ff1-4807-b7b9-b6955074342a": {"doc_hash": "eb696b6511098dd98ba5e992869feb30ad023f286ad3fc1be7111f84672d2466", "ref_doc_id": "9b054b66-ca01-49a9-9d7d-0ee8485abdc2"}, "5ba18b61-7f77-444a-a93d-61ae172f4beb": {"doc_hash": "975eb5edd3eebdb8c1215c0b9a9f19b9478d76f82ecb45a42d0cdd8fcdb67812", "ref_doc_id": "9b054b66-ca01-49a9-9d7d-0ee8485abdc2"}, "5eeb7a06-f792-42b0-9d62-95c7d0857ca8": {"doc_hash": "62e29b995a576d2af76b00e5aa37dfec643c168fe6814becac9bf17e7fdbc36f", "ref_doc_id": "9b054b66-ca01-49a9-9d7d-0ee8485abdc2"}, "e360434e-6ef8-413c-8cea-22dc1f510d1a": {"doc_hash": "cae8a6aab0a2d13a3e4fd0de816780e851cc8448bb2112cc8b961f9994736d97", "ref_doc_id": "efc7ce4b-e652-4f41-8ad4-42370f1a58fd"}, "61a8f499-462f-4916-a147-86ae161cbce4": {"doc_hash": "e95a35268578095b59c775f108f98fc9772a17a49416dd1825da4568c5a32d9a", "ref_doc_id": "efc7ce4b-e652-4f41-8ad4-42370f1a58fd"}, "7ea787d4-3400-430f-be10-dbedfe463e5a": {"doc_hash": "362041418cfd7df1f43e907b9b1eb93beb1c1e0df9d73c8b12a4a3251d86e1b8", "ref_doc_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c"}, "d8dedfb5-356f-4f14-8f18-05fac4021531": {"doc_hash": "d0e7e28bb68eb051a3ce71e889e48a103acc99558526534fcbe6b4aa70ab70b3", "ref_doc_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c"}, "9ec494be-473a-4529-ae93-6039b881b25b": {"doc_hash": "cae02a5bd3b253ec8e25ad1c44d457e049cc963ebe55f9b3590da43f639ab057", "ref_doc_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c"}, "e149830d-8091-4acb-bf78-c850551861c1": {"doc_hash": "87ab7436b9116f1200fbbc4ea27ef5081dd5f3a36aed957704d5db7be3224350", "ref_doc_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c"}, "78147b16-c7c6-484f-9e58-94eb1158572b": {"doc_hash": "476e2a33bade58e4b8c5a81aec4e1c2519e0696c71b70bfddf7766631c63aaa7", "ref_doc_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c"}, "4f39af8e-c178-44b6-b777-bad8758fae9d": {"doc_hash": "e27bec7e8828f99d335ccdf579bd9ead28e98e5f3f630cb6d562a6ed40476176", "ref_doc_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c"}, "2377a955-26e8-4a48-b2d1-a67e785d3648": {"doc_hash": "f96ce6c564d3c3b13c937ab51581ecf578d7910532326a7d6c3842b5db86e9c4", "ref_doc_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c"}, "57fef056-e28a-4288-98ba-ebe3c93052a9": {"doc_hash": "6edec356598ca20bb6639af70bc0dc635f3a44272ca498c8e984484182e0b168", "ref_doc_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c"}, "96bc48e2-9257-4c20-81d6-616b3b38ff90": {"doc_hash": "4999ccef575d13d7c6152150848867c360b9f8adb7e3c202630f0e64b74c64a3", "ref_doc_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c"}, "c382adb9-abfb-44a3-8a88-23cd350cc41f": {"doc_hash": "14662f47d387cefe8b0258682b247a8a66e1cf9c6d875171357e80efc0df6874", "ref_doc_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c"}, "529572cd-fe86-4197-89e6-d130743f8176": {"doc_hash": "497b38583b5d70f0924a1187f78e0ba73e8e0e83cb7d9fdc0821b1c75b666f89", "ref_doc_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c"}, "5a89dfc4-527e-4d61-9ad2-b2bf5646f7a6": {"doc_hash": "aadf530faaf5213080e4a85533d2fdbb55378ffcf8df64e90bb34fe10131e61d", "ref_doc_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c"}, "8282b677-49f3-4184-8a7e-24e27cb0b439": {"doc_hash": "70449bf8848b0ca3890bcc8993b5b8d71ca9e5ca14fc539f7b60dcf80f6cb749", "ref_doc_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c"}, "c5d055c9-65c0-49fe-8102-4df39a427b9d": {"doc_hash": "46d1d88d7c609b3c9bde94936f0909d9240afd7e38471273a8fd064ef3af0587", "ref_doc_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c"}, "207d1e01-17e1-4a59-9470-7298491ccd31": {"doc_hash": "3cb97a365844eeb9823ab9540980fd5111ee3daa039a9b2970140be7fbc2153e", "ref_doc_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c"}, "a2d0a0a2-e2f6-41fb-8e99-cd0df7293316": {"doc_hash": "e6b51bdc920c67c3662d80134678e8e8b43dd09c5841e01ae79e2b11eba914f9", "ref_doc_id": "2271936c-673f-462f-8cf8-ea5ec83a3d50"}, "ae78a21f-1fd8-49b4-8f8d-619b9611bc74": {"doc_hash": "d4079342a626d829d3caf94ab1ba5cc53ded14ba6735f3e9b66a350f67bbbb16", "ref_doc_id": "70f168d9-009b-4805-8bbd-774229708a2e"}, "8fcde984-f8f5-43a9-919b-5eeef789c20c": {"doc_hash": "cbcc8980f7fb18df458170c285b5ac9fa12eec72dbe1598b83d21b5eb05667ba", "ref_doc_id": "70f168d9-009b-4805-8bbd-774229708a2e"}, "59e8503a-d123-4b84-b151-0ff85029c655": {"doc_hash": "f24f3c2671ababdf8a53df03020123ce57cc55751c09fd73dc0f8626ebc94b77", "ref_doc_id": "9f8417f3-5a22-4b2b-8195-711d5946f41b"}, "b68a199f-8c60-4397-86ef-daaad0b5fc3b": {"doc_hash": "04cc249c3da90d24b3aeda1dc66a5a534a094e1da227e267800bed17d6ca13a8", "ref_doc_id": "9f8417f3-5a22-4b2b-8195-711d5946f41b"}, "e44933de-d420-469f-8f44-313a0551c3ce": {"doc_hash": "f89cb717dedd00c5d25fddbb2feb6765bf706560b60d3adac8fb34f35854dc9b", "ref_doc_id": "c04b84e4-ad03-403a-b1aa-d58f3520624b"}, "4b80cc89-9cfb-4347-ba10-ac9223ca7d80": {"doc_hash": "3079a99e60222ce7e681de0cadb9adcb744332febd7314adb76dd99ce258551e", "ref_doc_id": "c04b84e4-ad03-403a-b1aa-d58f3520624b"}, "4154f2e0-6174-4af8-8c31-4b7bd2016655": {"doc_hash": "38b1ecad68a2a14d7ad95b63fcca29e6810a929999c26f3b5abb5eeef2dc9dde", "ref_doc_id": "c04b84e4-ad03-403a-b1aa-d58f3520624b"}, "cb3b5d33-eb10-481b-bd27-1f8ef9e49b96": {"doc_hash": "87770eda67a6ce851fe3dcd3c646789029e53d7eae89dab62ba7667cd44679d0", "ref_doc_id": "c04b84e4-ad03-403a-b1aa-d58f3520624b"}, "bfca3409-9a02-4a22-a779-3ceacaba4a9a": {"doc_hash": "d6c4b8938de1f0319679c06690fcba495de78e8df69c1d1b3661126c8618c5bd", "ref_doc_id": "c04b84e4-ad03-403a-b1aa-d58f3520624b"}, "92fd57d6-41c5-46c7-bb79-46e24b928d2a": {"doc_hash": "de874b2764bd9814e37a98086996fe457cfd64645c89b75f318481cbc4557c24", "ref_doc_id": "c04b84e4-ad03-403a-b1aa-d58f3520624b"}, "098473d0-50a0-487a-9426-187bccf67ef8": {"doc_hash": "f117c27be31a96271afd987da5641462159ef898cb4d480ab446ecbca58b44d6", "ref_doc_id": "c04b84e4-ad03-403a-b1aa-d58f3520624b"}, "51030bb1-9f42-44e7-9cda-b0ad911cf9b9": {"doc_hash": "ee35449c5b820fd09342370e938965f89cfc49cc0d2a6593bed76d2da1421339", "ref_doc_id": "80c6973b-abe6-4e91-ba5a-effb7ff66598"}, "79e5f9de-01a6-4fbe-8dce-6260c14f6487": {"doc_hash": "f2c6833a6d9a708d9263ac570cb55823abd3da0609304f2b81c8facbf85e5b8c", "ref_doc_id": "80c6973b-abe6-4e91-ba5a-effb7ff66598"}, "ea735665-e6f0-4845-ad31-45ec895c5574": {"doc_hash": "8757bf50830b3eba07357dbacf20b4737d5499f32e73bdf3c984adc243f9ebee", "ref_doc_id": "de1a1071-d1f5-4488-a9d5-6c573089538b"}, "a8e92641-460f-4401-8cb1-6eeb2ee1eb34": {"doc_hash": "b23a4daf5a3b9196471c665d0f96ff62debba9ed56375c3d3b92b8c4e7dc6d68", "ref_doc_id": "220e9856-b60b-41d1-b139-e7e15ac094c8"}, "1e85b40b-eb6a-4887-bad0-68768af6f125": {"doc_hash": "e7fea348af7265e07572d925d9132860f5f5aee95e25008902747ddd76f093f1", "ref_doc_id": "98a73a61-96f1-47cc-8c05-e1b7dddacdcc"}, "863ecb33-617a-46c5-ac7f-c41a06f50a18": {"doc_hash": "66aa0ffb074f271d95844e6a299d2ea53aa609c386d4926dee06c3daed1926da", "ref_doc_id": "242e5282-687d-41c6-a785-f7e986ebdfa2"}, "54e3db40-6e76-4075-8eb6-f5b19d76e977": {"doc_hash": "3979bfcc5f18d1b02b4765a19e55a9337270bc3f4ed99729fac827aa64e88020", "ref_doc_id": "242e5282-687d-41c6-a785-f7e986ebdfa2"}, "ae00f15c-8d8d-4366-9d0c-039c26106190": {"doc_hash": "bd9b11c34ce0dc308ff801bceec04ae842232f9699aac260db4a7a54305a2058", "ref_doc_id": "2af4645b-a548-4241-a7d0-d319a2a700ba"}, "6cd40cbe-2f30-4dd6-8c7e-09f722610f8f": {"doc_hash": "f029a57f59840227ca97cb118e81b70766ab71d93d0b3b73e73a5b612e88cb88", "ref_doc_id": "2af4645b-a548-4241-a7d0-d319a2a700ba"}, "0efe17dc-f46c-4fca-8fdd-f9dc28ebfe06": {"doc_hash": "5a79b69e860f848da7d9038b28fc9a97a5105b1170274b6bd4be6284f37fa7dd", "ref_doc_id": "2af4645b-a548-4241-a7d0-d319a2a700ba"}, "c058fb28-e0d3-4e3a-8f62-ca3e85331698": {"doc_hash": "834f21493e3417b949e6cd56ac94f1a26f1f637c0f4e311655eadf7798be412f", "ref_doc_id": "2af4645b-a548-4241-a7d0-d319a2a700ba"}, "61e76b09-3e31-496f-a005-de4a30bbcf08": {"doc_hash": "4b1aff544d36d52546c7cb51d44758fae45dfed60dc5f6b127da80f529ef2ac0", "ref_doc_id": "2af4645b-a548-4241-a7d0-d319a2a700ba"}, "7a680cc7-39a1-459b-91ce-ab18e7a08a99": {"doc_hash": "3b03ac0010c1b684dcada2ddfd8a9334297f65b9ebc45e6a739f8b425bd0010f", "ref_doc_id": "2af4645b-a548-4241-a7d0-d319a2a700ba"}, "5a07f857-208a-450f-8649-e0eff73dddea": {"doc_hash": "5cf091e8f15172461e1e6796cbd91343bbcd36d87dc253c32debc83e9eab1c66", "ref_doc_id": "2af4645b-a548-4241-a7d0-d319a2a700ba"}, "fa1677ac-b93c-4cb5-ac1b-bbda106dde60": {"doc_hash": "d21a09c5a41f0b9e54e8e9353e84051239e7c5562b68a075b7085a6106c81df8", "ref_doc_id": "6183c71c-576a-4d8d-b5a3-3d9d1cec4c03"}, "5d10b3b1-327b-4f66-bc9f-fcc128cf764c": {"doc_hash": "8a381262ed54fa7368598e7079d2c09e543a56ff2b1c3e35e2ff66c1c9642e9a", "ref_doc_id": "6183c71c-576a-4d8d-b5a3-3d9d1cec4c03"}, "ce042bf2-e224-4db5-8323-ef7b218c195a": {"doc_hash": "faac4043190ba6c8234674cbb6a67dddf97a9f4d0ae295388ad55937f2966e7d", "ref_doc_id": "a02b6dd6-999b-443b-80c2-48582c81ec47"}, "de43eeb2-b4b7-4706-9f98-f81d2b6f5f2a": {"doc_hash": "e8670b0ec184722a0901a61c184e9a727f61884b86c62a1818c1daed70a75a90", "ref_doc_id": "a02b6dd6-999b-443b-80c2-48582c81ec47"}, "41f54eda-a9a1-4333-ad34-ced841a861e1": {"doc_hash": "941ae3cbaf0f12cba96069ab8138233d4bc9acc0a2ce28b3d22156991fb9a139", "ref_doc_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1"}, "09573924-2766-4bae-8b84-d7b282345081": {"doc_hash": "436b5fa92a8033831106bac477c6826c3478fb3f870f6ffb8baa270e6873bb65", "ref_doc_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1"}, "9820be8e-a7c3-49c6-8241-8263d78c6549": {"doc_hash": "7849c51f265886fadf3df696b637af4cecaae10108a46dad057bf752aa808778", "ref_doc_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1"}, "02fa3b0f-de52-472c-a9d8-0dc488ee1625": {"doc_hash": "44291ce2f1a41570e91f2d86941de8aaba8b34669b9de19a41b87053bf9aa49e", "ref_doc_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1"}, "3ac19dc4-a885-4130-8ca0-857194ee1ac8": {"doc_hash": "f2cdf97a0a06c7d67bbb9213bedbda43f23392b8493ea88e423cb431b3d248cb", "ref_doc_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1"}, "c4a9089b-6e16-4e1f-b3f5-cb373ed06c96": {"doc_hash": "35dbc2de7278a0d141c337189ffe7bc4cc8fa09649627a44ef27f6047d92514c", "ref_doc_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1"}, "f21707c2-a25c-4e11-b75b-b5e326d4e3b1": {"doc_hash": "25b4b2c8a2638fad31b5b33f527d0ab1e0433a19b0ae202a50e88d894d8276f4", "ref_doc_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1"}, "6fbb01a2-c7f3-4bf9-a2c2-49750b86f8c9": {"doc_hash": "ac3ce1742925a87d46a8c764e80f2360875c543a6a289cafada7f078d68fe53d", "ref_doc_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1"}, "ea0dee89-86fc-4575-851b-a574debd4918": {"doc_hash": "6d201f14579d9e3ef4d55c86e2baf471e99cb78e7470171eb807fe9b40ee929b", "ref_doc_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1"}, "4d7ce6f8-ba06-4beb-b999-4ef4dc3fd374": {"doc_hash": "3b9f32bbc5d565c3b8920cbaacdb1724e939f84f11557311640d4d09c485a831", "ref_doc_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1"}, "6603c615-aed5-41f1-a81b-a828ac395269": {"doc_hash": "d0b233a1642a9546b87e703d0e10c970e636e1aa92b5157adecd863586b6db8c", "ref_doc_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1"}, "1b5f5925-7fec-41c0-8a28-1e1973120c1a": {"doc_hash": "b55bbb9b0c81d207d6a499ba21570dbc3a1ec59d608924598c6dc181c1f4186f", "ref_doc_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1"}, "c4e6b672-bbb5-4583-aa62-80522f2de65c": {"doc_hash": "67244aa24e91a17dab504a3313eeb2a54ca31378b47c183e9d7d6214b763126b", "ref_doc_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1"}, "087033fc-c19c-4887-a4b0-b1474499f271": {"doc_hash": "32a490da7cca069598a12f6a25d8c444f3652fe1828a6349b3f72a4403ef6d16", "ref_doc_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1"}, "2a7ac5c1-ebe3-4dcd-b9f8-1ea8c07da005": {"doc_hash": "04b5552011ea3aa127c5993b6b8c6ba706316e936c4a7c31ede73cc4026ac818", "ref_doc_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1"}, "ab2c2a9a-9aa5-48b5-a457-6014f2300ae6": {"doc_hash": "1aa3515a28665321738698f562a6810821ecb21badfab6f1efa5d0ba419d8ca4", "ref_doc_id": "a12e66c5-3251-4dc2-b0d0-a807e2d3eb8e"}, "459da2fc-a395-4165-9af2-269b9e72c351": {"doc_hash": "7aff9c2a4d961f2ebdf63d3ca8cf321c5abffdd0d5e165d832b80c9b027b560e", "ref_doc_id": "4e43eb19-3a56-4808-bd92-9f9cd86dae61"}, "1f770972-4725-4776-96c9-ed0be7dd3a4b": {"doc_hash": "84ec73982f4362b21af6ff86ae6b4efd1f28ce955b1a18c81eac041ad0d2fd80", "ref_doc_id": "4e43eb19-3a56-4808-bd92-9f9cd86dae61"}, "25fcdf93-d641-42cb-aa09-83823dd82d26": {"doc_hash": "7238add887a6af48f27e40081341097cdf1ea2b3adeff66a42375c0c55e3851c", "ref_doc_id": "4e43eb19-3a56-4808-bd92-9f9cd86dae61"}, "b42c5468-b9c0-46f1-99e4-e600f61ae731": {"doc_hash": "a65928ef3d969b6d0d7c78980ab069b8d0aab0171021ed7df0f890e7111b5932", "ref_doc_id": "4e43eb19-3a56-4808-bd92-9f9cd86dae61"}, "6e05d2e7-ae58-42fb-83a2-4a0e507e292e": {"doc_hash": "4d778f5a5ebd94d0ae1b3b9d04d31b7878b28ebda599c30a6dab05a281979d77", "ref_doc_id": "48362c28-add9-4247-918e-7b63f8b7427c"}, "e34f03c1-f92f-415a-926a-d680ee2092e7": {"doc_hash": "f58242409a5bb35eff8d25aa816d0974b3f4e73d74e2ee9e370f6d1764af4cf0", "ref_doc_id": "48362c28-add9-4247-918e-7b63f8b7427c"}, "732ab74d-6ccb-41a8-9ed0-d86669f784e8": {"doc_hash": "69b4471155326acca349ce4c70204c45b89364c70acfe215b8acd1f4e5ccb191", "ref_doc_id": "48362c28-add9-4247-918e-7b63f8b7427c"}, "312a4c86-963f-4a1f-9e74-f3dcfdd0e421": {"doc_hash": "9061bc51c80018891c74eab7c528dc3e694787237b7ccc0fad1cf5f9c5e81232", "ref_doc_id": "48362c28-add9-4247-918e-7b63f8b7427c"}, "a6325480-cd41-4821-a7a6-5083e6834979": {"doc_hash": "1969d17ed467e5f1e123d97dfc2310e66b3459f806011451ed434e99f7ef2408", "ref_doc_id": "48362c28-add9-4247-918e-7b63f8b7427c"}, "3ce22342-6423-4f1a-92c5-d3e888beb144": {"doc_hash": "22aaf30734c23efaa1c1cc3a2589ffdb1b09ade894c2f6300404e9c7e505db27", "ref_doc_id": "48362c28-add9-4247-918e-7b63f8b7427c"}, "6373b608-8652-4da3-8e9c-33cf5f712e58": {"doc_hash": "ed2f071cad9e1f8d282c423d18d6481654980b81039ce8097aabad8215887352", "ref_doc_id": "48362c28-add9-4247-918e-7b63f8b7427c"}, "72b9748d-e13e-4bed-b2ee-6259608a2a9e": {"doc_hash": "f88ea07de8791887080f697f558c3bc8606a73b779ee73958998c9491d6c8da5", "ref_doc_id": "4c911618-3208-4176-ac5e-e33c757deeda"}, "b1b3d0ca-a3e9-46eb-95b0-da1b294033a9": {"doc_hash": "988e89110ab907a3a5bd0c997be451327399d8b3f8b388f3a271c5dc67c63aa7", "ref_doc_id": "4c911618-3208-4176-ac5e-e33c757deeda"}, "9b49f877-0188-4f79-97a9-f0fa3a1fb663": {"doc_hash": "c9383b81e2214f20d529b1e60a72cda7e48b3992c36c76b27c56662f21f105fe", "ref_doc_id": "4c911618-3208-4176-ac5e-e33c757deeda"}, "994e82b4-1775-4f21-b549-dbcd6aa35f6a": {"doc_hash": "b21988aa9cd9cce688bb49a9c04421b9495b97d7ed0dafbf7a1ae2842fceb262", "ref_doc_id": "4c911618-3208-4176-ac5e-e33c757deeda"}, "fbc7c33d-3148-475d-8ed0-4a3949aa0b2e": {"doc_hash": "bbb821d7022a4cfa5292f6cc93375b1f091b3019555101748d11aaab49294f17", "ref_doc_id": "4c911618-3208-4176-ac5e-e33c757deeda"}, "aa733059-9f30-45af-baf2-f1283e7594e3": {"doc_hash": "1f483f510d43f36f5a6ae7b4c43471154d8ffb054ebbbe3e0d68f4122e0db03f", "ref_doc_id": "4c911618-3208-4176-ac5e-e33c757deeda"}, "267512d8-4901-473c-abf6-9cb09ebdc769": {"doc_hash": "c6705728cea5825c9f1f8c5ee3d08e461bc5998805e2e1adafba9266acc037ba", "ref_doc_id": "4c911618-3208-4176-ac5e-e33c757deeda"}, "1adf74d7-b4b9-4d99-b74e-bce3f681a272": {"doc_hash": "6634d8fd8295becd558aa4d53cd08df490aa6db174c8ecb9b22c2f516069f788", "ref_doc_id": "a493eef0-c14f-4b1d-8f1c-032c0fe859bd"}, "34253a34-3c81-4479-a846-d684e34cc7f2": {"doc_hash": "32082172d86f1bcdd5d0efb0bf4f2e53d7c88cc85123d6355a8f1e6954a75a2f", "ref_doc_id": "a493eef0-c14f-4b1d-8f1c-032c0fe859bd"}, "709c9a9d-fe77-4931-9040-52d26fc372ae": {"doc_hash": "3946fea362322f396fbb53ef33ce6bf0dcf3a648a19bad07a407841d31fbcf27", "ref_doc_id": "a493eef0-c14f-4b1d-8f1c-032c0fe859bd"}, "9b7f969e-e56a-4bc7-8311-19aa11944fe8": {"doc_hash": "2122452225623a09e1ff7bee6f5c2fb315a97a2330cbf242472c4c36ca25a5ee", "ref_doc_id": "a493eef0-c14f-4b1d-8f1c-032c0fe859bd"}, "00fd70fe-3b13-4bbd-b1ad-6611c07af160": {"doc_hash": "c6a0146cc465ba82b47dcf0bd4f96e2fa7d4ba043a603b72e84fd7c5b25c88da", "ref_doc_id": "a493eef0-c14f-4b1d-8f1c-032c0fe859bd"}, "842620a9-d8d1-45da-88a4-aa4e3925455e": {"doc_hash": "54745d7acf3edb48e4dd0ad62746f37cc54a6cba4cb6a8ae9c47d5f879c5e51c", "ref_doc_id": "a493eef0-c14f-4b1d-8f1c-032c0fe859bd"}, "46ef5de3-4d92-4bd7-84f1-79f3f90daa46": {"doc_hash": "04235a6b814edafcba3eb7b7897192f958108af7cb2adbdcca928c40360710f6", "ref_doc_id": "a493eef0-c14f-4b1d-8f1c-032c0fe859bd"}, "94dea1ec-7bc8-4836-8a6d-a8e84130442e": {"doc_hash": "8cfcfee01fcadecbc8d653d7989ec13bf836e771f65b2d7f09177ea7ee5e054b", "ref_doc_id": "a3183841-210f-4f53-8d51-622c70d427e8"}, "b32ad36d-b66e-4f13-bb4b-2211a0155e2a": {"doc_hash": "f9d089c457421d7633a8c999c7dddacf1f030e8639d9873be993e12c3d916447", "ref_doc_id": "a3183841-210f-4f53-8d51-622c70d427e8"}, "c35af929-37c8-4a59-a3ef-c86643a26714": {"doc_hash": "1a20cede66b82ed721130312955e0aa739f88473c5b5c3c936a01f417d790108", "ref_doc_id": "a3183841-210f-4f53-8d51-622c70d427e8"}, "62499b59-1527-48bb-ab88-a30670904f54": {"doc_hash": "27d32e5d097d9dac7771409acd41ddc39f7f18d42d322aef392ad731bc407278", "ref_doc_id": "a3183841-210f-4f53-8d51-622c70d427e8"}, "1c03d3fb-8a0a-48c8-b739-f6c8fa79ffb8": {"doc_hash": "dae899bd3a875acc9bfb7fd1b52ed6a93fc031267ed79e942f2ab0c442b6410b", "ref_doc_id": "a3183841-210f-4f53-8d51-622c70d427e8"}, "1d11c0d2-fe91-45e0-baae-842c991571fb": {"doc_hash": "f1b7d8c5099fd3a77986b8cb5ca2f5426d8ff89e68b683479ffea6bdd86dbc7e", "ref_doc_id": "a3183841-210f-4f53-8d51-622c70d427e8"}, "78919c15-6bda-48d5-88e1-61157bc4b842": {"doc_hash": "f3d3343530d6a4b04747ce3a105baa32bbd80e8e3eb3e4341d7324fdc80b0ca3", "ref_doc_id": "a3183841-210f-4f53-8d51-622c70d427e8"}, "7152baf1-bf93-47bd-b9c5-b38f1b765f58": {"doc_hash": "f81f21a0c323b768da2b800cf1437a8aacbbcd9df60f9786d371cd9be8bc78bb", "ref_doc_id": "a3183841-210f-4f53-8d51-622c70d427e8"}, "7a802e83-37fd-4af4-a2b7-2ad07a0fd043": {"doc_hash": "6c55510769a90966302e7165bf81adfc9a1b951b9c3e7e81358e14c67ec17f47", "ref_doc_id": "951c8c62-f569-456f-aa6b-9a389d6d4772"}, "cf6c7ba7-892c-4638-aad2-e4348ff14639": {"doc_hash": "3e2168928f5653bb4a8536e5b57361a52d197d515707f6aac8a60f24efd0deae", "ref_doc_id": "951c8c62-f569-456f-aa6b-9a389d6d4772"}, "0de69666-2062-461c-911e-ce861af7abd0": {"doc_hash": "9aa37298e1281e76570f9fb2fb9294687a5b10763b806301b967b649ae313add", "ref_doc_id": "0c3d6bce-267c-49a7-8e62-749aa5ac90cd"}, "4e4f541d-d517-4658-bacd-b6ac4af9bf20": {"doc_hash": "7d8fa9229ceb6826c5b0ea6373c76a800e7de490683cd353df47114711258bfb", "ref_doc_id": "0c3d6bce-267c-49a7-8e62-749aa5ac90cd"}, "3ba8e832-448f-4c20-b001-0e211dd30d98": {"doc_hash": "7f3d0fdb7f4821063e9eaaf7f143c3e865d7196df1f9cb411a00c9b746b937ca", "ref_doc_id": "f3675b9c-2725-43d9-855c-9d80f9896275"}, "a437ffd2-be26-4d04-8ec7-fd1071eed8be": {"doc_hash": "9c8224502dcfb25fd8c07378f54fc9dd21f12a1e18b467050df92e68fdbb9db5", "ref_doc_id": "74793ae7-2e0b-43e1-b2e0-c974182ddee6"}, "379407c6-a95a-423d-94ae-997617e7e21f": {"doc_hash": "39d19dc4981f63d25d16a63ec8b3df6485b2ab12158fdb5bc644cc6e7c834865", "ref_doc_id": "74793ae7-2e0b-43e1-b2e0-c974182ddee6"}, "7abc76c3-0547-426d-81e4-070382b2136f": {"doc_hash": "119fe29ae0f41f3a774c3b4aad1526daaeaec4e2bcb0f7e57e7998cef4535bda", "ref_doc_id": "babf25b7-4762-43b1-bd99-bed26c60a2a7"}, "f6fa5e93-ed80-424c-9360-48168fecaaf1": {"doc_hash": "703f53db88fef82cbd73c3e4893dc254a8fb355705a7998d5608d2dab7ed9966", "ref_doc_id": "babf25b7-4762-43b1-bd99-bed26c60a2a7"}, "aa87b83f-cc16-449f-8705-ada919bcbc60": {"doc_hash": "b12986088ad966661941e8774b4fcdd231b7da8fe1c7e5511eadc9d8ef2c8eb6", "ref_doc_id": "babf25b7-4762-43b1-bd99-bed26c60a2a7"}, "50b138c5-750f-4197-bc0e-44c514f5cc33": {"doc_hash": "76d932703b4525a033bfb9c9bd74f8c35dff57350b4223966c8d52fb115a2bf4", "ref_doc_id": "babf25b7-4762-43b1-bd99-bed26c60a2a7"}, "f721d90e-0076-4b6e-82d9-67dfbddc946a": {"doc_hash": "d6cae6d091e85bef8e9188d69b2ab7f635f3d8956a7dc0379533fdad579dc772", "ref_doc_id": "babf25b7-4762-43b1-bd99-bed26c60a2a7"}, "5a2a1814-03d0-47d1-b27e-cda715accedd": {"doc_hash": "0f69a3923be3049ad5fefdca4814791ea159f7e9803de2f98c865d9c60b11c33", "ref_doc_id": "babf25b7-4762-43b1-bd99-bed26c60a2a7"}, "7ec88278-81e1-43ba-be69-0a37ec887a0f": {"doc_hash": "4889c1a2607f23487496d299a18c382ac1c22fa16fe30fdd8f2ef81f472f4fac", "ref_doc_id": "babf25b7-4762-43b1-bd99-bed26c60a2a7"}, "9b0e7e85-1774-46e8-a562-df0b3e891751": {"doc_hash": "668ec2c4c130d62d8e837e68ca1824de751768bc67352b86020caf7590c8d215", "ref_doc_id": "1ff9fb3d-a03c-4586-b3cd-cec5a4cb6f19"}, "efd055c6-9667-432f-a7f3-f846cf3cc047": {"doc_hash": "88d3be69e9a6ae537aa4a1eb12fe6ee6010f56b8e7ca86ff3be3ee704de03df3", "ref_doc_id": "1ff9fb3d-a03c-4586-b3cd-cec5a4cb6f19"}, "f3e1712e-69c6-4af2-b6ac-23ebc54f15d9": {"doc_hash": "d11c89b1f082f37bdec16df1587e06bbe4ee2c279f9f95f0cf0e49e98c5d5671", "ref_doc_id": "02d83d0b-7bcf-4f2d-a9e1-f16922bdd0e5"}, "b5119240-b3a7-4916-b2b7-c42424388a9c": {"doc_hash": "af07d0ab97bac8ad1afd3524547c9480a11821a7e92c7b204da0f39330c4adde", "ref_doc_id": "3bf3e08c-dadd-4e67-ae29-bc1b8831c917"}, "0b1b855f-8316-4522-9052-b6112635e635": {"doc_hash": "1c427844784a2399505f7031ad70481bea3a4ad9ef539f79f3b8bed7d6759ae8", "ref_doc_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc"}, "5c64aaaa-ecc9-402e-b26a-edb7c7ba7dfd": {"doc_hash": "d958f9d734ab3ddda549eb10f8c9173d3319da0aae5795ea62824bd67d3b329b", "ref_doc_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc"}, "b69412d8-3dec-43d3-ac90-c7de044a7f25": {"doc_hash": "730050176d4aa35f65df0c615d63ab111b51f3ec62bf3a94a824e1ae121df1d1", "ref_doc_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc"}, "3f673e89-0def-4ca8-b7e3-74ed3044a0b5": {"doc_hash": "c6c50aed76a6f2991f696f1da7f7d7a55bc12fd9b0701c50ade664e911912269", "ref_doc_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc"}, "4eed544c-8141-4f6f-8c4e-dded59471603": {"doc_hash": "4197e3b1345c32e021411b035c4960390b7b9fdb85943928387e34465653c361", "ref_doc_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc"}, "8bab7f01-a06c-4153-b220-600679ff3ff4": {"doc_hash": "6d8473491d692b235e6a74c421d32fdac67941057be0ba2666962c81d398c34a", "ref_doc_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc"}, "b6c539b9-ef2e-4f27-bec5-beb469d07027": {"doc_hash": "090b50268f97435d20889a4b93badcd5f22e1805f0d3ce9d94d901ddd95bd8eb", "ref_doc_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc"}, "5f551294-6615-4b2c-8217-a930ff1c5173": {"doc_hash": "5373d324a4a9397b18889e842a8cb6305928e1c496b2bb430ace6f507d4b7f6f", "ref_doc_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc"}, "35de5949-1b07-4551-887a-be0257633258": {"doc_hash": "4985d34ef59e233680703e1f1e409de07ac920cce417a2398e7ff1f4b665b59a", "ref_doc_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc"}, "8448ba92-00d3-44a8-8a11-a9b20cce92bd": {"doc_hash": "9458cd757c2429fec616be0f32522caed691f1de79fc3304af631276b744a019", "ref_doc_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc"}, "e9216099-16bd-4917-93f0-5c7c4d027fbe": {"doc_hash": "45646bdb3a215c4439c1880280a5ce3f8ee3a3c56e2024e30dcd69523d1e429e", "ref_doc_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc"}, "9fbcf625-6eab-4914-b71c-e8a286ab9b31": {"doc_hash": "05e00b8ec30e21f1ff0d8ac337eff534e1e89cd9040dd72dde182ccd737c1ba1", "ref_doc_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc"}, "32a9345c-150b-448c-8daa-5b5e264865fa": {"doc_hash": "e243345d2cf9e68020ca2e4080235c56beea2e0b0912625121ab707bd056daba", "ref_doc_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc"}, "3c9a4659-25aa-4da1-92ae-e12a915f6977": {"doc_hash": "af6fe8ea9324b511088f4fa64f6844b8c04f65d06f7d7488f7f882e52e87d2d6", "ref_doc_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc"}, "7536db83-127f-485f-9fe3-5055d2af2c4c": {"doc_hash": "4449e6e677e3b39edb9467e3927729889ea977a0303d0ffb033f173a6bd9a7cc", "ref_doc_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc"}, "322db0df-a197-4cc5-870b-1986e633450d": {"doc_hash": "9b4c56981ea10656a9b2ad81f450710f1aac0bab7b35418a8d1bfef3e803fdc4", "ref_doc_id": "fdae7d65-0b77-4e7e-98a6-a56375798dde"}, "9c8370e3-7210-47b5-a294-8934d1a53de9": {"doc_hash": "c25efa0d78279f555936ba4603038a5d71392ed46752a61fccf4805ee380db42", "ref_doc_id": "fdae7d65-0b77-4e7e-98a6-a56375798dde"}, "a5cb5963-c98f-423f-9ba8-06f31292f50e": {"doc_hash": "3dfcb6802ac6f03786bade3044d42749367a3fa63b7e1513862df2c2a48a756d", "ref_doc_id": "fdae7d65-0b77-4e7e-98a6-a56375798dde"}, "ed5082b5-f3ea-4636-8931-3f2f3b4ce146": {"doc_hash": "3932b7ee9be57835f087bd227d07644d1cb431a67ee7fd5a26d9b7fded268cc9", "ref_doc_id": "fdae7d65-0b77-4e7e-98a6-a56375798dde"}, "1483e82b-8ab3-42a9-9783-4c2375a2614d": {"doc_hash": "db31f69d6899606af11c6f2f3aac08ba9346e158b1cfe73572ae2a3af1aaf43f", "ref_doc_id": "fdae7d65-0b77-4e7e-98a6-a56375798dde"}, "15fd8a3c-faeb-4135-8c15-b10b43ee30e5": {"doc_hash": "f272c1fc385df1a00e32dbcf2a7ab135f76390253f2d4a0f526539718d3e666e", "ref_doc_id": "fdae7d65-0b77-4e7e-98a6-a56375798dde"}, "db11137c-b23f-4e4e-8ae1-f3ee6063d261": {"doc_hash": "99b8aa935176e61048ca678facd6581ff9447df7090c125c8d838d44e3e72c22", "ref_doc_id": "fdae7d65-0b77-4e7e-98a6-a56375798dde"}, "e388e187-33fd-478b-8ed5-3fcbcd86c006": {"doc_hash": "8db8083c0776af047db89d6f3f1e8dcf6a5b06cb8407ad4813d6d984f54ce274", "ref_doc_id": "d2df5bc0-bc8c-4f7d-bf68-f227c1fe6e3d"}, "4588c15e-460c-442d-b239-dcfb116511da": {"doc_hash": "55091e6b7bf19a71db1853e822a2df106f1a986181be656e0e99a9960be85a92", "ref_doc_id": "0229706e-3ab3-4de6-80cf-2adbfce12529"}, "b04fbd32-8e9f-46c0-ad15-af5c23674e72": {"doc_hash": "ae381c40615eb2b5b708583b8e6eafaa0808bdf86bb6e382d77912ff7e441d9d", "ref_doc_id": "0229706e-3ab3-4de6-80cf-2adbfce12529"}, "bc4143a4-54ae-484e-8c10-605bee5e20b2": {"doc_hash": "f2aa70da3dd8b68f6fc9b97daa87a95e5802f0360f91ba8114fb19f4a97d99ab", "ref_doc_id": "c68543cd-99fe-4c67-ad79-6f77f5afdf64"}, "cae23eb3-0a35-4241-bc04-4de01f529a26": {"doc_hash": "f0a70656f4429b090785865e1961ad56e56f91a7293339be2bf77dddfa749f57", "ref_doc_id": "c68543cd-99fe-4c67-ad79-6f77f5afdf64"}, "350dc3b8-eede-437f-baa5-4a1a6564faff": {"doc_hash": "50616c5bccbed96a8a380a3996f8f2a3dec1e6a3064f36d1ea67508591e8c9a6", "ref_doc_id": "4c84833b-95a6-457f-9999-f6f1e212a3ad"}, "de6abdb3-81f2-40e3-b229-c731ef7c914d": {"doc_hash": "3683ed8dd9ed54a7b40bd70df2354f889659ee97812a9ab5b222809fde7c4ea6", "ref_doc_id": "4c84833b-95a6-457f-9999-f6f1e212a3ad"}, "33403ca0-9e4f-4cdc-aef1-e91af2cc37f7": {"doc_hash": "66cdc5f6540041c65f2f049521320b41db3180c08b3c39863a43edd9df47f96f", "ref_doc_id": "741d6fed-4413-463d-a6f2-2ff9e23b5d9d"}, "3697c03e-1b95-4812-91f5-5954d39564ea": {"doc_hash": "3768b1b342e53a49ac12e9d64ef650a75069285e731e0faf2278fd6e9f569103", "ref_doc_id": "741d6fed-4413-463d-a6f2-2ff9e23b5d9d"}, "06b1f652-c631-4835-b981-a702c5c13d16": {"doc_hash": "04bb282e9b4de2dcd83d1da65e22981be739315d88b77d2116f7a5a3fc7210f3", "ref_doc_id": "67caaf31-0abd-45ff-8aee-a8fd39ad2dca"}, "32b4b039-6b2a-4beb-a2f0-6ae0f369bcfd": {"doc_hash": "8a3008e9b9f3081bd5381917f122843967911d083fae1bcb9a3c583ce9880f6e", "ref_doc_id": "67caaf31-0abd-45ff-8aee-a8fd39ad2dca"}, "3de03ce0-0c80-4006-ad6c-111958bd422d": {"doc_hash": "000cefa5294325b361d6905103df5e919844ab4e8127962eae05090a8ca83f6e", "ref_doc_id": "67caaf31-0abd-45ff-8aee-a8fd39ad2dca"}, "f35635d8-d6ba-4599-8df4-54064116dfe2": {"doc_hash": "edbc01b8802267640e2ca41b85fd8ddc105031682bb03e9da1639e2807955773", "ref_doc_id": "67caaf31-0abd-45ff-8aee-a8fd39ad2dca"}, "75b56390-c7c0-4aa3-92bd-360fb300beff": {"doc_hash": "3d13d3a79b4861c389dffa0aee60116f6312b34225012aea88c8b7d781826bf1", "ref_doc_id": "67caaf31-0abd-45ff-8aee-a8fd39ad2dca"}, "6f4fa22c-36ab-4189-856d-0359ea97c164": {"doc_hash": "dba16c3982cf1ce70711febc7fe547dbea73dd27448c83c85430b5c0fdc752b5", "ref_doc_id": "67caaf31-0abd-45ff-8aee-a8fd39ad2dca"}, "e8534c91-b331-4be3-b790-77a816f72ea1": {"doc_hash": "6d1d108ecc1799ce4805baa8473cb774220f25657c0da844df864463a1bfa636", "ref_doc_id": "67caaf31-0abd-45ff-8aee-a8fd39ad2dca"}, "2634fb89-fb15-4512-8377-b2ef79a93946": {"doc_hash": "6e3b1a3c6bb356cec06c45526c49a47ece61e76f34fcad722e5d615122bc727e", "ref_doc_id": "f69422f9-3bbf-42ab-a90b-6dfd4de29c6b"}, "8649b97f-3190-4208-aa9c-eaab63e5490e": {"doc_hash": "f9c6a5de63d84146bfe151adf15d69b970ec05a775ec1771a0b5a16ce7e99482", "ref_doc_id": "f69422f9-3bbf-42ab-a90b-6dfd4de29c6b"}, "225d592a-5c05-43d8-994c-0fb2e8948929": {"doc_hash": "deac29da695b6f608338be4704c7b6e970c755dc68c60ab616b0e10e06d20bfa", "ref_doc_id": "b7651718-c022-4b9a-84c6-55af40abf08e"}, "5f7a56ab-3811-400f-93f3-ce17f9fd03c3": {"doc_hash": "91dfc56200bb3754138a31480f07c16b549582ecef2ecd88d0a16e8709ccb0db", "ref_doc_id": "b7651718-c022-4b9a-84c6-55af40abf08e"}, "4ca82251-7c02-40ba-9c4e-25a5daa2e6a4": {"doc_hash": "e2f87b00f0bf8b9054102801383f5cadfc19528978a23952fd3be8638f7f8d7b", "ref_doc_id": "e4ace45a-51e2-4bf6-a4bd-c15ac40c1d88"}, "0fdb5891-8193-4d80-ba81-5215e5899e04": {"doc_hash": "6406d5000a6f400a9be76f408314a50f2e87ec23901a2845a4412d6035cc01a0", "ref_doc_id": "615a3998-f805-43b5-abfa-6298517a81c2"}, "85951a62-48e2-42a0-8342-2bb8dda24b17": {"doc_hash": "54890bcde7e4929cc86175e92c4b39b3c0396b5c0d02e7cdbbad6dc9a50bdff8", "ref_doc_id": "a460c8ee-dc48-4652-a367-01965f59667d"}, "4be74f8d-4aed-444f-beea-13918db68784": {"doc_hash": "0cbb9cbcd5735d3c9e9cb0aa4242e930ebb095e50c2ebf48316638a9e74b0de1", "ref_doc_id": "a460c8ee-dc48-4652-a367-01965f59667d"}, "abc9aed4-4149-4c30-a31a-68da53bab925": {"doc_hash": "e8b984f31a498e6f89e871f92310b04e7ef7e9cf0e25f0400921d597b9125fde", "ref_doc_id": "15c15a95-fc5f-4b58-8490-aa52eaed33ef"}, "f0cc3f11-4ab4-4ddc-946d-d3165a0b0c04": {"doc_hash": "71862bb7b5e15c4b9b5dbd4bd6b592f4239dd60914e960e7d0a54fa27cf319b4", "ref_doc_id": "15c15a95-fc5f-4b58-8490-aa52eaed33ef"}, "edd03f20-bb9a-44a9-b058-f4ff46fdbbc1": {"doc_hash": "f9df796a75236e941874cf8c28357b987484eb01114b76f76b86f4da3ca38729", "ref_doc_id": "15c15a95-fc5f-4b58-8490-aa52eaed33ef"}, "1726f152-9d02-489d-aec5-555acf9f7b62": {"doc_hash": "a5be3dff00ffd718815b860167509e9bfc138af862e7640026b9ef6b9909ee6c", "ref_doc_id": "15c15a95-fc5f-4b58-8490-aa52eaed33ef"}, "d8ba8dc5-7c29-4941-bb42-8a74e07d080f": {"doc_hash": "0fe85c110c42061ad5e899d5e03d4012dc6041b942423aee8da5f1e873107e12", "ref_doc_id": "15c15a95-fc5f-4b58-8490-aa52eaed33ef"}, "6364689a-092b-405b-ae4f-91b09e296e92": {"doc_hash": "3e920eafeae229db6c15aa16e3040aafe6cf159d0be0545bf8aa28e7d768fbc2", "ref_doc_id": "15c15a95-fc5f-4b58-8490-aa52eaed33ef"}, "dfe04ab0-37d8-4de1-b912-84a4324f08d5": {"doc_hash": "65cb8aeffefc5cd06a2db44c68d6889d688a42c7bba7679fd3dc0a4b6c0746ee", "ref_doc_id": "15c15a95-fc5f-4b58-8490-aa52eaed33ef"}, "e93a5b0f-61bf-4144-acfb-df1f1a6197e9": {"doc_hash": "8636071bdbf7bea3d55c26c206a73c7016db2085efcde0779387947833d2976a", "ref_doc_id": "5f2edb2f-eb39-44c4-a3b6-cc756152e550"}, "f1553cf6-ef2c-46ab-ba6a-94807f0401b1": {"doc_hash": "1fd3fe3b157f042efd1436a41eee63c2a8b5227f3fea469bb627a6561872ce71", "ref_doc_id": "c4f348d0-ee7d-4342-8e5a-ba0c45af1230"}, "2df0cae3-e4c3-44e7-9a5b-9ebe31cd0f06": {"doc_hash": "1388d5c4983c4e9ed45402b5f1f08c7177780689e358f7c0828355e24f2f9139", "ref_doc_id": "c4f348d0-ee7d-4342-8e5a-ba0c45af1230"}, "c53b6e61-705b-43c8-83a6-2f6fa74d62e6": {"doc_hash": "f3f6860826be1dc5980b7884477798e6ea51d780e2071b79e491eec17d89fa34", "ref_doc_id": "2a2db8b3-1661-4454-930a-9f7e80dcc03e"}, "600a2904-a510-4a00-b7ae-6192c0b8ed3e": {"doc_hash": "971b9dd14820eb8de57205d965e3fe00e0a57a9637f8135ec02d9a15a85a967a", "ref_doc_id": "2a2db8b3-1661-4454-930a-9f7e80dcc03e"}, "54ec65b9-d035-44e4-8854-78882ec4f3cf": {"doc_hash": "80c3058e91d1fe1f5fe3da1e6e26bbaa1755949fad3437310fadcda4d837b735", "ref_doc_id": "480aee47-3d73-4005-a011-a2cdf3e5c36b"}, "8798443a-ce21-4ebb-be9c-07168555f445": {"doc_hash": "c6e35abeaa5ede32dffb29f8b7b85b963bf6dd8c99bbfb3b8a65fc32a5d974a0", "ref_doc_id": "480aee47-3d73-4005-a011-a2cdf3e5c36b"}, "f283b1a9-9e29-4d74-83ba-25416ddb85b4": {"doc_hash": "39acaeae723675f574900c090d712b9a399474afebd958365a64233f95fd9c4b", "ref_doc_id": "b538b4d3-fb8a-4f2e-9349-c0f9d4620e3f"}, "966cc906-fe3f-4c41-b893-bfec380c136b": {"doc_hash": "154febc2e478e3d378d620de48bdd7f2c8db919fcd84447f5ac271bf703015c6", "ref_doc_id": "b538b4d3-fb8a-4f2e-9349-c0f9d4620e3f"}, "c308d7f5-db1c-408c-99e3-fed6e9dc2500": {"doc_hash": "c1e775d3c45522a3f3452b92066120431288303b33c0b575bb74b782a83a7194", "ref_doc_id": "b538b4d3-fb8a-4f2e-9349-c0f9d4620e3f"}, "9acbed65-3e96-4ec8-94a5-e0f41dfa6906": {"doc_hash": "e81bc99b8b653e90ca877e766758e577f65f4a1745cb70561362f54ebfe143f7", "ref_doc_id": "b538b4d3-fb8a-4f2e-9349-c0f9d4620e3f"}, "38cb9f32-05ac-41b0-a0b6-34f9bcab0c1e": {"doc_hash": "4d2b8607d3c09bf10647a3e828b55c55d8060f9352814c96fc607abd6f48cb59", "ref_doc_id": "b538b4d3-fb8a-4f2e-9349-c0f9d4620e3f"}, "ea729bc7-7309-4996-9fd7-511296e1a9fe": {"doc_hash": "d820f6978ac7d44c23ea4ccf346121ad364df353356b79326f38605dda4286e6", "ref_doc_id": "b538b4d3-fb8a-4f2e-9349-c0f9d4620e3f"}, "15093888-59b3-40f4-bdcf-b940b1d5507f": {"doc_hash": "5ec05c89db977557bda9c3f3838b641c78dc60a0be8e58a8a0394eef972c6897", "ref_doc_id": "b538b4d3-fb8a-4f2e-9349-c0f9d4620e3f"}, "3aed001b-20fe-4f0d-a1d5-2480e18b45ea": {"doc_hash": "3013da98cef2eed901bf4e11d34ce10a2758b453866186521c28cd9d89ceb382", "ref_doc_id": "1c7be2fa-8287-4845-a5e1-d12a3f1f8b6a"}, "92df86b5-3739-4ac5-8c2d-657ff353e45c": {"doc_hash": "515179d883d17d38b1cd1444a72b18ae8b9c574221d268642d874dae6fc36cfb", "ref_doc_id": "1c7be2fa-8287-4845-a5e1-d12a3f1f8b6a"}, "c5cb6f00-e26c-45b5-804d-f1642a20730e": {"doc_hash": "3ec62a236dfb29961462068f563b1e930bd48f8fdd4ed71cd6cbc78b060fb5ba", "ref_doc_id": "9163378a-17bd-44d7-99ca-4db49ce71038"}, "7572a6f0-85cf-40f9-9c6c-a61069b48bc1": {"doc_hash": "720c2bb2b102c20c32edfec6a50947354dfacc64176e05445f93e0f10de85cdc", "ref_doc_id": "9163378a-17bd-44d7-99ca-4db49ce71038"}, "b92aeba7-6504-49f0-bbab-675078bc7579": {"doc_hash": "0f93d4ac555737271002b17dc93710367eda9d62608da8a4e9d3e91386e9db2f", "ref_doc_id": "9163378a-17bd-44d7-99ca-4db49ce71038"}, "d08fbc0b-24a6-4d45-a789-9f3bc37d909e": {"doc_hash": "2aa542001ca165cdb2e271c7f79f784f16f475e5d12bc84eecb4ae4ed800337c", "ref_doc_id": "9163378a-17bd-44d7-99ca-4db49ce71038"}, "64fdb6e5-4bbf-488d-b4dc-2d898d1a2d7a": {"doc_hash": "f5b6af537624b099da25e418f38b3bb71e2012e239c31f635a7a7661bb1bad40", "ref_doc_id": "9163378a-17bd-44d7-99ca-4db49ce71038"}, "b82268ef-daae-46bd-94c4-344ded6b6108": {"doc_hash": "6d46b559dc048afe6042dbb71e3210ef23c0d05ad7aca49d6d87d1a4a1095e54", "ref_doc_id": "9163378a-17bd-44d7-99ca-4db49ce71038"}, "c1a871cb-a7ae-4fd6-928f-9c40439d67c7": {"doc_hash": "033949163a991cf2f29af213037ef658a98ddef37d61ad739cfadacc192078c7", "ref_doc_id": "9163378a-17bd-44d7-99ca-4db49ce71038"}, "c7a77f1c-8dcd-40e8-b4e1-fc598601b2da": {"doc_hash": "de222bc410d72cd19bba888f545c8e99d76bd4cff41b95dee9b86dca6452e06e", "ref_doc_id": "0841d887-6c2e-4726-8d80-e1b1276bfbf4"}, "bceaeffd-6772-4372-8a11-0dcd55169289": {"doc_hash": "71bcb65473d180b92735e9e618637d1ce09dc0883355709301877557dc20dda2", "ref_doc_id": "0841d887-6c2e-4726-8d80-e1b1276bfbf4"}, "cb809c7f-4dfd-4772-b78f-f6a4f89090b5": {"doc_hash": "5b6e66df4fa69cd1970f978dba95de1c2ad3b0ddf83857cac55db161ade4f3d9", "ref_doc_id": "88854f72-5bc3-4eb6-9d97-37a11e6d00cb"}, "cd197ac2-243a-4973-8c62-7c2bacc19cc8": {"doc_hash": "38ea62a74f8986f063655027cf3ff7e16902d990a2b23c0d6f41e23bfe7d2909", "ref_doc_id": "88854f72-5bc3-4eb6-9d97-37a11e6d00cb"}, "df9c95c5-4b47-4699-8491-652639d49c33": {"doc_hash": "9d305e96477f0cc5e04776ba70bb2f3e95bb39d753a85ec26d1b47efa1480157", "ref_doc_id": "ee109f25-ba0c-4a93-af47-c7737d3534fe"}, "51efda83-c5ec-497c-a1a5-4d7870c8eff6": {"doc_hash": "bbab5790543c4b6dbffbcf36f9cb92e00977b5b378683bed02b82937e1a217eb", "ref_doc_id": "21fc4d23-2342-4854-9d3a-9c182580c80b"}, "baec1a96-838d-4dcc-8a75-8d9f401d77c1": {"doc_hash": "a09953d338219519e22ad0b1f7b1673c8f16a7b38ccc0a869b1af4661aba638c", "ref_doc_id": "c072613c-baec-4287-9adc-d80350737e07"}, "d62f0f91-d4c8-4acc-93bd-a29438537f2b": {"doc_hash": "204e8471d612a71faf41cc6a0d15b090e311245293d39b4322b2296012570a75", "ref_doc_id": "7c38a766-2006-49e9-8faf-523c26f7e9bb"}, "2b09d979-9795-4cfa-92d1-dddc06c18fa3": {"doc_hash": "e82d653f3f62749f27c9b73a2c8ddc67dcf7c0b457cb54aa82b62c98fe163344", "ref_doc_id": "0a18e2e4-3fdf-4cf6-b442-4e8d1f6f08cd"}, "53072224-d8b7-4075-9422-40253e9021ae": {"doc_hash": "2c7ccf1aa2a78a39b1a47c5727d0d82b8bbd61346114bb638f23ce60d12dd766", "ref_doc_id": "122838c8-d639-4921-93fb-5955862e46b1"}, "d8fe4b90-02d4-4699-aacb-b776f76f85ad": {"doc_hash": "635ca72427027f65737ffc40dfeb963853b69ace4918d2ed8f18a3fae8c5e2ea", "ref_doc_id": "05701ad3-36a7-453a-8b0b-c9307eaa10fa"}, "c6e52d0c-f10c-4439-a553-a72462761dce": {"doc_hash": "3f2dfe95275158a829bd8ee8c90d260632f287e1ad81f5a373aa8385e7c64747", "ref_doc_id": "05701ad3-36a7-453a-8b0b-c9307eaa10fa"}, "9f3f25ee-5bcd-4a9a-8213-a82119c42509": {"doc_hash": "88ff7c49b9055a46818679e4210307ba576b67a73370477d39f281b3c8faadb4", "ref_doc_id": "05701ad3-36a7-453a-8b0b-c9307eaa10fa"}, "117f86ad-147c-4fe5-902d-b99d4a74bf01": {"doc_hash": "ef95fd04859eb25120c3430656baa8881bc58ea66ef3bf7fcccc9063e24a0d78", "ref_doc_id": "05701ad3-36a7-453a-8b0b-c9307eaa10fa"}, "aa3a14e5-fba5-42eb-93b2-0fcf9d6ea1ca": {"doc_hash": "71b985ae98578bc80dc109f7e26f073e6e0bdebb85c899cdfb8ccb961cda723d", "ref_doc_id": "05701ad3-36a7-453a-8b0b-c9307eaa10fa"}, "af799cb2-cf85-4ec8-b63e-e1f654c99f68": {"doc_hash": "611d1e4d2ecdd2074bf84095908b2b4b0300a6212c634882376ff6d27ba9cf76", "ref_doc_id": "05701ad3-36a7-453a-8b0b-c9307eaa10fa"}, "97150e0c-1c44-45fe-86eb-c48322f4edd2": {"doc_hash": "e91666cff7a6ca7662b2a503388016071ff06dd3e83a70ffecdb7a8999582929", "ref_doc_id": "05701ad3-36a7-453a-8b0b-c9307eaa10fa"}, "996de952-92fd-435b-932d-785c21e0bd05": {"doc_hash": "f6a11c434bf0d0ef0538798338d9061bf27499bb969010fb0fd0f30803ce25d6", "ref_doc_id": "ad321512-8ac2-4b6d-ba02-5224d7e8bf31"}, "53bba905-f6e5-4fbb-86f2-f501c0a7936b": {"doc_hash": "20ea5fad76d9f5fd76a3e7901c2ce9df2cb377de83d1c445119b7a682e081013", "ref_doc_id": "ad321512-8ac2-4b6d-ba02-5224d7e8bf31"}, "bee3f728-6e21-4e72-8a42-2d53f6ae5955": {"doc_hash": "2a3055a85eba523f6a085a218f0cac5591a10974319dc9b2c460d3ddecc12203", "ref_doc_id": "bd615567-0e53-4243-a9d7-ddc0f6531d78"}, "03b2fcf5-5c41-4cff-8d79-37a1c1db88ba": {"doc_hash": "31c54ad70d8d068d77224616f3beb4e45d3a7d61b38e43ffe0c66f08c3263b0f", "ref_doc_id": "bd615567-0e53-4243-a9d7-ddc0f6531d78"}, "b75469d9-a4ce-4552-80d0-31121dfb1109": {"doc_hash": "f4aad964b0f4ac4211db89cace88ced1c0ab6afffd7b05016493f316bcedb466", "ref_doc_id": "bd615567-0e53-4243-a9d7-ddc0f6531d78"}, "844a40ca-56e2-4377-80e9-a5012cdb116e": {"doc_hash": "0a80c45db10a31b695d0fad68489999b90d3fbfb7c48e0ad68ae2ea39b3fa9bb", "ref_doc_id": "bd615567-0e53-4243-a9d7-ddc0f6531d78"}, "1f444111-b07e-4bcd-9d0a-8a1f138f253a": {"doc_hash": "9d0975ac2e3f7408706bdf81889422bef78a47e1d70cd765326deca6d601cb01", "ref_doc_id": "bd615567-0e53-4243-a9d7-ddc0f6531d78"}, "392ceefc-6532-4b38-afdd-213eef62fcf2": {"doc_hash": "23abccdce717049ed3de99f45f5e5be9a73248d5ae8948b4a6b555dd0e3ffa39", "ref_doc_id": "bd615567-0e53-4243-a9d7-ddc0f6531d78"}, "98207a61-5f10-46bf-a3be-7510e79c6f42": {"doc_hash": "4e573581d758b641cef071619f8472338d9f44e2c1b74ec07c2751a6e4a74c17", "ref_doc_id": "bd615567-0e53-4243-a9d7-ddc0f6531d78"}, "731e05a3-dbc8-478e-9cdc-644d711fde13": {"doc_hash": "678914e3afd4df0727f284f44cba60433a1a848d71daed9fc82da5a6e380fcb8", "ref_doc_id": "f98d43a4-c75c-44e1-8b88-783448616469"}, "aaf0f4c8-36bf-4d75-980a-fddf25eecda6": {"doc_hash": "57b3f4d6e92fa2a9a16d13641cc8f67acb0887b57b4672448238e2a85008da23", "ref_doc_id": "f98d43a4-c75c-44e1-8b88-783448616469"}, "c84318ca-5580-4c61-9504-ffa964f49d9b": {"doc_hash": "8d23b8f3e58fe8f1afbec8db5b00d3ce849828f21a84c3088d03b2cbe37c401b", "ref_doc_id": "018571e4-d492-4eb5-ad51-6e9535271bea"}, "1a75a8a2-89f6-4904-ac55-f3188b1af7f7": {"doc_hash": "3b2e6257dcac4e65917b873656f4530ffbf35ce4e25d7b22253eef0bc75b8232", "ref_doc_id": "8da3c507-947f-42fd-8338-09dfc8efc536"}, "0fc6f802-5794-46cd-b803-8e885db7b013": {"doc_hash": "76a28293b02cf87f10ba982cbadf9720991213d5f77a14379f2ca8d31d314008", "ref_doc_id": "6b008b47-fd07-4e11-997f-e35767657214"}, "6f345aad-b1ff-408b-8b08-c2cce9c565b0": {"doc_hash": "ce5b8c0e4cf1b9da4c39c7c2462830f7bae03071d9d7f09d897fcccf7a790289", "ref_doc_id": "196038fc-1366-4d00-9964-9a79a3506aca"}, "d5c82260-cf1e-4f11-94a8-ddad6ef7f565": {"doc_hash": "19a2f56df12ed157ce700eeb5e27c38bae80f84f0561c81f30106d5d73c56068", "ref_doc_id": "65a4e1ae-01df-4a75-8dab-d2614b3f90f4"}, "e62ad495-8263-45e0-800a-71a35f0e728b": {"doc_hash": "4389afed2975b0335bdc74328f605528c2397e95e4f2ca04f79d5fd5710827a8", "ref_doc_id": "1638439e-312c-49db-a171-783fba222374"}, "2fdd2a99-9f51-4791-ac11-8d3b0226d61a": {"doc_hash": "a59ced9cc0ba35fa7c11acdce8609636c95e7fca1df86979e071b5a8de22e070", "ref_doc_id": "b4d27173-2a9e-4a5d-9c7e-df39b946ef87"}, "60f77b64-44c4-4f02-a112-2c6ebd82cfe8": {"doc_hash": "7c6a7795834f5d29c22f8afddca762dd58fa9e6be2799d96f019d9ab3c3e9ffb", "ref_doc_id": "0d5366e3-720d-4296-b3b8-0bc8ea181d53"}, "5e7726f2-6863-4c98-b8fb-98cf4e47dfff": {"doc_hash": "c82ab88acb05f9f96baa21ea5b2811c85813350a1c44cba491dd995c339cefbd", "ref_doc_id": "0d5366e3-720d-4296-b3b8-0bc8ea181d53"}, "2ec69cdd-6a38-4d5b-8f4d-b9e896bba69d": {"doc_hash": "b30902015d8ad8593f6c074295913b06d729f0773b4ca172da7f55ff90b66ca1", "ref_doc_id": "0d5366e3-720d-4296-b3b8-0bc8ea181d53"}, "65dc91a1-1dc1-407c-9dd2-5285ff3c3128": {"doc_hash": "605a60687fb9053bb1a997467253eac31269d72b64b47dd7ba743120a3baed35", "ref_doc_id": "0d5366e3-720d-4296-b3b8-0bc8ea181d53"}, "d3d45944-c42e-4e07-818c-3308de054334": {"doc_hash": "572837703c210389462dd118a395be2edef3c0a612e627b8a323b9bad865b71f", "ref_doc_id": "0d5366e3-720d-4296-b3b8-0bc8ea181d53"}, "b78d9453-ea28-40a6-9f6d-0f380b707ac9": {"doc_hash": "2f8eb8268172a501bc0828482690533a395c4848a7f7d7d357b0d71792e65117", "ref_doc_id": "0d5366e3-720d-4296-b3b8-0bc8ea181d53"}, "4e0a404c-4696-4e79-b79b-6bc80db8a821": {"doc_hash": "a2b257863e13c668c5f202fc2277b6a7e205efb343f8c00b3621489b4a42fb6b", "ref_doc_id": "0d5366e3-720d-4296-b3b8-0bc8ea181d53"}, "e4d6595c-5848-4df5-8971-8c6cae4fcaa5": {"doc_hash": "acf051d019e59f79f71b8d0fb32ea339bfd430b24f2145f848ab8ee8889d8c31", "ref_doc_id": "42794a6d-e39a-408f-b501-25d2e5075e43"}, "3ed0f161-780b-4520-9ac4-676a60c50d47": {"doc_hash": "d8208e92970aaa6318e87efaba624c9d81f811c281a58a8ad5bb25574337330e", "ref_doc_id": "42794a6d-e39a-408f-b501-25d2e5075e43"}, "571503e2-b319-4536-9d5c-143ddab4f8e9": {"doc_hash": "6c42be8505e8115996ef9bf07f282c18e8cdd9ba7509c387aba9263c0a4c1c4b", "ref_doc_id": "645beb4b-3593-4ade-a39a-049bc36835ef"}, "62febbfa-f5aa-4749-999e-2d9e47252b78": {"doc_hash": "9779a8b8bec6350b0b4dd9cbc87b10e7d24848c8e8d6d0ca124a3be23f9830f8", "ref_doc_id": "645beb4b-3593-4ade-a39a-049bc36835ef"}, "303d5504-c8ac-4b26-9ca0-e4f1808cb673": {"doc_hash": "5e04926d9dde6f999c9f4aaba3cf4d19a30e361d81f95f5cea2fde7e82fed869", "ref_doc_id": "4723f997-cf60-41aa-8790-7e5946369504"}}, "docstore/data": {"8d5804f3-511b-4db7-a348-7ff770daf7e2": {"__data__": {"id_": "8d5804f3-511b-4db7-a348-7ff770daf7e2", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/dune/dune_api.md", "file_name": "dune_api.md", "file_type": "text/markdown", "file_size": 0, "creation_date": "2025-02-14", "last_modified_date": "2025-02-14"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b48593f2-ed3e-4266-882d-ec1d883803a2", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/dune/dune_api.md", "file_name": "dune_api.md", "file_type": "text/markdown", "file_size": 0, "creation_date": "2025-02-14", "last_modified_date": "2025-02-14"}, "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 0, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1b0df254-b641-4a14-9251-a51170ac9e6e": {"__data__": {"id_": "1b0df254-b641-4a14-9251-a51170ac9e6e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-14", "last_modified_date": "2025-02-14"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9b054b66-ca01-49a9-9d7d-0ee8485abdc2", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-14", "last_modified_date": "2025-02-14"}, "hash": "bad59bddc70e6fc4cf1de6c6e55cb6110fdba4c33c0112bc39f65b1242b1ff36", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cf3b7f08-a7e9-4674-b2b9-1313cddc8899", "node_type": "1", "metadata": {}, "hash": "37e5196d0667ffb2d882ce132001296012574e481f700509f4d982d6244b8c5a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Search for casts on Farcaster via Neynar API\n\nhttps://api.neynar.com/v2/farcaster/cast/search\nSearch for casts based on a query string, with optional AND filters\n\nSearching Casts\nYou can search for casts using keywords and commands in the search query. The following search commands are supported:\n\nDate Range Commands\nbefore:YYYY-MM-DD - Find casts created before the specified date\nafter:YYYY-MM-DD - Find casts created after the specified date\nFor example:\n\nstar wars before:2023-01-01 - Find Star Wars-related casts from before 2023\nblockchain after:2023-06-01 - Find blockchain-related casts from after June 2023\nQuery Params\nq\nstring\nrequired\nQuery string to search for casts. Include 'before:YYYY-MM-DD' or 'after:YYYY-MM-DD' to search for casts before or after a specific date.\n\nauthor_fid\nint32\nFid of the user whose casts you want to search\n\nviewer_fid\nint32\nProviding this will return search results that respects this user's mutes and blocks and includes viewer_context.\n\nparent_url\nstring\nParent URL of the casts you want to search\n\nchannel_id\nstring\nChannel ID of the casts you want to search\n\npriority_mode\nboolean\nDefaults to false\nWhen true, only returns search results from power badge users and users that the viewer follows (if viewer_fid is provided).\n\nfalse\nlimit\nint32\n1 to 100\nDefaults to 25\nNumber of results to fetch\n\n25\ncursor\nstring\nPagination cursor\n\nconst url = 'https://api.neynar.com/v2/farcaster/cast/search?priority_mode=false&limit=25';\nconst options = {\nmethod: 'GET',\nheaders: {accept: 'application/json', 'x-api-key': 'NEYNAR_API_DOCS'}\n};\n\nfetch(url, options)\n.then(res => res.json())\n.then(json => console.log(json))\n.catch(err => console.error(err));\n\nResponse:\n{ \"result\": { \"casts\": [ { \"hash\": \"string\", \"parent_hash\": \"string\", \"parent_url\": \"string\", \"root_parent_url\": \"string\", \"parent_author\": { \"fid\": 0 }, \"author\": { \"object\": \"user\", \"fid\": 3, \"username\": \"string\", \"display_name\": \"string\", \"custody_address\": \"string\", \"pfp_url\": \"string\", \"profile\": { \"bio\": { \"text\": \"string\", \"mentioned_profiles\": [ \"string\" ] }, \"location\": { \"latitude\": 0, \"longitude\": 0, \"address\": { \"city\": \"string\", \"state\": \"string\", \"state_code\": \"string\", \"country\": \"string\", \"country_code\": \"string\" } } }, \"follower_count\": 0, \"following_count\": 0, \"verifications\": [ \"string\" ], \"verified_addresses\": { \"eth_addresses\": [ \"string\" ], \"sol_addresses\": [ \"string\" ] }, \"verified_accounts\": [ { \"platform\": \"x\", \"username\": \"string\" } ], \"power_badge\": true, \"experimental\": { \"neynar_user_score\": 0 }, \"viewer_context\": { \"following\": true, \"followed_by\": true, \"blocking\": true, \"blocked_by\": true } }, \"text\": \"string\", \"timestamp\": \"2025-02-14T18:58:33.704Z\", \"embeds\": [ { \"url\": \"string\", \"metadata\": { \"\\_status\": \"string\", \"content_type\": \"string\", \"content_length\": 0, \"image\": { \"height_px\": 0, \"width_px\": 0 }, \"video\": { \"duration_s\": 0, \"stream\": [ { \"codec_name\": \"string\", \"height_px\": 0, \"width_px\": 0 } ] }, \"html\": { \"favicon\": \"string\", \"modifiedTime\": \"string\", \"ogArticleAuthor\": \"string\", \"ogArticleExpirationTime\": \"string\", \"ogArticleModifiedTime\": \"string\", \"ogArticlePublishedTime\": \"string\", \"ogArticlePublisher\": \"string\", \"ogArticleSection\": \"string\", \"ogArticleTag\": \"string\", \"ogAudio\": \"string\", \"ogAudioSecureURL\": \"string\", \"ogAudioType\": \"string\", \"ogAudioURL\": \"string\", \"ogAvailability\": \"string\", \"ogDate\": \"string\", \"ogDescription\": \"string\", \"ogDeterminer\": \"string\", \"ogEpisode\": \"string\", \"ogImage\": [ { \"height\": \"string\",", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3504, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cf3b7f08-a7e9-4674-b2b9-1313cddc8899": {"__data__": {"id_": "cf3b7f08-a7e9-4674-b2b9-1313cddc8899", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-14", "last_modified_date": "2025-02-14"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9b054b66-ca01-49a9-9d7d-0ee8485abdc2", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-14", "last_modified_date": "2025-02-14"}, "hash": "bad59bddc70e6fc4cf1de6c6e55cb6110fdba4c33c0112bc39f65b1242b1ff36", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1b0df254-b641-4a14-9251-a51170ac9e6e", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-14", "last_modified_date": "2025-02-14"}, "hash": "ef3e4585c1019285f26a77ee797df621ea32949781a863290b0a5203de1e27e0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3cb91a60-9ff1-4807-b7b9-b6955074342a", "node_type": "1", "metadata": {}, "hash": "8d4477874af18e7b73fb9aa28c0cda8d073e463d8666dad03250d0da70453c53", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"video\": { \"duration_s\": 0, \"stream\": [ { \"codec_name\": \"string\", \"height_px\": 0, \"width_px\": 0 } ] }, \"html\": { \"favicon\": \"string\", \"modifiedTime\": \"string\", \"ogArticleAuthor\": \"string\", \"ogArticleExpirationTime\": \"string\", \"ogArticleModifiedTime\": \"string\", \"ogArticlePublishedTime\": \"string\", \"ogArticlePublisher\": \"string\", \"ogArticleSection\": \"string\", \"ogArticleTag\": \"string\", \"ogAudio\": \"string\", \"ogAudioSecureURL\": \"string\", \"ogAudioType\": \"string\", \"ogAudioURL\": \"string\", \"ogAvailability\": \"string\", \"ogDate\": \"string\", \"ogDescription\": \"string\", \"ogDeterminer\": \"string\", \"ogEpisode\": \"string\", \"ogImage\": [ { \"height\": \"string\", \"type\": \"string\", \"url\": \"string\", \"width\": \"string\", \"alt\": \"string\" } ], \"ogLocale\": \"string\", \"ogLocaleAlternate\": \"string\", \"ogLogo\": \"string\", \"ogMovie\": \"string\", \"ogPriceAmount\": \"string\", \"ogPriceCurrency\": \"string\", \"ogProductAvailability\": \"string\", \"ogProductCondition\": \"string\", \"ogProductPriceAmount\": \"string\", \"ogProductPriceCurrency\": \"string\", \"ogProductRetailerItemId\": \"string\", \"ogSiteName\": \"string\", \"ogTitle\": \"string\", \"ogType\": \"string\", \"ogUrl\": \"string\", \"ogVideo\": [ { \"height\": \"string\", \"type\": \"string\", \"url\": \"string\", \"width\": \"string\" } ], \"ogVideoActor\": \"string\", \"ogVideoActorId\": \"string\", \"ogVideoActorRole\": \"string\", \"ogVideoDirector\": \"string\", \"ogVideoDuration\": \"string\", \"ogVideoOther\": \"string\", \"ogVideoReleaseDate\": \"string\", \"ogVideoSecureURL\": \"string\", \"ogVideoSeries\": \"string\", \"ogVideoTag\": \"string\", \"ogVideoTvShow\": \"string\", \"ogVideoWriter\": \"string\", \"ogWebsite\": \"string\", \"updatedTime\": \"string\", \"oembed\": { \"type\": \"rich\", \"version\": \"string\", \"title\": \"string\", \"author_name\": \"string\", \"author_url\": \"string\", \"provider_name\": \"string\", \"provider_url\": \"string\", \"cache_age\": \"string\", \"thumbnail_url\": \"string\", \"thumbnail_width\": 0, \"thumbnail_height\": 0, \"html\": \"string\", \"width\": 0, \"height\": 0 } }, \"frame\": { \"version\": \"string\", \"image\": \"string\", \"frames_url\": \"string\", \"buttons\": [ { \"title\": \"string\", \"index\": 0, \"action_type\": \"post\", \"target\": \"string\", \"post_url\": \"string\" } ], \"post_url\": \"string\", \"title\": \"string\", \"image_aspect_ratio\": \"string\", \"input\": { \"text\": \"string\" }, \"state\": { \"serialized\": \"string\" } } } }, { \"cast\": { \"hash\": \"string\", \"parent_hash\": \"string\", \"parent_url\": \"string\", \"root_parent_url\": \"string\", \"parent_author\": { \"fid\": 0 }, \"author\": { \"object\": \"user_dehydrated\", \"fid\": 3, \"username\": \"string\", \"display_name\": \"string\", \"pfp_url\": \"string\" }, \"text\": \"string\", \"timestamp\": \"2025-02-14T18:58:33.704Z\", \"type\": \"cast-mention\", \"embeds\": [ { \"url\": \"string\", \"metadata\": { \"\\_status\": \"string\", \"content_type\": \"string\", \"content_length\": 0, \"image\": { \"height_px\": 0, \"width_px\": 0 }, \"video\": { \"duration_s\": 0, \"stream\": [ { \"codec_name\": \"string\", \"height_px\": 0, \"width_px\": 0 } ] }, \"html\": { \"favicon\": \"string\", \"modifiedTime\": \"string\", \"ogArticleAuthor\": \"string\", \"ogArticleExpirationTime\": \"string\", \"ogArticleModifiedTime\": \"string\", \"ogArticlePublishedTime\": \"string\", \"ogArticlePublisher\": \"string\", \"ogArticleSection\": \"string\", \"ogArticleTag\": \"string\", \"ogAudio\": \"string\", \"ogAudioSecureURL\": \"string\",", "mimetype": "text/plain", "start_char_idx": 2861, "end_char_idx": 6050, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3cb91a60-9ff1-4807-b7b9-b6955074342a": {"__data__": {"id_": "3cb91a60-9ff1-4807-b7b9-b6955074342a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-14", "last_modified_date": "2025-02-14"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9b054b66-ca01-49a9-9d7d-0ee8485abdc2", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-14", "last_modified_date": "2025-02-14"}, "hash": "bad59bddc70e6fc4cf1de6c6e55cb6110fdba4c33c0112bc39f65b1242b1ff36", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cf3b7f08-a7e9-4674-b2b9-1313cddc8899", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-14", "last_modified_date": "2025-02-14"}, "hash": "b589263cf757559eb91370fb77b4c707a61e5302d60098be1b6690efb2aa0ee8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5ba18b61-7f77-444a-a93d-61ae172f4beb", "node_type": "1", "metadata": {}, "hash": "a24c8c72a5240868e47c4006df1901c669d108604a1f7191a53d1b36bd8185ed", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "704Z\", \"type\": \"cast-mention\", \"embeds\": [ { \"url\": \"string\", \"metadata\": { \"\\_status\": \"string\", \"content_type\": \"string\", \"content_length\": 0, \"image\": { \"height_px\": 0, \"width_px\": 0 }, \"video\": { \"duration_s\": 0, \"stream\": [ { \"codec_name\": \"string\", \"height_px\": 0, \"width_px\": 0 } ] }, \"html\": { \"favicon\": \"string\", \"modifiedTime\": \"string\", \"ogArticleAuthor\": \"string\", \"ogArticleExpirationTime\": \"string\", \"ogArticleModifiedTime\": \"string\", \"ogArticlePublishedTime\": \"string\", \"ogArticlePublisher\": \"string\", \"ogArticleSection\": \"string\", \"ogArticleTag\": \"string\", \"ogAudio\": \"string\", \"ogAudioSecureURL\": \"string\", \"ogAudioType\": \"string\", \"ogAudioURL\": \"string\", \"ogAvailability\": \"string\", \"ogDate\": \"string\", \"ogDescription\": \"string\", \"ogDeterminer\": \"string\", \"ogEpisode\": \"string\", \"ogImage\": [ { \"height\": \"string\", \"type\": \"string\", \"url\": \"string\", \"width\": \"string\", \"alt\": \"string\" } ], \"ogLocale\": \"string\", \"ogLocaleAlternate\": \"string\", \"ogLogo\": \"string\", \"ogMovie\": \"string\", \"ogPriceAmount\": \"string\", \"ogPriceCurrency\": \"string\", \"ogProductAvailability\": \"string\", \"ogProductCondition\": \"string\", \"ogProductPriceAmount\": \"string\", \"ogProductPriceCurrency\": \"string\", \"ogProductRetailerItemId\": \"string\", \"ogSiteName\": \"string\", \"ogTitle\": \"string\", \"ogType\": \"string\", \"ogUrl\": \"string\", \"ogVideo\": [ { \"height\": \"string\", \"type\": \"string\", \"url\": \"string\", \"width\": \"string\" } ], \"ogVideoActor\": \"string\", \"ogVideoActorId\": \"string\", \"ogVideoActorRole\": \"string\", \"ogVideoDirector\": \"string\", \"ogVideoDuration\": \"string\", \"ogVideoOther\": \"string\", \"ogVideoReleaseDate\": \"string\", \"ogVideoSecureURL\": \"string\", \"ogVideoSeries\": \"string\", \"ogVideoTag\": \"string\", \"ogVideoTvShow\": \"string\", \"ogVideoWriter\": \"string\", \"ogWebsite\": \"string\", \"updatedTime\": \"string\", \"oembed\": { \"type\": \"rich\", \"version\": \"string\", \"title\": \"string\", \"author_name\": \"string\", \"author_url\": \"string\", \"provider_name\": \"string\", \"provider_url\": \"string\", \"cache_age\": \"string\", \"thumbnail_url\": \"string\", \"thumbnail_width\": 0, \"thumbnail_height\": 0, \"html\": \"string\", \"width\": 0, \"height\": 0 } }, \"frame\": { \"version\": \"string\", \"image\": \"string\", \"frames_url\": \"string\", \"buttons\": [ { \"title\": \"string\", \"index\": 0, \"action_type\": \"post\", \"target\": \"string\", \"post_url\": \"string\" } ], \"post_url\": \"string\", \"title\": \"string\", \"image_aspect_ratio\": \"string\", \"input\": { \"text\": \"string\" }, \"state\": { \"serialized\": \"string\" } } } }, { \"cast\": { \"object\": \"cast_dehydrated\", \"hash\": \"string\", \"author\": { \"object\": \"user_dehydrated\", \"fid\": 3, \"username\": \"string\", \"display_name\": \"string\", \"pfp_url\": \"string\" } } } ], \"channel\": { \"id\": \"string\", \"name\": \"string\", \"object\": \"channel_dehydrated\", \"image_url\": \"string\", \"viewer_context\": { \"following\": true, \"role\": \"member\" } } } } ], \"type\": \"cast-mention\", \"frames\": [ { \"version\": \"string\", \"image\": \"string\", \"frames_url\": \"string\", \"buttons\": [ { \"title\": \"string\", \"index\": 0, \"action_type\": \"post\", \"target\": \"string\", \"post_url\": \"string\" } ], \"post_url\": \"string\", \"title\": \"string\", \"image_aspect_ratio\": \"string\", \"input\": { \"text\": \"string\" }, \"state\": { \"serialized\": \"string\" } }, { \"version\": \"string\",", "mimetype": "text/plain", "start_char_idx": 5426, "end_char_idx": 8605, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5ba18b61-7f77-444a-a93d-61ae172f4beb": {"__data__": {"id_": "5ba18b61-7f77-444a-a93d-61ae172f4beb", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-14", "last_modified_date": "2025-02-14"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9b054b66-ca01-49a9-9d7d-0ee8485abdc2", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-14", "last_modified_date": "2025-02-14"}, "hash": "bad59bddc70e6fc4cf1de6c6e55cb6110fdba4c33c0112bc39f65b1242b1ff36", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3cb91a60-9ff1-4807-b7b9-b6955074342a", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-14", "last_modified_date": "2025-02-14"}, "hash": "eb696b6511098dd98ba5e992869feb30ad023f286ad3fc1be7111f84672d2466", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5eeb7a06-f792-42b0-9d62-95c7d0857ca8", "node_type": "1", "metadata": {}, "hash": "764d26599d5823bb823b9785ced93ce5e086d5e257fc5fe860e5c5a315181357", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"username\": \"string\", \"display_name\": \"string\", \"pfp_url\": \"string\" } } } ], \"channel\": { \"id\": \"string\", \"name\": \"string\", \"object\": \"channel_dehydrated\", \"image_url\": \"string\", \"viewer_context\": { \"following\": true, \"role\": \"member\" } } } } ], \"type\": \"cast-mention\", \"frames\": [ { \"version\": \"string\", \"image\": \"string\", \"frames_url\": \"string\", \"buttons\": [ { \"title\": \"string\", \"index\": 0, \"action_type\": \"post\", \"target\": \"string\", \"post_url\": \"string\" } ], \"post_url\": \"string\", \"title\": \"string\", \"image_aspect_ratio\": \"string\", \"input\": { \"text\": \"string\" }, \"state\": { \"serialized\": \"string\" } }, { \"version\": \"string\", \"image\": \"string\", \"frames_url\": \"string\", \"manifest\": { \"account_association\": { \"header\": \"string\", \"payload\": \"string\", \"signature\": \"string\" }, \"frame\": { \"version\": \"0.0.0\", \"name\": \"string\", \"home_url\": \"string\", \"icon_url\": \"string\", \"image_url\": \"string\", \"button_title\": \"string\", \"splash_image_url\": \"string\", \"splash_background_color\": \"string\", \"webhook_url\": \"string\" }, \"triggers\": [ { \"type\": \"cast\", \"id\": \"string\", \"url\": \"string\", \"name\": \"string\" }, { \"type\": \"composer\", \"id\": \"string\", \"url\": \"string\", \"name\": \"string\" } ] }, \"author\": { \"object\": \"user_dehydrated\", \"fid\": 3, \"username\": \"string\", \"display_name\": \"string\", \"pfp_url\": \"string\" } } ], \"reactions\": { \"likes\": [ { \"fid\": 3 } ], \"recasts\": [ { \"fid\": 3, \"fname\": \"string\" } ], \"likes_count\": 0, \"recasts_count\": 0 }, \"replies\": { \"count\": 0 }, \"thread_hash\": \"string\", \"mentioned_profiles\": [ { \"object\": \"user\", \"fid\": 3, \"username\": \"string\", \"display_name\": \"string\", \"custody_address\": \"string\", \"pfp_url\": \"string\", \"profile\": { \"bio\": { \"text\": \"string\", \"mentioned_profiles\": [ \"string\" ] }, \"location\": { \"latitude\": 0, \"longitude\": 0, \"address\": { \"city\": \"string\", \"state\": \"string\", \"state_code\": \"string\", \"country\": \"string\", \"country_code\": \"string\" } } }, \"follower_count\": 0, \"following_count\": 0, \"verifications\": [ \"string\" ], \"verified_addresses\": { \"eth_addresses\": [ \"string\" ], \"sol_addresses\": [ \"string\" ] }, \"verified_accounts\": [ { \"platform\": \"x\", \"username\": \"string\" } ], \"power_badge\": true, \"experimental\": { \"neynar_user_score\": 0 }, \"viewer_context\": { \"following\": true, \"followed_by\": true, \"blocking\": true, \"blocked_by\": true } } ], \"channel\": { \"id\": \"string\", \"url\": \"string\", \"name\": \"string\", \"description\": \"string\", \"object\": \"channel\", \"created_at\": 0, \"follower_count\": 0, \"external_link\": { \"title\": \"string\", \"url\": \"string\" }, \"image_url\": \"string\", \"parent_url\": \"string\", \"lead\": { \"object\": \"user\", \"fid\": 3, \"username\": \"string\", \"display_name\": \"string\", \"custody_address\": \"string\", \"pfp_url\": \"string\", \"profile\": { \"bio\": { \"text\": \"string\", \"mentioned_profiles\": [ \"string\" ] }, \"location\": { \"latitude\": 0, \"longitude\": 0, \"address\": { \"city\": \"string\", \"state\": \"string\", \"state_code\": \"string\", \"country\": \"string\", \"country_code\": \"string\" } } }, \"follower_count\": 0, \"following_count\": 0, \"verifications\": [ \"string\" ], \"verified_addresses\": { \"eth_addresses\": [ \"string\" ], \"sol_addresses\": [ \"string\" ] }, \"verified_accounts\": [ { \"platform\": \"x\",", "mimetype": "text/plain", "start_char_idx": 7977, "end_char_idx": 11104, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5eeb7a06-f792-42b0-9d62-95c7d0857ca8": {"__data__": {"id_": "5eeb7a06-f792-42b0-9d62-95c7d0857ca8", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-14", "last_modified_date": "2025-02-14"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9b054b66-ca01-49a9-9d7d-0ee8485abdc2", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-14", "last_modified_date": "2025-02-14"}, "hash": "bad59bddc70e6fc4cf1de6c6e55cb6110fdba4c33c0112bc39f65b1242b1ff36", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5ba18b61-7f77-444a-a93d-61ae172f4beb", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-14", "last_modified_date": "2025-02-14"}, "hash": "975eb5edd3eebdb8c1215c0b9a9f19b9478d76f82ecb45a42d0cdd8fcdb67812", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"image_url\": \"string\", \"parent_url\": \"string\", \"lead\": { \"object\": \"user\", \"fid\": 3, \"username\": \"string\", \"display_name\": \"string\", \"custody_address\": \"string\", \"pfp_url\": \"string\", \"profile\": { \"bio\": { \"text\": \"string\", \"mentioned_profiles\": [ \"string\" ] }, \"location\": { \"latitude\": 0, \"longitude\": 0, \"address\": { \"city\": \"string\", \"state\": \"string\", \"state_code\": \"string\", \"country\": \"string\", \"country_code\": \"string\" } } }, \"follower_count\": 0, \"following_count\": 0, \"verifications\": [ \"string\" ], \"verified_addresses\": { \"eth_addresses\": [ \"string\" ], \"sol_addresses\": [ \"string\" ] }, \"verified_accounts\": [ { \"platform\": \"x\", \"username\": \"string\" } ], \"power_badge\": true, \"experimental\": { \"neynar_user_score\": 0 }, \"viewer_context\": { \"following\": true, \"followed_by\": true, \"blocking\": true, \"blocked_by\": true } }, \"moderator_fids\": [ 0 ], \"member_count\": 0, \"pinned_cast_hash\": \"0xfe90f9de682273e05b201629ad2338bdcd89b6be\", \"viewer_context\": { \"following\": true, \"role\": \"member\" } }, \"viewer_context\": { \"liked\": true, \"recasted\": true }, \"author_channel_context\": { \"following\": true, \"role\": \"member\" } } ], \"next\": { \"cursor\": \"string\" } } }", "mimetype": "text/plain", "start_char_idx": 10468, "end_char_idx": 11629, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e360434e-6ef8-413c-8cea-22dc1f510d1a": {"__data__": {"id_": "e360434e-6ef8-413c-8cea-22dc1f510d1a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-channels.md", "file_name": "neynar_fetch-all-channels.md", "file_type": "text/markdown", "file_size": 7879, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "efc7ce4b-e652-4f41-8ad4-42370f1a58fd", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-channels.md", "file_name": "neynar_fetch-all-channels.md", "file_type": "text/markdown", "file_size": 7879, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d19e4f3e7d6f951dbf6be0d75325739d301d75574ef8b643b84a7ed70e240d8b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "61a8f499-462f-4916-a147-86ae161cbce4", "node_type": "1", "metadata": {}, "hash": "9d0c9b940e135b0c04a55010e78e0dd02d0fb493419219de7ca70c5a002aa1a6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-all-channels\n\n**Endpoint**: `GET /farcaster/channel/list`\n\n## Description\nReturns a list of all channels with their details\n\n## Parameters\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- channels\nproperties:\n  channels:\n    type: array\n    items:\n      type: object\n      required:\n      - id\n      - url\n      - object\n      properties:\n        id:\n          type: string\n        url:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        object:\n          type: string\n          enum:\n          - channel\n        created_at:\n          description: Epoch timestamp in seconds.\n          type: number\n        follower_count:\n          description: Number of followers the channel has.\n          type: number\n        external_link:\n          type: object\n          description: Channel's external link.\n          properties:\n            title:\n              type: string\n            url:\n              type: string\n        image_url:\n          type: string\n        parent_url:\n          type: string\n          format: uri\n        lead: &id003\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid: &id002\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5258, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "61a8f499-462f-4916-a147-86ae161cbce4": {"__data__": {"id_": "61a8f499-462f-4916-a147-86ae161cbce4", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-channels.md", "file_name": "neynar_fetch-all-channels.md", "file_type": "text/markdown", "file_size": 7879, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "efc7ce4b-e652-4f41-8ad4-42370f1a58fd", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-channels.md", "file_name": "neynar_fetch-all-channels.md", "file_type": "text/markdown", "file_size": 7879, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d19e4f3e7d6f951dbf6be0d75325739d301d75574ef8b643b84a7ed70e240d8b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e360434e-6ef8-413c-8cea-22dc1f510d1a", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-channels.md", "file_name": "neynar_fetch-all-channels.md", "file_type": "text/markdown", "file_size": 7879, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "cae8a6aab0a2d13a3e4fd0de816780e851cc8448bb2112cc8b961f9994736d97", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        moderator_fids:\n          type: array\n          items: *id002\n        member_count:\n          type: integer\n          format: int32\n        moderator: *id003\n        pinned_cast_hash:\n          type: string\n          default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n          description: Cast Hash\n        hosts:\n          type: array\n          deprecated: true\n          items: *id003\n        viewer_context:\n          description: Adds context on the viewer's or author's role in the channel.\n          type: object\n          required:\n          - following\n          properties:\n            following:\n              description: Indicates if the user is following the channel.\n              type: boolean\n            role:\n              type: string\n              description: The role of a channel member\n              enum:\n              - member\n              - moderator\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4259, "end_char_idx": 7878, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7ea787d4-3400-430f-be10-dbedfe463e5a": {"__data__": {"id_": "7ea787d4-3400-430f-be10-dbedfe463e5a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d8dedfb5-356f-4f14-8f18-05fac4021531", "node_type": "1", "metadata": {}, "hash": "28a51ea5068f3852330e1cd27ef845c9112e4b91fef90f0909c46aa9ca49b4b2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-all-notifications\n\n**Endpoint**: `GET /farcaster/notifications`\n\n## Description\nReturns a list of notifications for a specific FID.\n\n## Parameters\n- `fid` (query): FID of the user you you want to fetch notifications for. The response will respect this user's mutes and blocks.\n- `type` (query): Notification type to fetch. Comma separated values of follows, recasts, likes, mentions, replies.\n- `priority_mode` (query): When true, only returns notifications from power badge users and users that the viewer follows (if viewer_fid is provided).\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- unseen_notifications_count\n- notifications\n- next\nproperties:\n  unseen_notifications_count:\n    type: integer\n    format: int32\n  notifications:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - most_recent_timestamp\n      - type\n      - seen\n      properties:\n        object:\n          type: string\n        most_recent_timestamp:\n          type: string\n          format: date-time\n        type:\n          type: string\n          enum:\n          - follows\n          - recasts\n          - likes\n          - mention\n          - reply\n          - quote\n        seen:\n          type: boolean\n        follows:\n          type: array\n          items:\n            type: object\n            required:\n            - object\n            - user\n            properties:\n              object:\n                type: string\n                enum:\n                - follow\n              user: &id003\n                type: object\n                required:\n                - object\n                - fid\n                - custody_address\n                - username\n                - profile\n                - follower_count\n                - following_count\n                - verifications\n                - verified_addresses\n                - verified_accounts\n                - power_badge\n                properties:\n                  object:\n                    type: string\n                    enum:\n                    - user\n                  fid: &id002\n                    type: integer\n                    format: int32\n                    description: The unique identifier of a farcaster user (unsigned\n                      integer)\n                    examples:\n                    - 3\n                    - 191\n                    - 2\n                    - 194\n                    - 19960\n                  username:\n                    type: string\n                  display_name:\n                    type: string\n                  custody_address: &id001\n                    type: string\n                    pattern: ^0x[a-fA-F0-9]{40}$\n                    description: Ethereum address\n                  pfp_url:\n                    type: string\n                    description: The URL of the user's profile picture\n                  profile:\n                    type: object\n                    required:\n                    - bio\n                    properties:\n                      bio:\n                        type: object\n                        required:\n                        - text\n                        - mentioned_profiles\n                        properties:\n                          text:\n                            type: string\n                          mentioned_profiles:\n                            type: array\n                            items:\n                              type: string\n                            default: []\n                      location:\n                        description: Coordinates and place names for a location\n                        type: object\n                        required:\n                        - latitude\n                        - longitude\n                        properties:\n                          latitude:\n                            type: number\n                            format: double\n                            minimum: -90\n                            maximum: 90\n                          longitude:\n                            type: number\n                            format: double\n                            minimum: -180\n                            maximum: 180\n                          address:\n                            type: object\n                            required:\n                            - city\n                            - country\n                            properties:\n                              city:\n                                type: string\n                              state:\n                                type: string\n                              state_code:\n                                type: string\n                              country:\n                                type: string\n                              country_code:\n                                type: string\n                  follower_count:\n                    type: integer\n                    format: int32\n                    description: The number of followers the user has.\n                  following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id001\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id001\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5990, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d8dedfb5-356f-4f14-8f18-05fac4021531": {"__data__": {"id_": "d8dedfb5-356f-4f14-8f18-05fac4021531", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7ea787d4-3400-430f-be10-dbedfe463e5a", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "362041418cfd7df1f43e907b9b1eb93beb1c1e0df9d73c8b12a4a3251d86e1b8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9ec494be-473a-4529-ae93-6039b881b25b", "node_type": "1", "metadata": {}, "hash": "ab6945dd1294a860eaba51683311ef07907f3a5a9d7934756d46ba87090a7477", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id001\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id001\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.\n                        items:\n                          type: string\n                          pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                          description: Solana address\n                  verified_accounts:\n                    type: array\n                    description: Verified accounts of the user on other platforms,\n                      currently only X is supported.\n                    items:\n                      type: object\n                      properties:\n                        platform:\n                          type: string\n                          enum:\n                          - x\n                          - github\n                        username:\n                          type: string\n                  power_badge:\n                    type: boolean\n                  experimental:\n                    type: object\n                    required:\n                    - neynar_user_score\n                    properties:\n                      neynar_user_score:\n                        type: number\n                        format: double\n                        description: Score that represents the probability that the\n                          account is not spam.\n                  viewer_context:\n                    type: object\n                    description: Adds context on the viewer's follow relationship\n                      with the user.\n                    required:\n                    - following\n                    - followed_by\n                    - blocking\n                    - blocked_by\n                    properties:\n                      following:\n                        description: Indicates if the viewer is following the user.\n                        type: boolean\n                      followed_by:\n                        description: Indicates if the viewer is followed by the user.\n                        type: boolean\n                      blocking:\n                        description: Indicates if the viewer is blocking the user.\n                        type: boolean\n                      blocked_by:\n                        description: Indicates if the viewer is blocked by the user.\n                        type: boolean\n        cast:\n          allOf:\n          - type: object\n            required:\n            - hash\n            - parent_hash\n            - parent_url\n            - root_parent_url\n            - parent_author\n            - author\n            - text\n            - timestamp\n            - embeds\n            properties:\n              hash:\n                type: string\n              parent_hash:\n                type:\n                - string\n                - 'null'\n              parent_url:\n                type:\n                - string\n                - 'null'\n              root_parent_url:\n                type:\n                - string\n                - 'null'\n              parent_author:\n                type: object\n                required:\n                - fid\n                properties:\n                  fid:", "mimetype": "text/plain", "start_char_idx": 5056, "end_char_idx": 9026, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9ec494be-473a-4529-ae93-6039b881b25b": {"__data__": {"id_": "9ec494be-473a-4529-ae93-6039b881b25b", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d8dedfb5-356f-4f14-8f18-05fac4021531", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d0e7e28bb68eb051a3ce71e889e48a103acc99558526534fcbe6b4aa70ab70b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e149830d-8091-4acb-bf78-c850551861c1", "node_type": "1", "metadata": {}, "hash": "c1b5bb48ae141461219d2a5d14ef95e076cdc8320a2c7e623f09c2ab83b8804a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- 'null'\n              root_parent_url:\n                type:\n                - string\n                - 'null'\n              parent_author:\n                type: object\n                required:\n                - fid\n                properties:\n                  fid:\n                    oneOf:\n                    - type: 'null'\n                    - *id002\n              author: *id003\n              text:\n                type: string\n              timestamp: &id007\n                type: string\n                format: date-time\n              embeds:\n                type: array\n                items:\n                  oneOf:\n                  - &id008\n                    type: object\n                    required:\n                    - url\n                    properties:\n                      url:\n                        type: string\n                      metadata:\n                        type: object\n                        required:\n                        - _status\n                        properties:\n                          _status:\n                            type: string\n                          content_type:\n                            type:\n                            - string\n                            - 'null'\n                          content_length:\n                            type:\n                            - integer", "mimetype": "text/plain", "start_char_idx": 8758, "end_char_idx": 10111, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e149830d-8091-4acb-bf78-c850551861c1": {"__data__": {"id_": "e149830d-8091-4acb-bf78-c850551861c1", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9ec494be-473a-4529-ae93-6039b881b25b", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "cae02a5bd3b253ec8e25ad1c44d457e049cc963ebe55f9b3590da43f639ab057", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "78147b16-c7c6-484f-9e58-94eb1158572b", "node_type": "1", "metadata": {}, "hash": "e61bf51ae7445557f8c13076508eef1ac9d8efe0e50c17ab50272bfe4a635d88", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "content_type:\n                            type:\n                            - string\n                            - 'null'\n                          content_length:\n                            type:\n                            - integer\n                            - 'null'\n                          image:\n                            type: object\n                            properties:\n                              height_px:\n                                type: integer\n                              width_px:\n                                type: integer\n                          video:\n                            type: object\n                            properties:\n                              duration_s:\n                                type: number\n                              stream:\n                                type: array\n                                items:\n                                  type: object\n                                  properties:\n                                    codec_name:\n                                      type: string\n                                    height_px:\n                                      type: integer\n                                    width_px:", "mimetype": "text/plain", "start_char_idx": 9876, "end_char_idx": 11094, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "78147b16-c7c6-484f-9e58-94eb1158572b": {"__data__": {"id_": "78147b16-c7c6-484f-9e58-94eb1158572b", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e149830d-8091-4acb-bf78-c850551861c1", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "87ab7436b9116f1200fbbc4ea27ef5081dd5f3a36aed957704d5db7be3224350", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4f39af8e-c178-44b6-b777-bad8758fae9d", "node_type": "1", "metadata": {}, "hash": "86e726e67d5170fe507171a352ea228236b44f9ffadc619c86ae76e3e49344be", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "codec_name:\n                                      type: string\n                                    height_px:\n                                      type: integer\n                                    width_px:\n                                      type: integer\n                          html:\n                            allOf:\n                            - type: object\n                              properties:\n                                favicon:\n                                  type: string\n                                modifiedTime:\n                                  type: string\n                                ogArticleAuthor:\n                                  type: string\n                                ogArticleExpirationTime:\n                                  type: string\n                                ogArticleModifiedTime:\n                                  type: string\n                                ogArticlePublishedTime:\n                                  type: string\n                                ogArticlePublisher:\n                                  type: string\n                                ogArticleSection:\n                                  type: string\n                                ogArticleTag:\n                                  type: string", "mimetype": "text/plain", "start_char_idx": 10887, "end_char_idx": 12173, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4f39af8e-c178-44b6-b777-bad8758fae9d": {"__data__": {"id_": "4f39af8e-c178-44b6-b777-bad8758fae9d", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "78147b16-c7c6-484f-9e58-94eb1158572b", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "476e2a33bade58e4b8c5a81aec4e1c2519e0696c71b70bfddf7766631c63aaa7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2377a955-26e8-4a48-b2d1-a67e785d3648", "node_type": "1", "metadata": {}, "hash": "eb1b37b820dfcf3988165f8ee339eab4ab3683dff99edb7c1c3ccbc05abe0f44", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ogArticlePublisher:\n                                  type: string\n                                ogArticleSection:\n                                  type: string\n                                ogArticleTag:\n                                  type: string\n                                ogAudio:\n                                  type: string\n                                ogAudioSecureURL:\n                                  type: string\n                                ogAudioType:\n                                  type: string\n                                ogAudioURL:\n                                  type: string\n                                ogAvailability:\n                                  type: string\n                                ogDate:\n                                  type: string\n                                ogDescription:\n                                  type: string\n                                ogDeterminer:\n                                  type: string\n                                ogEpisode:\n                                  type: string\n                                ogImage:\n                                  type: array\n                                  items:\n                                    type: object", "mimetype": "text/plain", "start_char_idx": 11917, "end_char_idx": 13177, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2377a955-26e8-4a48-b2d1-a67e785d3648": {"__data__": {"id_": "2377a955-26e8-4a48-b2d1-a67e785d3648", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4f39af8e-c178-44b6-b777-bad8758fae9d", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "e27bec7e8828f99d335ccdf579bd9ead28e98e5f3f630cb6d562a6ed40476176", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "57fef056-e28a-4288-98ba-ebe3c93052a9", "node_type": "1", "metadata": {}, "hash": "a30718027bd2ca7cf6ecf9cc81c8de7e3de0254c7f75045e67226c9019edbb14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ogEpisode:\n                                  type: string\n                                ogImage:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                      alt:\n                                        type: string\n                                    required:\n                                    - url\n                                ogLocale:\n                                  type: string\n                                ogLocaleAlternate:\n                                  type: string\n                                ogLogo:\n                                  type: string\n                                ogMovie:", "mimetype": "text/plain", "start_char_idx": 12943, "end_char_idx": 14114, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "57fef056-e28a-4288-98ba-ebe3c93052a9": {"__data__": {"id_": "57fef056-e28a-4288-98ba-ebe3c93052a9", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2377a955-26e8-4a48-b2d1-a67e785d3648", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f96ce6c564d3c3b13c937ab51581ecf578d7910532326a7d6c3842b5db86e9c4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "96bc48e2-9257-4c20-81d6-616b3b38ff90", "node_type": "1", "metadata": {}, "hash": "b61a91f1b415ab5596f0f7b6f20ad3733b33a516e228babdbba469ce0a9fc5fc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ogLocaleAlternate:\n                                  type: string\n                                ogLogo:\n                                  type: string\n                                ogMovie:\n                                  type: string\n                                ogPriceAmount:\n                                  type: string\n                                ogPriceCurrency:\n                                  type: string\n                                ogProductAvailability:\n                                  type: string\n                                ogProductCondition:\n                                  type: string\n                                ogProductPriceAmount:\n                                  type: string\n                                ogProductPriceCurrency:\n                                  type: string\n                                ogProductRetailerItemId:\n                                  type: string\n                                ogSiteName:\n                                  type: string\n                                ogTitle:\n                                  type: string\n                                ogType:\n                                  type: string\n                                ogUrl:", "mimetype": "text/plain", "start_char_idx": 13921, "end_char_idx": 15165, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "96bc48e2-9257-4c20-81d6-616b3b38ff90": {"__data__": {"id_": "96bc48e2-9257-4c20-81d6-616b3b38ff90", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "57fef056-e28a-4288-98ba-ebe3c93052a9", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "6edec356598ca20bb6639af70bc0dc635f3a44272ca498c8e984484182e0b168", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c382adb9-abfb-44a3-8a88-23cd350cc41f", "node_type": "1", "metadata": {}, "hash": "66e797e66df6f22598b676c468ce9a61d6d06ec435903e2f864e925e9ff5af86", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ogTitle:\n                                  type: string\n                                ogType:\n                                  type: string\n                                ogUrl:\n                                  type: string\n                                ogVideo:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                    required:\n                                    - url\n                                ogVideoActor:\n                                  type: string\n                                ogVideoActorId:\n                                  type: string\n                                ogVideoActorRole:", "mimetype": "text/plain", "start_char_idx": 14984, "end_char_idx": 16153, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c382adb9-abfb-44a3-8a88-23cd350cc41f": {"__data__": {"id_": "c382adb9-abfb-44a3-8a88-23cd350cc41f", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "96bc48e2-9257-4c20-81d6-616b3b38ff90", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "4999ccef575d13d7c6152150848867c360b9f8adb7e3c202630f0e64b74c64a3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "529572cd-fe86-4197-89e6-d130743f8176", "node_type": "1", "metadata": {}, "hash": "0fef2b8940d65cc5c8c5e61e6ad1efb5db202e3b935fb3db06fbf13e0176f8b8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ogVideoActor:\n                                  type: string\n                                ogVideoActorId:\n                                  type: string\n                                ogVideoActorRole:\n                                  type: string\n                                ogVideoDirector:\n                                  type: string\n                                ogVideoDuration:\n                                  type: string\n                                ogVideoOther:\n                                  type: string\n                                ogVideoReleaseDate:\n                                  type: string\n                                ogVideoSecureURL:\n                                  type: string\n                                ogVideoSeries:\n                                  type: string\n                                ogVideoTag:\n                                  type: string\n                                ogVideoTvShow:\n                                  type: string\n                                ogVideoWriter:\n                                  type: string\n                                ogWebsite:\n                                  type: string\n                                updatedTime:", "mimetype": "text/plain", "start_char_idx": 15948, "end_char_idx": 17189, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "529572cd-fe86-4197-89e6-d130743f8176": {"__data__": {"id_": "529572cd-fe86-4197-89e6-d130743f8176", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c382adb9-abfb-44a3-8a88-23cd350cc41f", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "14662f47d387cefe8b0258682b247a8a66e1cf9c6d875171357e80efc0df6874", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5a89dfc4-527e-4d61-9ad2-b2bf5646f7a6", "node_type": "1", "metadata": {}, "hash": "351c428f60b47a81478c53e7dccf44c0c50b56b5373abf41bbc2294c725f7ea3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ogVideoWriter:\n                                  type: string\n                                ogWebsite:\n                                  type: string\n                                updatedTime:\n                                  type: string\n                            - type: object\n                              properties:\n                                oembed:\n                                  oneOf:\n                                  - allOf:\n                                    - &id004\n                                      type: object\n                                      description: Basic data structure of every oembed\n                                        response see https://oembed.com/\n                                      required:\n                                      - type\n                                      - version\n                                      properties:\n                                        type:\n                                          type: string\n                                        version:\n                                          type:\n                                          - string\n                                          - 'null'\n                                        title:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A text title, describing the\n                                            resource.\n                                        author_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the author/owner\n                                            of the resource.\n                                        author_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL for the author/owner\n                                            of the resource.\n                                        provider_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the resource provider.\n                                        provider_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The url of the resource provider.\n                                        cache_age:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The suggested cache lifetime\n                                            for this resource, in seconds. Consumers\n                                            may choose to use this value or not.\n                                        thumbnail_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL to a thumbnail image\n                                            representing the resource. The thumbnail\n                                            must respect any maxwidth and maxheight\n                                            parameters. If this parameter is present,\n                                            thumbnail_width and thumbnail_height must\n                                            also be present.\n                                        thumbnail_width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width of the optional thumbnail.\n                                            If this parameter is present, thumbnail_url\n                                            and thumbnail_height must also be present.\n                                        thumbnail_height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height of the optional\n                                            thumbnail. If this parameter is present,\n                                            thumbnail_url and thumbnail_width must\n                                            also be present.", "mimetype": "text/plain", "start_char_idx": 16993, "end_char_idx": 21942, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5a89dfc4-527e-4d61-9ad2-b2bf5646f7a6": {"__data__": {"id_": "5a89dfc4-527e-4d61-9ad2-b2bf5646f7a6", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "529572cd-fe86-4197-89e6-d130743f8176", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "497b38583b5d70f0924a1187f78e0ba73e8e0e83cb7d9fdc0821b1c75b666f89", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8282b677-49f3-4184-8a7e-24e27cb0b439", "node_type": "1", "metadata": {}, "hash": "8d9eab161584c6914f00db415326f13b4659f496da5188af18a808772433f07b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Consumers\n                                            may choose to use this value or not.\n                                        thumbnail_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL to a thumbnail image\n                                            representing the resource. The thumbnail\n                                            must respect any maxwidth and maxheight\n                                            parameters. If this parameter is present,\n                                            thumbnail_width and thumbnail_height must\n                                            also be present.\n                                        thumbnail_width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width of the optional thumbnail.\n                                            If this parameter is present, thumbnail_url\n                                            and thumbnail_height must also be present.\n                                        thumbnail_height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height of the optional\n                                            thumbnail. If this parameter is present,\n                                            thumbnail_url and thumbnail_width must\n                                            also be present.\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - rich\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to display\n                                            the resource. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities. The markup\n                                            should be valid XHTML 1.0 Basic.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - video\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to embed\n                                            a video player. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 20170, "end_char_idx": 27631, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8282b677-49f3-4184-8a7e-24e27cb0b439": {"__data__": {"id_": "8282b677-49f3-4184-8a7e-24e27cb0b439", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5a89dfc4-527e-4d61-9ad2-b2bf5646f7a6", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "aadf530faaf5213080e4a85533d2fdbb55378ffcf8df64e90bb34fe10131e61d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c5d055c9-65c0-49fe-8102-4df39a427b9d", "node_type": "1", "metadata": {}, "hash": "a027f1d3aa0f63f1af93da32e5ea91007c869a127a6f300f43465241edf0789d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.\n                                  - allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - link\n                                  discriminator:\n                                    propertyName: type\n                                    mapping:\n                                      rich: '#/components/schemas/OembedRichData'\n                                      video: '#/components/schemas/OembedVideoData'\n                                      photo: '#/components/schemas/OembedPhotoData'\n                                      link: '#/components/schemas/OembedLinkData'\n                          frame: &id011\n                            discriminator:\n                              propertyName: version\n                            oneOf:\n                            - description: Frame v1 object\n                              allOf:\n                              - &id005\n                                description: Frame base object used across all versions\n                                type: object\n                                required:\n                                - version\n                                - image\n                                - frames_url\n                                properties:\n                                  version:\n                                    type: string\n                                    description: Version of the frame, 'next' for\n                                      v2, 'vNext' for v1\n                                  image:\n                                    type: string\n                                    description: URL of the image\n                                  frames_url:\n                                    type: string\n                                    description: Launch URL of the frame\n                              - type: object\n                                properties:\n                                  buttons:\n                                    type: array\n                                    items:\n                                      type: object\n                                      required:\n                                      - index\n                                      - action_type\n                                      properties:\n                                        title:\n                                          type: string\n                                          description: Title of the button\n                                        index:\n                                          type: integer\n                                          description: Index of the button\n                                        action_type:\n                                          type: string\n                                          description: The action type of a frame\n                                            button. Action types \"mint\" & \"link\" are\n                                            to be handled on the client side only\n                                            and so they will produce a no/op for POST\n                                            /farcaster/frame/action.\n                                          enum:\n                                          - post\n                                          - post_redirect\n                                          - tx\n                                          - link\n                                          - mint\n                                        target:\n                                          type: string\n                                          description: Target of the button\n                                        post_url:\n                                          type: string\n                                          description: Used specifically for the tx\n                                            action type to post a successful transaction\n                                            hash\n                                  post_url:\n                                    type: string\n                                    description: Post URL to take an action on this\n                                      frame\n                                  title:\n                                    type: string\n                                  image_aspect_ratio:\n                                    type: string\n                                  input:\n                                    type: object\n                                    properties:\n                                      text:\n                                        type: string\n                                        description: Input text for the frame\n                                  state:\n                                    type: object\n                                    properties:\n                                      serialized:\n                                        type: string\n                                        description: State for the frame in a serialized\n                                          format\n                            - description: Frame v2 object\n                              allOf:\n                              - *id005\n                              - type: object\n                                required:\n                                - title\n                                - name\n                                - icon\n                                properties:\n                                  manifest:\n                                    type: object\n                                    properties:\n                                      account_association:\n                                        type: object\n                                        properties:\n                                          header:\n                                            type: string\n                                          payload:\n                                            type: string\n                                          signature:\n                                            type: string\n                                        required:\n                                        - header\n                                        - payload\n                                        - signature\n                                      frame:\n                                        type: object\n                                        properties:\n                                          version:\n                                            type: string\n                                            enum:\n                                            - 0.0.0\n                                            - 0.0.", "mimetype": "text/plain", "start_char_idx": 25810, "end_char_idx": 34673, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c5d055c9-65c0-49fe-8102-4df39a427b9d": {"__data__": {"id_": "c5d055c9-65c0-49fe-8102-4df39a427b9d", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8282b677-49f3-4184-8a7e-24e27cb0b439", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "70449bf8848b0ca3890bcc8993b5b8d71ca9e5ca14fc539f7b60dcf80f6cb749", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "207d1e01-17e1-4a59-9470-7298491ccd31", "node_type": "1", "metadata": {}, "hash": "26d36fbb0caec6026b91aa3ecf03098312b6fd65f2e50432df9195ee34007f99", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                            - 0.0.1\n                                            - '1'\n                                            - next\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                          home_url:\n                                            type: string\n                                            maxLength: 512\n                                          icon_url:\n                                            type: string\n                                            maxLength: 512\n                                          image_url:\n                                            type: string\n                                            maxLength: 512\n                                          button_title:\n                                            type: string\n                                            maxLength: 32\n                                          splash_image_url:\n                                            type: string\n                                            maxLength: 512\n                                          splash_background_color:\n                                            type: string\n                                          webhook_url:\n                                            type: string\n                                            maxLength: 512\n                                        required:\n                                        - version\n                                        - name\n                                        - home_url\n                                        - icon_url\n                                      triggers:\n                                        type: array\n                                        items:\n                                          oneOf:\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - cast\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - composer\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                    required:\n                                    - account_association\n                                  author: &id006\n                                    type: object\n                                    required:\n                                    - object\n                                    - fid\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - user_dehydrated\n                                      fid: *id002\n                                      username:\n                                        type: string\n                                      display_name:\n                                        type: string\n                                      pfp_url:\n                                        type: string\n                            mapping:\n                              vNext: '#/components/schemas/FrameV1'\n                              next: '#/components/schemas/FrameV2'\n                              '1': '#/components/schemas/FrameV2'\n                              0.0.0: '#/components/schemas/FrameV2'\n                              0.0.1: '#/components/schemas/FrameV2'\n                  - type: object\n                    required:\n                    - cast\n                    properties:\n                      cast_id: &id009\n                        type: object\n                        required:\n                        - fid\n                        - hash\n                        properties:\n                          fid: *id002\n                          hash:\n                            type: string\n                      cast:\n                        type: object\n                        required:\n                        - hash\n                        - parent_hash\n                        - parent_url\n                        - root_parent_url\n                        - parent_author\n                        - author\n                        - text\n                        - timestamp\n                        - type\n                        - embeds\n                        - channel\n                        properties:\n                          hash:\n                            type: string\n                          parent_hash:\n                            type:\n                            - string\n                            - 'null'\n                          parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          root_parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          parent_author:\n                            type: object\n                            required:\n                            - fid\n                            properties:\n                              fid:\n                                oneOf:\n                                - type: 'null'\n                                - *id002\n                          author: *id006\n                          text:\n                            type: string\n                          timestamp: *id007\n                          type: &id010\n                            type: string\n                            enum:\n                            - cast-mention\n                            - cast-reply\n                            description: 'The notification type of a cast.\n\n                              '\n                          embeds:\n                            type: array\n                            items:\n                              oneOf:\n                              - *id008\n                              - type: object\n                                required:\n                                - cast\n                                properties:\n                                  cast_id: *id009\n                                  cast: &id014\n                                    type: object\n                                    required:\n                                    - object\n                                    - hash\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - cast_dehydrated\n                                      hash:\n                                        type: string\n                                      author: *id006\n                          channel:\n                            oneOf:\n                            - type: 'null'\n                            - &id013\n                              type: object\n                              required:\n                              - id\n                              - name\n                              - object\n                              properties:\n                                id:\n                                  type: string\n                                name:\n                                  type: string\n                                object:\n                                  type: string\n                                  enum:\n                                  - channel_dehydrated\n                                image_url:\n                                  type: string\n                                viewer_context: &id012\n                                  description: Adds context on the viewer's or author's\n                                    role in the channel.", "mimetype": "text/plain", "start_char_idx": 34619, "end_char_idx": 44209, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "207d1e01-17e1-4a59-9470-7298491ccd31": {"__data__": {"id_": "207d1e01-17e1-4a59-9470-7298491ccd31", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f71f17688eafddca117f9999e912c6f449aacbc4ded2f7c69893826e64a6d285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c5d055c9-65c0-49fe-8102-4df39a427b9d", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "46d1d88d7c609b3c9bde94936f0909d9240afd7e38471273a8fd064ef3af0587", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                                  required:\n                                  - following\n                                  properties:\n                                    following:\n                                      description: Indicates if the user is following\n                                        the channel.\n                                      type: boolean\n                                    role:\n                                      type: string\n                                      description: The role of a channel member\n                                      enum:\n                                      - member\n                                      - moderator\n              type: *id010\n          - type: object\n            required:\n            - reactions\n            - replies\n            - thread_hash\n            - mentioned_profiles\n            - channel\n            properties:\n              frames:\n                type: array\n                items: *id011\n              reactions:\n                type: object\n                required:\n                - likes\n                - recasts\n                - likes_count\n                - recasts_count\n                properties:\n                  likes:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      properties:\n                        fid: *id002\n                  recasts:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      - fname\n                      properties:\n                        fid: *id002\n                        fname:\n                          type: string\n                  likes_count:\n                    type: integer\n                    format: int32\n                  recasts_count:\n                    type: integer\n                    format: int32\n              replies:\n                type: object\n                required:\n                - count\n                properties:\n                  count:\n                    type: integer\n                    format: int32\n              thread_hash:\n                type:\n                - string\n                - 'null'\n              mentioned_profiles:\n                type: array\n                items: *id003\n              channel:\n                oneOf:\n                - oneOf:\n                  - type: object\n                    required:\n                    - id\n                    - url\n                    - object\n                    properties:\n                      id:\n                        type: string\n                      url:\n                        type: string\n                      name:\n                        type: string\n                      description:\n                        type: string\n                      object:\n                        type: string\n                        enum:\n                        - channel\n                      created_at:\n                        description: Epoch timestamp in seconds.\n                        type: number\n                      follower_count:\n                        description: Number of followers the channel has.\n                        type: number\n                      external_link:\n                        type: object\n                        description: Channel's external link.\n                        properties:\n                          title:\n                            type: string\n                          url:\n                            type: string\n                      image_url:\n                        type: string\n                      parent_url:\n                        type: string\n                        format: uri\n                      lead: *id003\n                      moderator_fids:\n                        type: array\n                        items: *id002\n                      member_count:\n                        type: integer\n                        format: int32\n                      moderator: *id003\n                      pinned_cast_hash:\n                        type: string\n                        default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                        description: Cast Hash\n                      hosts:\n                        type: array\n                        deprecated: true\n                        items: *id003\n                      viewer_context: *id012\n                  - *id013\n                  discriminator:\n                    propertyName: object\n                    mapping:\n                      channel: '#/components/schemas/Channel'\n                      dehydrated_channel: '#/components/schemas/DehydratedChannel'\n                - type: 'null'\n              viewer_context:\n                type: object\n                description: Adds context on interactions the viewer has made with\n                  the cast.\n                required:\n                - liked\n                - recasted\n                properties:\n                  liked:\n                    description: Indicates if the viewer liked the cast.\n                    type: boolean\n                  recasted:\n                    description: Indicates if the viewer recasted the cast.\n                    type: boolean\n              author_channel_context: *id012\n        reactions:\n          type: array\n          items:\n            type: object\n            required:\n            - object\n            - cast\n            - user\n            properties:\n              object:\n                type: string\n                enum:\n                - likes\n                - recasts\n              cast: *id014\n              user: *id003\n        count:\n          type: integer\n          format: int32\n          description: The number of notifications of this(follows, likes, recast)\n            type bundled in a single notification.\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 44244, "end_char_idx": 50423, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a2d0a0a2-e2f6-41fb-8e99-cd0df7293316": {"__data__": {"id_": "a2d0a0a2-e2f6-41fb-8e99-cd0df7293316", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-authorization-url.md", "file_name": "neynar_fetch-authorization-url.md", "file_type": "text/markdown", "file_size": 400, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2271936c-673f-462f-8cf8-ea5ec83a3d50", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-authorization-url.md", "file_name": "neynar_fetch-authorization-url.md", "file_type": "text/markdown", "file_size": 400, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f1abf830633499ceb94d3c8224a67dddd145209e16b9b76a9658426418e5b7ab", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-authorization-url\n\n**Endpoint**: `GET /farcaster/login/authorize`\n\n## Description\nFetch authorization url (Fetched authorized url useful for SIWN login operation)\n\n## Parameters\n- `client_id` (query): No description\n- `response_type` (query): No description\n\n## Response\n```yaml\ntype: object\nrequired:\n- authorization_url\nproperties:\n  authorization_url:\n    type: string\n    format: uri\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 399, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ae78a21f-1fd8-49b4-8f8d-619b9611bc74": {"__data__": {"id_": "ae78a21f-1fd8-49b4-8f8d-619b9611bc74", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-ban-list.md", "file_name": "neynar_fetch-ban-list.md", "file_type": "text/markdown", "file_size": 6372, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "70f168d9-009b-4805-8bbd-774229708a2e", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-ban-list.md", "file_name": "neynar_fetch-ban-list.md", "file_type": "text/markdown", "file_size": 6372, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "7090eaf69d87fc7ab5db7863e175f7a11fc584193e8947dfa32fa3eacd25f0de", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8fcde984-f8f5-43a9-919b-5eeef789c20c", "node_type": "1", "metadata": {}, "hash": "b6f7d36cb5e801a1cb209f3c54fff4b00c4c8a1a6279294e67d88237020ee7f6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-ban-list\n\n**Endpoint**: `GET /farcaster/ban/list`\n\n## Description\nFetches all FIDs that your app has banned.\n\n## Parameters\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- bans\n- next\nproperties:\n  bans:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - timestamp\n      - banned_at\n      properties:\n        object:\n          type: string\n          enum:\n          - ban\n        banned:\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid:\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5824, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8fcde984-f8f5-43a9-919b-5eeef789c20c": {"__data__": {"id_": "8fcde984-f8f5-43a9-919b-5eeef789c20c", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-ban-list.md", "file_name": "neynar_fetch-ban-list.md", "file_type": "text/markdown", "file_size": 6372, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "70f168d9-009b-4805-8bbd-774229708a2e", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-ban-list.md", "file_name": "neynar_fetch-ban-list.md", "file_type": "text/markdown", "file_size": 6372, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "7090eaf69d87fc7ab5db7863e175f7a11fc584193e8947dfa32fa3eacd25f0de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae78a21f-1fd8-49b4-8f8d-619b9611bc74", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-ban-list.md", "file_name": "neynar_fetch-ban-list.md", "file_type": "text/markdown", "file_size": 6372, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d4079342a626d829d3caf94ab1ba5cc53ded14ba6735f3e9b66a350f67bbbb16", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        banned_at:\n          type: string\n          format: date-time\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4588, "end_char_idx": 6371, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "59e8503a-d123-4b84-b151-0ff85029c655": {"__data__": {"id_": "59e8503a-d123-4b84-b151-0ff85029c655", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-block-list.md", "file_name": "neynar_fetch-block-list.md", "file_type": "text/markdown", "file_size": 6616, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9f8417f3-5a22-4b2b-8195-711d5946f41b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-block-list.md", "file_name": "neynar_fetch-block-list.md", "file_type": "text/markdown", "file_size": 6616, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d199782ba01b5f5e1d802bcb908ef9e910bc64b7459945f393926466057acd2e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b68a199f-8c60-4397-86ef-daaad0b5fc3b", "node_type": "1", "metadata": {}, "hash": "ea6a482933b7c14e4fce9d580766d7f69d2a64b54566185cf3cdcb3f2f597190", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-block-list\n\n**Endpoint**: `GET /farcaster/block/list`\n\n## Description\nFetches all FIDs that a user has blocked or has been blocked by\n\n## Parameters\n- `blocker_fid` (query): Providing this will return the users that this user has blocked\n- `blocked_fid` (query): Providing this will return the users that have blocked this user\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- blocks\n- next\nproperties:\n  blocks:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - timestamp\n      - blocked_at\n      properties:\n        object:\n          type: string\n          enum:\n          - block\n        blocked: &id002\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid:\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5641, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b68a199f-8c60-4397-86ef-daaad0b5fc3b": {"__data__": {"id_": "b68a199f-8c60-4397-86ef-daaad0b5fc3b", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-block-list.md", "file_name": "neynar_fetch-block-list.md", "file_type": "text/markdown", "file_size": 6616, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9f8417f3-5a22-4b2b-8195-711d5946f41b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-block-list.md", "file_name": "neynar_fetch-block-list.md", "file_type": "text/markdown", "file_size": 6616, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d199782ba01b5f5e1d802bcb908ef9e910bc64b7459945f393926466057acd2e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "59e8503a-d123-4b84-b151-0ff85029c655", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-block-list.md", "file_name": "neynar_fetch-block-list.md", "file_type": "text/markdown", "file_size": 6616, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f24f3c2671ababdf8a53df03020123ce57cc55751c09fd73dc0f8626ebc94b77", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        blocker: *id002\n        blocked_at:\n          type: string\n          format: date-time\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4465, "end_char_idx": 6615, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e44933de-d420-469f-8f44-313a0551c3ce": {"__data__": {"id_": "e44933de-d420-469f-8f44-313a0551c3ce", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c04b84e4-ad03-403a-b1aa-d58f3520624b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "5a518643069dce450a2cea05749cebcd714105fc61b56f80733f1c7ab7ffdf99", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4b80cc89-9cfb-4347-ba10-ac9223ca7d80", "node_type": "1", "metadata": {}, "hash": "02f587cd3aa3383dd0364ccf187a476f3733ff55999517f15538a4b8d31fd576", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-bulk-casts\n\n**Endpoint**: `GET /farcaster/casts`\n\n## Description\nFetch multiple casts using their respective hashes.\n\n## Parameters\n- `casts` (query): Hashes of the cast to be retrived (Comma separated, no spaces)\n- `viewer_fid` (query): adds viewer_context to cast object to show whether viewer has liked or recasted the cast.\n- `sort_type` (query): Optional parameter to sort the casts based on different criteria\n\n## Response\n```yaml\ntype: object\nrequired:\n- result\nproperties:\n  result:\n    type: object\n    required:\n    - casts\n    properties:\n      casts:\n        type: array\n        items:\n          allOf:\n          - type: object\n            required:\n            - hash\n            - parent_hash\n            - parent_url\n            - root_parent_url\n            - parent_author\n            - author\n            - text\n            - timestamp\n            - embeds\n            properties:\n              hash:\n                type: string\n              parent_hash:\n                type:\n                - string\n                - 'null'\n              parent_url:\n                type:\n                - string\n                - 'null'\n              root_parent_url:\n                type:\n                - string\n                - 'null'\n              parent_author:\n                type: object\n                required:\n                - fid\n                properties:\n                  fid:\n                    oneOf:\n                    - type: 'null'\n                    - &id001\n                      type: integer\n                      format: int32\n                      description: The unique identifier of a farcaster user (unsigned\n                        integer)\n                      examples:\n                      - 3\n                      - 191\n                      - 2\n                      - 194\n                      - 19960\n              author: &id011\n                type: object\n                required:\n                - object\n                - fid\n                - custody_address\n                - username\n                - profile\n                - follower_count\n                - following_count\n                - verifications\n                - verified_addresses\n                - verified_accounts\n                - power_badge\n                properties:\n                  object:\n                    type: string\n                    enum:\n                    - user\n                  fid: *id001\n                  username:\n                    type: string\n                  display_name:\n                    type: string\n                  custody_address: &id002\n                    type: string\n                    pattern: ^0x[a-fA-F0-9]{40}$\n                    description: Ethereum address\n                  pfp_url:\n                    type: string\n                    description: The URL of the user's profile picture\n                  profile:\n                    type: object\n                    required:\n                    - bio\n                    properties:\n                      bio:\n                        type: object\n                        required:\n                        - text\n                        - mentioned_profiles\n                        properties:\n                          text:\n                            type: string\n                          mentioned_profiles:\n                            type: array\n                            items:\n                              type: string\n                            default: []\n                      location:\n                        description: Coordinates and place names for a location\n                        type: object\n                        required:\n                        - latitude\n                        - longitude\n                        properties:\n                          latitude:\n                            type: number\n                            format: double\n                            minimum: -90\n                            maximum: 90\n                          longitude:\n                            type: number\n                            format: double\n                            minimum: -180\n                            maximum: 180\n                          address:\n                            type: object\n                            required:\n                            - city\n                            - country\n                            properties:\n                              city:\n                                type: string\n                              state:\n                                type: string\n                              state_code:\n                                type: string\n                              country:\n                                type: string\n                              country_code:\n                                type: string\n                  follower_count:\n                    type: integer\n                    format: int32\n                    description: The number of followers the user has.\n                  following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id002\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id002\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.\n                        items:\n                          type: string\n                          pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                          description: Solana address\n                  verified_accounts:\n                    type: array\n                    description: Verified accounts of the user on other platforms,\n                      currently only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 6386, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4b80cc89-9cfb-4347-ba10-ac9223ca7d80": {"__data__": {"id_": "4b80cc89-9cfb-4347-ba10-ac9223ca7d80", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c04b84e4-ad03-403a-b1aa-d58f3520624b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "5a518643069dce450a2cea05749cebcd714105fc61b56f80733f1c7ab7ffdf99", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e44933de-d420-469f-8f44-313a0551c3ce", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f89cb717dedd00c5d25fddbb2feb6765bf706560b60d3adac8fb34f35854dc9b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4154f2e0-6174-4af8-8c31-4b7bd2016655", "node_type": "1", "metadata": {}, "hash": "9ebc3fd550923fdff8ab84e34c75e2105afeae99bba64bf4a496052492dc326d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id002\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id002\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.\n                        items:\n                          type: string\n                          pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                          description: Solana address\n                  verified_accounts:\n                    type: array\n                    description: Verified accounts of the user on other platforms,\n                      currently only X is supported.\n                    items:\n                      type: object\n                      properties:\n                        platform:\n                          type: string\n                          enum:\n                          - x\n                          - github\n                        username:\n                          type: string\n                  power_badge:\n                    type: boolean\n                  experimental:\n                    type: object\n                    required:\n                    - neynar_user_score\n                    properties:\n                      neynar_user_score:\n                        type: number\n                        format: double\n                        description: Score that represents the probability that the\n                          account is not spam.\n                  viewer_context:\n                    type: object\n                    description: Adds context on the viewer's follow relationship\n                      with the user.\n                    required:\n                    - following\n                    - followed_by\n                    - blocking\n                    - blocked_by\n                    properties:\n                      following:\n                        description: Indicates if the viewer is following the user.\n                        type: boolean\n                      followed_by:\n                        description: Indicates if the viewer is followed by the user.\n                        type: boolean\n                      blocking:\n                        description: Indicates if the viewer is blocking the user.\n                        type: boolean\n                      blocked_by:\n                        description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 5058, "end_char_idx": 8169, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4154f2e0-6174-4af8-8c31-4b7bd2016655": {"__data__": {"id_": "4154f2e0-6174-4af8-8c31-4b7bd2016655", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c04b84e4-ad03-403a-b1aa-d58f3520624b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "5a518643069dce450a2cea05749cebcd714105fc61b56f80733f1c7ab7ffdf99", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b80cc89-9cfb-4347-ba10-ac9223ca7d80", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "3079a99e60222ce7e681de0cadb9adcb744332febd7314adb76dd99ce258551e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cb3b5d33-eb10-481b-bd27-1f8ef9e49b96", "node_type": "1", "metadata": {}, "hash": "1ba7c92044a2c3addbb8adb178277cf9c49e5a8c99bbe3676369af19c345a358", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                    type: object\n                    description: Adds context on the viewer's follow relationship\n                      with the user.\n                    required:\n                    - following\n                    - followed_by\n                    - blocking\n                    - blocked_by\n                    properties:\n                      following:\n                        description: Indicates if the viewer is following the user.\n                        type: boolean\n                      followed_by:\n                        description: Indicates if the viewer is followed by the user.\n                        type: boolean\n                      blocking:\n                        description: Indicates if the viewer is blocking the user.\n                        type: boolean\n                      blocked_by:\n                        description: Indicates if the viewer is blocked by the user.\n                        type: boolean\n              text:\n                type: string\n              timestamp: &id006\n                type: string\n                format: date-time\n              embeds:\n                type: array\n                items:\n                  oneOf:\n                  - &id007\n                    type: object\n                    required:\n                    - url\n                    properties:\n                      url:\n                        type: string\n                      metadata:\n                        type: object\n                        required:\n                        - _status\n                        properties:\n                          _status:\n                            type: string\n                          content_type:\n                            type:\n                            - string\n                            - 'null'\n                          content_length:\n                            type:\n                            - integer\n                            - 'null'\n                          image:\n                            type: object\n                            properties:\n                              height_px:\n                                type: integer\n                              width_px:\n                                type: integer\n                          video:\n                            type: object\n                            properties:\n                              duration_s:\n                                type: number\n                              stream:\n                                type: array\n                                items:\n                                  type: object\n                                  properties:\n                                    codec_name:\n                                      type: string\n                                    height_px:\n                                      type: integer\n                                    width_px:\n                                      type: integer\n                          html:\n                            allOf:\n                            - type: object\n                              properties:\n                                favicon:\n                                  type: string\n                                modifiedTime:\n                                  type: string\n                                ogArticleAuthor:\n                                  type: string\n                                ogArticleExpirationTime:\n                                  type: string\n                                ogArticleModifiedTime:\n                                  type: string\n                                ogArticlePublishedTime:\n                                  type: string\n                                ogArticlePublisher:\n                                  type: string\n                                ogArticleSection:\n                                  type: string\n                                ogArticleTag:\n                                  type: string\n                                ogAudio:\n                                  type: string\n                                ogAudioSecureURL:\n                                  type: string\n                                ogAudioType:\n                                  type: string\n                                ogAudioURL:\n                                  type: string\n                                ogAvailability:\n                                  type: string\n                                ogDate:\n                                  type: string\n                                ogDescription:\n                                  type: string\n                                ogDeterminer:\n                                  type: string\n                                ogEpisode:\n                                  type: string\n                                ogImage:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                      alt:\n                                        type: string\n                                    required:\n                                    - url\n                                ogLocale:\n                                  type: string\n                                ogLocaleAlternate:\n                                  type: string\n                                ogLogo:\n                                  type: string\n                                ogMovie:\n                                  type: string\n                                ogPriceAmount:\n                                  type: string\n                                ogPriceCurrency:\n                                  type: string\n                                ogProductAvailability:\n                                  type: string\n                                ogProductCondition:\n                                  type: string\n                                ogProductPriceAmount:\n                                  type: string\n                                ogProductPriceCurrency:\n                                  type: string\n                                ogProductRetailerItemId:\n                                  type: string\n                                ogSiteName:\n                                  type: string\n                                ogTitle:\n                                  type: string\n                                ogType:\n                                  type: string\n                                ogUrl:\n                                  type: string\n                                ogVideo:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                    required:\n                                    - url\n                                ogVideoActor:\n                                  type: string\n                                ogVideoActorId:\n                                  type: string\n                                ogVideoActorRole:\n                                  type: string\n                                ogVideoDirector:\n                                  type: string\n                                ogVideoDuration:\n                                  type: string\n                                ogVideoOther:\n                                  type: string\n                                ogVideoReleaseDate:\n                                  type: string\n                                ogVideoSecureURL:\n                                  type: string\n                                ogVideoSeries:\n                                  type: string\n                                ogVideoTag:\n                                  type: string\n                                ogVideoTvShow:\n                                  type: string\n                                ogVideoWriter:\n                                  type: string\n                                ogWebsite:\n                                  type: string\n                                updatedTime:\n                                  type: string\n                            - type: object\n                              properties:\n                                oembed:\n                                  oneOf:\n                                  - allOf:\n                                    - &id003\n                                      type: object\n                                      description: Basic data structure of every oembed\n                                        response see https://oembed.com/\n                                      required:\n                                      - type\n                                      - version\n                                      properties:\n                                        type:\n                                          type: string\n                                        version:\n                                          type:\n                                          - string\n                                          - 'null'\n                                        title:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A text title, describing the\n                                            resource.", "mimetype": "text/plain", "start_char_idx": 7224, "end_char_idx": 17589, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cb3b5d33-eb10-481b-bd27-1f8ef9e49b96": {"__data__": {"id_": "cb3b5d33-eb10-481b-bd27-1f8ef9e49b96", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c04b84e4-ad03-403a-b1aa-d58f3520624b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "5a518643069dce450a2cea05749cebcd714105fc61b56f80733f1c7ab7ffdf99", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4154f2e0-6174-4af8-8c31-4b7bd2016655", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "38b1ecad68a2a14d7ad95b63fcca29e6810a929999c26f3b5abb5eeef2dc9dde", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bfca3409-9a02-4a22-a779-3ceacaba4a9a", "node_type": "1", "metadata": {}, "hash": "23a04483365d8bcc2b18a2d1ac96edd50ac2b76ebbbf7ad056f6abdb7ce9a7f4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the author/owner\n                                            of the resource.\n                                        author_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL for the author/owner\n                                            of the resource.\n                                        provider_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the resource provider.\n                                        provider_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The url of the resource provider.\n                                        cache_age:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The suggested cache lifetime\n                                            for this resource, in seconds. Consumers\n                                            may choose to use this value or not.\n                                        thumbnail_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL to a thumbnail image\n                                            representing the resource. The thumbnail\n                                            must respect any maxwidth and maxheight\n                                            parameters. If this parameter is present,\n                                            thumbnail_width and thumbnail_height must\n                                            also be present.\n                                        thumbnail_width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width of the optional thumbnail.\n                                            If this parameter is present, thumbnail_url\n                                            and thumbnail_height must also be present.\n                                        thumbnail_height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height of the optional\n                                            thumbnail. If this parameter is present,\n                                            thumbnail_url and thumbnail_width must\n                                            also be present.\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - rich\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to display\n                                            the resource. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities. The markup\n                                            should be valid XHTML 1.0 Basic.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - video\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to embed\n                                            a video player. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 17630, "end_char_idx": 26692, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bfca3409-9a02-4a22-a779-3ceacaba4a9a": {"__data__": {"id_": "bfca3409-9a02-4a22-a779-3ceacaba4a9a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c04b84e4-ad03-403a-b1aa-d58f3520624b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "5a518643069dce450a2cea05749cebcd714105fc61b56f80733f1c7ab7ffdf99", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cb3b5d33-eb10-481b-bd27-1f8ef9e49b96", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "87770eda67a6ce851fe3dcd3c646789029e53d7eae89dab62ba7667cd44679d0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "92fd57d6-41c5-46c7-bb79-46e24b928d2a", "node_type": "1", "metadata": {}, "hash": "d2c745055c34b05df38156a53e572587481b7019a7d17c71b53ebf72656e7c1e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - link\n                                  discriminator:\n                                    propertyName: type\n                                    mapping:\n                                      rich: '#/components/schemas/OembedRichData'\n                                      video: '#/components/schemas/OembedVideoData'\n                                      photo: '#/components/schemas/OembedPhotoData'\n                                      link: '#/components/schemas/OembedLinkData'\n                          frame: &id010\n                            discriminator:\n                              propertyName: version\n                            oneOf:\n                            - description: Frame v1 object\n                              allOf:\n                              - &id004\n                                description: Frame base object used across all versions\n                                type: object\n                                required:\n                                - version\n                                - image\n                                - frames_url\n                                properties:\n                                  version:\n                                    type: string\n                                    description: Version of the frame, 'next' for\n                                      v2, 'vNext' for v1\n                                  image:\n                                    type: string\n                                    description: URL of the image\n                                  frames_url:\n                                    type: string\n                                    description: Launch URL of the frame\n                              - type: object\n                                properties:\n                                  buttons:\n                                    type: array\n                                    items:\n                                      type: object\n                                      required:\n                                      - index\n                                      - action_type\n                                      properties:\n                                        title:\n                                          type: string\n                                          description: Title of the button\n                                        index:\n                                          type: integer\n                                          description: Index of the button\n                                        action_type:\n                                          type: string\n                                          description: The action type of a frame\n                                            button. Action types \"mint\" & \"link\" are\n                                            to be handled on the client side only\n                                            and so they will produce a no/op for POST\n                                            /farcaster/frame/action.\n                                          enum:\n                                          - post\n                                          - post_redirect\n                                          - tx\n                                          - link\n                                          - mint\n                                        target:\n                                          type: string\n                                          description: Target of the button\n                                        post_url:\n                                          type: string\n                                          description: Used specifically for the tx\n                                            action type to post a successful transaction\n                                            hash\n                                  post_url:\n                                    type: string\n                                    description: Post URL to take an action on this\n                                      frame\n                                  title:\n                                    type: string\n                                  image_aspect_ratio:\n                                    type: string\n                                  input:\n                                    type: object\n                                    properties:\n                                      text:\n                                        type: string\n                                        description: Input text for the frame\n                                  state:\n                                    type: object\n                                    properties:\n                                      serialized:\n                                        type: string\n                                        description: State for the frame in a serialized\n                                          format\n                            - description: Frame v2 object\n                              allOf:\n                              - *id004\n                              - type: object\n                                required:\n                                - title\n                                - name\n                                - icon\n                                properties:\n                                  manifest:\n                                    type: object\n                                    properties:\n                                      account_association:\n                                        type: object\n                                        properties:\n                                          header:\n                                            type: string\n                                          payload:\n                                            type: string\n                                          signature:\n                                            type: string\n                                        required:\n                                        - header\n                                        - payload\n                                        - signature\n                                      frame:\n                                        type: object\n                                        properties:\n                                          version:\n                                            type: string\n                                            enum:\n                                            - 0.0.0\n                                            - 0.0.", "mimetype": "text/plain", "start_char_idx": 24871, "end_char_idx": 33734, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "92fd57d6-41c5-46c7-bb79-46e24b928d2a": {"__data__": {"id_": "92fd57d6-41c5-46c7-bb79-46e24b928d2a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c04b84e4-ad03-403a-b1aa-d58f3520624b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "5a518643069dce450a2cea05749cebcd714105fc61b56f80733f1c7ab7ffdf99", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bfca3409-9a02-4a22-a779-3ceacaba4a9a", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d6c4b8938de1f0319679c06690fcba495de78e8df69c1d1b3661126c8618c5bd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "098473d0-50a0-487a-9426-187bccf67ef8", "node_type": "1", "metadata": {}, "hash": "3cdb35030fc9d08bcd8e90455be053e684f95c545b64d5e989e3d61a577b832b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                            - 0.0.1\n                                            - '1'\n                                            - next\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                          home_url:\n                                            type: string\n                                            maxLength: 512\n                                          icon_url:\n                                            type: string\n                                            maxLength: 512\n                                          image_url:\n                                            type: string\n                                            maxLength: 512\n                                          button_title:\n                                            type: string\n                                            maxLength: 32\n                                          splash_image_url:\n                                            type: string\n                                            maxLength: 512\n                                          splash_background_color:\n                                            type: string\n                                          webhook_url:\n                                            type: string\n                                            maxLength: 512\n                                        required:\n                                        - version\n                                        - name\n                                        - home_url\n                                        - icon_url\n                                      triggers:\n                                        type: array\n                                        items:\n                                          oneOf:\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - cast\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - composer\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                    required:\n                                    - account_association\n                                  author: &id005\n                                    type: object\n                                    required:\n                                    - object\n                                    - fid\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - user_dehydrated\n                                      fid: *id001\n                                      username:\n                                        type: string\n                                      display_name:\n                                        type: string\n                                      pfp_url:\n                                        type: string\n                            mapping:\n                              vNext: '#/components/schemas/FrameV1'\n                              next: '#/components/schemas/FrameV2'\n                              '1': '#/components/schemas/FrameV2'\n                              0.0.0: '#/components/schemas/FrameV2'\n                              0.0.1: '#/components/schemas/FrameV2'\n                  - type: object\n                    required:\n                    - cast\n                    properties:\n                      cast_id: &id008\n                        type: object\n                        required:\n                        - fid\n                        - hash\n                        properties:\n                          fid: *id001\n                          hash:\n                            type: string\n                      cast:\n                        type: object\n                        required:\n                        - hash\n                        - parent_hash\n                        - parent_url\n                        - root_parent_url\n                        - parent_author\n                        - author\n                        - text\n                        - timestamp\n                        - type\n                        - embeds\n                        - channel\n                        properties:\n                          hash:\n                            type: string\n                          parent_hash:\n                            type:\n                            - string\n                            - 'null'\n                          parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          root_parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          parent_author:\n                            type: object\n                            required:\n                            - fid\n                            properties:\n                              fid:\n                                oneOf:\n                                - type: 'null'\n                                - *id001\n                          author: *id005\n                          text:\n                            type: string\n                          timestamp: *id006\n                          type: &id009\n                            type: string\n                            enum:\n                            - cast-mention\n                            - cast-reply\n                            description: 'The notification type of a cast.\n\n                              '\n                          embeds:\n                            type: array\n                            items:\n                              oneOf:\n                              - *id007\n                              - type: object\n                                required:\n                                - cast\n                                properties:\n                                  cast_id: *id008\n                                  cast:\n                                    type: object\n                                    required:\n                                    - object\n                                    - hash\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - cast_dehydrated\n                                      hash:\n                                        type: string\n                                      author: *id005\n                          channel:\n                            oneOf:\n                            - type: 'null'\n                            - &id013\n                              type: object\n                              required:\n                              - id\n                              - name\n                              - object\n                              properties:\n                                id:\n                                  type: string\n                                name:\n                                  type: string\n                                object:\n                                  type: string\n                                  enum:\n                                  - channel_dehydrated\n                                image_url:\n                                  type: string\n                                viewer_context: &id012\n                                  description: Adds context on the viewer's or author's\n                                    role in the channel.", "mimetype": "text/plain", "start_char_idx": 33680, "end_char_idx": 43263, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "098473d0-50a0-487a-9426-187bccf67ef8": {"__data__": {"id_": "098473d0-50a0-487a-9426-187bccf67ef8", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c04b84e4-ad03-403a-b1aa-d58f3520624b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "5a518643069dce450a2cea05749cebcd714105fc61b56f80733f1c7ab7ffdf99", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "92fd57d6-41c5-46c7-bb79-46e24b928d2a", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "de874b2764bd9814e37a98086996fe457cfd64645c89b75f318481cbc4557c24", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                                  required:\n                                  - following\n                                  properties:\n                                    following:\n                                      description: Indicates if the user is following\n                                        the channel.\n                                      type: boolean\n                                    role:\n                                      type: string\n                                      description: The role of a channel member\n                                      enum:\n                                      - member\n                                      - moderator\n              type: *id009\n          - type: object\n            required:\n            - reactions\n            - replies\n            - thread_hash\n            - mentioned_profiles\n            - channel\n            properties:\n              frames:\n                type: array\n                items: *id010\n              reactions:\n                type: object\n                required:\n                - likes\n                - recasts\n                - likes_count\n                - recasts_count\n                properties:\n                  likes:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      properties:\n                        fid: *id001\n                  recasts:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      - fname\n                      properties:\n                        fid: *id001\n                        fname:\n                          type: string\n                  likes_count:\n                    type: integer\n                    format: int32\n                  recasts_count:\n                    type: integer\n                    format: int32\n              replies:\n                type: object\n                required:\n                - count\n                properties:\n                  count:\n                    type: integer\n                    format: int32\n              thread_hash:\n                type:\n                - string\n                - 'null'\n              mentioned_profiles:\n                type: array\n                items: *id011\n              channel:\n                oneOf:\n                - oneOf:\n                  - type: object\n                    required:\n                    - id\n                    - url\n                    - object\n                    properties:\n                      id:\n                        type: string\n                      url:\n                        type: string\n                      name:\n                        type: string\n                      description:\n                        type: string\n                      object:\n                        type: string\n                        enum:\n                        - channel\n                      created_at:\n                        description: Epoch timestamp in seconds.\n                        type: number\n                      follower_count:\n                        description: Number of followers the channel has.\n                        type: number\n                      external_link:\n                        type: object\n                        description: Channel's external link.\n                        properties:\n                          title:\n                            type: string\n                          url:\n                            type: string\n                      image_url:\n                        type: string\n                      parent_url:\n                        type: string\n                        format: uri\n                      lead: *id011\n                      moderator_fids:\n                        type: array\n                        items: *id001\n                      member_count:\n                        type: integer\n                        format: int32\n                      moderator: *id011\n                      pinned_cast_hash:\n                        type: string\n                        default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                        description: Cast Hash\n                      hosts:\n                        type: array\n                        deprecated: true\n                        items: *id011\n                      viewer_context: *id012\n                  - *id013\n                  discriminator:\n                    propertyName: object\n                    mapping:\n                      channel: '#/components/schemas/Channel'\n                      dehydrated_channel: '#/components/schemas/DehydratedChannel'\n                - type: 'null'\n              viewer_context:\n                type: object\n                description: Adds context on interactions the viewer has made with\n                  the cast.\n                required:\n                - liked\n                - recasted\n                properties:\n                  liked:\n                    description: Indicates if the viewer liked the cast.\n                    type: boolean\n                  recasted:\n                    description: Indicates if the viewer recasted the cast.\n                    type: boolean\n              author_channel_context: *id012\n```", "mimetype": "text/plain", "start_char_idx": 43298, "end_char_idx": 48748, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "51030bb1-9f42-44e7-9cda-b0ad911cf9b9": {"__data__": {"id_": "51030bb1-9f42-44e7-9cda-b0ad911cf9b9", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-channels.md", "file_name": "neynar_fetch-bulk-channels.md", "file_type": "text/markdown", "file_size": 7853, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "80c6973b-abe6-4e91-ba5a-effb7ff66598", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-channels.md", "file_name": "neynar_fetch-bulk-channels.md", "file_type": "text/markdown", "file_size": 7853, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "40fd484fa3f43c4e34460b463ea7ed2e5d27ac6b517a91b6514369942d6d9ef5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "79e5f9de-01a6-4fbe-8dce-6260c14f6487", "node_type": "1", "metadata": {}, "hash": "0c1ca5d70afe4028c2e58daf64939d0b548e24a8c21578028b4e0309259e9b01", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-bulk-channels\n\n**Endpoint**: `GET /farcaster/channel/bulk`\n\n## Description\nReturns details of multiple channels\n\n## Parameters\n- `ids` (query): Comma separated list of channel IDs or parent_urls, up to 100 at a time\n- `type` (query): Type of identifier being used to query the channels. Defaults to ID.\n- `viewer_fid` (query): FID of the user viewing the channels.\n\n## Response\n```yaml\ntype: object\nrequired:\n- channels\nproperties:\n  channels:\n    type: array\n    items:\n      type: object\n      required:\n      - id\n      - url\n      - object\n      properties:\n        id:\n          type: string\n        url:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        object:\n          type: string\n          enum:\n          - channel\n        created_at:\n          description: Epoch timestamp in seconds.\n          type: number\n        follower_count:\n          description: Number of followers the channel has.\n          type: number\n        external_link:\n          type: object\n          description: Channel's external link.\n          properties:\n            title:\n              type: string\n            url:\n              type: string\n        image_url:\n          type: string\n        parent_url:\n          type: string\n          format: uri\n        lead: &id003\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid: &id002\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5399, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "79e5f9de-01a6-4fbe-8dce-6260c14f6487": {"__data__": {"id_": "79e5f9de-01a6-4fbe-8dce-6260c14f6487", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-channels.md", "file_name": "neynar_fetch-bulk-channels.md", "file_type": "text/markdown", "file_size": 7853, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "80c6973b-abe6-4e91-ba5a-effb7ff66598", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-channels.md", "file_name": "neynar_fetch-bulk-channels.md", "file_type": "text/markdown", "file_size": 7853, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "40fd484fa3f43c4e34460b463ea7ed2e5d27ac6b517a91b6514369942d6d9ef5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "51030bb1-9f42-44e7-9cda-b0ad911cf9b9", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-channels.md", "file_name": "neynar_fetch-bulk-channels.md", "file_type": "text/markdown", "file_size": 7853, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "ee35449c5b820fd09342370e938965f89cfc49cc0d2a6593bed76d2da1421339", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        moderator_fids:\n          type: array\n          items: *id002\n        member_count:\n          type: integer\n          format: int32\n        moderator: *id003\n        pinned_cast_hash:\n          type: string\n          default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n          description: Cast Hash\n        hosts:\n          type: array\n          deprecated: true\n          items: *id003\n        viewer_context:\n          description: Adds context on the viewer's or author's role in the channel.\n          type: object\n          required:\n          - following\n          properties:\n            following:\n              description: Indicates if the user is following the channel.\n              type: boolean\n            role:\n              type: string\n              description: The role of a channel member\n              enum:\n              - member\n              - moderator\n```", "mimetype": "text/plain", "start_char_idx": 4400, "end_char_idx": 7852, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ea735665-e6f0-4845-ad31-45ec895c5574": {"__data__": {"id_": "ea735665-e6f0-4845-ad31-45ec895c5574", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-users-by-eth-or-sol-address.md", "file_name": "neynar_fetch-bulk-users-by-eth-or-sol-address.md", "file_type": "text/markdown", "file_size": 1264, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "de1a1071-d1f5-4488-a9d5-6c573089538b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-users-by-eth-or-sol-address.md", "file_name": "neynar_fetch-bulk-users-by-eth-or-sol-address.md", "file_type": "text/markdown", "file_size": 1264, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "af281357de40999493a733dd171b18be97bf03e8489e322b58150aa76a724ca4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-bulk-users-by-eth-or-sol-address\n\n**Endpoint**: `GET /farcaster/user/bulk-by-address`\n\n## Description\nFetches all users based on multiple Ethereum or Solana addresses.\n\nEach farcaster user has a custody Ethereum address and optionally verified Ethereum or Solana addresses. This endpoint returns all users that have any of the given addresses as their custody or verified Ethereum or Solana addresses.\n\nA custody address can be associated with only 1 farcaster user at a time but a verified address can be associated with multiple users.\nYou can pass in Ethereum and Solana addresses, comma separated, in the same request. The response will contain users associated with the given addresses.\n\n## Parameters\n- `addresses` (query): Comma separated list of Ethereum addresses, up to 350 at a time\n- `address_types` (query): Customize which address types the request should search for. This is a comma-separated string that can include the following values: 'custody_address' and 'verified_address'. By default api returns both. To select multiple types, use a comma-separated list of these values.\n\n- `viewer_fid` (query): No description\n\n## Response\n```yaml\ntype: object\nadditionalProperties:\n  type: array\n  items:\n    $ref: '#/components/schemas/User'\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1263, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a8e92641-460f-4401-8cb1-6eeb2ee1eb34": {"__data__": {"id_": "a8e92641-460f-4401-8cb1-6eeb2ee1eb34", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-users.md", "file_name": "neynar_fetch-bulk-users.md", "file_type": "text/markdown", "file_size": 5292, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "220e9856-b60b-41d1-b139-e7e15ac094c8", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-users.md", "file_name": "neynar_fetch-bulk-users.md", "file_type": "text/markdown", "file_size": 5292, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "2d2da2c9bc3f085cf4280bb21d1edab1abaf39328c1de0abfa9ffb3a3d4befd3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-bulk-users\n\n**Endpoint**: `GET /farcaster/user/bulk`\n\n## Description\nFetches information about multiple users based on FIDs\n\n## Parameters\n- `fids` (query): Comma separated list of FIDs, up to 100 at a time\n- `viewer_fid` (query): No description\n\n## Response\n```yaml\ntype: object\nrequired:\n- users\nproperties:\n  users:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - fid\n      - custody_address\n      - username\n      - profile\n      - follower_count\n      - following_count\n      - verifications\n      - verified_addresses\n      - verified_accounts\n      - power_badge\n      properties:\n        object:\n          type: string\n          enum:\n          - user\n        fid:\n          type: integer\n          format: int32\n          description: The unique identifier of a farcaster user (unsigned integer)\n          examples:\n          - 3\n          - 191\n          - 2\n          - 194\n          - 19960\n        username:\n          type: string\n        display_name:\n          type: string\n        custody_address: &id001\n          type: string\n          pattern: ^0x[a-fA-F0-9]{40}$\n          description: Ethereum address\n        pfp_url:\n          type: string\n          description: The URL of the user's profile picture\n        profile:\n          type: object\n          required:\n          - bio\n          properties:\n            bio:\n              type: object\n              required:\n              - text\n              - mentioned_profiles\n              properties:\n                text:\n                  type: string\n                mentioned_profiles:\n                  type: array\n                  items:\n                    type: string\n                  default: []\n            location:\n              description: Coordinates and place names for a location\n              type: object\n              required:\n              - latitude\n              - longitude\n              properties:\n                latitude:\n                  type: number\n                  format: double\n                  minimum: -90\n                  maximum: 90\n                longitude:\n                  type: number\n                  format: double\n                  minimum: -180\n                  maximum: 180\n                address:\n                  type: object\n                  required:\n                  - city\n                  - country\n                  properties:\n                    city:\n                      type: string\n                    state:\n                      type: string\n                    state_code:\n                      type: string\n                    country:\n                      type: string\n                    country_code:\n                      type: string\n        follower_count:\n          type: integer\n          format: int32\n          description: The number of followers the user has.\n        following_count:\n          type: integer\n          format: int32\n          description: The number of users the user is following.\n        verifications:\n          type: array\n          items: *id001\n        verified_addresses:\n          type: object\n          required:\n          - eth_addresses\n          - sol_addresses\n          properties:\n            eth_addresses:\n              type: array\n              description: List of verified Ethereum addresses of the user sorted\n                by oldest to most recent.\n              items: *id001\n            sol_addresses:\n              type: array\n              description: List of verified Solana addresses of the user sorted by\n                oldest to most recent.\n              items:\n                type: string\n                pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                description: Solana address\n        verified_accounts:\n          type: array\n          description: Verified accounts of the user on other platforms, currently\n            only X is supported.\n          items:\n            type: object\n            properties:\n              platform:\n                type: string\n                enum:\n                - x\n                - github\n              username:\n                type: string\n        power_badge:\n          type: boolean\n        experimental:\n          type: object\n          required:\n          - neynar_user_score\n          properties:\n            neynar_user_score:\n              type: number\n              format: double\n              description: Score that represents the probability that the account\n                is not spam.\n        viewer_context:\n          type: object\n          description: Adds context on the viewer's follow relationship with the user.\n          required:\n          - following\n          - followed_by\n          - blocking\n          - blocked_by\n          properties:\n            following:\n              description: Indicates if the viewer is following the user.\n              type: boolean\n            followed_by:\n              description: Indicates if the viewer is followed by the user.\n              type: boolean\n            blocking:\n              description: Indicates if the viewer is blocking the user.\n              type: boolean\n            blocked_by:\n              description: Indicates if the viewer is blocked by the user.\n              type: boolean\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5291, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1e85b40b-eb6a-4887-bad0-68768af6f125": {"__data__": {"id_": "1e85b40b-eb6a-4887-bad0-68768af6f125", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-cast-metrics.md", "file_name": "neynar_fetch-cast-metrics.md", "file_type": "text/markdown", "file_size": 856, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "98a73a61-96f1-47cc-8c05-e1b7dddacdcc", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-cast-metrics.md", "file_name": "neynar_fetch-cast-metrics.md", "file_type": "text/markdown", "file_size": 856, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "eb465aa458287114ae6e23dcf1237f51ffbf72bf41615ae686bd51eab3a83fc9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-cast-metrics\n\n**Endpoint**: `GET /farcaster/cast/metrics`\n\n## Description\nFetches metrics casts matching a query\n\n## Parameters\n- `q` (query): Query string to search for casts\n- `interval` (query): Interval of time for which to fetch metrics. Choices are `1d`, `7d`, `30d`\n- `author_fid` (query): Fid of the user whose casts you want to search\n- `channel_id` (query): Channel ID of the casts you want to search\n\n## Response\n```yaml\ntype: object\nrequired:\n- metrics\nproperties:\n  metrics:\n    type: array\n    items:\n      type: object\n      required:\n      - start\n      - resolution_in_seconds\n      - cast_count\n      properties:\n        start:\n          type: string\n          format: date-time\n        resolution_in_seconds:\n          type: integer\n          format: int32\n        cast_count:\n          type: integer\n          format: int32\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 855, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "863ecb33-617a-46c5-ac7f-c41a06f50a18": {"__data__": {"id_": "863ecb33-617a-46c5-ac7f-c41a06f50a18", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-cast-reactions.md", "file_name": "neynar_fetch-cast-reactions.md", "file_type": "text/markdown", "file_size": 6993, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "242e5282-687d-41c6-a785-f7e986ebdfa2", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-cast-reactions.md", "file_name": "neynar_fetch-cast-reactions.md", "file_type": "text/markdown", "file_size": 6993, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "9938ed5bc11fe5871587dcbe6d3dc4901b9e8664bf345bbf9a1e16d067a66371", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "54e3db40-6e76-4075-8eb6-f5b19d76e977", "node_type": "1", "metadata": {}, "hash": "d0ed7597362d65da52f8230b5b1f14f3ab043b0b4134ffa7cf64d0e90abbb32b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-cast-reactions\n\n**Endpoint**: `GET /farcaster/reactions/cast`\n\n## Description\nFetches reactions for a given cast\n\n## Parameters\n- `hash` (query): No description\n- `types` (query): Customize which reaction types the request should search for. This is a comma-separated string that can include the following values: 'likes' and 'recasts'. By default api returns both. To select multiple types, use a comma-separated list of these values.\n\n- `viewer_fid` (query): Providing this will return a list of reactions that respects this user's mutes and blocks and includes `viewer_context`.\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- reactions\n- next\nproperties:\n  reactions:\n    type: array\n    items:\n      type: object\n      required:\n      - reaction_type\n      - reaction_timestamp\n      - object\n      - user\n      properties:\n        reaction_type:\n          type: string\n          enum:\n          - like\n          - recast\n        reaction_timestamp:\n          type: string\n          format: date-time\n        object:\n          type: string\n          enum:\n          - likes\n          - recasts\n        user:\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid:\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5264, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "54e3db40-6e76-4075-8eb6-f5b19d76e977": {"__data__": {"id_": "54e3db40-6e76-4075-8eb6-f5b19d76e977", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-cast-reactions.md", "file_name": "neynar_fetch-cast-reactions.md", "file_type": "text/markdown", "file_size": 6993, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "242e5282-687d-41c6-a785-f7e986ebdfa2", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-cast-reactions.md", "file_name": "neynar_fetch-cast-reactions.md", "file_type": "text/markdown", "file_size": 6993, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "9938ed5bc11fe5871587dcbe6d3dc4901b9e8664bf345bbf9a1e16d067a66371", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "863ecb33-617a-46c5-ac7f-c41a06f50a18", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-cast-reactions.md", "file_name": "neynar_fetch-cast-reactions.md", "file_type": "text/markdown", "file_size": 6993, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "66aa0ffb074f271d95844e6a299d2ea53aa609c386d4926dee06c3daed1926da", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4265, "end_char_idx": 6992, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ae00f15c-8d8d-4366-9d0c-039c26106190": {"__data__": {"id_": "ae00f15c-8d8d-4366-9d0c-039c26106190", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2af4645b-a548-4241-a7d0-d319a2a700ba", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "59a92129b252d843d1e98b9857cf87e54f6ac5c2d616808d992e020943480328", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6cd40cbe-2f30-4dd6-8c7e-09f722610f8f", "node_type": "1", "metadata": {}, "hash": "276d9829bd28ca7c832cf3651919d5f3d9662484a0269ecacb934ce07c8af95d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-casts-for-user\n\n**Endpoint**: `GET /farcaster/feed/user/casts`\n\n## Description\nFetch casts for a given user FID in reverse chronological order. Also allows filtering by parent_url and channel\n\n## Parameters\n- `fid` (query): FID of user whose recent casts you want to fetch\n- `viewer_fid` (query): FID of the user viewing the feed\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor\n- `include_replies` (query): Include reply casts by the author in the response, true by default\n- `parent_url` (query): Parent URL to filter the feed; mutually exclusive with channel_id\n- `channel_id` (query): Channel ID to filter the feed; mutually exclusive with parent_url\n\n## Response\n```yaml\ntype: object\nrequired:\n- casts\n- next\nproperties:\n  casts:\n    type: array\n    items:\n      allOf:\n      - type: object\n        required:\n        - hash\n        - parent_hash\n        - parent_url\n        - root_parent_url\n        - parent_author\n        - author\n        - text\n        - timestamp\n        - embeds\n        properties:\n          hash:\n            type: string\n          parent_hash:\n            type:\n            - string\n            - 'null'\n          parent_url:\n            type:\n            - string\n            - 'null'\n          root_parent_url:\n            type:\n            - string\n            - 'null'\n          parent_author:\n            type: object\n            required:\n            - fid\n            properties:\n              fid:\n                oneOf:\n                - type: 'null'\n                - &id001\n                  type: integer\n                  format: int32\n                  description: The unique identifier of a farcaster user (unsigned\n                    integer)\n                  examples:\n                  - 3\n                  - 191\n                  - 2\n                  - 194\n                  - 19960\n          author: &id011\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: *id001\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id002\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5575, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6cd40cbe-2f30-4dd6-8c7e-09f722610f8f": {"__data__": {"id_": "6cd40cbe-2f30-4dd6-8c7e-09f722610f8f", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2af4645b-a548-4241-a7d0-d319a2a700ba", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "59a92129b252d843d1e98b9857cf87e54f6ac5c2d616808d992e020943480328", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae00f15c-8d8d-4366-9d0c-039c26106190", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "bd9b11c34ce0dc308ff801bceec04ae842232f9699aac260db4a7a54305a2058", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0efe17dc-f46c-4fca-8fdd-f9dc28ebfe06", "node_type": "1", "metadata": {}, "hash": "fe0df8fb809538d41413faf06c0a270674cb9253987f2f1009b522ab38419e14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 4725, "end_char_idx": 7548, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0efe17dc-f46c-4fca-8fdd-f9dc28ebfe06": {"__data__": {"id_": "0efe17dc-f46c-4fca-8fdd-f9dc28ebfe06", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2af4645b-a548-4241-a7d0-d319a2a700ba", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "59a92129b252d843d1e98b9857cf87e54f6ac5c2d616808d992e020943480328", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6cd40cbe-2f30-4dd6-8c7e-09f722610f8f", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f029a57f59840227ca97cb118e81b70766ab71d93d0b3b73e73a5b612e88cb88", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c058fb28-e0d3-4e3a-8f62-ca3e85331698", "node_type": "1", "metadata": {}, "hash": "7693468d1bce4d6458a0c00eb5858d0c52e0d3acfd9f809418886132f3cd260d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          text:\n            type: string\n          timestamp: &id006\n            type: string\n            format: date-time\n          embeds:\n            type: array\n            items:\n              oneOf:\n              - &id007\n                type: object\n                required:\n                - url\n                properties:\n                  url:\n                    type: string\n                  metadata:\n                    type: object\n                    required:\n                    - _status\n                    properties:\n                      _status:\n                        type: string\n                      content_type:\n                        type:\n                        - string\n                        - 'null'\n                      content_length:\n                        type:\n                        - integer\n                        - 'null'\n                      image:\n                        type: object\n                        properties:\n                          height_px:\n                            type: integer\n                          width_px:\n                            type: integer\n                      video:\n                        type: object\n                        properties:\n                          duration_s:\n                            type: number\n                          stream:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                codec_name:\n                                  type: string\n                                height_px:\n                                  type: integer\n                                width_px:\n                                  type: integer\n                      html:\n                        allOf:\n                        - type: object\n                          properties:\n                            favicon:\n                              type: string\n                            modifiedTime:\n                              type: string\n                            ogArticleAuthor:\n                              type: string\n                            ogArticleExpirationTime:\n                              type: string\n                            ogArticleModifiedTime:\n                              type: string\n                            ogArticlePublishedTime:\n                              type: string\n                            ogArticlePublisher:\n                              type: string\n                            ogArticleSection:\n                              type: string\n                            ogArticleTag:\n                              type: string\n                            ogAudio:\n                              type: string\n                            ogAudioSecureURL:\n                              type: string\n                            ogAudioType:\n                              type: string\n                            ogAudioURL:\n                              type: string\n                            ogAvailability:\n                              type: string\n                            ogDate:\n                              type: string\n                            ogDescription:\n                              type: string\n                            ogDeterminer:\n                              type: string\n                            ogEpisode:\n                              type: string\n                            ogImage:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                  alt:\n                                    type: string\n                                required:\n                                - url\n                            ogLocale:\n                              type: string\n                            ogLocaleAlternate:\n                              type: string\n                            ogLogo:\n                              type: string\n                            ogMovie:\n                              type: string\n                            ogPriceAmount:\n                              type: string\n                            ogPriceCurrency:\n                              type: string\n                            ogProductAvailability:\n                              type: string\n                            ogProductCondition:\n                              type: string\n                            ogProductPriceAmount:\n                              type: string\n                            ogProductPriceCurrency:\n                              type: string\n                            ogProductRetailerItemId:\n                              type: string\n                            ogSiteName:\n                              type: string\n                            ogTitle:\n                              type: string\n                            ogType:\n                              type: string\n                            ogUrl:\n                              type: string\n                            ogVideo:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                required:\n                                - url\n                            ogVideoActor:\n                              type: string\n                            ogVideoActorId:\n                              type: string\n                            ogVideoActorRole:\n                              type: string\n                            ogVideoDirector:\n                              type: string\n                            ogVideoDuration:\n                              type: string\n                            ogVideoOther:\n                              type: string\n                            ogVideoReleaseDate:\n                              type: string\n                            ogVideoSecureURL:\n                              type: string\n                            ogVideoSeries:\n                              type: string\n                            ogVideoTag:\n                              type: string\n                            ogVideoTvShow:\n                              type: string\n                            ogVideoWriter:\n                              type: string\n                            ogWebsite:\n                              type: string\n                            updatedTime:\n                              type: string\n                        - type: object\n                          properties:\n                            oembed:\n                              oneOf:\n                              - allOf:\n                                - &id003\n                                  type: object\n                                  description: Basic data structure of every oembed\n                                    response see https://oembed.com/\n                                  required:\n                                  - type\n                                  - version\n                                  properties:\n                                    type:\n                                      type: string\n                                    version:\n                                      type:\n                                      - string\n                                      - 'null'\n                                    title:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A text title, describing the resource.", "mimetype": "text/plain", "start_char_idx": 6683, "end_char_idx": 16088, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c058fb28-e0d3-4e3a-8f62-ca3e85331698": {"__data__": {"id_": "c058fb28-e0d3-4e3a-8f62-ca3e85331698", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2af4645b-a548-4241-a7d0-d319a2a700ba", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "59a92129b252d843d1e98b9857cf87e54f6ac5c2d616808d992e020943480328", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0efe17dc-f46c-4fca-8fdd-f9dc28ebfe06", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "5a79b69e860f848da7d9038b28fc9a97a5105b1170274b6bd4be6284f37fa7dd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "61e76b09-3e31-496f-a005-de4a30bbcf08", "node_type": "1", "metadata": {}, "hash": "02bb5551c6319ad9c9e131ba050e77c2a58a5756c4a5f538be3d18d6c2b844c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the author/owner of\n                                        the resource.\n                                    author_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL for the author/owner of the\n                                        resource.\n                                    provider_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the resource provider.\n                                    provider_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The url of the resource provider.\n                                    cache_age:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The suggested cache lifetime for\n                                        this resource, in seconds. Consumers may choose\n                                        to use this value or not.\n                                    thumbnail_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL to a thumbnail image representing\n                                        the resource. The thumbnail must respect any\n                                        maxwidth and maxheight parameters. If this\n                                        parameter is present, thumbnail_width and\n                                        thumbnail_height must also be present.\n                                    thumbnail_width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_height must also be present.\n                                    thumbnail_height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_width must also be present.\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - rich\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to display the\n                                        resource. The HTML should have no padding\n                                        or margins. Consumers may wish to load the\n                                        HTML in an off-domain iframe to avoid XSS\n                                        vulnerabilities. The markup should be valid\n                                        XHTML 1.0 Basic.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - video\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to embed a video\n                                        player. The HTML should have no padding or\n                                        margins. Consumers may wish to load the HTML\n                                        in an off-domain iframe to avoid XSS vulnerabilities.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 16125, "end_char_idx": 24455, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "61e76b09-3e31-496f-a005-de4a30bbcf08": {"__data__": {"id_": "61e76b09-3e31-496f-a005-de4a30bbcf08", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2af4645b-a548-4241-a7d0-d319a2a700ba", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "59a92129b252d843d1e98b9857cf87e54f6ac5c2d616808d992e020943480328", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c058fb28-e0d3-4e3a-8f62-ca3e85331698", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "834f21493e3417b949e6cd56ac94f1a26f1f637c0f4e311655eadf7798be412f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7a680cc7-39a1-459b-91ce-ab18e7a08a99", "node_type": "1", "metadata": {}, "hash": "4bf0e8989166b44509d34059a21981076b724bc3fd8b9c3a31d03109f5c8881a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - link\n                              discriminator:\n                                propertyName: type\n                                mapping:\n                                  rich: '#/components/schemas/OembedRichData'\n                                  video: '#/components/schemas/OembedVideoData'\n                                  photo: '#/components/schemas/OembedPhotoData'\n                                  link: '#/components/schemas/OembedLinkData'\n                      frame: &id010\n                        discriminator:\n                          propertyName: version\n                        oneOf:\n                        - description: Frame v1 object\n                          allOf:\n                          - &id004\n                            description: Frame base object used across all versions\n                            type: object\n                            required:\n                            - version\n                            - image\n                            - frames_url\n                            properties:\n                              version:\n                                type: string\n                                description: Version of the frame, 'next' for v2,\n                                  'vNext' for v1\n                              image:\n                                type: string\n                                description: URL of the image\n                              frames_url:\n                                type: string\n                                description: Launch URL of the frame\n                          - type: object\n                            properties:\n                              buttons:\n                                type: array\n                                items:\n                                  type: object\n                                  required:\n                                  - index\n                                  - action_type\n                                  properties:\n                                    title:\n                                      type: string\n                                      description: Title of the button\n                                    index:\n                                      type: integer\n                                      description: Index of the button\n                                    action_type:\n                                      type: string\n                                      description: The action type of a frame button.\n                                        Action types \"mint\" & \"link\" are to be handled\n                                        on the client side only and so they will produce\n                                        a no/op for POST /farcaster/frame/action.\n                                      enum:\n                                      - post\n                                      - post_redirect\n                                      - tx\n                                      - link\n                                      - mint\n                                    target:\n                                      type: string\n                                      description: Target of the button\n                                    post_url:\n                                      type: string\n                                      description: Used specifically for the tx action\n                                        type to post a successful transaction hash\n                              post_url:\n                                type: string\n                                description: Post URL to take an action on this frame\n                              title:\n                                type: string\n                              image_aspect_ratio:\n                                type: string\n                              input:\n                                type: object\n                                properties:\n                                  text:\n                                    type: string\n                                    description: Input text for the frame\n                              state:\n                                type: object\n                                properties:\n                                  serialized:\n                                    type: string\n                                    description: State for the frame in a serialized\n                                      format\n                        - description: Frame v2 object\n                          allOf:\n                          - *id004\n                          - type: object\n                            required:\n                            - title\n                            - name\n                            - icon\n                            properties:\n                              manifest:\n                                type: object\n                                properties:\n                                  account_association:\n                                    type: object\n                                    properties:\n                                      header:\n                                        type: string\n                                      payload:\n                                        type: string\n                                      signature:\n                                        type: string\n                                    required:\n                                    - header\n                                    - payload\n                                    - signature\n                                  frame:\n                                    type: object\n                                    properties:\n                                      version:\n                                        type: string\n                                        enum:\n                                        - 0.0.0\n                                        - 0.0.", "mimetype": "text/plain", "start_char_idx": 22762, "end_char_idx": 30855, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7a680cc7-39a1-459b-91ce-ab18e7a08a99": {"__data__": {"id_": "7a680cc7-39a1-459b-91ce-ab18e7a08a99", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2af4645b-a548-4241-a7d0-d319a2a700ba", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "59a92129b252d843d1e98b9857cf87e54f6ac5c2d616808d992e020943480328", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "61e76b09-3e31-496f-a005-de4a30bbcf08", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "4b1aff544d36d52546c7cb51d44758fae45dfed60dc5f6b127da80f529ef2ac0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5a07f857-208a-450f-8649-e0eff73dddea", "node_type": "1", "metadata": {}, "hash": "256dbc3a053302772e68551d3c8ed80cd3cc87d6cacee7a7b90bcf151cedcd80", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                        - 0.0.1\n                                        - '1'\n                                        - next\n                                      name:\n                                        type: string\n                                        maxLength: 32\n                                      home_url:\n                                        type: string\n                                        maxLength: 512\n                                      icon_url:\n                                        type: string\n                                        maxLength: 512\n                                      image_url:\n                                        type: string\n                                        maxLength: 512\n                                      button_title:\n                                        type: string\n                                        maxLength: 32\n                                      splash_image_url:\n                                        type: string\n                                        maxLength: 512\n                                      splash_background_color:\n                                        type: string\n                                      webhook_url:\n                                        type: string\n                                        maxLength: 512\n                                    required:\n                                    - version\n                                    - name\n                                    - home_url\n                                    - icon_url\n                                  triggers:\n                                    type: array\n                                    items:\n                                      oneOf:\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - cast\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - composer\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                required:\n                                - account_association\n                              author: &id005\n                                type: object\n                                required:\n                                - object\n                                - fid\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - user_dehydrated\n                                  fid: *id001\n                                  username:\n                                    type: string\n                                  display_name:\n                                    type: string\n                                  pfp_url:\n                                    type: string\n                        mapping:\n                          vNext: '#/components/schemas/FrameV1'\n                          next: '#/components/schemas/FrameV2'\n                          '1': '#/components/schemas/FrameV2'\n                          0.0.0: '#/components/schemas/FrameV2'\n                          0.0.1: '#/components/schemas/FrameV2'\n              - type: object\n                required:\n                - cast\n                properties:\n                  cast_id: &id008\n                    type: object\n                    required:\n                    - fid\n                    - hash\n                    properties:\n                      fid: *id001\n                      hash:\n                        type: string\n                  cast:\n                    type: object\n                    required:\n                    - hash\n                    - parent_hash\n                    - parent_url\n                    - root_parent_url\n                    - parent_author\n                    - author\n                    - text\n                    - timestamp\n                    - type\n                    - embeds\n                    - channel\n                    properties:\n                      hash:\n                        type: string\n                      parent_hash:\n                        type:\n                        - string\n                        - 'null'\n                      parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      root_parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      parent_author:\n                        type: object\n                        required:\n                        - fid\n                        properties:\n                          fid:\n                            oneOf:\n                            - type: 'null'\n                            - *id001\n                      author: *id005\n                      text:\n                        type: string\n                      timestamp: *id006\n                      type: &id009\n                        type: string\n                        enum:\n                        - cast-mention\n                        - cast-reply\n                        description: 'The notification type of a cast.\n\n                          '\n                      embeds:\n                        type: array\n                        items:\n                          oneOf:\n                          - *id007\n                          - type: object\n                            required:\n                            - cast\n                            properties:\n                              cast_id: *id008\n                              cast:\n                                type: object\n                                required:\n                                - object\n                                - hash\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - cast_dehydrated\n                                  hash:\n                                    type: string\n                                  author: *id005\n                      channel:\n                        oneOf:\n                        - type: 'null'\n                        - &id013\n                          type: object\n                          required:\n                          - id\n                          - name\n                          - object\n                          properties:\n                            id:\n                              type: string\n                            name:\n                              type: string\n                            object:\n                              type: string\n                              enum:\n                              - channel_dehydrated\n                            image_url:\n                              type: string\n                            viewer_context: &id012\n                              description: Adds context on the viewer's or author's\n                                role in the channel.", "mimetype": "text/plain", "start_char_idx": 30805, "end_char_idx": 39572, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5a07f857-208a-450f-8649-e0eff73dddea": {"__data__": {"id_": "5a07f857-208a-450f-8649-e0eff73dddea", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2af4645b-a548-4241-a7d0-d319a2a700ba", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "59a92129b252d843d1e98b9857cf87e54f6ac5c2d616808d992e020943480328", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7a680cc7-39a1-459b-91ce-ab18e7a08a99", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "3b03ac0010c1b684dcada2ddfd8a9334297f65b9ebc45e6a739f8b425bd0010f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                              required:\n                              - following\n                              properties:\n                                following:\n                                  description: Indicates if the user is following\n                                    the channel.\n                                  type: boolean\n                                role:\n                                  type: string\n                                  description: The role of a channel member\n                                  enum:\n                                  - member\n                                  - moderator\n          type: *id009\n      - type: object\n        required:\n        - reactions\n        - replies\n        - thread_hash\n        - mentioned_profiles\n        - channel\n        properties:\n          frames:\n            type: array\n            items: *id010\n          reactions:\n            type: object\n            required:\n            - likes\n            - recasts\n            - likes_count\n            - recasts_count\n            properties:\n              likes:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  properties:\n                    fid: *id001\n              recasts:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  - fname\n                  properties:\n                    fid: *id001\n                    fname:\n                      type: string\n              likes_count:\n                type: integer\n                format: int32\n              recasts_count:\n                type: integer\n                format: int32\n          replies:\n            type: object\n            required:\n            - count\n            properties:\n              count:\n                type: integer\n                format: int32\n          thread_hash:\n            type:\n            - string\n            - 'null'\n          mentioned_profiles:\n            type: array\n            items: *id011\n          channel:\n            oneOf:\n            - oneOf:\n              - type: object\n                required:\n                - id\n                - url\n                - object\n                properties:\n                  id:\n                    type: string\n                  url:\n                    type: string\n                  name:\n                    type: string\n                  description:\n                    type: string\n                  object:\n                    type: string\n                    enum:\n                    - channel\n                  created_at:\n                    description: Epoch timestamp in seconds.\n                    type: number\n                  follower_count:\n                    description: Number of followers the channel has.\n                    type: number\n                  external_link:\n                    type: object\n                    description: Channel's external link.\n                    properties:\n                      title:\n                        type: string\n                      url:\n                        type: string\n                  image_url:\n                    type: string\n                  parent_url:\n                    type: string\n                    format: uri\n                  lead: *id011\n                  moderator_fids:\n                    type: array\n                    items: *id001\n                  member_count:\n                    type: integer\n                    format: int32\n                  moderator: *id011\n                  pinned_cast_hash:\n                    type: string\n                    default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                    description: Cast Hash\n                  hosts:\n                    type: array\n                    deprecated: true\n                    items: *id011\n                  viewer_context: *id012\n              - *id013\n              discriminator:\n                propertyName: object\n                mapping:\n                  channel: '#/components/schemas/Channel'\n                  dehydrated_channel: '#/components/schemas/DehydratedChannel'\n            - type: 'null'\n          viewer_context:\n            type: object\n            description: Adds context on interactions the viewer has made with the\n              cast.\n            required:\n            - liked\n            - recasted\n            properties:\n              liked:\n                description: Indicates if the viewer liked the cast.\n                type: boolean\n              recasted:\n                description: Indicates if the viewer recasted the cast.\n                type: boolean\n          author_channel_context: *id012\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 39603, "end_char_idx": 44612, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fa1677ac-b93c-4cb5-ac1b-bbda106dde60": {"__data__": {"id_": "fa1677ac-b93c-4cb5-ac1b-bbda106dde60", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-invites.md", "file_name": "neynar_fetch-channel-invites.md", "file_type": "text/markdown", "file_size": 6802, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6183c71c-576a-4d8d-b5a3-3d9d1cec4c03", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-invites.md", "file_name": "neynar_fetch-channel-invites.md", "file_type": "text/markdown", "file_size": 6802, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "eb00a041a0cc8a0238fda604cdf00143b4abdebc0a6920e7d3a183cabcaacd87", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5d10b3b1-327b-4f66-bc9f-fcc128cf764c", "node_type": "1", "metadata": {}, "hash": "1129ad9a7c7fe92a832492342e77107de33a0e547fa55be72552aedd3118bd58", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-channel-invites\n\n**Endpoint**: `GET /farcaster/channel/member/invite/list`\n\n## Description\nFetch a list of invites, either in a channel or for a user. If both are provided, open channel invite for that user is returned.\n\n## Parameters\n- `channel_id` (query): Channel ID for the channel being queried\n- `invited_fid` (query): FID of the user being invited\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- invites\nproperties:\n  invites:\n    type: array\n    items:\n      type: object\n      required:\n      - channel_id\n      - role\n      - inviter\n      - invited\n      properties:\n        channel_id:\n          type: string\n          description: The unique identifier of a farcaster channel\n          examples:\n          - neynar\n        role:\n          type: string\n          description: The role of a channel member\n          enum:\n          - member\n          - moderator\n        inviter: &id002\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid:\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5049, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5d10b3b1-327b-4f66-bc9f-fcc128cf764c": {"__data__": {"id_": "5d10b3b1-327b-4f66-bc9f-fcc128cf764c", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-invites.md", "file_name": "neynar_fetch-channel-invites.md", "file_type": "text/markdown", "file_size": 6802, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6183c71c-576a-4d8d-b5a3-3d9d1cec4c03", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-invites.md", "file_name": "neynar_fetch-channel-invites.md", "file_type": "text/markdown", "file_size": 6802, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "eb00a041a0cc8a0238fda604cdf00143b4abdebc0a6920e7d3a183cabcaacd87", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fa1677ac-b93c-4cb5-ac1b-bbda106dde60", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-invites.md", "file_name": "neynar_fetch-channel-invites.md", "file_type": "text/markdown", "file_size": 6802, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d21a09c5a41f0b9e54e8e9353e84051239e7c5562b68a075b7085a6106c81df8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        invited: *id002\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4050, "end_char_idx": 6801, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ce042bf2-e224-4db5-8323-ef7b218c195a": {"__data__": {"id_": "ce042bf2-e224-4db5-8323-ef7b218c195a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-members.md", "file_name": "neynar_fetch-channel-members.md", "file_type": "text/markdown", "file_size": 9938, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a02b6dd6-999b-443b-80c2-48582c81ec47", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-members.md", "file_name": "neynar_fetch-channel-members.md", "file_type": "text/markdown", "file_size": 9938, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "c7ab9d7c790ea277589c976dd8aa11242f9ffba6c34044ee0178c147efddf4bd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "de43eeb2-b4b7-4706-9f98-f81d2b6f5f2a", "node_type": "1", "metadata": {}, "hash": "4df8622b9a903cd4b4c520dd66079d29d68d3dba729e3a548f3397e1f3aae731", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-channel-members\n\n**Endpoint**: `GET /farcaster/channel/member/list`\n\n## Description\nFetch a list of members in a channel\n\n## Parameters\n- `channel_id` (query): Channel ID for the channel being queried\n- `fid` (query): FID of the user being queried. Specify this to check if a user is a member of the channel without paginating through all members.\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- members\n- next\nproperties:\n  members:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - role\n      - user\n      - channel\n      properties:\n        object:\n          type: string\n          enum:\n          - member\n        role: &id004\n          type: string\n          description: The role of a channel member\n          enum:\n          - member\n          - moderator\n        user:\n          oneOf:\n          - &id003\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: &id002\n                type: integer\n                format: int32\n                description: The unique identifier of a farcaster user (unsigned integer)\n                examples:\n                - 3\n                - 191\n                - 2\n                - 194\n                - 19960\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id001\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id001\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id001\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5985, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "de43eeb2-b4b7-4706-9f98-f81d2b6f5f2a": {"__data__": {"id_": "de43eeb2-b4b7-4706-9f98-f81d2b6f5f2a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-members.md", "file_name": "neynar_fetch-channel-members.md", "file_type": "text/markdown", "file_size": 9938, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a02b6dd6-999b-443b-80c2-48582c81ec47", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-members.md", "file_name": "neynar_fetch-channel-members.md", "file_type": "text/markdown", "file_size": 9938, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "c7ab9d7c790ea277589c976dd8aa11242f9ffba6c34044ee0178c147efddf4bd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ce042bf2-e224-4db5-8323-ef7b218c195a", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-members.md", "file_name": "neynar_fetch-channel-members.md", "file_type": "text/markdown", "file_size": 9938, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "faac4043190ba6c8234674cbb6a67dddf97a9f4d0ae295388ad55937f2966e7d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          - type: object\n            required:\n            - object\n            - fid\n            properties:\n              object:\n                type: string\n                enum:\n                - user_dehydrated\n              fid: *id002\n              username:\n                type: string\n              display_name:\n                type: string\n              pfp_url:\n                type: string\n        channel:\n          oneOf:\n          - type: object\n            required:\n            - id\n            - url\n            - object\n            properties:\n              id:\n                type: string\n              url:\n                type: string\n              name:\n                type: string\n              description:\n                type: string\n              object:\n                type: string\n                enum:\n                - channel\n              created_at:\n                description: Epoch timestamp in seconds.\n                type: number\n              follower_count:\n                description: Number of followers the channel has.\n                type: number\n              external_link:\n                type: object\n                description: Channel's external link.\n                properties:\n                  title:\n                    type: string\n                  url:\n                    type: string\n              image_url:\n                type: string\n              parent_url:\n                type: string\n                format: uri\n              lead: *id003\n              moderator_fids:\n                type: array\n                items: *id002\n              member_count:\n                type: integer\n                format: int32\n              moderator: *id003\n              pinned_cast_hash:\n                type: string\n                default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                description: Cast Hash\n              hosts:\n                type: array\n                deprecated: true\n                items: *id003\n              viewer_context: &id005\n                description: Adds context on the viewer's or author's role in the\n                  channel.\n                type: object\n                required:\n                - following\n                properties:\n                  following:\n                    description: Indicates if the user is following the channel.\n                    type: boolean\n                  role: *id004\n          - type: object\n            required:\n            - id\n            - name\n            - object\n            properties:\n              id:\n                type: string\n              name:\n                type: string\n              object:\n                type: string\n                enum:\n                - channel_dehydrated\n              image_url:\n                type: string\n              viewer_context: *id005\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4913, "end_char_idx": 9937, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "41f54eda-a9a1-4333-ad34-ced841a861e1": {"__data__": {"id_": "41f54eda-a9a1-4333-ad34-ced841a861e1", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09573924-2766-4bae-8b84-d7b282345081", "node_type": "1", "metadata": {}, "hash": "28a51ea5068f3852330e1cd27ef845c9112e4b91fef90f0909c46aa9ca49b4b2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-channel-notifications-for-user\n\n**Endpoint**: `GET /farcaster/notifications/channel`\n\n## Description\nReturns a list of notifications for a user in specific channels\n\n## Parameters\n- `fid` (query): FID of the user you you want to fetch notifications for. The response will respect this user's mutes and blocks.\n- `channel_ids` (query): Comma separated channel_ids (find list of all channels here - https://docs.neynar.com/reference/list-all-channels)\n- `priority_mode` (query): When true, only returns notifications from power badge users and users that the viewer follows (if viewer_fid is provided).\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- unseen_notifications_count\n- notifications\n- next\nproperties:\n  unseen_notifications_count:\n    type: integer\n    format: int32\n  notifications:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - most_recent_timestamp\n      - type\n      - seen\n      properties:\n        object:\n          type: string\n        most_recent_timestamp:\n          type: string\n          format: date-time\n        type:\n          type: string\n          enum:\n          - follows\n          - recasts\n          - likes\n          - mention\n          - reply\n          - quote\n        seen:\n          type: boolean\n        follows:\n          type: array\n          items:\n            type: object\n            required:\n            - object\n            - user\n            properties:\n              object:\n                type: string\n                enum:\n                - follow\n              user: &id003\n                type: object\n                required:\n                - object\n                - fid\n                - custody_address\n                - username\n                - profile\n                - follower_count\n                - following_count\n                - verifications\n                - verified_addresses\n                - verified_accounts\n                - power_badge\n                properties:\n                  object:\n                    type: string\n                    enum:\n                    - user\n                  fid: &id002\n                    type: integer\n                    format: int32\n                    description: The unique identifier of a farcaster user (unsigned\n                      integer)\n                    examples:\n                    - 3\n                    - 191\n                    - 2\n                    - 194\n                    - 19960\n                  username:\n                    type: string\n                  display_name:\n                    type: string\n                  custody_address: &id001\n                    type: string\n                    pattern: ^0x[a-fA-F0-9]{40}$\n                    description: Ethereum address\n                  pfp_url:\n                    type: string\n                    description: The URL of the user's profile picture\n                  profile:\n                    type: object\n                    required:\n                    - bio\n                    properties:\n                      bio:\n                        type: object\n                        required:\n                        - text\n                        - mentioned_profiles\n                        properties:\n                          text:\n                            type: string\n                          mentioned_profiles:\n                            type: array\n                            items:\n                              type: string\n                            default: []\n                      location:\n                        description: Coordinates and place names for a location\n                        type: object\n                        required:\n                        - latitude\n                        - longitude\n                        properties:\n                          latitude:\n                            type: number\n                            format: double\n                            minimum: -90\n                            maximum: 90\n                          longitude:\n                            type: number\n                            format: double\n                            minimum: -180\n                            maximum: 180\n                          address:\n                            type: object\n                            required:\n                            - city\n                            - country\n                            properties:\n                              city:\n                                type: string\n                              state:\n                                type: string\n                              state_code:\n                                type: string\n                              country:\n                                type: string\n                              country_code:\n                                type: string\n                  follower_count:\n                    type: integer\n                    format: int32\n                    description: The number of followers the user has.\n                  following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id001\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id001\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 6047, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "09573924-2766-4bae-8b84-d7b282345081": {"__data__": {"id_": "09573924-2766-4bae-8b84-d7b282345081", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41f54eda-a9a1-4333-ad34-ced841a861e1", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "941ae3cbaf0f12cba96069ab8138233d4bc9acc0a2ce28b3d22156991fb9a139", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9820be8e-a7c3-49c6-8241-8263d78c6549", "node_type": "1", "metadata": {}, "hash": "169a59319fb9d24fb0317dd2e49f2266fc7dc58ad08b58979bc54f908f94fb5b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id001\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id001\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.\n                        items:\n                          type: string\n                          pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                          description: Solana address\n                  verified_accounts:\n                    type: array\n                    description: Verified accounts of the user on other platforms,\n                      currently only X is supported.\n                    items:\n                      type: object\n                      properties:\n                        platform:\n                          type: string\n                          enum:\n                          - x\n                          - github\n                        username:\n                          type: string\n                  power_badge:\n                    type: boolean\n                  experimental:\n                    type: object\n                    required:\n                    - neynar_user_score\n                    properties:\n                      neynar_user_score:\n                        type: number\n                        format: double\n                        description: Score that represents the probability that the\n                          account is not spam.\n                  viewer_context:\n                    type: object\n                    description: Adds context on the viewer's follow relationship\n                      with the user.\n                    required:\n                    - following\n                    - followed_by\n                    - blocking\n                    - blocked_by\n                    properties:\n                      following:\n                        description: Indicates if the viewer is following the user.\n                        type: boolean\n                      followed_by:\n                        description: Indicates if the viewer is followed by the user.\n                        type: boolean\n                      blocking:\n                        description: Indicates if the viewer is blocking the user.\n                        type: boolean\n                      blocked_by:\n                        description: Indicates if the viewer is blocked by the user.\n                        type: boolean\n        cast:\n          allOf:\n          - type: object\n            required:\n            - hash\n            - parent_hash\n            - parent_url\n            - root_parent_url\n            - parent_author\n            - author\n            - text\n            - timestamp\n            - embeds\n            properties:\n              hash:\n                type: string\n              parent_hash:\n                type:\n                - string\n                - 'null'\n              parent_url:\n                type:\n                - string\n                - 'null'\n              root_parent_url:\n                type:\n                - string\n                - 'null'\n              parent_author:\n                type: object\n                required:\n                - fid\n                properties:\n                  fid:", "mimetype": "text/plain", "start_char_idx": 5113, "end_char_idx": 9083, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9820be8e-a7c3-49c6-8241-8263d78c6549": {"__data__": {"id_": "9820be8e-a7c3-49c6-8241-8263d78c6549", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "09573924-2766-4bae-8b84-d7b282345081", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "436b5fa92a8033831106bac477c6826c3478fb3f870f6ffb8baa270e6873bb65", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "02fa3b0f-de52-472c-a9d8-0dc488ee1625", "node_type": "1", "metadata": {}, "hash": "c1b5bb48ae141461219d2a5d14ef95e076cdc8320a2c7e623f09c2ab83b8804a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- 'null'\n              root_parent_url:\n                type:\n                - string\n                - 'null'\n              parent_author:\n                type: object\n                required:\n                - fid\n                properties:\n                  fid:\n                    oneOf:\n                    - type: 'null'\n                    - *id002\n              author: *id003\n              text:\n                type: string\n              timestamp: &id007\n                type: string\n                format: date-time\n              embeds:\n                type: array\n                items:\n                  oneOf:\n                  - &id008\n                    type: object\n                    required:\n                    - url\n                    properties:\n                      url:\n                        type: string\n                      metadata:\n                        type: object\n                        required:\n                        - _status\n                        properties:\n                          _status:\n                            type: string\n                          content_type:\n                            type:\n                            - string\n                            - 'null'\n                          content_length:\n                            type:", "mimetype": "text/plain", "start_char_idx": 8815, "end_char_idx": 10130, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "02fa3b0f-de52-472c-a9d8-0dc488ee1625": {"__data__": {"id_": "02fa3b0f-de52-472c-a9d8-0dc488ee1625", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9820be8e-a7c3-49c6-8241-8263d78c6549", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "7849c51f265886fadf3df696b637af4cecaae10108a46dad057bf752aa808778", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3ac19dc4-a885-4130-8ca0-857194ee1ac8", "node_type": "1", "metadata": {}, "hash": "7ea3d4f5bcc4e2b23c3433b940f18b8ed7326f3f93f19b3c40f71a892b859eef", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "content_type:\n                            type:\n                            - string\n                            - 'null'\n                          content_length:\n                            type:\n                            - integer\n                            - 'null'\n                          image:\n                            type: object\n                            properties:\n                              height_px:\n                                type: integer\n                              width_px:\n                                type: integer\n                          video:\n                            type: object\n                            properties:\n                              duration_s:\n                                type: number\n                              stream:\n                                type: array\n                                items:\n                                  type: object\n                                  properties:\n                                    codec_name:\n                                      type: string\n                                    height_px:\n                                      type: integer\n                                    width_px:", "mimetype": "text/plain", "start_char_idx": 9933, "end_char_idx": 11151, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3ac19dc4-a885-4130-8ca0-857194ee1ac8": {"__data__": {"id_": "3ac19dc4-a885-4130-8ca0-857194ee1ac8", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "02fa3b0f-de52-472c-a9d8-0dc488ee1625", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "44291ce2f1a41570e91f2d86941de8aaba8b34669b9de19a41b87053bf9aa49e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c4a9089b-6e16-4e1f-b3f5-cb373ed06c96", "node_type": "1", "metadata": {}, "hash": "354a714b52dabed5f9446901128c6bda93bc0c8e5a5e7f50a8b06bba1ad556fa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "codec_name:\n                                      type: string\n                                    height_px:\n                                      type: integer\n                                    width_px:\n                                      type: integer\n                          html:\n                            allOf:\n                            - type: object\n                              properties:\n                                favicon:\n                                  type: string\n                                modifiedTime:\n                                  type: string\n                                ogArticleAuthor:\n                                  type: string\n                                ogArticleExpirationTime:\n                                  type: string\n                                ogArticleModifiedTime:\n                                  type: string\n                                ogArticlePublishedTime:\n                                  type: string\n                                ogArticlePublisher:\n                                  type: string\n                                ogArticleSection:\n                                  type: string\n                                ogArticleTag:", "mimetype": "text/plain", "start_char_idx": 10944, "end_char_idx": 12183, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c4a9089b-6e16-4e1f-b3f5-cb373ed06c96": {"__data__": {"id_": "c4a9089b-6e16-4e1f-b3f5-cb373ed06c96", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3ac19dc4-a885-4130-8ca0-857194ee1ac8", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f2cdf97a0a06c7d67bbb9213bedbda43f23392b8493ea88e423cb431b3d248cb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f21707c2-a25c-4e11-b75b-b5e326d4e3b1", "node_type": "1", "metadata": {}, "hash": "eb1b37b820dfcf3988165f8ee339eab4ab3683dff99edb7c1c3ccbc05abe0f44", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ogArticlePublisher:\n                                  type: string\n                                ogArticleSection:\n                                  type: string\n                                ogArticleTag:\n                                  type: string\n                                ogAudio:\n                                  type: string\n                                ogAudioSecureURL:\n                                  type: string\n                                ogAudioType:\n                                  type: string\n                                ogAudioURL:\n                                  type: string\n                                ogAvailability:\n                                  type: string\n                                ogDate:\n                                  type: string\n                                ogDescription:\n                                  type: string\n                                ogDeterminer:\n                                  type: string\n                                ogEpisode:\n                                  type: string\n                                ogImage:\n                                  type: array\n                                  items:\n                                    type:", "mimetype": "text/plain", "start_char_idx": 11974, "end_char_idx": 13227, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f21707c2-a25c-4e11-b75b-b5e326d4e3b1": {"__data__": {"id_": "f21707c2-a25c-4e11-b75b-b5e326d4e3b1", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c4a9089b-6e16-4e1f-b3f5-cb373ed06c96", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "35dbc2de7278a0d141c337189ffe7bc4cc8fa09649627a44ef27f6047d92514c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6fbb01a2-c7f3-4bf9-a2c2-49750b86f8c9", "node_type": "1", "metadata": {}, "hash": "20092ce7ecad094163eff191a397e80dc92a3a31b128997758d8bac50bed075b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ogEpisode:\n                                  type: string\n                                ogImage:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                      alt:\n                                        type: string\n                                    required:\n                                    - url\n                                ogLocale:\n                                  type: string\n                                ogLocaleAlternate:\n                                  type: string\n                                ogLogo:\n                                  type: string\n                                ogMovie:", "mimetype": "text/plain", "start_char_idx": 13000, "end_char_idx": 14171, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6fbb01a2-c7f3-4bf9-a2c2-49750b86f8c9": {"__data__": {"id_": "6fbb01a2-c7f3-4bf9-a2c2-49750b86f8c9", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f21707c2-a25c-4e11-b75b-b5e326d4e3b1", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "25b4b2c8a2638fad31b5b33f527d0ab1e0433a19b0ae202a50e88d894d8276f4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ea0dee89-86fc-4575-851b-a574debd4918", "node_type": "1", "metadata": {}, "hash": "c9fa91291c5cedce05742ab32d5c15912d367abb50ece0072657eea4131821a2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: string\n                                ogLocaleAlternate:\n                                  type: string\n                                ogLogo:\n                                  type: string\n                                ogMovie:\n                                  type: string\n                                ogPriceAmount:\n                                  type: string\n                                ogPriceCurrency:\n                                  type: string\n                                ogProductAvailability:\n                                  type: string\n                                ogProductCondition:\n                                  type: string\n                                ogProductPriceAmount:\n                                  type: string\n                                ogProductPriceCurrency:\n                                  type: string\n                                ogProductRetailerItemId:\n                                  type: string\n                                ogSiteName:\n                                  type: string\n                                ogTitle:\n                                  type: string\n                                ogType:\n                                  type: string\n                                ogUrl:", "mimetype": "text/plain", "start_char_idx": 13933, "end_char_idx": 15222, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ea0dee89-86fc-4575-851b-a574debd4918": {"__data__": {"id_": "ea0dee89-86fc-4575-851b-a574debd4918", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6fbb01a2-c7f3-4bf9-a2c2-49750b86f8c9", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "ac3ce1742925a87d46a8c764e80f2360875c543a6a289cafada7f078d68fe53d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4d7ce6f8-ba06-4beb-b999-4ef4dc3fd374", "node_type": "1", "metadata": {}, "hash": "a07f15eb7a8ca48935a7233344382081ddb0abd44a493115decddc5fa19454b9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: string\n                                ogTitle:\n                                  type: string\n                                ogType:\n                                  type: string\n                                ogUrl:\n                                  type: string\n                                ogVideo:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                    required:\n                                    - url\n                                ogVideoActor:\n                                  type: string\n                                ogVideoActorId:\n                                  type: string\n                                ogVideoActorRole:", "mimetype": "text/plain", "start_char_idx": 14996, "end_char_idx": 16210, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4d7ce6f8-ba06-4beb-b999-4ef4dc3fd374": {"__data__": {"id_": "4d7ce6f8-ba06-4beb-b999-4ef4dc3fd374", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ea0dee89-86fc-4575-851b-a574debd4918", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "6d201f14579d9e3ef4d55c86e2baf471e99cb78e7470171eb807fe9b40ee929b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6603c615-aed5-41f1-a81b-a828ac395269", "node_type": "1", "metadata": {}, "hash": "58ef074b7bcac2403bf389dca37ffee37fd85c01a6e303f9d6e9b0b6ccc2e4af", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- url\n                                ogVideoActor:\n                                  type: string\n                                ogVideoActorId:\n                                  type: string\n                                ogVideoActorRole:\n                                  type: string\n                                ogVideoDirector:\n                                  type: string\n                                ogVideoDuration:\n                                  type: string\n                                ogVideoOther:\n                                  type: string\n                                ogVideoReleaseDate:\n                                  type: string\n                                ogVideoSecureURL:\n                                  type: string\n                                ogVideoSeries:\n                                  type: string\n                                ogVideoTag:\n                                  type: string\n                                ogVideoTvShow:\n                                  type: string\n                                ogVideoWriter:\n                                  type: string\n                                ogWebsite:\n                                  type: string\n                                updatedTime:", "mimetype": "text/plain", "start_char_idx": 15967, "end_char_idx": 17246, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6603c615-aed5-41f1-a81b-a828ac395269": {"__data__": {"id_": "6603c615-aed5-41f1-a81b-a828ac395269", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4d7ce6f8-ba06-4beb-b999-4ef4dc3fd374", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "3b9f32bbc5d565c3b8920cbaacdb1724e939f84f11557311640d4d09c485a831", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1b5f5925-7fec-41c0-8a28-1e1973120c1a", "node_type": "1", "metadata": {}, "hash": "351c428f60b47a81478c53e7dccf44c0c50b56b5373abf41bbc2294c725f7ea3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: string\n                                ogVideoWriter:\n                                  type: string\n                                ogWebsite:\n                                  type: string\n                                updatedTime:\n                                  type: string\n                            - type: object\n                              properties:\n                                oembed:\n                                  oneOf:\n                                  - allOf:\n                                    - &id004\n                                      type: object\n                                      description: Basic data structure of every oembed\n                                        response see https://oembed.com/\n                                      required:\n                                      - type\n                                      - version\n                                      properties:\n                                        type:\n                                          type: string\n                                        version:\n                                          type:\n                                          - string\n                                          - 'null'\n                                        title:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A text title, describing the\n                                            resource.\n                                        author_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the author/owner\n                                            of the resource.\n                                        author_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL for the author/owner\n                                            of the resource.\n                                        provider_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the resource provider.\n                                        provider_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The url of the resource provider.\n                                        cache_age:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The suggested cache lifetime\n                                            for this resource, in seconds. Consumers\n                                            may choose to use this value or not.\n                                        thumbnail_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL to a thumbnail image\n                                            representing the resource. The thumbnail\n                                            must respect any maxwidth and maxheight\n                                            parameters. If this parameter is present,\n                                            thumbnail_width and thumbnail_height must\n                                            also be present.\n                                        thumbnail_width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width of the optional thumbnail.\n                                            If this parameter is present, thumbnail_url\n                                            and thumbnail_height must also be present.\n                                        thumbnail_height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height of the optional\n                                            thumbnail. If this parameter is present,\n                                            thumbnail_url and thumbnail_width must\n                                            also be present.", "mimetype": "text/plain", "start_char_idx": 17005, "end_char_idx": 21999, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1b5f5925-7fec-41c0-8a28-1e1973120c1a": {"__data__": {"id_": "1b5f5925-7fec-41c0-8a28-1e1973120c1a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6603c615-aed5-41f1-a81b-a828ac395269", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d0b233a1642a9546b87e703d0e10c970e636e1aa92b5157adecd863586b6db8c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c4e6b672-bbb5-4583-aa62-80522f2de65c", "node_type": "1", "metadata": {}, "hash": "8d9eab161584c6914f00db415326f13b4659f496da5188af18a808772433f07b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Consumers\n                                            may choose to use this value or not.\n                                        thumbnail_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL to a thumbnail image\n                                            representing the resource. The thumbnail\n                                            must respect any maxwidth and maxheight\n                                            parameters. If this parameter is present,\n                                            thumbnail_width and thumbnail_height must\n                                            also be present.\n                                        thumbnail_width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width of the optional thumbnail.\n                                            If this parameter is present, thumbnail_url\n                                            and thumbnail_height must also be present.\n                                        thumbnail_height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height of the optional\n                                            thumbnail. If this parameter is present,\n                                            thumbnail_url and thumbnail_width must\n                                            also be present.\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - rich\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to display\n                                            the resource. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities. The markup\n                                            should be valid XHTML 1.0 Basic.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - video\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to embed\n                                            a video player. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 20227, "end_char_idx": 27688, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c4e6b672-bbb5-4583-aa62-80522f2de65c": {"__data__": {"id_": "c4e6b672-bbb5-4583-aa62-80522f2de65c", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1b5f5925-7fec-41c0-8a28-1e1973120c1a", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "b55bbb9b0c81d207d6a499ba21570dbc3a1ec59d608924598c6dc181c1f4186f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "087033fc-c19c-4887-a4b0-b1474499f271", "node_type": "1", "metadata": {}, "hash": "a027f1d3aa0f63f1af93da32e5ea91007c869a127a6f300f43465241edf0789d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.\n                                  - allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - link\n                                  discriminator:\n                                    propertyName: type\n                                    mapping:\n                                      rich: '#/components/schemas/OembedRichData'\n                                      video: '#/components/schemas/OembedVideoData'\n                                      photo: '#/components/schemas/OembedPhotoData'\n                                      link: '#/components/schemas/OembedLinkData'\n                          frame: &id011\n                            discriminator:\n                              propertyName: version\n                            oneOf:\n                            - description: Frame v1 object\n                              allOf:\n                              - &id005\n                                description: Frame base object used across all versions\n                                type: object\n                                required:\n                                - version\n                                - image\n                                - frames_url\n                                properties:\n                                  version:\n                                    type: string\n                                    description: Version of the frame, 'next' for\n                                      v2, 'vNext' for v1\n                                  image:\n                                    type: string\n                                    description: URL of the image\n                                  frames_url:\n                                    type: string\n                                    description: Launch URL of the frame\n                              - type: object\n                                properties:\n                                  buttons:\n                                    type: array\n                                    items:\n                                      type: object\n                                      required:\n                                      - index\n                                      - action_type\n                                      properties:\n                                        title:\n                                          type: string\n                                          description: Title of the button\n                                        index:\n                                          type: integer\n                                          description: Index of the button\n                                        action_type:\n                                          type: string\n                                          description: The action type of a frame\n                                            button. Action types \"mint\" & \"link\" are\n                                            to be handled on the client side only\n                                            and so they will produce a no/op for POST\n                                            /farcaster/frame/action.\n                                          enum:\n                                          - post\n                                          - post_redirect\n                                          - tx\n                                          - link\n                                          - mint\n                                        target:\n                                          type: string\n                                          description: Target of the button\n                                        post_url:\n                                          type: string\n                                          description: Used specifically for the tx\n                                            action type to post a successful transaction\n                                            hash\n                                  post_url:\n                                    type: string\n                                    description: Post URL to take an action on this\n                                      frame\n                                  title:\n                                    type: string\n                                  image_aspect_ratio:\n                                    type: string\n                                  input:\n                                    type: object\n                                    properties:\n                                      text:\n                                        type: string\n                                        description: Input text for the frame\n                                  state:\n                                    type: object\n                                    properties:\n                                      serialized:\n                                        type: string\n                                        description: State for the frame in a serialized\n                                          format\n                            - description: Frame v2 object\n                              allOf:\n                              - *id005\n                              - type: object\n                                required:\n                                - title\n                                - name\n                                - icon\n                                properties:\n                                  manifest:\n                                    type: object\n                                    properties:\n                                      account_association:\n                                        type: object\n                                        properties:\n                                          header:\n                                            type: string\n                                          payload:\n                                            type: string\n                                          signature:\n                                            type: string\n                                        required:\n                                        - header\n                                        - payload\n                                        - signature\n                                      frame:\n                                        type: object\n                                        properties:\n                                          version:\n                                            type: string\n                                            enum:\n                                            - 0.0.0\n                                            - 0.0.", "mimetype": "text/plain", "start_char_idx": 25867, "end_char_idx": 34730, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "087033fc-c19c-4887-a4b0-b1474499f271": {"__data__": {"id_": "087033fc-c19c-4887-a4b0-b1474499f271", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c4e6b672-bbb5-4583-aa62-80522f2de65c", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "67244aa24e91a17dab504a3313eeb2a54ca31378b47c183e9d7d6214b763126b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2a7ac5c1-ebe3-4dcd-b9f8-1ea8c07da005", "node_type": "1", "metadata": {}, "hash": "26d36fbb0caec6026b91aa3ecf03098312b6fd65f2e50432df9195ee34007f99", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                            - 0.0.1\n                                            - '1'\n                                            - next\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                          home_url:\n                                            type: string\n                                            maxLength: 512\n                                          icon_url:\n                                            type: string\n                                            maxLength: 512\n                                          image_url:\n                                            type: string\n                                            maxLength: 512\n                                          button_title:\n                                            type: string\n                                            maxLength: 32\n                                          splash_image_url:\n                                            type: string\n                                            maxLength: 512\n                                          splash_background_color:\n                                            type: string\n                                          webhook_url:\n                                            type: string\n                                            maxLength: 512\n                                        required:\n                                        - version\n                                        - name\n                                        - home_url\n                                        - icon_url\n                                      triggers:\n                                        type: array\n                                        items:\n                                          oneOf:\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - cast\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - composer\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                    required:\n                                    - account_association\n                                  author: &id006\n                                    type: object\n                                    required:\n                                    - object\n                                    - fid\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - user_dehydrated\n                                      fid: *id002\n                                      username:\n                                        type: string\n                                      display_name:\n                                        type: string\n                                      pfp_url:\n                                        type: string\n                            mapping:\n                              vNext: '#/components/schemas/FrameV1'\n                              next: '#/components/schemas/FrameV2'\n                              '1': '#/components/schemas/FrameV2'\n                              0.0.0: '#/components/schemas/FrameV2'\n                              0.0.1: '#/components/schemas/FrameV2'\n                  - type: object\n                    required:\n                    - cast\n                    properties:\n                      cast_id: &id009\n                        type: object\n                        required:\n                        - fid\n                        - hash\n                        properties:\n                          fid: *id002\n                          hash:\n                            type: string\n                      cast:\n                        type: object\n                        required:\n                        - hash\n                        - parent_hash\n                        - parent_url\n                        - root_parent_url\n                        - parent_author\n                        - author\n                        - text\n                        - timestamp\n                        - type\n                        - embeds\n                        - channel\n                        properties:\n                          hash:\n                            type: string\n                          parent_hash:\n                            type:\n                            - string\n                            - 'null'\n                          parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          root_parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          parent_author:\n                            type: object\n                            required:\n                            - fid\n                            properties:\n                              fid:\n                                oneOf:\n                                - type: 'null'\n                                - *id002\n                          author: *id006\n                          text:\n                            type: string\n                          timestamp: *id007\n                          type: &id010\n                            type: string\n                            enum:\n                            - cast-mention\n                            - cast-reply\n                            description: 'The notification type of a cast.\n\n                              '\n                          embeds:\n                            type: array\n                            items:\n                              oneOf:\n                              - *id008\n                              - type: object\n                                required:\n                                - cast\n                                properties:\n                                  cast_id: *id009\n                                  cast: &id014\n                                    type: object\n                                    required:\n                                    - object\n                                    - hash\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - cast_dehydrated\n                                      hash:\n                                        type: string\n                                      author: *id006\n                          channel:\n                            oneOf:\n                            - type: 'null'\n                            - &id013\n                              type: object\n                              required:\n                              - id\n                              - name\n                              - object\n                              properties:\n                                id:\n                                  type: string\n                                name:\n                                  type: string\n                                object:\n                                  type: string\n                                  enum:\n                                  - channel_dehydrated\n                                image_url:\n                                  type: string\n                                viewer_context: &id012\n                                  description: Adds context on the viewer's or author's\n                                    role in the channel.", "mimetype": "text/plain", "start_char_idx": 34676, "end_char_idx": 44266, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2a7ac5c1-ebe3-4dcd-b9f8-1ea8c07da005": {"__data__": {"id_": "2a7ac5c1-ebe3-4dcd-b9f8-1ea8c07da005", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "facf980b-c336-4b8e-b6f6-63af1c3941b1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "af9154eba07e8a171d3bdae9882538301e105f1e02150f00be80db6ee9274cb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "087033fc-c19c-4887-a4b0-b1474499f271", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "32a490da7cca069598a12f6a25d8c444f3652fe1828a6349b3f72a4403ef6d16", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                                  required:\n                                  - following\n                                  properties:\n                                    following:\n                                      description: Indicates if the user is following\n                                        the channel.\n                                      type: boolean\n                                    role:\n                                      type: string\n                                      description: The role of a channel member\n                                      enum:\n                                      - member\n                                      - moderator\n              type: *id010\n          - type: object\n            required:\n            - reactions\n            - replies\n            - thread_hash\n            - mentioned_profiles\n            - channel\n            properties:\n              frames:\n                type: array\n                items: *id011\n              reactions:\n                type: object\n                required:\n                - likes\n                - recasts\n                - likes_count\n                - recasts_count\n                properties:\n                  likes:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      properties:\n                        fid: *id002\n                  recasts:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      - fname\n                      properties:\n                        fid: *id002\n                        fname:\n                          type: string\n                  likes_count:\n                    type: integer\n                    format: int32\n                  recasts_count:\n                    type: integer\n                    format: int32\n              replies:\n                type: object\n                required:\n                - count\n                properties:\n                  count:\n                    type: integer\n                    format: int32\n              thread_hash:\n                type:\n                - string\n                - 'null'\n              mentioned_profiles:\n                type: array\n                items: *id003\n              channel:\n                oneOf:\n                - oneOf:\n                  - type: object\n                    required:\n                    - id\n                    - url\n                    - object\n                    properties:\n                      id:\n                        type: string\n                      url:\n                        type: string\n                      name:\n                        type: string\n                      description:\n                        type: string\n                      object:\n                        type: string\n                        enum:\n                        - channel\n                      created_at:\n                        description: Epoch timestamp in seconds.\n                        type: number\n                      follower_count:\n                        description: Number of followers the channel has.\n                        type: number\n                      external_link:\n                        type: object\n                        description: Channel's external link.\n                        properties:\n                          title:\n                            type: string\n                          url:\n                            type: string\n                      image_url:\n                        type: string\n                      parent_url:\n                        type: string\n                        format: uri\n                      lead: *id003\n                      moderator_fids:\n                        type: array\n                        items: *id002\n                      member_count:\n                        type: integer\n                        format: int32\n                      moderator: *id003\n                      pinned_cast_hash:\n                        type: string\n                        default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                        description: Cast Hash\n                      hosts:\n                        type: array\n                        deprecated: true\n                        items: *id003\n                      viewer_context: *id012\n                  - *id013\n                  discriminator:\n                    propertyName: object\n                    mapping:\n                      channel: '#/components/schemas/Channel'\n                      dehydrated_channel: '#/components/schemas/DehydratedChannel'\n                - type: 'null'\n              viewer_context:\n                type: object\n                description: Adds context on interactions the viewer has made with\n                  the cast.\n                required:\n                - liked\n                - recasted\n                properties:\n                  liked:\n                    description: Indicates if the viewer liked the cast.\n                    type: boolean\n                  recasted:\n                    description: Indicates if the viewer recasted the cast.\n                    type: boolean\n              author_channel_context: *id012\n        reactions:\n          type: array\n          items:\n            type: object\n            required:\n            - object\n            - cast\n            - user\n            properties:\n              object:\n                type: string\n                enum:\n                - likes\n                - recasts\n              cast: *id014\n              user: *id003\n        count:\n          type: integer\n          format: int32\n          description: The number of notifications of this(follows, likes, recast)\n            type bundled in a single notification.\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 44301, "end_char_idx": 50480, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ab2c2a9a-9aa5-48b5-a457-6014f2300ae6": {"__data__": {"id_": "ab2c2a9a-9aa5-48b5-a457-6014f2300ae6", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-composer-actions.md", "file_name": "neynar_fetch-composer-actions.md", "file_type": "text/markdown", "file_size": 2132, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a12e66c5-3251-4dc2-b0d0-a807e2d3eb8e", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-composer-actions.md", "file_name": "neynar_fetch-composer-actions.md", "file_type": "text/markdown", "file_size": 2132, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "2a0f1442e457e6c3953ac9cfab265843ce6aedfa1530ba3a76fbf0aa2993b320", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-composer-actions\n\n**Endpoint**: `GET /farcaster/cast/composer_actions/list`\n\n## Description\nFetches all composer actions on Warpcast. You can filter by top or featured.\n\n## Parameters\n- `list` (query): Type of list to fetch.\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nproperties:\n  actions:\n    type: array\n    items:\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the action.\n        icon:\n          type: string\n          description: The icon representing the action.\n        description:\n          type: string\n          description: A brief description of the action.\n        about_url:\n          type: string\n          format: uri\n          description: URL to learn more about the action.\n        image_url:\n          type: string\n          format: uri\n          description: URL of the action's image.\n        action_url:\n          type: string\n          format: uri\n          description: URL to perform the action.\n        action:\n          type: object\n          properties:\n            action_type:\n              type: string\n              description: Type of the action (e.g., post).\n            post_url:\n              type: string\n              format: uri\n              description: URL to post the action.\n        octicon:\n          type: string\n          description: Icon name for the action.\n        added_count:\n          type: integer\n          description: Number of times the action has been added.\n        app_name:\n          type: string\n          description: Name of the application providing the action.\n        author_fid:\n          type: integer\n          description: Author's Farcaster ID.\n        category:\n          type: string\n          description: Category of the action.\n        object:\n          type: string\n          description: Object type, which is \"composer_action\".\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2131, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "459da2fc-a395-4165-9af2-269b9e72c351": {"__data__": {"id_": "459da2fc-a395-4165-9af2-269b9e72c351", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4e43eb19-3a56-4808-bd92-9f9cd86dae61", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "e4225998885746169a1b178fd6fdc12ca0bf6cadde6b74155f06d6f7bbf8a606", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1f770972-4725-4776-96c9-ed0be7dd3a4b", "node_type": "1", "metadata": {}, "hash": "1a4b2e9879c0477a7f6e1dde6b75297993103a5721c83dc7eacaaa033ccf4398", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-embedded-url-metadata\n\n**Endpoint**: `GET /farcaster/cast/embed/crawl`\n\n## Description\nCrawls the given URL and returns metadata useful when embedding the URL in a cast.\n\n## Parameters\n- `url` (query): URL to crawl metadata of\n\n## Response\n```yaml\ntype: object\nrequired:\n- metadata\nproperties:\n  metadata:\n    type: object\n    required:\n    - _status\n    properties:\n      _status:\n        type: string\n      content_type:\n        type:\n        - string\n        - 'null'\n      content_length:\n        type:\n        - integer\n        - 'null'\n      image:\n        type: object\n        properties:\n          height_px:\n            type: integer\n          width_px:\n            type: integer\n      video:\n        type: object\n        properties:\n          duration_s:\n            type: number\n          stream:\n            type: array\n            items:\n              type: object\n              properties:\n                codec_name:\n                  type: string\n                height_px:\n                  type: integer\n                width_px:\n                  type: integer\n      html:\n        allOf:\n        - type: object\n          properties:\n            favicon:\n              type: string\n            modifiedTime:\n              type: string\n            ogArticleAuthor:\n              type: string\n            ogArticleExpirationTime:\n              type: string\n            ogArticleModifiedTime:\n              type: string\n            ogArticlePublishedTime:\n              type: string\n            ogArticlePublisher:\n              type: string\n            ogArticleSection:\n              type: string\n            ogArticleTag:\n              type: string\n            ogAudio:\n              type: string\n            ogAudioSecureURL:\n              type: string\n            ogAudioType:\n              type: string\n            ogAudioURL:\n              type: string\n            ogAvailability:\n              type: string\n            ogDate:\n              type: string\n            ogDescription:\n              type: string\n            ogDeterminer:\n              type: string\n            ogEpisode:\n              type: string\n            ogImage:\n              type: array\n              items:\n                type: object\n                properties:\n                  height:\n                    type: string\n                  type:\n                    type: string\n                  url:\n                    type: string\n                  width:\n                    type: string\n                  alt:\n                    type: string\n                required:\n                - url\n            ogLocale:\n              type: string\n            ogLocaleAlternate:\n              type: string\n            ogLogo:\n              type: string\n            ogMovie:\n              type: string\n            ogPriceAmount:\n              type: string\n            ogPriceCurrency:\n              type: string\n            ogProductAvailability:\n              type: string\n            ogProductCondition:\n              type: string\n            ogProductPriceAmount:\n              type: string\n            ogProductPriceCurrency:\n              type: string\n            ogProductRetailerItemId:\n              type: string\n            ogSiteName:\n              type: string\n            ogTitle:\n              type: string\n            ogType:\n              type: string\n            ogUrl:\n              type: string\n            ogVideo:\n              type: array\n              items:\n                type: object\n                properties:\n                  height:\n                    type: string\n                  type:\n                    type: string\n                  url:\n                    type: string\n                  width:\n                    type: string\n                required:\n                - url\n            ogVideoActor:\n              type: string\n            ogVideoActorId:\n              type: string\n            ogVideoActorRole:\n              type: string\n            ogVideoDirector:\n              type: string\n            ogVideoDuration:\n              type: string\n            ogVideoOther:\n              type: string\n            ogVideoReleaseDate:\n              type: string\n            ogVideoSecureURL:\n              type: string\n            ogVideoSeries:\n              type: string\n            ogVideoTag:\n              type: string\n            ogVideoTvShow:\n              type: string\n            ogVideoWriter:\n              type: string\n            ogWebsite:\n              type: string\n            updatedTime:\n              type: string\n        - type: object\n          properties:\n            oembed:\n              oneOf:\n              - allOf:\n                - &id001\n                  type: object\n                  description: Basic data structure of every oembed response see https://oembed.com/\n                  required:\n                  - type\n                  - version\n                  properties:\n                    type:\n                      type: string\n                    version:\n                      type:\n                      - string\n                      - 'null'\n                    title:\n                      type:\n                      - string\n                      - 'null'\n                      description: A text title, describing the resource.\n                    author_name:\n                      type:\n                      - string\n                      - 'null'\n                      description: The name of the author/owner of the resource.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5529, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1f770972-4725-4776-96c9-ed0be7dd3a4b": {"__data__": {"id_": "1f770972-4725-4776-96c9-ed0be7dd3a4b", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4e43eb19-3a56-4808-bd92-9f9cd86dae61", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "e4225998885746169a1b178fd6fdc12ca0bf6cadde6b74155f06d6f7bbf8a606", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "459da2fc-a395-4165-9af2-269b9e72c351", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "7aff9c2a4d961f2ebdf63d3ca8cf321c5abffdd0d5e165d832b80c9b027b560e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "25fcdf93-d641-42cb-aa09-83823dd82d26", "node_type": "1", "metadata": {}, "hash": "38a87da7a4c062a6fd23411a1df608dd8d18fff4fd16ba12cb5fe7cb2176ed21", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                      type:\n                      - string\n                      - 'null'\n                      description: The name of the author/owner of the resource.\n                    author_url:\n                      type:\n                      - string\n                      - 'null'\n                      description: A URL for the author/owner of the resource.\n                    provider_name:\n                      type:\n                      - string\n                      - 'null'\n                      description: The name of the resource provider.\n                    provider_url:\n                      type:\n                      - string\n                      - 'null'\n                      description: The url of the resource provider.\n                    cache_age:\n                      type:\n                      - string\n                      - 'null'\n                      description: The suggested cache lifetime for this resource,\n                        in seconds. Consumers may choose to use this value or not.\n                    thumbnail_url:\n                      type:\n                      - string\n                      - 'null'\n                      description: A URL to a thumbnail image representing the resource.\n                        The thumbnail must respect any maxwidth and maxheight parameters.\n                        If this parameter is present, thumbnail_width and thumbnail_height\n                        must also be present.\n                    thumbnail_width:\n                      type:\n                      - number\n                      - 'null'\n                      description: The width of the optional thumbnail. If this parameter\n                        is present, thumbnail_url and thumbnail_height must also be\n                        present.\n                    thumbnail_height:\n                      type:\n                      - number\n                      - 'null'\n                      description: The height of the optional thumbnail. If this parameter\n                        is present, thumbnail_url and thumbnail_width must also be\n                        present.\n                - type: object\n                  required:\n                  - type\n                  - html\n                  - width\n                  - height\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                      - rich\n                    html:\n                      type:\n                      - string\n                      - 'null'\n                      description: The HTML required to display the resource. The\n                        HTML should have no padding or margins. Consumers may wish\n                        to load the HTML in an off-domain iframe to avoid XSS vulnerabilities.\n                        The markup should be valid XHTML 1.0 Basic.\n                    width:\n                      type:\n                      - number\n                      - 'null'\n                      description: The width in pixels required to display the HTML.\n                    height:\n                      type:\n                      - number\n                      - 'null'\n                      description: The height in pixels required to display the HTML.\n              - allOf:\n                - *id001\n                - type: object\n                  required:\n                  - type\n                  - html\n                  - width\n                  - height\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                      - video\n                    html:\n                      type:\n                      - string\n                      - 'null'\n                      description: The HTML required to embed a video player. The\n                        HTML should have no padding or margins. Consumers may wish\n                        to load the HTML in an off-domain iframe to avoid XSS vulnerabilities.\n                    width:\n                      type:\n                      - number\n                      - 'null'\n                      description: The width in pixels required to display the HTML.\n                    height:\n                      type:\n                      - number\n                      - 'null'\n                      description: The height in pixels required to display the HTML.\n              - allOf:\n                - *id001\n                - type: object\n                  required:\n                  - type\n                  - url\n                  - width\n                  - height\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                      - photo\n                    url:\n                      type:\n                      - string\n                      - 'null'\n                      description: The source URL of the image. Consumers should be\n                        able to insert this URL into an <img> element. Only HTTP and\n                        HTTPS URLs are valid.\n                    width:\n                      type:\n                      - number\n                      - 'null'\n                      description: The width in pixels of the image specified in the\n                        url parameter.\n                    height:\n                      type:\n                      - number\n                      - 'null'\n                      description: The height in pixels of the image specified in\n                        the url parameter.", "mimetype": "text/plain", "start_char_idx": 5346, "end_char_idx": 10988, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "25fcdf93-d641-42cb-aa09-83823dd82d26": {"__data__": {"id_": "25fcdf93-d641-42cb-aa09-83823dd82d26", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4e43eb19-3a56-4808-bd92-9f9cd86dae61", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "e4225998885746169a1b178fd6fdc12ca0bf6cadde6b74155f06d6f7bbf8a606", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1f770972-4725-4776-96c9-ed0be7dd3a4b", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "84ec73982f4362b21af6ff86ae6b4efd1f28ce955b1a18c81eac041ad0d2fd80", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b42c5468-b9c0-46f1-99e4-e600f61ae731", "node_type": "1", "metadata": {}, "hash": "58af2f54b867ebdcdfe7d1c3516888ec4edfc9a4803bcfda97bb6c0cc3ff0679", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                - *id001\n                - type: object\n                  required:\n                  - type\n                  - url\n                  - width\n                  - height\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                      - photo\n                    url:\n                      type:\n                      - string\n                      - 'null'\n                      description: The source URL of the image. Consumers should be\n                        able to insert this URL into an <img> element. Only HTTP and\n                        HTTPS URLs are valid.\n                    width:\n                      type:\n                      - number\n                      - 'null'\n                      description: The width in pixels of the image specified in the\n                        url parameter.\n                    height:\n                      type:\n                      - number\n                      - 'null'\n                      description: The height in pixels of the image specified in\n                        the url parameter.\n              - allOf:\n                - *id001\n                - type: object\n                  required:\n                  - type\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                      - link\n              discriminator:\n                propertyName: type\n                mapping:\n                  rich: '#/components/schemas/OembedRichData'\n                  video: '#/components/schemas/OembedVideoData'\n                  photo: '#/components/schemas/OembedPhotoData'\n                  link: '#/components/schemas/OembedLinkData'\n      frame:\n        discriminator:\n          propertyName: version\n        oneOf:\n        - description: Frame v1 object\n          allOf:\n          - &id002\n            description: Frame base object used across all versions\n            type: object\n            required:\n            - version\n            - image\n            - frames_url\n            properties:\n              version:\n                type: string\n                description: Version of the frame, 'next' for v2, 'vNext' for v1\n              image:\n                type: string\n                description: URL of the image\n              frames_url:\n                type: string\n                description: Launch URL of the frame\n          - type: object\n            properties:\n              buttons:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - index\n                  - action_type\n                  properties:\n                    title:\n                      type: string\n                      description: Title of the button\n                    index:\n                      type: integer\n                      description: Index of the button\n                    action_type:\n                      type: string\n                      description: The action type of a frame button. Action types\n                        \"mint\" & \"link\" are to be handled on the client side only\n                        and so they will produce a no/op for POST /farcaster/frame/action.", "mimetype": "text/plain", "start_char_idx": 9831, "end_char_idx": 13139, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b42c5468-b9c0-46f1-99e4-e600f61ae731": {"__data__": {"id_": "b42c5468-b9c0-46f1-99e4-e600f61ae731", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4e43eb19-3a56-4808-bd92-9f9cd86dae61", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "e4225998885746169a1b178fd6fdc12ca0bf6cadde6b74155f06d6f7bbf8a606", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "25fcdf93-d641-42cb-aa09-83823dd82d26", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "7238add887a6af48f27e40081341097cdf1ea2b3adeff66a42375c0c55e3851c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Action types\n                        \"mint\" & \"link\" are to be handled on the client side only\n                        and so they will produce a no/op for POST /farcaster/frame/action.\n                      enum:\n                      - post\n                      - post_redirect\n                      - tx\n                      - link\n                      - mint\n                    target:\n                      type: string\n                      description: Target of the button\n                    post_url:\n                      type: string\n                      description: Used specifically for the tx action type to post\n                        a successful transaction hash\n              post_url:\n                type: string\n                description: Post URL to take an action on this frame\n              title:\n                type: string\n              image_aspect_ratio:\n                type: string\n              input:\n                type: object\n                properties:\n                  text:\n                    type: string\n                    description: Input text for the frame\n              state:\n                type: object\n                properties:\n                  serialized:\n                    type: string\n                    description: State for the frame in a serialized format\n        - description: Frame v2 object\n          allOf:\n          - *id002\n          - type: object\n            required:\n            - title\n            - name\n            - icon\n            properties:\n              manifest:\n                type: object\n                properties:\n                  account_association:\n                    type: object\n                    properties:\n                      header:\n                        type: string\n                      payload:\n                        type: string\n                      signature:\n                        type: string\n                    required:\n                    - header\n                    - payload\n                    - signature\n                  frame:\n                    type: object\n                    properties:\n                      version:\n                        type: string\n                        enum:\n                        - 0.0.0\n                        - 0.0.1\n                        - '1'\n                        - next\n                      name:\n                        type: string\n                        maxLength: 32\n                      home_url:\n                        type: string\n                        maxLength: 512\n                      icon_url:\n                        type: string\n                        maxLength: 512\n                      image_url:\n                        type: string\n                        maxLength: 512\n                      button_title:\n                        type: string\n                        maxLength: 32\n                      splash_image_url:\n                        type: string\n                        maxLength: 512\n                      splash_background_color:\n                        type: string\n                      webhook_url:\n                        type: string\n                        maxLength: 512\n                    required:\n                    - version\n                    - name\n                    - home_url\n                    - icon_url\n                  triggers:\n                    type: array\n                    items:\n                      oneOf:\n                      - type: object\n                        properties:\n                          type:\n                            type: string\n                            enum:\n                            - cast\n                          id:\n                            type: string\n                          url:\n                            type: string\n                            maxLength: 512\n                          name:\n                            type: string\n                            maxLength: 32\n                        required:\n                        - type\n                        - id\n                        - url\n                      - type: object\n                        properties:\n                          type:\n                            type: string\n                            enum:\n                            - composer\n                          id:\n                            type: string\n                          url:\n                            type: string\n                            maxLength: 512\n                          name:\n                            type: string\n                            maxLength: 32\n                        required:\n                        - type\n                        - id\n                        - url\n                required:\n                - account_association\n              author:\n                type: object\n                required:\n                - object\n                - fid\n                properties:\n                  object:\n                    type: string\n                    enum:\n                    - user_dehydrated\n                  fid:\n                    type: integer\n                    format: int32\n                    description: The unique identifier of a farcaster user (unsigned\n                      integer)\n                    examples:\n                    - 3\n                    - 191\n                    - 2\n                    - 194\n                    - 19960\n                  username:\n                    type: string\n                  display_name:\n                    type: string\n                  pfp_url:\n                    type: string\n        mapping:\n          vNext: '#/components/schemas/FrameV1'\n          next: '#/components/schemas/FrameV2'\n          '1': '#/components/schemas/FrameV2'\n          0.0.0: '#/components/schemas/FrameV2'\n          0.0.1: '#/components/schemas/FrameV2'\n```", "mimetype": "text/plain", "start_char_idx": 12954, "end_char_idx": 18862, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6e05d2e7-ae58-42fb-83a2-4a0e507e292e": {"__data__": {"id_": "6e05d2e7-ae58-42fb-83a2-4a0e507e292e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "48362c28-add9-4247-918e-7b63f8b7427c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "deae3f2702c68fb55a1c2e58ef4c5795f9b980d301e244f90a1cb6c3dbcd08b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e34f03c1-f92f-415a-926a-d680ee2092e7", "node_type": "1", "metadata": {}, "hash": "276d9829bd28ca7c832cf3651919d5f3d9662484a0269ecacb934ce07c8af95d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-feed-by-channel-ids\n\n**Endpoint**: `GET /farcaster/feed/channels`\n\n## Description\nFetch feed based on channel IDs\n\n## Parameters\n- `channel_ids` (query): Comma separated list of up to 10 channel IDs e.g. neynar,farcaster\n- `with_recasts` (query): Include recasts in the response, true by default\n- `viewer_fid` (query): Providing this will return a feed that respects this user's mutes and blocks and includes `viewer_context`.\n- `with_replies` (query): Include replies in the response, false by default\n- `members_only` (query): Only include casts from members of the channel. True by default.\n- `fids` (query): Comma separated list of FIDs to filter the feed by, up to 10 at a time\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n- `should_moderate` (query): If true, only casts that have been liked by the moderator (if one exists) will be returned.\n\n## Response\n```yaml\ntype: object\nrequired:\n- casts\n- next\nproperties:\n  casts:\n    type: array\n    items:\n      allOf:\n      - type: object\n        required:\n        - hash\n        - parent_hash\n        - parent_url\n        - root_parent_url\n        - parent_author\n        - author\n        - text\n        - timestamp\n        - embeds\n        properties:\n          hash:\n            type: string\n          parent_hash:\n            type:\n            - string\n            - 'null'\n          parent_url:\n            type:\n            - string\n            - 'null'\n          root_parent_url:\n            type:\n            - string\n            - 'null'\n          parent_author:\n            type: object\n            required:\n            - fid\n            properties:\n              fid:\n                oneOf:\n                - type: 'null'\n                - &id001\n                  type: integer\n                  format: int32\n                  description: The unique identifier of a farcaster user (unsigned\n                    integer)\n                  examples:\n                  - 3\n                  - 191\n                  - 2\n                  - 194\n                  - 19960\n          author: &id011\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: *id001\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id002\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5542, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e34f03c1-f92f-415a-926a-d680ee2092e7": {"__data__": {"id_": "e34f03c1-f92f-415a-926a-d680ee2092e7", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "48362c28-add9-4247-918e-7b63f8b7427c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "deae3f2702c68fb55a1c2e58ef4c5795f9b980d301e244f90a1cb6c3dbcd08b0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6e05d2e7-ae58-42fb-83a2-4a0e507e292e", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "4d778f5a5ebd94d0ae1b3b9d04d31b7878b28ebda599c30a6dab05a281979d77", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "732ab74d-6ccb-41a8-9ed0-d86669f784e8", "node_type": "1", "metadata": {}, "hash": "fe0df8fb809538d41413faf06c0a270674cb9253987f2f1009b522ab38419e14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 4925, "end_char_idx": 7748, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "732ab74d-6ccb-41a8-9ed0-d86669f784e8": {"__data__": {"id_": "732ab74d-6ccb-41a8-9ed0-d86669f784e8", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "48362c28-add9-4247-918e-7b63f8b7427c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "deae3f2702c68fb55a1c2e58ef4c5795f9b980d301e244f90a1cb6c3dbcd08b0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e34f03c1-f92f-415a-926a-d680ee2092e7", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f58242409a5bb35eff8d25aa816d0974b3f4e73d74e2ee9e370f6d1764af4cf0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "312a4c86-963f-4a1f-9e74-f3dcfdd0e421", "node_type": "1", "metadata": {}, "hash": "7693468d1bce4d6458a0c00eb5858d0c52e0d3acfd9f809418886132f3cd260d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          text:\n            type: string\n          timestamp: &id006\n            type: string\n            format: date-time\n          embeds:\n            type: array\n            items:\n              oneOf:\n              - &id007\n                type: object\n                required:\n                - url\n                properties:\n                  url:\n                    type: string\n                  metadata:\n                    type: object\n                    required:\n                    - _status\n                    properties:\n                      _status:\n                        type: string\n                      content_type:\n                        type:\n                        - string\n                        - 'null'\n                      content_length:\n                        type:\n                        - integer\n                        - 'null'\n                      image:\n                        type: object\n                        properties:\n                          height_px:\n                            type: integer\n                          width_px:\n                            type: integer\n                      video:\n                        type: object\n                        properties:\n                          duration_s:\n                            type: number\n                          stream:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                codec_name:\n                                  type: string\n                                height_px:\n                                  type: integer\n                                width_px:\n                                  type: integer\n                      html:\n                        allOf:\n                        - type: object\n                          properties:\n                            favicon:\n                              type: string\n                            modifiedTime:\n                              type: string\n                            ogArticleAuthor:\n                              type: string\n                            ogArticleExpirationTime:\n                              type: string\n                            ogArticleModifiedTime:\n                              type: string\n                            ogArticlePublishedTime:\n                              type: string\n                            ogArticlePublisher:\n                              type: string\n                            ogArticleSection:\n                              type: string\n                            ogArticleTag:\n                              type: string\n                            ogAudio:\n                              type: string\n                            ogAudioSecureURL:\n                              type: string\n                            ogAudioType:\n                              type: string\n                            ogAudioURL:\n                              type: string\n                            ogAvailability:\n                              type: string\n                            ogDate:\n                              type: string\n                            ogDescription:\n                              type: string\n                            ogDeterminer:\n                              type: string\n                            ogEpisode:\n                              type: string\n                            ogImage:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                  alt:\n                                    type: string\n                                required:\n                                - url\n                            ogLocale:\n                              type: string\n                            ogLocaleAlternate:\n                              type: string\n                            ogLogo:\n                              type: string\n                            ogMovie:\n                              type: string\n                            ogPriceAmount:\n                              type: string\n                            ogPriceCurrency:\n                              type: string\n                            ogProductAvailability:\n                              type: string\n                            ogProductCondition:\n                              type: string\n                            ogProductPriceAmount:\n                              type: string\n                            ogProductPriceCurrency:\n                              type: string\n                            ogProductRetailerItemId:\n                              type: string\n                            ogSiteName:\n                              type: string\n                            ogTitle:\n                              type: string\n                            ogType:\n                              type: string\n                            ogUrl:\n                              type: string\n                            ogVideo:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                required:\n                                - url\n                            ogVideoActor:\n                              type: string\n                            ogVideoActorId:\n                              type: string\n                            ogVideoActorRole:\n                              type: string\n                            ogVideoDirector:\n                              type: string\n                            ogVideoDuration:\n                              type: string\n                            ogVideoOther:\n                              type: string\n                            ogVideoReleaseDate:\n                              type: string\n                            ogVideoSecureURL:\n                              type: string\n                            ogVideoSeries:\n                              type: string\n                            ogVideoTag:\n                              type: string\n                            ogVideoTvShow:\n                              type: string\n                            ogVideoWriter:\n                              type: string\n                            ogWebsite:\n                              type: string\n                            updatedTime:\n                              type: string\n                        - type: object\n                          properties:\n                            oembed:\n                              oneOf:\n                              - allOf:\n                                - &id003\n                                  type: object\n                                  description: Basic data structure of every oembed\n                                    response see https://oembed.com/\n                                  required:\n                                  - type\n                                  - version\n                                  properties:\n                                    type:\n                                      type: string\n                                    version:\n                                      type:\n                                      - string\n                                      - 'null'\n                                    title:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A text title, describing the resource.", "mimetype": "text/plain", "start_char_idx": 6883, "end_char_idx": 16288, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "312a4c86-963f-4a1f-9e74-f3dcfdd0e421": {"__data__": {"id_": "312a4c86-963f-4a1f-9e74-f3dcfdd0e421", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "48362c28-add9-4247-918e-7b63f8b7427c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "deae3f2702c68fb55a1c2e58ef4c5795f9b980d301e244f90a1cb6c3dbcd08b0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "732ab74d-6ccb-41a8-9ed0-d86669f784e8", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "69b4471155326acca349ce4c70204c45b89364c70acfe215b8acd1f4e5ccb191", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a6325480-cd41-4821-a7a6-5083e6834979", "node_type": "1", "metadata": {}, "hash": "02bb5551c6319ad9c9e131ba050e77c2a58a5756c4a5f538be3d18d6c2b844c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the author/owner of\n                                        the resource.\n                                    author_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL for the author/owner of the\n                                        resource.\n                                    provider_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the resource provider.\n                                    provider_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The url of the resource provider.\n                                    cache_age:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The suggested cache lifetime for\n                                        this resource, in seconds. Consumers may choose\n                                        to use this value or not.\n                                    thumbnail_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL to a thumbnail image representing\n                                        the resource. The thumbnail must respect any\n                                        maxwidth and maxheight parameters. If this\n                                        parameter is present, thumbnail_width and\n                                        thumbnail_height must also be present.\n                                    thumbnail_width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_height must also be present.\n                                    thumbnail_height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_width must also be present.\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - rich\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to display the\n                                        resource. The HTML should have no padding\n                                        or margins. Consumers may wish to load the\n                                        HTML in an off-domain iframe to avoid XSS\n                                        vulnerabilities. The markup should be valid\n                                        XHTML 1.0 Basic.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - video\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to embed a video\n                                        player. The HTML should have no padding or\n                                        margins. Consumers may wish to load the HTML\n                                        in an off-domain iframe to avoid XSS vulnerabilities.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 16325, "end_char_idx": 24655, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a6325480-cd41-4821-a7a6-5083e6834979": {"__data__": {"id_": "a6325480-cd41-4821-a7a6-5083e6834979", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "48362c28-add9-4247-918e-7b63f8b7427c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "deae3f2702c68fb55a1c2e58ef4c5795f9b980d301e244f90a1cb6c3dbcd08b0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "312a4c86-963f-4a1f-9e74-f3dcfdd0e421", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "9061bc51c80018891c74eab7c528dc3e694787237b7ccc0fad1cf5f9c5e81232", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3ce22342-6423-4f1a-92c5-d3e888beb144", "node_type": "1", "metadata": {}, "hash": "4bf0e8989166b44509d34059a21981076b724bc3fd8b9c3a31d03109f5c8881a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - link\n                              discriminator:\n                                propertyName: type\n                                mapping:\n                                  rich: '#/components/schemas/OembedRichData'\n                                  video: '#/components/schemas/OembedVideoData'\n                                  photo: '#/components/schemas/OembedPhotoData'\n                                  link: '#/components/schemas/OembedLinkData'\n                      frame: &id010\n                        discriminator:\n                          propertyName: version\n                        oneOf:\n                        - description: Frame v1 object\n                          allOf:\n                          - &id004\n                            description: Frame base object used across all versions\n                            type: object\n                            required:\n                            - version\n                            - image\n                            - frames_url\n                            properties:\n                              version:\n                                type: string\n                                description: Version of the frame, 'next' for v2,\n                                  'vNext' for v1\n                              image:\n                                type: string\n                                description: URL of the image\n                              frames_url:\n                                type: string\n                                description: Launch URL of the frame\n                          - type: object\n                            properties:\n                              buttons:\n                                type: array\n                                items:\n                                  type: object\n                                  required:\n                                  - index\n                                  - action_type\n                                  properties:\n                                    title:\n                                      type: string\n                                      description: Title of the button\n                                    index:\n                                      type: integer\n                                      description: Index of the button\n                                    action_type:\n                                      type: string\n                                      description: The action type of a frame button.\n                                        Action types \"mint\" & \"link\" are to be handled\n                                        on the client side only and so they will produce\n                                        a no/op for POST /farcaster/frame/action.\n                                      enum:\n                                      - post\n                                      - post_redirect\n                                      - tx\n                                      - link\n                                      - mint\n                                    target:\n                                      type: string\n                                      description: Target of the button\n                                    post_url:\n                                      type: string\n                                      description: Used specifically for the tx action\n                                        type to post a successful transaction hash\n                              post_url:\n                                type: string\n                                description: Post URL to take an action on this frame\n                              title:\n                                type: string\n                              image_aspect_ratio:\n                                type: string\n                              input:\n                                type: object\n                                properties:\n                                  text:\n                                    type: string\n                                    description: Input text for the frame\n                              state:\n                                type: object\n                                properties:\n                                  serialized:\n                                    type: string\n                                    description: State for the frame in a serialized\n                                      format\n                        - description: Frame v2 object\n                          allOf:\n                          - *id004\n                          - type: object\n                            required:\n                            - title\n                            - name\n                            - icon\n                            properties:\n                              manifest:\n                                type: object\n                                properties:\n                                  account_association:\n                                    type: object\n                                    properties:\n                                      header:\n                                        type: string\n                                      payload:\n                                        type: string\n                                      signature:\n                                        type: string\n                                    required:\n                                    - header\n                                    - payload\n                                    - signature\n                                  frame:\n                                    type: object\n                                    properties:\n                                      version:\n                                        type: string\n                                        enum:\n                                        - 0.0.0\n                                        - 0.0.", "mimetype": "text/plain", "start_char_idx": 22962, "end_char_idx": 31055, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3ce22342-6423-4f1a-92c5-d3e888beb144": {"__data__": {"id_": "3ce22342-6423-4f1a-92c5-d3e888beb144", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "48362c28-add9-4247-918e-7b63f8b7427c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "deae3f2702c68fb55a1c2e58ef4c5795f9b980d301e244f90a1cb6c3dbcd08b0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a6325480-cd41-4821-a7a6-5083e6834979", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "1969d17ed467e5f1e123d97dfc2310e66b3459f806011451ed434e99f7ef2408", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6373b608-8652-4da3-8e9c-33cf5f712e58", "node_type": "1", "metadata": {}, "hash": "256dbc3a053302772e68551d3c8ed80cd3cc87d6cacee7a7b90bcf151cedcd80", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                        - 0.0.1\n                                        - '1'\n                                        - next\n                                      name:\n                                        type: string\n                                        maxLength: 32\n                                      home_url:\n                                        type: string\n                                        maxLength: 512\n                                      icon_url:\n                                        type: string\n                                        maxLength: 512\n                                      image_url:\n                                        type: string\n                                        maxLength: 512\n                                      button_title:\n                                        type: string\n                                        maxLength: 32\n                                      splash_image_url:\n                                        type: string\n                                        maxLength: 512\n                                      splash_background_color:\n                                        type: string\n                                      webhook_url:\n                                        type: string\n                                        maxLength: 512\n                                    required:\n                                    - version\n                                    - name\n                                    - home_url\n                                    - icon_url\n                                  triggers:\n                                    type: array\n                                    items:\n                                      oneOf:\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - cast\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - composer\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                required:\n                                - account_association\n                              author: &id005\n                                type: object\n                                required:\n                                - object\n                                - fid\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - user_dehydrated\n                                  fid: *id001\n                                  username:\n                                    type: string\n                                  display_name:\n                                    type: string\n                                  pfp_url:\n                                    type: string\n                        mapping:\n                          vNext: '#/components/schemas/FrameV1'\n                          next: '#/components/schemas/FrameV2'\n                          '1': '#/components/schemas/FrameV2'\n                          0.0.0: '#/components/schemas/FrameV2'\n                          0.0.1: '#/components/schemas/FrameV2'\n              - type: object\n                required:\n                - cast\n                properties:\n                  cast_id: &id008\n                    type: object\n                    required:\n                    - fid\n                    - hash\n                    properties:\n                      fid: *id001\n                      hash:\n                        type: string\n                  cast:\n                    type: object\n                    required:\n                    - hash\n                    - parent_hash\n                    - parent_url\n                    - root_parent_url\n                    - parent_author\n                    - author\n                    - text\n                    - timestamp\n                    - type\n                    - embeds\n                    - channel\n                    properties:\n                      hash:\n                        type: string\n                      parent_hash:\n                        type:\n                        - string\n                        - 'null'\n                      parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      root_parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      parent_author:\n                        type: object\n                        required:\n                        - fid\n                        properties:\n                          fid:\n                            oneOf:\n                            - type: 'null'\n                            - *id001\n                      author: *id005\n                      text:\n                        type: string\n                      timestamp: *id006\n                      type: &id009\n                        type: string\n                        enum:\n                        - cast-mention\n                        - cast-reply\n                        description: 'The notification type of a cast.\n\n                          '\n                      embeds:\n                        type: array\n                        items:\n                          oneOf:\n                          - *id007\n                          - type: object\n                            required:\n                            - cast\n                            properties:\n                              cast_id: *id008\n                              cast:\n                                type: object\n                                required:\n                                - object\n                                - hash\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - cast_dehydrated\n                                  hash:\n                                    type: string\n                                  author: *id005\n                      channel:\n                        oneOf:\n                        - type: 'null'\n                        - &id013\n                          type: object\n                          required:\n                          - id\n                          - name\n                          - object\n                          properties:\n                            id:\n                              type: string\n                            name:\n                              type: string\n                            object:\n                              type: string\n                              enum:\n                              - channel_dehydrated\n                            image_url:\n                              type: string\n                            viewer_context: &id012\n                              description: Adds context on the viewer's or author's\n                                role in the channel.", "mimetype": "text/plain", "start_char_idx": 31005, "end_char_idx": 39772, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6373b608-8652-4da3-8e9c-33cf5f712e58": {"__data__": {"id_": "6373b608-8652-4da3-8e9c-33cf5f712e58", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "48362c28-add9-4247-918e-7b63f8b7427c", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "deae3f2702c68fb55a1c2e58ef4c5795f9b980d301e244f90a1cb6c3dbcd08b0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3ce22342-6423-4f1a-92c5-d3e888beb144", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "22aaf30734c23efaa1c1cc3a2589ffdb1b09ade894c2f6300404e9c7e505db27", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                              required:\n                              - following\n                              properties:\n                                following:\n                                  description: Indicates if the user is following\n                                    the channel.\n                                  type: boolean\n                                role:\n                                  type: string\n                                  description: The role of a channel member\n                                  enum:\n                                  - member\n                                  - moderator\n          type: *id009\n      - type: object\n        required:\n        - reactions\n        - replies\n        - thread_hash\n        - mentioned_profiles\n        - channel\n        properties:\n          frames:\n            type: array\n            items: *id010\n          reactions:\n            type: object\n            required:\n            - likes\n            - recasts\n            - likes_count\n            - recasts_count\n            properties:\n              likes:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  properties:\n                    fid: *id001\n              recasts:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  - fname\n                  properties:\n                    fid: *id001\n                    fname:\n                      type: string\n              likes_count:\n                type: integer\n                format: int32\n              recasts_count:\n                type: integer\n                format: int32\n          replies:\n            type: object\n            required:\n            - count\n            properties:\n              count:\n                type: integer\n                format: int32\n          thread_hash:\n            type:\n            - string\n            - 'null'\n          mentioned_profiles:\n            type: array\n            items: *id011\n          channel:\n            oneOf:\n            - oneOf:\n              - type: object\n                required:\n                - id\n                - url\n                - object\n                properties:\n                  id:\n                    type: string\n                  url:\n                    type: string\n                  name:\n                    type: string\n                  description:\n                    type: string\n                  object:\n                    type: string\n                    enum:\n                    - channel\n                  created_at:\n                    description: Epoch timestamp in seconds.\n                    type: number\n                  follower_count:\n                    description: Number of followers the channel has.\n                    type: number\n                  external_link:\n                    type: object\n                    description: Channel's external link.\n                    properties:\n                      title:\n                        type: string\n                      url:\n                        type: string\n                  image_url:\n                    type: string\n                  parent_url:\n                    type: string\n                    format: uri\n                  lead: *id011\n                  moderator_fids:\n                    type: array\n                    items: *id001\n                  member_count:\n                    type: integer\n                    format: int32\n                  moderator: *id011\n                  pinned_cast_hash:\n                    type: string\n                    default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                    description: Cast Hash\n                  hosts:\n                    type: array\n                    deprecated: true\n                    items: *id011\n                  viewer_context: *id012\n              - *id013\n              discriminator:\n                propertyName: object\n                mapping:\n                  channel: '#/components/schemas/Channel'\n                  dehydrated_channel: '#/components/schemas/DehydratedChannel'\n            - type: 'null'\n          viewer_context:\n            type: object\n            description: Adds context on interactions the viewer has made with the\n              cast.\n            required:\n            - liked\n            - recasted\n            properties:\n              liked:\n                description: Indicates if the viewer liked the cast.\n                type: boolean\n              recasted:\n                description: Indicates if the viewer recasted the cast.\n                type: boolean\n          author_channel_context: *id012\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 39803, "end_char_idx": 44812, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "72b9748d-e13e-4bed-b2ee-6259608a2a9e": {"__data__": {"id_": "72b9748d-e13e-4bed-b2ee-6259608a2a9e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c911618-3208-4176-ac5e-e33c757deeda", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f6fbe03a9abd15d7e0b974dad5d3fca8061a50213aba41802d067292533bf06e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b1b3d0ca-a3e9-46eb-95b0-da1b294033a9", "node_type": "1", "metadata": {}, "hash": "276d9829bd28ca7c832cf3651919d5f3d9662484a0269ecacb934ce07c8af95d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-feed-by-parent-urls\n\n**Endpoint**: `GET /farcaster/feed/parent_urls`\n\n## Description\nFetch feed based on parent URLs\n\n## Parameters\n- `parent_urls` (query): Comma separated list of parent_urls\n- `with_recasts` (query): Include recasts in the response, true by default\n- `viewer_fid` (query): Providing this will return a feed that respects this user's mutes and blocks and includes `viewer_context`.\n- `with_replies` (query): Include replies in the response, false by default\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- casts\n- next\nproperties:\n  casts:\n    type: array\n    items:\n      allOf:\n      - type: object\n        required:\n        - hash\n        - parent_hash\n        - parent_url\n        - root_parent_url\n        - parent_author\n        - author\n        - text\n        - timestamp\n        - embeds\n        properties:\n          hash:\n            type: string\n          parent_hash:\n            type:\n            - string\n            - 'null'\n          parent_url:\n            type:\n            - string\n            - 'null'\n          root_parent_url:\n            type:\n            - string\n            - 'null'\n          parent_author:\n            type: object\n            required:\n            - fid\n            properties:\n              fid:\n                oneOf:\n                - type: 'null'\n                - &id001\n                  type: integer\n                  format: int32\n                  description: The unique identifier of a farcaster user (unsigned\n                    integer)\n                  examples:\n                  - 3\n                  - 191\n                  - 2\n                  - 194\n                  - 19960\n          author: &id011\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: *id001\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id002\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5446, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b1b3d0ca-a3e9-46eb-95b0-da1b294033a9": {"__data__": {"id_": "b1b3d0ca-a3e9-46eb-95b0-da1b294033a9", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c911618-3208-4176-ac5e-e33c757deeda", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f6fbe03a9abd15d7e0b974dad5d3fca8061a50213aba41802d067292533bf06e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "72b9748d-e13e-4bed-b2ee-6259608a2a9e", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f88ea07de8791887080f697f558c3bc8606a73b779ee73958998c9491d6c8da5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9b49f877-0188-4f79-97a9-f0fa3a1fb663", "node_type": "1", "metadata": {}, "hash": "fe0df8fb809538d41413faf06c0a270674cb9253987f2f1009b522ab38419e14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 4596, "end_char_idx": 7419, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9b49f877-0188-4f79-97a9-f0fa3a1fb663": {"__data__": {"id_": "9b49f877-0188-4f79-97a9-f0fa3a1fb663", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c911618-3208-4176-ac5e-e33c757deeda", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f6fbe03a9abd15d7e0b974dad5d3fca8061a50213aba41802d067292533bf06e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b1b3d0ca-a3e9-46eb-95b0-da1b294033a9", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "988e89110ab907a3a5bd0c997be451327399d8b3f8b388f3a271c5dc67c63aa7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "994e82b4-1775-4f21-b549-dbcd6aa35f6a", "node_type": "1", "metadata": {}, "hash": "7693468d1bce4d6458a0c00eb5858d0c52e0d3acfd9f809418886132f3cd260d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          text:\n            type: string\n          timestamp: &id006\n            type: string\n            format: date-time\n          embeds:\n            type: array\n            items:\n              oneOf:\n              - &id007\n                type: object\n                required:\n                - url\n                properties:\n                  url:\n                    type: string\n                  metadata:\n                    type: object\n                    required:\n                    - _status\n                    properties:\n                      _status:\n                        type: string\n                      content_type:\n                        type:\n                        - string\n                        - 'null'\n                      content_length:\n                        type:\n                        - integer\n                        - 'null'\n                      image:\n                        type: object\n                        properties:\n                          height_px:\n                            type: integer\n                          width_px:\n                            type: integer\n                      video:\n                        type: object\n                        properties:\n                          duration_s:\n                            type: number\n                          stream:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                codec_name:\n                                  type: string\n                                height_px:\n                                  type: integer\n                                width_px:\n                                  type: integer\n                      html:\n                        allOf:\n                        - type: object\n                          properties:\n                            favicon:\n                              type: string\n                            modifiedTime:\n                              type: string\n                            ogArticleAuthor:\n                              type: string\n                            ogArticleExpirationTime:\n                              type: string\n                            ogArticleModifiedTime:\n                              type: string\n                            ogArticlePublishedTime:\n                              type: string\n                            ogArticlePublisher:\n                              type: string\n                            ogArticleSection:\n                              type: string\n                            ogArticleTag:\n                              type: string\n                            ogAudio:\n                              type: string\n                            ogAudioSecureURL:\n                              type: string\n                            ogAudioType:\n                              type: string\n                            ogAudioURL:\n                              type: string\n                            ogAvailability:\n                              type: string\n                            ogDate:\n                              type: string\n                            ogDescription:\n                              type: string\n                            ogDeterminer:\n                              type: string\n                            ogEpisode:\n                              type: string\n                            ogImage:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                  alt:\n                                    type: string\n                                required:\n                                - url\n                            ogLocale:\n                              type: string\n                            ogLocaleAlternate:\n                              type: string\n                            ogLogo:\n                              type: string\n                            ogMovie:\n                              type: string\n                            ogPriceAmount:\n                              type: string\n                            ogPriceCurrency:\n                              type: string\n                            ogProductAvailability:\n                              type: string\n                            ogProductCondition:\n                              type: string\n                            ogProductPriceAmount:\n                              type: string\n                            ogProductPriceCurrency:\n                              type: string\n                            ogProductRetailerItemId:\n                              type: string\n                            ogSiteName:\n                              type: string\n                            ogTitle:\n                              type: string\n                            ogType:\n                              type: string\n                            ogUrl:\n                              type: string\n                            ogVideo:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                required:\n                                - url\n                            ogVideoActor:\n                              type: string\n                            ogVideoActorId:\n                              type: string\n                            ogVideoActorRole:\n                              type: string\n                            ogVideoDirector:\n                              type: string\n                            ogVideoDuration:\n                              type: string\n                            ogVideoOther:\n                              type: string\n                            ogVideoReleaseDate:\n                              type: string\n                            ogVideoSecureURL:\n                              type: string\n                            ogVideoSeries:\n                              type: string\n                            ogVideoTag:\n                              type: string\n                            ogVideoTvShow:\n                              type: string\n                            ogVideoWriter:\n                              type: string\n                            ogWebsite:\n                              type: string\n                            updatedTime:\n                              type: string\n                        - type: object\n                          properties:\n                            oembed:\n                              oneOf:\n                              - allOf:\n                                - &id003\n                                  type: object\n                                  description: Basic data structure of every oembed\n                                    response see https://oembed.com/\n                                  required:\n                                  - type\n                                  - version\n                                  properties:\n                                    type:\n                                      type: string\n                                    version:\n                                      type:\n                                      - string\n                                      - 'null'\n                                    title:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A text title, describing the resource.", "mimetype": "text/plain", "start_char_idx": 6554, "end_char_idx": 15959, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "994e82b4-1775-4f21-b549-dbcd6aa35f6a": {"__data__": {"id_": "994e82b4-1775-4f21-b549-dbcd6aa35f6a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c911618-3208-4176-ac5e-e33c757deeda", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f6fbe03a9abd15d7e0b974dad5d3fca8061a50213aba41802d067292533bf06e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9b49f877-0188-4f79-97a9-f0fa3a1fb663", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "c9383b81e2214f20d529b1e60a72cda7e48b3992c36c76b27c56662f21f105fe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fbc7c33d-3148-475d-8ed0-4a3949aa0b2e", "node_type": "1", "metadata": {}, "hash": "02bb5551c6319ad9c9e131ba050e77c2a58a5756c4a5f538be3d18d6c2b844c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the author/owner of\n                                        the resource.\n                                    author_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL for the author/owner of the\n                                        resource.\n                                    provider_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the resource provider.\n                                    provider_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The url of the resource provider.\n                                    cache_age:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The suggested cache lifetime for\n                                        this resource, in seconds. Consumers may choose\n                                        to use this value or not.\n                                    thumbnail_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL to a thumbnail image representing\n                                        the resource. The thumbnail must respect any\n                                        maxwidth and maxheight parameters. If this\n                                        parameter is present, thumbnail_width and\n                                        thumbnail_height must also be present.\n                                    thumbnail_width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_height must also be present.\n                                    thumbnail_height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_width must also be present.\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - rich\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to display the\n                                        resource. The HTML should have no padding\n                                        or margins. Consumers may wish to load the\n                                        HTML in an off-domain iframe to avoid XSS\n                                        vulnerabilities. The markup should be valid\n                                        XHTML 1.0 Basic.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - video\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to embed a video\n                                        player. The HTML should have no padding or\n                                        margins. Consumers may wish to load the HTML\n                                        in an off-domain iframe to avoid XSS vulnerabilities.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 15996, "end_char_idx": 24326, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fbc7c33d-3148-475d-8ed0-4a3949aa0b2e": {"__data__": {"id_": "fbc7c33d-3148-475d-8ed0-4a3949aa0b2e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c911618-3208-4176-ac5e-e33c757deeda", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f6fbe03a9abd15d7e0b974dad5d3fca8061a50213aba41802d067292533bf06e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "994e82b4-1775-4f21-b549-dbcd6aa35f6a", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "b21988aa9cd9cce688bb49a9c04421b9495b97d7ed0dafbf7a1ae2842fceb262", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aa733059-9f30-45af-baf2-f1283e7594e3", "node_type": "1", "metadata": {}, "hash": "4bf0e8989166b44509d34059a21981076b724bc3fd8b9c3a31d03109f5c8881a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - link\n                              discriminator:\n                                propertyName: type\n                                mapping:\n                                  rich: '#/components/schemas/OembedRichData'\n                                  video: '#/components/schemas/OembedVideoData'\n                                  photo: '#/components/schemas/OembedPhotoData'\n                                  link: '#/components/schemas/OembedLinkData'\n                      frame: &id010\n                        discriminator:\n                          propertyName: version\n                        oneOf:\n                        - description: Frame v1 object\n                          allOf:\n                          - &id004\n                            description: Frame base object used across all versions\n                            type: object\n                            required:\n                            - version\n                            - image\n                            - frames_url\n                            properties:\n                              version:\n                                type: string\n                                description: Version of the frame, 'next' for v2,\n                                  'vNext' for v1\n                              image:\n                                type: string\n                                description: URL of the image\n                              frames_url:\n                                type: string\n                                description: Launch URL of the frame\n                          - type: object\n                            properties:\n                              buttons:\n                                type: array\n                                items:\n                                  type: object\n                                  required:\n                                  - index\n                                  - action_type\n                                  properties:\n                                    title:\n                                      type: string\n                                      description: Title of the button\n                                    index:\n                                      type: integer\n                                      description: Index of the button\n                                    action_type:\n                                      type: string\n                                      description: The action type of a frame button.\n                                        Action types \"mint\" & \"link\" are to be handled\n                                        on the client side only and so they will produce\n                                        a no/op for POST /farcaster/frame/action.\n                                      enum:\n                                      - post\n                                      - post_redirect\n                                      - tx\n                                      - link\n                                      - mint\n                                    target:\n                                      type: string\n                                      description: Target of the button\n                                    post_url:\n                                      type: string\n                                      description: Used specifically for the tx action\n                                        type to post a successful transaction hash\n                              post_url:\n                                type: string\n                                description: Post URL to take an action on this frame\n                              title:\n                                type: string\n                              image_aspect_ratio:\n                                type: string\n                              input:\n                                type: object\n                                properties:\n                                  text:\n                                    type: string\n                                    description: Input text for the frame\n                              state:\n                                type: object\n                                properties:\n                                  serialized:\n                                    type: string\n                                    description: State for the frame in a serialized\n                                      format\n                        - description: Frame v2 object\n                          allOf:\n                          - *id004\n                          - type: object\n                            required:\n                            - title\n                            - name\n                            - icon\n                            properties:\n                              manifest:\n                                type: object\n                                properties:\n                                  account_association:\n                                    type: object\n                                    properties:\n                                      header:\n                                        type: string\n                                      payload:\n                                        type: string\n                                      signature:\n                                        type: string\n                                    required:\n                                    - header\n                                    - payload\n                                    - signature\n                                  frame:\n                                    type: object\n                                    properties:\n                                      version:\n                                        type: string\n                                        enum:\n                                        - 0.0.0\n                                        - 0.0.", "mimetype": "text/plain", "start_char_idx": 22633, "end_char_idx": 30726, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aa733059-9f30-45af-baf2-f1283e7594e3": {"__data__": {"id_": "aa733059-9f30-45af-baf2-f1283e7594e3", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c911618-3208-4176-ac5e-e33c757deeda", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f6fbe03a9abd15d7e0b974dad5d3fca8061a50213aba41802d067292533bf06e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fbc7c33d-3148-475d-8ed0-4a3949aa0b2e", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "bbb821d7022a4cfa5292f6cc93375b1f091b3019555101748d11aaab49294f17", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "267512d8-4901-473c-abf6-9cb09ebdc769", "node_type": "1", "metadata": {}, "hash": "256dbc3a053302772e68551d3c8ed80cd3cc87d6cacee7a7b90bcf151cedcd80", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                        - 0.0.1\n                                        - '1'\n                                        - next\n                                      name:\n                                        type: string\n                                        maxLength: 32\n                                      home_url:\n                                        type: string\n                                        maxLength: 512\n                                      icon_url:\n                                        type: string\n                                        maxLength: 512\n                                      image_url:\n                                        type: string\n                                        maxLength: 512\n                                      button_title:\n                                        type: string\n                                        maxLength: 32\n                                      splash_image_url:\n                                        type: string\n                                        maxLength: 512\n                                      splash_background_color:\n                                        type: string\n                                      webhook_url:\n                                        type: string\n                                        maxLength: 512\n                                    required:\n                                    - version\n                                    - name\n                                    - home_url\n                                    - icon_url\n                                  triggers:\n                                    type: array\n                                    items:\n                                      oneOf:\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - cast\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - composer\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                required:\n                                - account_association\n                              author: &id005\n                                type: object\n                                required:\n                                - object\n                                - fid\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - user_dehydrated\n                                  fid: *id001\n                                  username:\n                                    type: string\n                                  display_name:\n                                    type: string\n                                  pfp_url:\n                                    type: string\n                        mapping:\n                          vNext: '#/components/schemas/FrameV1'\n                          next: '#/components/schemas/FrameV2'\n                          '1': '#/components/schemas/FrameV2'\n                          0.0.0: '#/components/schemas/FrameV2'\n                          0.0.1: '#/components/schemas/FrameV2'\n              - type: object\n                required:\n                - cast\n                properties:\n                  cast_id: &id008\n                    type: object\n                    required:\n                    - fid\n                    - hash\n                    properties:\n                      fid: *id001\n                      hash:\n                        type: string\n                  cast:\n                    type: object\n                    required:\n                    - hash\n                    - parent_hash\n                    - parent_url\n                    - root_parent_url\n                    - parent_author\n                    - author\n                    - text\n                    - timestamp\n                    - type\n                    - embeds\n                    - channel\n                    properties:\n                      hash:\n                        type: string\n                      parent_hash:\n                        type:\n                        - string\n                        - 'null'\n                      parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      root_parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      parent_author:\n                        type: object\n                        required:\n                        - fid\n                        properties:\n                          fid:\n                            oneOf:\n                            - type: 'null'\n                            - *id001\n                      author: *id005\n                      text:\n                        type: string\n                      timestamp: *id006\n                      type: &id009\n                        type: string\n                        enum:\n                        - cast-mention\n                        - cast-reply\n                        description: 'The notification type of a cast.\n\n                          '\n                      embeds:\n                        type: array\n                        items:\n                          oneOf:\n                          - *id007\n                          - type: object\n                            required:\n                            - cast\n                            properties:\n                              cast_id: *id008\n                              cast:\n                                type: object\n                                required:\n                                - object\n                                - hash\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - cast_dehydrated\n                                  hash:\n                                    type: string\n                                  author: *id005\n                      channel:\n                        oneOf:\n                        - type: 'null'\n                        - &id013\n                          type: object\n                          required:\n                          - id\n                          - name\n                          - object\n                          properties:\n                            id:\n                              type: string\n                            name:\n                              type: string\n                            object:\n                              type: string\n                              enum:\n                              - channel_dehydrated\n                            image_url:\n                              type: string\n                            viewer_context: &id012\n                              description: Adds context on the viewer's or author's\n                                role in the channel.", "mimetype": "text/plain", "start_char_idx": 30676, "end_char_idx": 39443, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "267512d8-4901-473c-abf6-9cb09ebdc769": {"__data__": {"id_": "267512d8-4901-473c-abf6-9cb09ebdc769", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c911618-3208-4176-ac5e-e33c757deeda", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f6fbe03a9abd15d7e0b974dad5d3fca8061a50213aba41802d067292533bf06e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aa733059-9f30-45af-baf2-f1283e7594e3", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "1f483f510d43f36f5a6ae7b4c43471154d8ffb054ebbbe3e0d68f4122e0db03f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                              required:\n                              - following\n                              properties:\n                                following:\n                                  description: Indicates if the user is following\n                                    the channel.\n                                  type: boolean\n                                role:\n                                  type: string\n                                  description: The role of a channel member\n                                  enum:\n                                  - member\n                                  - moderator\n          type: *id009\n      - type: object\n        required:\n        - reactions\n        - replies\n        - thread_hash\n        - mentioned_profiles\n        - channel\n        properties:\n          frames:\n            type: array\n            items: *id010\n          reactions:\n            type: object\n            required:\n            - likes\n            - recasts\n            - likes_count\n            - recasts_count\n            properties:\n              likes:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  properties:\n                    fid: *id001\n              recasts:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  - fname\n                  properties:\n                    fid: *id001\n                    fname:\n                      type: string\n              likes_count:\n                type: integer\n                format: int32\n              recasts_count:\n                type: integer\n                format: int32\n          replies:\n            type: object\n            required:\n            - count\n            properties:\n              count:\n                type: integer\n                format: int32\n          thread_hash:\n            type:\n            - string\n            - 'null'\n          mentioned_profiles:\n            type: array\n            items: *id011\n          channel:\n            oneOf:\n            - oneOf:\n              - type: object\n                required:\n                - id\n                - url\n                - object\n                properties:\n                  id:\n                    type: string\n                  url:\n                    type: string\n                  name:\n                    type: string\n                  description:\n                    type: string\n                  object:\n                    type: string\n                    enum:\n                    - channel\n                  created_at:\n                    description: Epoch timestamp in seconds.\n                    type: number\n                  follower_count:\n                    description: Number of followers the channel has.\n                    type: number\n                  external_link:\n                    type: object\n                    description: Channel's external link.\n                    properties:\n                      title:\n                        type: string\n                      url:\n                        type: string\n                  image_url:\n                    type: string\n                  parent_url:\n                    type: string\n                    format: uri\n                  lead: *id011\n                  moderator_fids:\n                    type: array\n                    items: *id001\n                  member_count:\n                    type: integer\n                    format: int32\n                  moderator: *id011\n                  pinned_cast_hash:\n                    type: string\n                    default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                    description: Cast Hash\n                  hosts:\n                    type: array\n                    deprecated: true\n                    items: *id011\n                  viewer_context: *id012\n              - *id013\n              discriminator:\n                propertyName: object\n                mapping:\n                  channel: '#/components/schemas/Channel'\n                  dehydrated_channel: '#/components/schemas/DehydratedChannel'\n            - type: 'null'\n          viewer_context:\n            type: object\n            description: Adds context on interactions the viewer has made with the\n              cast.\n            required:\n            - liked\n            - recasted\n            properties:\n              liked:\n                description: Indicates if the viewer liked the cast.\n                type: boolean\n              recasted:\n                description: Indicates if the viewer recasted the cast.\n                type: boolean\n          author_channel_context: *id012\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 39474, "end_char_idx": 44483, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1adf74d7-b4b9-4d99-b74e-bce3f681a272": {"__data__": {"id_": "1adf74d7-b4b9-4d99-b74e-bce3f681a272", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a493eef0-c14f-4b1d-8f1c-032c0fe859bd", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d930ea6153b3d60cc2393590da00e149d44276e89d5222f9812b72640ccc6898", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "34253a34-3c81-4479-a846-d684e34cc7f2", "node_type": "1", "metadata": {}, "hash": "276d9829bd28ca7c832cf3651919d5f3d9662484a0269ecacb934ce07c8af95d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-feed-for-you\n\n**Endpoint**: `GET /farcaster/feed/for_you`\n\n## Description\nFetch a personalized For You feed for a user\n\n## Parameters\n- `fid` (query): FID of user whose feed you want to create\n- `viewer_fid` (query): Providing this will return a feed that respects this user's mutes and blocks and includes `viewer_context`.\n- `provider` (query): No description\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n- `provider_metadata` (query): provider_metadata is a URI-encoded stringified JSON object that can be used to pass additional metadata to the provider. Only available for mbd provider right now. See [here](https://docs.neynar.com/docs/feed-for-you-w-external-providers) on how to use.\n\n\n## Response\n```yaml\ntype: object\nrequired:\n- casts\n- next\nproperties:\n  casts:\n    type: array\n    items:\n      allOf:\n      - type: object\n        required:\n        - hash\n        - parent_hash\n        - parent_url\n        - root_parent_url\n        - parent_author\n        - author\n        - text\n        - timestamp\n        - embeds\n        properties:\n          hash:\n            type: string\n          parent_hash:\n            type:\n            - string\n            - 'null'\n          parent_url:\n            type:\n            - string\n            - 'null'\n          root_parent_url:\n            type:\n            - string\n            - 'null'\n          parent_author:\n            type: object\n            required:\n            - fid\n            properties:\n              fid:\n                oneOf:\n                - type: 'null'\n                - &id001\n                  type: integer\n                  format: int32\n                  description: The unique identifier of a farcaster user (unsigned\n                    integer)\n                  examples:\n                  - 3\n                  - 191\n                  - 2\n                  - 194\n                  - 19960\n          author: &id011\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: *id001\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id002\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5618, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "34253a34-3c81-4479-a846-d684e34cc7f2": {"__data__": {"id_": "34253a34-3c81-4479-a846-d684e34cc7f2", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a493eef0-c14f-4b1d-8f1c-032c0fe859bd", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d930ea6153b3d60cc2393590da00e149d44276e89d5222f9812b72640ccc6898", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1adf74d7-b4b9-4d99-b74e-bce3f681a272", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "6634d8fd8295becd558aa4d53cd08df490aa6db174c8ecb9b22c2f516069f788", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "709c9a9d-fe77-4931-9040-52d26fc372ae", "node_type": "1", "metadata": {}, "hash": "fe0df8fb809538d41413faf06c0a270674cb9253987f2f1009b522ab38419e14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 4768, "end_char_idx": 7591, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "709c9a9d-fe77-4931-9040-52d26fc372ae": {"__data__": {"id_": "709c9a9d-fe77-4931-9040-52d26fc372ae", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a493eef0-c14f-4b1d-8f1c-032c0fe859bd", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d930ea6153b3d60cc2393590da00e149d44276e89d5222f9812b72640ccc6898", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "34253a34-3c81-4479-a846-d684e34cc7f2", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "32082172d86f1bcdd5d0efb0bf4f2e53d7c88cc85123d6355a8f1e6954a75a2f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9b7f969e-e56a-4bc7-8311-19aa11944fe8", "node_type": "1", "metadata": {}, "hash": "7693468d1bce4d6458a0c00eb5858d0c52e0d3acfd9f809418886132f3cd260d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          text:\n            type: string\n          timestamp: &id006\n            type: string\n            format: date-time\n          embeds:\n            type: array\n            items:\n              oneOf:\n              - &id007\n                type: object\n                required:\n                - url\n                properties:\n                  url:\n                    type: string\n                  metadata:\n                    type: object\n                    required:\n                    - _status\n                    properties:\n                      _status:\n                        type: string\n                      content_type:\n                        type:\n                        - string\n                        - 'null'\n                      content_length:\n                        type:\n                        - integer\n                        - 'null'\n                      image:\n                        type: object\n                        properties:\n                          height_px:\n                            type: integer\n                          width_px:\n                            type: integer\n                      video:\n                        type: object\n                        properties:\n                          duration_s:\n                            type: number\n                          stream:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                codec_name:\n                                  type: string\n                                height_px:\n                                  type: integer\n                                width_px:\n                                  type: integer\n                      html:\n                        allOf:\n                        - type: object\n                          properties:\n                            favicon:\n                              type: string\n                            modifiedTime:\n                              type: string\n                            ogArticleAuthor:\n                              type: string\n                            ogArticleExpirationTime:\n                              type: string\n                            ogArticleModifiedTime:\n                              type: string\n                            ogArticlePublishedTime:\n                              type: string\n                            ogArticlePublisher:\n                              type: string\n                            ogArticleSection:\n                              type: string\n                            ogArticleTag:\n                              type: string\n                            ogAudio:\n                              type: string\n                            ogAudioSecureURL:\n                              type: string\n                            ogAudioType:\n                              type: string\n                            ogAudioURL:\n                              type: string\n                            ogAvailability:\n                              type: string\n                            ogDate:\n                              type: string\n                            ogDescription:\n                              type: string\n                            ogDeterminer:\n                              type: string\n                            ogEpisode:\n                              type: string\n                            ogImage:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                  alt:\n                                    type: string\n                                required:\n                                - url\n                            ogLocale:\n                              type: string\n                            ogLocaleAlternate:\n                              type: string\n                            ogLogo:\n                              type: string\n                            ogMovie:\n                              type: string\n                            ogPriceAmount:\n                              type: string\n                            ogPriceCurrency:\n                              type: string\n                            ogProductAvailability:\n                              type: string\n                            ogProductCondition:\n                              type: string\n                            ogProductPriceAmount:\n                              type: string\n                            ogProductPriceCurrency:\n                              type: string\n                            ogProductRetailerItemId:\n                              type: string\n                            ogSiteName:\n                              type: string\n                            ogTitle:\n                              type: string\n                            ogType:\n                              type: string\n                            ogUrl:\n                              type: string\n                            ogVideo:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                required:\n                                - url\n                            ogVideoActor:\n                              type: string\n                            ogVideoActorId:\n                              type: string\n                            ogVideoActorRole:\n                              type: string\n                            ogVideoDirector:\n                              type: string\n                            ogVideoDuration:\n                              type: string\n                            ogVideoOther:\n                              type: string\n                            ogVideoReleaseDate:\n                              type: string\n                            ogVideoSecureURL:\n                              type: string\n                            ogVideoSeries:\n                              type: string\n                            ogVideoTag:\n                              type: string\n                            ogVideoTvShow:\n                              type: string\n                            ogVideoWriter:\n                              type: string\n                            ogWebsite:\n                              type: string\n                            updatedTime:\n                              type: string\n                        - type: object\n                          properties:\n                            oembed:\n                              oneOf:\n                              - allOf:\n                                - &id003\n                                  type: object\n                                  description: Basic data structure of every oembed\n                                    response see https://oembed.com/\n                                  required:\n                                  - type\n                                  - version\n                                  properties:\n                                    type:\n                                      type: string\n                                    version:\n                                      type:\n                                      - string\n                                      - 'null'\n                                    title:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A text title, describing the resource.", "mimetype": "text/plain", "start_char_idx": 6726, "end_char_idx": 16131, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9b7f969e-e56a-4bc7-8311-19aa11944fe8": {"__data__": {"id_": "9b7f969e-e56a-4bc7-8311-19aa11944fe8", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a493eef0-c14f-4b1d-8f1c-032c0fe859bd", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d930ea6153b3d60cc2393590da00e149d44276e89d5222f9812b72640ccc6898", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "709c9a9d-fe77-4931-9040-52d26fc372ae", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "3946fea362322f396fbb53ef33ce6bf0dcf3a648a19bad07a407841d31fbcf27", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "00fd70fe-3b13-4bbd-b1ad-6611c07af160", "node_type": "1", "metadata": {}, "hash": "02bb5551c6319ad9c9e131ba050e77c2a58a5756c4a5f538be3d18d6c2b844c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the author/owner of\n                                        the resource.\n                                    author_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL for the author/owner of the\n                                        resource.\n                                    provider_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the resource provider.\n                                    provider_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The url of the resource provider.\n                                    cache_age:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The suggested cache lifetime for\n                                        this resource, in seconds. Consumers may choose\n                                        to use this value or not.\n                                    thumbnail_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL to a thumbnail image representing\n                                        the resource. The thumbnail must respect any\n                                        maxwidth and maxheight parameters. If this\n                                        parameter is present, thumbnail_width and\n                                        thumbnail_height must also be present.\n                                    thumbnail_width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_height must also be present.\n                                    thumbnail_height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_width must also be present.\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - rich\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to display the\n                                        resource. The HTML should have no padding\n                                        or margins. Consumers may wish to load the\n                                        HTML in an off-domain iframe to avoid XSS\n                                        vulnerabilities. The markup should be valid\n                                        XHTML 1.0 Basic.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - video\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to embed a video\n                                        player. The HTML should have no padding or\n                                        margins. Consumers may wish to load the HTML\n                                        in an off-domain iframe to avoid XSS vulnerabilities.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 16168, "end_char_idx": 24498, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "00fd70fe-3b13-4bbd-b1ad-6611c07af160": {"__data__": {"id_": "00fd70fe-3b13-4bbd-b1ad-6611c07af160", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a493eef0-c14f-4b1d-8f1c-032c0fe859bd", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d930ea6153b3d60cc2393590da00e149d44276e89d5222f9812b72640ccc6898", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9b7f969e-e56a-4bc7-8311-19aa11944fe8", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "2122452225623a09e1ff7bee6f5c2fb315a97a2330cbf242472c4c36ca25a5ee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "842620a9-d8d1-45da-88a4-aa4e3925455e", "node_type": "1", "metadata": {}, "hash": "4bf0e8989166b44509d34059a21981076b724bc3fd8b9c3a31d03109f5c8881a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - link\n                              discriminator:\n                                propertyName: type\n                                mapping:\n                                  rich: '#/components/schemas/OembedRichData'\n                                  video: '#/components/schemas/OembedVideoData'\n                                  photo: '#/components/schemas/OembedPhotoData'\n                                  link: '#/components/schemas/OembedLinkData'\n                      frame: &id010\n                        discriminator:\n                          propertyName: version\n                        oneOf:\n                        - description: Frame v1 object\n                          allOf:\n                          - &id004\n                            description: Frame base object used across all versions\n                            type: object\n                            required:\n                            - version\n                            - image\n                            - frames_url\n                            properties:\n                              version:\n                                type: string\n                                description: Version of the frame, 'next' for v2,\n                                  'vNext' for v1\n                              image:\n                                type: string\n                                description: URL of the image\n                              frames_url:\n                                type: string\n                                description: Launch URL of the frame\n                          - type: object\n                            properties:\n                              buttons:\n                                type: array\n                                items:\n                                  type: object\n                                  required:\n                                  - index\n                                  - action_type\n                                  properties:\n                                    title:\n                                      type: string\n                                      description: Title of the button\n                                    index:\n                                      type: integer\n                                      description: Index of the button\n                                    action_type:\n                                      type: string\n                                      description: The action type of a frame button.\n                                        Action types \"mint\" & \"link\" are to be handled\n                                        on the client side only and so they will produce\n                                        a no/op for POST /farcaster/frame/action.\n                                      enum:\n                                      - post\n                                      - post_redirect\n                                      - tx\n                                      - link\n                                      - mint\n                                    target:\n                                      type: string\n                                      description: Target of the button\n                                    post_url:\n                                      type: string\n                                      description: Used specifically for the tx action\n                                        type to post a successful transaction hash\n                              post_url:\n                                type: string\n                                description: Post URL to take an action on this frame\n                              title:\n                                type: string\n                              image_aspect_ratio:\n                                type: string\n                              input:\n                                type: object\n                                properties:\n                                  text:\n                                    type: string\n                                    description: Input text for the frame\n                              state:\n                                type: object\n                                properties:\n                                  serialized:\n                                    type: string\n                                    description: State for the frame in a serialized\n                                      format\n                        - description: Frame v2 object\n                          allOf:\n                          - *id004\n                          - type: object\n                            required:\n                            - title\n                            - name\n                            - icon\n                            properties:\n                              manifest:\n                                type: object\n                                properties:\n                                  account_association:\n                                    type: object\n                                    properties:\n                                      header:\n                                        type: string\n                                      payload:\n                                        type: string\n                                      signature:\n                                        type: string\n                                    required:\n                                    - header\n                                    - payload\n                                    - signature\n                                  frame:\n                                    type: object\n                                    properties:\n                                      version:\n                                        type: string\n                                        enum:\n                                        - 0.0.0\n                                        - 0.0.", "mimetype": "text/plain", "start_char_idx": 22805, "end_char_idx": 30898, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "842620a9-d8d1-45da-88a4-aa4e3925455e": {"__data__": {"id_": "842620a9-d8d1-45da-88a4-aa4e3925455e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a493eef0-c14f-4b1d-8f1c-032c0fe859bd", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d930ea6153b3d60cc2393590da00e149d44276e89d5222f9812b72640ccc6898", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "00fd70fe-3b13-4bbd-b1ad-6611c07af160", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "c6a0146cc465ba82b47dcf0bd4f96e2fa7d4ba043a603b72e84fd7c5b25c88da", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "46ef5de3-4d92-4bd7-84f1-79f3f90daa46", "node_type": "1", "metadata": {}, "hash": "256dbc3a053302772e68551d3c8ed80cd3cc87d6cacee7a7b90bcf151cedcd80", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                        - 0.0.1\n                                        - '1'\n                                        - next\n                                      name:\n                                        type: string\n                                        maxLength: 32\n                                      home_url:\n                                        type: string\n                                        maxLength: 512\n                                      icon_url:\n                                        type: string\n                                        maxLength: 512\n                                      image_url:\n                                        type: string\n                                        maxLength: 512\n                                      button_title:\n                                        type: string\n                                        maxLength: 32\n                                      splash_image_url:\n                                        type: string\n                                        maxLength: 512\n                                      splash_background_color:\n                                        type: string\n                                      webhook_url:\n                                        type: string\n                                        maxLength: 512\n                                    required:\n                                    - version\n                                    - name\n                                    - home_url\n                                    - icon_url\n                                  triggers:\n                                    type: array\n                                    items:\n                                      oneOf:\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - cast\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - composer\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                required:\n                                - account_association\n                              author: &id005\n                                type: object\n                                required:\n                                - object\n                                - fid\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - user_dehydrated\n                                  fid: *id001\n                                  username:\n                                    type: string\n                                  display_name:\n                                    type: string\n                                  pfp_url:\n                                    type: string\n                        mapping:\n                          vNext: '#/components/schemas/FrameV1'\n                          next: '#/components/schemas/FrameV2'\n                          '1': '#/components/schemas/FrameV2'\n                          0.0.0: '#/components/schemas/FrameV2'\n                          0.0.1: '#/components/schemas/FrameV2'\n              - type: object\n                required:\n                - cast\n                properties:\n                  cast_id: &id008\n                    type: object\n                    required:\n                    - fid\n                    - hash\n                    properties:\n                      fid: *id001\n                      hash:\n                        type: string\n                  cast:\n                    type: object\n                    required:\n                    - hash\n                    - parent_hash\n                    - parent_url\n                    - root_parent_url\n                    - parent_author\n                    - author\n                    - text\n                    - timestamp\n                    - type\n                    - embeds\n                    - channel\n                    properties:\n                      hash:\n                        type: string\n                      parent_hash:\n                        type:\n                        - string\n                        - 'null'\n                      parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      root_parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      parent_author:\n                        type: object\n                        required:\n                        - fid\n                        properties:\n                          fid:\n                            oneOf:\n                            - type: 'null'\n                            - *id001\n                      author: *id005\n                      text:\n                        type: string\n                      timestamp: *id006\n                      type: &id009\n                        type: string\n                        enum:\n                        - cast-mention\n                        - cast-reply\n                        description: 'The notification type of a cast.\n\n                          '\n                      embeds:\n                        type: array\n                        items:\n                          oneOf:\n                          - *id007\n                          - type: object\n                            required:\n                            - cast\n                            properties:\n                              cast_id: *id008\n                              cast:\n                                type: object\n                                required:\n                                - object\n                                - hash\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - cast_dehydrated\n                                  hash:\n                                    type: string\n                                  author: *id005\n                      channel:\n                        oneOf:\n                        - type: 'null'\n                        - &id013\n                          type: object\n                          required:\n                          - id\n                          - name\n                          - object\n                          properties:\n                            id:\n                              type: string\n                            name:\n                              type: string\n                            object:\n                              type: string\n                              enum:\n                              - channel_dehydrated\n                            image_url:\n                              type: string\n                            viewer_context: &id012\n                              description: Adds context on the viewer's or author's\n                                role in the channel.", "mimetype": "text/plain", "start_char_idx": 30848, "end_char_idx": 39615, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "46ef5de3-4d92-4bd7-84f1-79f3f90daa46": {"__data__": {"id_": "46ef5de3-4d92-4bd7-84f1-79f3f90daa46", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a493eef0-c14f-4b1d-8f1c-032c0fe859bd", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d930ea6153b3d60cc2393590da00e149d44276e89d5222f9812b72640ccc6898", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "842620a9-d8d1-45da-88a4-aa4e3925455e", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "54745d7acf3edb48e4dd0ad62746f37cc54a6cba4cb6a8ae9c47d5f879c5e51c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                              required:\n                              - following\n                              properties:\n                                following:\n                                  description: Indicates if the user is following\n                                    the channel.\n                                  type: boolean\n                                role:\n                                  type: string\n                                  description: The role of a channel member\n                                  enum:\n                                  - member\n                                  - moderator\n          type: *id009\n      - type: object\n        required:\n        - reactions\n        - replies\n        - thread_hash\n        - mentioned_profiles\n        - channel\n        properties:\n          frames:\n            type: array\n            items: *id010\n          reactions:\n            type: object\n            required:\n            - likes\n            - recasts\n            - likes_count\n            - recasts_count\n            properties:\n              likes:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  properties:\n                    fid: *id001\n              recasts:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  - fname\n                  properties:\n                    fid: *id001\n                    fname:\n                      type: string\n              likes_count:\n                type: integer\n                format: int32\n              recasts_count:\n                type: integer\n                format: int32\n          replies:\n            type: object\n            required:\n            - count\n            properties:\n              count:\n                type: integer\n                format: int32\n          thread_hash:\n            type:\n            - string\n            - 'null'\n          mentioned_profiles:\n            type: array\n            items: *id011\n          channel:\n            oneOf:\n            - oneOf:\n              - type: object\n                required:\n                - id\n                - url\n                - object\n                properties:\n                  id:\n                    type: string\n                  url:\n                    type: string\n                  name:\n                    type: string\n                  description:\n                    type: string\n                  object:\n                    type: string\n                    enum:\n                    - channel\n                  created_at:\n                    description: Epoch timestamp in seconds.\n                    type: number\n                  follower_count:\n                    description: Number of followers the channel has.\n                    type: number\n                  external_link:\n                    type: object\n                    description: Channel's external link.\n                    properties:\n                      title:\n                        type: string\n                      url:\n                        type: string\n                  image_url:\n                    type: string\n                  parent_url:\n                    type: string\n                    format: uri\n                  lead: *id011\n                  moderator_fids:\n                    type: array\n                    items: *id001\n                  member_count:\n                    type: integer\n                    format: int32\n                  moderator: *id011\n                  pinned_cast_hash:\n                    type: string\n                    default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                    description: Cast Hash\n                  hosts:\n                    type: array\n                    deprecated: true\n                    items: *id011\n                  viewer_context: *id012\n              - *id013\n              discriminator:\n                propertyName: object\n                mapping:\n                  channel: '#/components/schemas/Channel'\n                  dehydrated_channel: '#/components/schemas/DehydratedChannel'\n            - type: 'null'\n          viewer_context:\n            type: object\n            description: Adds context on interactions the viewer has made with the\n              cast.\n            required:\n            - liked\n            - recasted\n            properties:\n              liked:\n                description: Indicates if the viewer liked the cast.\n                type: boolean\n              recasted:\n                description: Indicates if the viewer recasted the cast.\n                type: boolean\n          author_channel_context: *id012\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 39646, "end_char_idx": 44655, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "94dea1ec-7bc8-4836-8a6d-a8e84130442e": {"__data__": {"id_": "94dea1ec-7bc8-4836-8a6d-a8e84130442e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a3183841-210f-4f53-8d51-622c70d427e8", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "5bcd5a619ec5ea1b6c74ae9a30c7a8596b0ef24b8d3988b0746a4e1b61502174", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b32ad36d-b66e-4f13-bb4b-2211a0155e2a", "node_type": "1", "metadata": {}, "hash": "ea937abdc22f46bb47848a9f98a70f9be56f97bb66fcaebeeaa6112d818d4a85", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-feed\n\n**Endpoint**: `GET /farcaster/feed`\n\n## Description\nFetch casts based on filters. Ensure setting the correct parameters based on the feed_type and filter_type.\n\n## Parameters\n- `feed_type` (query): Defaults to following (requires FID or address). If set to filter (requires filter_type)\n- `filter_type` (query): Used when feed_type=filter. Can be set to FIDs (requires FIDs) or parent_url (requires parent_url) or channel_id (requires channel_id)\n- `fid` (query): (Optional) FID of user whose feed you want to create. By default, the API expects this field, except if you pass a filter_type\n- `fids` (query): Used when filter_type=FIDs . Create a feed based on a list of FIDs. Max array size is 100. Requires feed_type and filter_type.\n- `parent_url` (query): Used when filter_type=parent_url can be used to fetch content under any parent url e.g. FIP-2 channels on Warpcast. Requires feed_type and filter_type\n- `channel_id` (query): Used when filter_type=channel_id can be used to fetch casts under a channel. Requires feed_type and filter_type.\n- `members_only` (query): Used when filter_type=channel_id. Only include casts from members of the channel. True by default.\n- `embed_url` (query): Used when filter_type=embed_url can be used to fetch all casts with an embed url that contains embed_url. Requires feed_type and filter_type\n- `embed_types` (query): Used when filter_type=embed_types can be used to fetch all casts with matching content types. Requires feed_type and filter_type\n- `with_recasts` (query): Include recasts in the response, true by default\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n- `viewer_fid` (query): Providing this will return a feed that respects this user's mutes and blocks and includes `viewer_context`.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1796, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b32ad36d-b66e-4f13-bb4b-2211a0155e2a": {"__data__": {"id_": "b32ad36d-b66e-4f13-bb4b-2211a0155e2a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a3183841-210f-4f53-8d51-622c70d427e8", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "5bcd5a619ec5ea1b6c74ae9a30c7a8596b0ef24b8d3988b0746a4e1b61502174", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "94dea1ec-7bc8-4836-8a6d-a8e84130442e", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "8cfcfee01fcadecbc8d653d7989ec13bf836e771f65b2d7f09177ea7ee5e054b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c35af929-37c8-4a59-a3ef-c86643a26714", "node_type": "1", "metadata": {}, "hash": "276d9829bd28ca7c832cf3651919d5f3d9662484a0269ecacb934ce07c8af95d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Requires feed_type and filter_type.\n- `members_only` (query): Used when filter_type=channel_id. Only include casts from members of the channel. True by default.\n- `embed_url` (query): Used when filter_type=embed_url can be used to fetch all casts with an embed url that contains embed_url. Requires feed_type and filter_type\n- `embed_types` (query): Used when filter_type=embed_types can be used to fetch all casts with matching content types. Requires feed_type and filter_type\n- `with_recasts` (query): Include recasts in the response, true by default\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n- `viewer_fid` (query): Providing this will return a feed that respects this user's mutes and blocks and includes `viewer_context`.\n\n## Response\n```yaml\ntype: object\nrequired:\n- casts\n- next\nproperties:\n  casts:\n    type: array\n    items:\n      allOf:\n      - type: object\n        required:\n        - hash\n        - parent_hash\n        - parent_url\n        - root_parent_url\n        - parent_author\n        - author\n        - text\n        - timestamp\n        - embeds\n        properties:\n          hash:\n            type: string\n          parent_hash:\n            type:\n            - string\n            - 'null'\n          parent_url:\n            type:\n            - string\n            - 'null'\n          root_parent_url:\n            type:\n            - string\n            - 'null'\n          parent_author:\n            type: object\n            required:\n            - fid\n            properties:\n              fid:\n                oneOf:\n                - type: 'null'\n                - &id001\n                  type: integer\n                  format: int32\n                  description: The unique identifier of a farcaster user (unsigned\n                    integer)\n                  examples:\n                  - 3\n                  - 191\n                  - 2\n                  - 194\n                  - 19960\n          author: &id011\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: *id001\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id002\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 1026, "end_char_idx": 6674, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c35af929-37c8-4a59-a3ef-c86643a26714": {"__data__": {"id_": "c35af929-37c8-4a59-a3ef-c86643a26714", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a3183841-210f-4f53-8d51-622c70d427e8", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "5bcd5a619ec5ea1b6c74ae9a30c7a8596b0ef24b8d3988b0746a4e1b61502174", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b32ad36d-b66e-4f13-bb4b-2211a0155e2a", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f9d089c457421d7633a8c999c7dddacf1f030e8639d9873be993e12c3d916447", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "62499b59-1527-48bb-ab88-a30670904f54", "node_type": "1", "metadata": {}, "hash": "fe0df8fb809538d41413faf06c0a270674cb9253987f2f1009b522ab38419e14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 5824, "end_char_idx": 8647, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "62499b59-1527-48bb-ab88-a30670904f54": {"__data__": {"id_": "62499b59-1527-48bb-ab88-a30670904f54", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a3183841-210f-4f53-8d51-622c70d427e8", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "5bcd5a619ec5ea1b6c74ae9a30c7a8596b0ef24b8d3988b0746a4e1b61502174", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c35af929-37c8-4a59-a3ef-c86643a26714", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "1a20cede66b82ed721130312955e0aa739f88473c5b5c3c936a01f417d790108", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1c03d3fb-8a0a-48c8-b739-f6c8fa79ffb8", "node_type": "1", "metadata": {}, "hash": "7693468d1bce4d6458a0c00eb5858d0c52e0d3acfd9f809418886132f3cd260d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          text:\n            type: string\n          timestamp: &id006\n            type: string\n            format: date-time\n          embeds:\n            type: array\n            items:\n              oneOf:\n              - &id007\n                type: object\n                required:\n                - url\n                properties:\n                  url:\n                    type: string\n                  metadata:\n                    type: object\n                    required:\n                    - _status\n                    properties:\n                      _status:\n                        type: string\n                      content_type:\n                        type:\n                        - string\n                        - 'null'\n                      content_length:\n                        type:\n                        - integer\n                        - 'null'\n                      image:\n                        type: object\n                        properties:\n                          height_px:\n                            type: integer\n                          width_px:\n                            type: integer\n                      video:\n                        type: object\n                        properties:\n                          duration_s:\n                            type: number\n                          stream:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                codec_name:\n                                  type: string\n                                height_px:\n                                  type: integer\n                                width_px:\n                                  type: integer\n                      html:\n                        allOf:\n                        - type: object\n                          properties:\n                            favicon:\n                              type: string\n                            modifiedTime:\n                              type: string\n                            ogArticleAuthor:\n                              type: string\n                            ogArticleExpirationTime:\n                              type: string\n                            ogArticleModifiedTime:\n                              type: string\n                            ogArticlePublishedTime:\n                              type: string\n                            ogArticlePublisher:\n                              type: string\n                            ogArticleSection:\n                              type: string\n                            ogArticleTag:\n                              type: string\n                            ogAudio:\n                              type: string\n                            ogAudioSecureURL:\n                              type: string\n                            ogAudioType:\n                              type: string\n                            ogAudioURL:\n                              type: string\n                            ogAvailability:\n                              type: string\n                            ogDate:\n                              type: string\n                            ogDescription:\n                              type: string\n                            ogDeterminer:\n                              type: string\n                            ogEpisode:\n                              type: string\n                            ogImage:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                  alt:\n                                    type: string\n                                required:\n                                - url\n                            ogLocale:\n                              type: string\n                            ogLocaleAlternate:\n                              type: string\n                            ogLogo:\n                              type: string\n                            ogMovie:\n                              type: string\n                            ogPriceAmount:\n                              type: string\n                            ogPriceCurrency:\n                              type: string\n                            ogProductAvailability:\n                              type: string\n                            ogProductCondition:\n                              type: string\n                            ogProductPriceAmount:\n                              type: string\n                            ogProductPriceCurrency:\n                              type: string\n                            ogProductRetailerItemId:\n                              type: string\n                            ogSiteName:\n                              type: string\n                            ogTitle:\n                              type: string\n                            ogType:\n                              type: string\n                            ogUrl:\n                              type: string\n                            ogVideo:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                required:\n                                - url\n                            ogVideoActor:\n                              type: string\n                            ogVideoActorId:\n                              type: string\n                            ogVideoActorRole:\n                              type: string\n                            ogVideoDirector:\n                              type: string\n                            ogVideoDuration:\n                              type: string\n                            ogVideoOther:\n                              type: string\n                            ogVideoReleaseDate:\n                              type: string\n                            ogVideoSecureURL:\n                              type: string\n                            ogVideoSeries:\n                              type: string\n                            ogVideoTag:\n                              type: string\n                            ogVideoTvShow:\n                              type: string\n                            ogVideoWriter:\n                              type: string\n                            ogWebsite:\n                              type: string\n                            updatedTime:\n                              type: string\n                        - type: object\n                          properties:\n                            oembed:\n                              oneOf:\n                              - allOf:\n                                - &id003\n                                  type: object\n                                  description: Basic data structure of every oembed\n                                    response see https://oembed.com/\n                                  required:\n                                  - type\n                                  - version\n                                  properties:\n                                    type:\n                                      type: string\n                                    version:\n                                      type:\n                                      - string\n                                      - 'null'\n                                    title:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A text title, describing the resource.", "mimetype": "text/plain", "start_char_idx": 7782, "end_char_idx": 17187, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1c03d3fb-8a0a-48c8-b739-f6c8fa79ffb8": {"__data__": {"id_": "1c03d3fb-8a0a-48c8-b739-f6c8fa79ffb8", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a3183841-210f-4f53-8d51-622c70d427e8", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "5bcd5a619ec5ea1b6c74ae9a30c7a8596b0ef24b8d3988b0746a4e1b61502174", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "62499b59-1527-48bb-ab88-a30670904f54", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "27d32e5d097d9dac7771409acd41ddc39f7f18d42d322aef392ad731bc407278", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1d11c0d2-fe91-45e0-baae-842c991571fb", "node_type": "1", "metadata": {}, "hash": "02bb5551c6319ad9c9e131ba050e77c2a58a5756c4a5f538be3d18d6c2b844c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the author/owner of\n                                        the resource.\n                                    author_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL for the author/owner of the\n                                        resource.\n                                    provider_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the resource provider.\n                                    provider_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The url of the resource provider.\n                                    cache_age:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The suggested cache lifetime for\n                                        this resource, in seconds. Consumers may choose\n                                        to use this value or not.\n                                    thumbnail_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL to a thumbnail image representing\n                                        the resource. The thumbnail must respect any\n                                        maxwidth and maxheight parameters. If this\n                                        parameter is present, thumbnail_width and\n                                        thumbnail_height must also be present.\n                                    thumbnail_width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_height must also be present.\n                                    thumbnail_height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_width must also be present.\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - rich\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to display the\n                                        resource. The HTML should have no padding\n                                        or margins. Consumers may wish to load the\n                                        HTML in an off-domain iframe to avoid XSS\n                                        vulnerabilities. The markup should be valid\n                                        XHTML 1.0 Basic.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - video\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to embed a video\n                                        player. The HTML should have no padding or\n                                        margins. Consumers may wish to load the HTML\n                                        in an off-domain iframe to avoid XSS vulnerabilities.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 17224, "end_char_idx": 25554, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1d11c0d2-fe91-45e0-baae-842c991571fb": {"__data__": {"id_": "1d11c0d2-fe91-45e0-baae-842c991571fb", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a3183841-210f-4f53-8d51-622c70d427e8", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "5bcd5a619ec5ea1b6c74ae9a30c7a8596b0ef24b8d3988b0746a4e1b61502174", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1c03d3fb-8a0a-48c8-b739-f6c8fa79ffb8", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "dae899bd3a875acc9bfb7fd1b52ed6a93fc031267ed79e942f2ab0c442b6410b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "78919c15-6bda-48d5-88e1-61157bc4b842", "node_type": "1", "metadata": {}, "hash": "4bf0e8989166b44509d34059a21981076b724bc3fd8b9c3a31d03109f5c8881a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - link\n                              discriminator:\n                                propertyName: type\n                                mapping:\n                                  rich: '#/components/schemas/OembedRichData'\n                                  video: '#/components/schemas/OembedVideoData'\n                                  photo: '#/components/schemas/OembedPhotoData'\n                                  link: '#/components/schemas/OembedLinkData'\n                      frame: &id010\n                        discriminator:\n                          propertyName: version\n                        oneOf:\n                        - description: Frame v1 object\n                          allOf:\n                          - &id004\n                            description: Frame base object used across all versions\n                            type: object\n                            required:\n                            - version\n                            - image\n                            - frames_url\n                            properties:\n                              version:\n                                type: string\n                                description: Version of the frame, 'next' for v2,\n                                  'vNext' for v1\n                              image:\n                                type: string\n                                description: URL of the image\n                              frames_url:\n                                type: string\n                                description: Launch URL of the frame\n                          - type: object\n                            properties:\n                              buttons:\n                                type: array\n                                items:\n                                  type: object\n                                  required:\n                                  - index\n                                  - action_type\n                                  properties:\n                                    title:\n                                      type: string\n                                      description: Title of the button\n                                    index:\n                                      type: integer\n                                      description: Index of the button\n                                    action_type:\n                                      type: string\n                                      description: The action type of a frame button.\n                                        Action types \"mint\" & \"link\" are to be handled\n                                        on the client side only and so they will produce\n                                        a no/op for POST /farcaster/frame/action.\n                                      enum:\n                                      - post\n                                      - post_redirect\n                                      - tx\n                                      - link\n                                      - mint\n                                    target:\n                                      type: string\n                                      description: Target of the button\n                                    post_url:\n                                      type: string\n                                      description: Used specifically for the tx action\n                                        type to post a successful transaction hash\n                              post_url:\n                                type: string\n                                description: Post URL to take an action on this frame\n                              title:\n                                type: string\n                              image_aspect_ratio:\n                                type: string\n                              input:\n                                type: object\n                                properties:\n                                  text:\n                                    type: string\n                                    description: Input text for the frame\n                              state:\n                                type: object\n                                properties:\n                                  serialized:\n                                    type: string\n                                    description: State for the frame in a serialized\n                                      format\n                        - description: Frame v2 object\n                          allOf:\n                          - *id004\n                          - type: object\n                            required:\n                            - title\n                            - name\n                            - icon\n                            properties:\n                              manifest:\n                                type: object\n                                properties:\n                                  account_association:\n                                    type: object\n                                    properties:\n                                      header:\n                                        type: string\n                                      payload:\n                                        type: string\n                                      signature:\n                                        type: string\n                                    required:\n                                    - header\n                                    - payload\n                                    - signature\n                                  frame:\n                                    type: object\n                                    properties:\n                                      version:\n                                        type: string\n                                        enum:\n                                        - 0.0.0\n                                        - 0.0.", "mimetype": "text/plain", "start_char_idx": 23861, "end_char_idx": 31954, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "78919c15-6bda-48d5-88e1-61157bc4b842": {"__data__": {"id_": "78919c15-6bda-48d5-88e1-61157bc4b842", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a3183841-210f-4f53-8d51-622c70d427e8", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "5bcd5a619ec5ea1b6c74ae9a30c7a8596b0ef24b8d3988b0746a4e1b61502174", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1d11c0d2-fe91-45e0-baae-842c991571fb", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f1b7d8c5099fd3a77986b8cb5ca2f5426d8ff89e68b683479ffea6bdd86dbc7e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7152baf1-bf93-47bd-b9c5-b38f1b765f58", "node_type": "1", "metadata": {}, "hash": "256dbc3a053302772e68551d3c8ed80cd3cc87d6cacee7a7b90bcf151cedcd80", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                        - 0.0.1\n                                        - '1'\n                                        - next\n                                      name:\n                                        type: string\n                                        maxLength: 32\n                                      home_url:\n                                        type: string\n                                        maxLength: 512\n                                      icon_url:\n                                        type: string\n                                        maxLength: 512\n                                      image_url:\n                                        type: string\n                                        maxLength: 512\n                                      button_title:\n                                        type: string\n                                        maxLength: 32\n                                      splash_image_url:\n                                        type: string\n                                        maxLength: 512\n                                      splash_background_color:\n                                        type: string\n                                      webhook_url:\n                                        type: string\n                                        maxLength: 512\n                                    required:\n                                    - version\n                                    - name\n                                    - home_url\n                                    - icon_url\n                                  triggers:\n                                    type: array\n                                    items:\n                                      oneOf:\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - cast\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - composer\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                required:\n                                - account_association\n                              author: &id005\n                                type: object\n                                required:\n                                - object\n                                - fid\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - user_dehydrated\n                                  fid: *id001\n                                  username:\n                                    type: string\n                                  display_name:\n                                    type: string\n                                  pfp_url:\n                                    type: string\n                        mapping:\n                          vNext: '#/components/schemas/FrameV1'\n                          next: '#/components/schemas/FrameV2'\n                          '1': '#/components/schemas/FrameV2'\n                          0.0.0: '#/components/schemas/FrameV2'\n                          0.0.1: '#/components/schemas/FrameV2'\n              - type: object\n                required:\n                - cast\n                properties:\n                  cast_id: &id008\n                    type: object\n                    required:\n                    - fid\n                    - hash\n                    properties:\n                      fid: *id001\n                      hash:\n                        type: string\n                  cast:\n                    type: object\n                    required:\n                    - hash\n                    - parent_hash\n                    - parent_url\n                    - root_parent_url\n                    - parent_author\n                    - author\n                    - text\n                    - timestamp\n                    - type\n                    - embeds\n                    - channel\n                    properties:\n                      hash:\n                        type: string\n                      parent_hash:\n                        type:\n                        - string\n                        - 'null'\n                      parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      root_parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      parent_author:\n                        type: object\n                        required:\n                        - fid\n                        properties:\n                          fid:\n                            oneOf:\n                            - type: 'null'\n                            - *id001\n                      author: *id005\n                      text:\n                        type: string\n                      timestamp: *id006\n                      type: &id009\n                        type: string\n                        enum:\n                        - cast-mention\n                        - cast-reply\n                        description: 'The notification type of a cast.\n\n                          '\n                      embeds:\n                        type: array\n                        items:\n                          oneOf:\n                          - *id007\n                          - type: object\n                            required:\n                            - cast\n                            properties:\n                              cast_id: *id008\n                              cast:\n                                type: object\n                                required:\n                                - object\n                                - hash\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - cast_dehydrated\n                                  hash:\n                                    type: string\n                                  author: *id005\n                      channel:\n                        oneOf:\n                        - type: 'null'\n                        - &id013\n                          type: object\n                          required:\n                          - id\n                          - name\n                          - object\n                          properties:\n                            id:\n                              type: string\n                            name:\n                              type: string\n                            object:\n                              type: string\n                              enum:\n                              - channel_dehydrated\n                            image_url:\n                              type: string\n                            viewer_context: &id012\n                              description: Adds context on the viewer's or author's\n                                role in the channel.", "mimetype": "text/plain", "start_char_idx": 31904, "end_char_idx": 40671, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7152baf1-bf93-47bd-b9c5-b38f1b765f58": {"__data__": {"id_": "7152baf1-bf93-47bd-b9c5-b38f1b765f58", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a3183841-210f-4f53-8d51-622c70d427e8", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "5bcd5a619ec5ea1b6c74ae9a30c7a8596b0ef24b8d3988b0746a4e1b61502174", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "78919c15-6bda-48d5-88e1-61157bc4b842", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f3d3343530d6a4b04747ce3a105baa32bbd80e8e3eb3e4341d7324fdc80b0ca3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                              required:\n                              - following\n                              properties:\n                                following:\n                                  description: Indicates if the user is following\n                                    the channel.\n                                  type: boolean\n                                role:\n                                  type: string\n                                  description: The role of a channel member\n                                  enum:\n                                  - member\n                                  - moderator\n          type: *id009\n      - type: object\n        required:\n        - reactions\n        - replies\n        - thread_hash\n        - mentioned_profiles\n        - channel\n        properties:\n          frames:\n            type: array\n            items: *id010\n          reactions:\n            type: object\n            required:\n            - likes\n            - recasts\n            - likes_count\n            - recasts_count\n            properties:\n              likes:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  properties:\n                    fid: *id001\n              recasts:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  - fname\n                  properties:\n                    fid: *id001\n                    fname:\n                      type: string\n              likes_count:\n                type: integer\n                format: int32\n              recasts_count:\n                type: integer\n                format: int32\n          replies:\n            type: object\n            required:\n            - count\n            properties:\n              count:\n                type: integer\n                format: int32\n          thread_hash:\n            type:\n            - string\n            - 'null'\n          mentioned_profiles:\n            type: array\n            items: *id011\n          channel:\n            oneOf:\n            - oneOf:\n              - type: object\n                required:\n                - id\n                - url\n                - object\n                properties:\n                  id:\n                    type: string\n                  url:\n                    type: string\n                  name:\n                    type: string\n                  description:\n                    type: string\n                  object:\n                    type: string\n                    enum:\n                    - channel\n                  created_at:\n                    description: Epoch timestamp in seconds.\n                    type: number\n                  follower_count:\n                    description: Number of followers the channel has.\n                    type: number\n                  external_link:\n                    type: object\n                    description: Channel's external link.\n                    properties:\n                      title:\n                        type: string\n                      url:\n                        type: string\n                  image_url:\n                    type: string\n                  parent_url:\n                    type: string\n                    format: uri\n                  lead: *id011\n                  moderator_fids:\n                    type: array\n                    items: *id001\n                  member_count:\n                    type: integer\n                    format: int32\n                  moderator: *id011\n                  pinned_cast_hash:\n                    type: string\n                    default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                    description: Cast Hash\n                  hosts:\n                    type: array\n                    deprecated: true\n                    items: *id011\n                  viewer_context: *id012\n              - *id013\n              discriminator:\n                propertyName: object\n                mapping:\n                  channel: '#/components/schemas/Channel'\n                  dehydrated_channel: '#/components/schemas/DehydratedChannel'\n            - type: 'null'\n          viewer_context:\n            type: object\n            description: Adds context on interactions the viewer has made with the\n              cast.\n            required:\n            - liked\n            - recasted\n            properties:\n              liked:\n                description: Indicates if the viewer liked the cast.\n                type: boolean\n              recasted:\n                description: Indicates if the viewer recasted the cast.\n                type: boolean\n          author_channel_context: *id012\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 40702, "end_char_idx": 45711, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7a802e83-37fd-4af4-a2b7-2ad07a0fd043": {"__data__": {"id_": "7a802e83-37fd-4af4-a2b7-2ad07a0fd043", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-follow-suggestions.md", "file_name": "neynar_fetch-follow-suggestions.md", "file_type": "text/markdown", "file_size": 5668, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "951c8c62-f569-456f-aa6b-9a389d6d4772", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-follow-suggestions.md", "file_name": "neynar_fetch-follow-suggestions.md", "file_type": "text/markdown", "file_size": 5668, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "819747f1039d3d8fba7c122de0199c55c7d08ecd90b2c0eab58e1a974f2b6d1c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cf6c7ba7-892c-4638-aad2-e4348ff14639", "node_type": "1", "metadata": {}, "hash": "29c2991ce65ad25d30a51b153b3a7546f709e524636f4813ed06b4f33eee85f2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-follow-suggestions\n\n**Endpoint**: `GET /farcaster/following/suggested`\n\n## Description\nFetch a list of suggested users to follow. Used to help users discover new users to follow\n\n## Parameters\n- `fid` (query): FID of the user whose following you want to fetch.\n- `viewer_fid` (query): Providing this will return a list of users that respects this user's mutes and blocks and includes `viewer_context`.\n- `limit` (query): Number of results to fetch\n\n## Response\n```yaml\ntype: object\nrequired:\n- users\n- next\nproperties:\n  users:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - fid\n      - custody_address\n      - username\n      - profile\n      - follower_count\n      - following_count\n      - verifications\n      - verified_addresses\n      - verified_accounts\n      - power_badge\n      properties:\n        object:\n          type: string\n          enum:\n          - user\n        fid:\n          type: integer\n          format: int32\n          description: The unique identifier of a farcaster user (unsigned integer)\n          examples:\n          - 3\n          - 191\n          - 2\n          - 194\n          - 19960\n        username:\n          type: string\n        display_name:\n          type: string\n        custody_address: &id001\n          type: string\n          pattern: ^0x[a-fA-F0-9]{40}$\n          description: Ethereum address\n        pfp_url:\n          type: string\n          description: The URL of the user's profile picture\n        profile:\n          type: object\n          required:\n          - bio\n          properties:\n            bio:\n              type: object\n              required:\n              - text\n              - mentioned_profiles\n              properties:\n                text:\n                  type: string\n                mentioned_profiles:\n                  type: array\n                  items:\n                    type: string\n                  default: []\n            location:\n              description: Coordinates and place names for a location\n              type: object\n              required:\n              - latitude\n              - longitude\n              properties:\n                latitude:\n                  type: number\n                  format: double\n                  minimum: -90\n                  maximum: 90\n                longitude:\n                  type: number\n                  format: double\n                  minimum: -180\n                  maximum: 180\n                address:\n                  type: object\n                  required:\n                  - city\n                  - country\n                  properties:\n                    city:\n                      type: string\n                    state:\n                      type: string\n                    state_code:\n                      type: string\n                    country:\n                      type: string\n                    country_code:\n                      type: string\n        follower_count:\n          type: integer\n          format: int32\n          description: The number of followers the user has.\n        following_count:\n          type: integer\n          format: int32\n          description: The number of users the user is following.\n        verifications:\n          type: array\n          items: *id001\n        verified_addresses:\n          type: object\n          required:\n          - eth_addresses\n          - sol_addresses\n          properties:\n            eth_addresses:\n              type: array\n              description: List of verified Ethereum addresses of the user sorted\n                by oldest to most recent.\n              items: *id001\n            sol_addresses:\n              type: array\n              description: List of verified Solana addresses of the user sorted by\n                oldest to most recent.\n              items:\n                type: string\n                pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                description: Solana address\n        verified_accounts:\n          type: array\n          description: Verified accounts of the user on other platforms, currently\n            only X is supported.\n          items:\n            type: object\n            properties:\n              platform:\n                type: string\n                enum:\n                - x\n                - github\n              username:\n                type: string\n        power_badge:\n          type: boolean\n        experimental:\n          type: object\n          required:\n          - neynar_user_score\n          properties:\n            neynar_user_score:\n              type: number\n              format: double\n              description: Score that represents the probability that the account\n                is not spam.\n        viewer_context:\n          type: object\n          description: Adds context on the viewer's follow relationship with the user.\n          required:\n          - following\n          - followed_by\n          - blocking\n          - blocked_by\n          properties:\n            following:\n              description: Indicates if the viewer is following the user.\n              type: boolean\n            followed_by:\n              description: Indicates if the viewer is followed by the user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5218, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cf6c7ba7-892c-4638-aad2-e4348ff14639": {"__data__": {"id_": "cf6c7ba7-892c-4638-aad2-e4348ff14639", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-follow-suggestions.md", "file_name": "neynar_fetch-follow-suggestions.md", "file_type": "text/markdown", "file_size": 5668, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "951c8c62-f569-456f-aa6b-9a389d6d4772", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-follow-suggestions.md", "file_name": "neynar_fetch-follow-suggestions.md", "file_type": "text/markdown", "file_size": 5668, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "819747f1039d3d8fba7c122de0199c55c7d08ecd90b2c0eab58e1a974f2b6d1c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7a802e83-37fd-4af4-a2b7-2ad07a0fd043", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-follow-suggestions.md", "file_name": "neynar_fetch-follow-suggestions.md", "file_type": "text/markdown", "file_size": 5668, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "6c55510769a90966302e7165bf81adfc9a1b951b9c3e7e81358e14c67ec17f47", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n            type: object\n            properties:\n              platform:\n                type: string\n                enum:\n                - x\n                - github\n              username:\n                type: string\n        power_badge:\n          type: boolean\n        experimental:\n          type: object\n          required:\n          - neynar_user_score\n          properties:\n            neynar_user_score:\n              type: number\n              format: double\n              description: Score that represents the probability that the account\n                is not spam.\n        viewer_context:\n          type: object\n          description: Adds context on the viewer's follow relationship with the user.\n          required:\n          - following\n          - followed_by\n          - blocking\n          - blocked_by\n          properties:\n            following:\n              description: Indicates if the viewer is following the user.\n              type: boolean\n            followed_by:\n              description: Indicates if the viewer is followed by the user.\n              type: boolean\n            blocking:\n              description: Indicates if the viewer is blocking the user.\n              type: boolean\n            blocked_by:\n              description: Indicates if the viewer is blocked by the user.\n              type: boolean\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4138, "end_char_idx": 5667, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0de69666-2062-461c-911e-ce861af7abd0": {"__data__": {"id_": "0de69666-2062-461c-911e-ce861af7abd0", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-followers-for-a-channel.md", "file_name": "neynar_fetch-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 5712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0c3d6bce-267c-49a7-8e62-749aa5ac90cd", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-followers-for-a-channel.md", "file_name": "neynar_fetch-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 5712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "b4f8b01d7f79d15a323ea1a2b16d3e9e489dbdbdaae33d78debec6d90faf9f03", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4e4f541d-d517-4658-bacd-b6ac4af9bf20", "node_type": "1", "metadata": {}, "hash": "29c2991ce65ad25d30a51b153b3a7546f709e524636f4813ed06b4f33eee85f2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-followers-for-a-channel\n\n**Endpoint**: `GET /farcaster/channel/followers`\n\n## Description\nReturns a list of followers for a specific channel. Max limit is 1000. Use cursor for pagination.\n\n## Parameters\n- `id` (query): Channel ID for the channel being queried\n- `viewer_fid` (query): Providing this will return a list of followers that respects this user's mutes and blocks and includes `viewer_context`.\n- `cursor` (query): Pagination cursor.\n- `limit` (query): Number of followers to fetch\n\n## Response\n```yaml\ntype: object\nrequired:\n- users\n- next\nproperties:\n  users:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - fid\n      - custody_address\n      - username\n      - profile\n      - follower_count\n      - following_count\n      - verifications\n      - verified_addresses\n      - verified_accounts\n      - power_badge\n      properties:\n        object:\n          type: string\n          enum:\n          - user\n        fid:\n          type: integer\n          format: int32\n          description: The unique identifier of a farcaster user (unsigned integer)\n          examples:\n          - 3\n          - 191\n          - 2\n          - 194\n          - 19960\n        username:\n          type: string\n        display_name:\n          type: string\n        custody_address: &id001\n          type: string\n          pattern: ^0x[a-fA-F0-9]{40}$\n          description: Ethereum address\n        pfp_url:\n          type: string\n          description: The URL of the user's profile picture\n        profile:\n          type: object\n          required:\n          - bio\n          properties:\n            bio:\n              type: object\n              required:\n              - text\n              - mentioned_profiles\n              properties:\n                text:\n                  type: string\n                mentioned_profiles:\n                  type: array\n                  items:\n                    type: string\n                  default: []\n            location:\n              description: Coordinates and place names for a location\n              type: object\n              required:\n              - latitude\n              - longitude\n              properties:\n                latitude:\n                  type: number\n                  format: double\n                  minimum: -90\n                  maximum: 90\n                longitude:\n                  type: number\n                  format: double\n                  minimum: -180\n                  maximum: 180\n                address:\n                  type: object\n                  required:\n                  - city\n                  - country\n                  properties:\n                    city:\n                      type: string\n                    state:\n                      type: string\n                    state_code:\n                      type: string\n                    country:\n                      type: string\n                    country_code:\n                      type: string\n        follower_count:\n          type: integer\n          format: int32\n          description: The number of followers the user has.\n        following_count:\n          type: integer\n          format: int32\n          description: The number of users the user is following.\n        verifications:\n          type: array\n          items: *id001\n        verified_addresses:\n          type: object\n          required:\n          - eth_addresses\n          - sol_addresses\n          properties:\n            eth_addresses:\n              type: array\n              description: List of verified Ethereum addresses of the user sorted\n                by oldest to most recent.\n              items: *id001\n            sol_addresses:\n              type: array\n              description: List of verified Solana addresses of the user sorted by\n                oldest to most recent.\n              items:\n                type: string\n                pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                description: Solana address\n        verified_accounts:\n          type: array\n          description: Verified accounts of the user on other platforms, currently\n            only X is supported.\n          items:\n            type: object\n            properties:\n              platform:\n                type: string\n                enum:\n                - x\n                - github\n              username:\n                type: string\n        power_badge:\n          type: boolean\n        experimental:\n          type: object\n          required:\n          - neynar_user_score\n          properties:\n            neynar_user_score:\n              type: number\n              format: double\n              description: Score that represents the probability that the account\n                is not spam.\n        viewer_context:\n          type: object\n          description: Adds context on the viewer's follow relationship with the user.\n          required:\n          - following\n          - followed_by\n          - blocking\n          - blocked_by\n          properties:\n            following:\n              description: Indicates if the viewer is following the user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5133, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4e4f541d-d517-4658-bacd-b6ac4af9bf20": {"__data__": {"id_": "4e4f541d-d517-4658-bacd-b6ac4af9bf20", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-followers-for-a-channel.md", "file_name": "neynar_fetch-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 5712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0c3d6bce-267c-49a7-8e62-749aa5ac90cd", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-followers-for-a-channel.md", "file_name": "neynar_fetch-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 5712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "b4f8b01d7f79d15a323ea1a2b16d3e9e489dbdbdaae33d78debec6d90faf9f03", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0de69666-2062-461c-911e-ce861af7abd0", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-followers-for-a-channel.md", "file_name": "neynar_fetch-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 5712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "9aa37298e1281e76570f9fb2fb9294687a5b10763b806301b967b649ae313add", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n            type: object\n            properties:\n              platform:\n                type: string\n                enum:\n                - x\n                - github\n              username:\n                type: string\n        power_badge:\n          type: boolean\n        experimental:\n          type: object\n          required:\n          - neynar_user_score\n          properties:\n            neynar_user_score:\n              type: number\n              format: double\n              description: Score that represents the probability that the account\n                is not spam.\n        viewer_context:\n          type: object\n          description: Adds context on the viewer's follow relationship with the user.\n          required:\n          - following\n          - followed_by\n          - blocking\n          - blocked_by\n          properties:\n            following:\n              description: Indicates if the viewer is following the user.\n              type: boolean\n            followed_by:\n              description: Indicates if the viewer is followed by the user.\n              type: boolean\n            blocking:\n              description: Indicates if the viewer is blocking the user.\n              type: boolean\n            blocked_by:\n              description: Indicates if the viewer is blocked by the user.\n              type: boolean\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4182, "end_char_idx": 5711, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3ba8e832-448f-4c20-b001-0e211dd30d98": {"__data__": {"id_": "3ba8e832-448f-4c20-b001-0e211dd30d98", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frame-catalog.md", "file_name": "neynar_fetch-frame-catalog.md", "file_type": "text/markdown", "file_size": 4732, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f3675b9c-2725-43d9-855c-9d80f9896275", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frame-catalog.md", "file_name": "neynar_fetch-frame-catalog.md", "file_type": "text/markdown", "file_size": 4732, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "45e27a36dc612fb311f21924dd794a0cd21b4aec0b494e25ef63b2e1024e8d76", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-frame-catalog\n\n**Endpoint**: `GET /farcaster/frame/catalog`\n\n## Description\nA curated list of featured frames\n\n## Parameters\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor\n\n## Response\n```yaml\ntype: object\nrequired:\n- frames\n- next\nproperties:\n  frames:\n    type: array\n    items:\n      description: Frame v2 object\n      allOf:\n      - description: Frame base object used across all versions\n        type: object\n        required:\n        - version\n        - image\n        - frames_url\n        properties:\n          version:\n            type: string\n            description: Version of the frame, 'next' for v2, 'vNext' for v1\n          image:\n            type: string\n            description: URL of the image\n          frames_url:\n            type: string\n            description: Launch URL of the frame\n      - type: object\n        required:\n        - title\n        - name\n        - icon\n        properties:\n          manifest:\n            type: object\n            properties:\n              account_association:\n                type: object\n                properties:\n                  header:\n                    type: string\n                  payload:\n                    type: string\n                  signature:\n                    type: string\n                required:\n                - header\n                - payload\n                - signature\n              frame:\n                type: object\n                properties:\n                  version:\n                    type: string\n                    enum:\n                    - 0.0.0\n                    - 0.0.1\n                    - '1'\n                    - next\n                  name:\n                    type: string\n                    maxLength: 32\n                  home_url:\n                    type: string\n                    maxLength: 512\n                  icon_url:\n                    type: string\n                    maxLength: 512\n                  image_url:\n                    type: string\n                    maxLength: 512\n                  button_title:\n                    type: string\n                    maxLength: 32\n                  splash_image_url:\n                    type: string\n                    maxLength: 512\n                  splash_background_color:\n                    type: string\n                  webhook_url:\n                    type: string\n                    maxLength: 512\n                required:\n                - version\n                - name\n                - home_url\n                - icon_url\n              triggers:\n                type: array\n                items:\n                  oneOf:\n                  - type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                        - cast\n                      id:\n                        type: string\n                      url:\n                        type: string\n                        maxLength: 512\n                      name:\n                        type: string\n                        maxLength: 32\n                    required:\n                    - type\n                    - id\n                    - url\n                  - type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                        - composer\n                      id:\n                        type: string\n                      url:\n                        type: string\n                        maxLength: 512\n                      name:\n                        type: string\n                        maxLength: 32\n                    required:\n                    - type\n                    - id\n                    - url\n            required:\n            - account_association\n          author:\n            type: object\n            required:\n            - object\n            - fid\n            properties:\n              object:\n                type: string\n                enum:\n                - user_dehydrated\n              fid:\n                type: integer\n                format: int32\n                description: The unique identifier of a farcaster user (unsigned integer)\n                examples:\n                - 3\n                - 191\n                - 2\n                - 194\n                - 19960\n              username:\n                type: string\n              display_name:\n                type: string\n              pfp_url:\n                type: string\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4731, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a437ffd2-be26-4d04-8ec7-fd1071eed8be": {"__data__": {"id_": "a437ffd2-be26-4d04-8ec7-fd1071eed8be", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frame-meta-tags-from-url.md", "file_name": "neynar_fetch-frame-meta-tags-from-url.md", "file_type": "text/markdown", "file_size": 6687, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "74793ae7-2e0b-43e1-b2e0-c974182ddee6", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frame-meta-tags-from-url.md", "file_name": "neynar_fetch-frame-meta-tags-from-url.md", "file_type": "text/markdown", "file_size": 6687, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "cb4b0b8f349201e7d57ada650ce2ebc8ce256f1102833c3bc020560cf5a4828a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "379407c6-a95a-423d-94ae-997617e7e21f", "node_type": "1", "metadata": {}, "hash": "c877ac719303fa8649af6acc6f58e2b1102709568bc25e15c07d7497fab9b622", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-frame-meta-tags-from-url\n\n**Endpoint**: `GET /farcaster/frame/crawl`\n\n## Description\nFetches the frame meta tags from the URL\n\n## Parameters\n- `url` (query): The frame URL to crawl\n\n## Response\n```yaml\ntype: object\ndescription: The frame object containing the meta tags\nrequired:\n- frame\nproperties:\n  frame:\n    discriminator:\n      propertyName: version\n    oneOf:\n    - description: Frame v1 object\n      allOf:\n      - &id001\n        description: Frame base object used across all versions\n        type: object\n        required:\n        - version\n        - image\n        - frames_url\n        properties:\n          version:\n            type: string\n            description: Version of the frame, 'next' for v2, 'vNext' for v1\n          image:\n            type: string\n            description: URL of the image\n          frames_url:\n            type: string\n            description: Launch URL of the frame\n      - type: object\n        properties:\n          buttons:\n            type: array\n            items:\n              type: object\n              required:\n              - index\n              - action_type\n              properties:\n                title:\n                  type: string\n                  description: Title of the button\n                index:\n                  type: integer\n                  description: Index of the button\n                action_type:\n                  type: string\n                  description: The action type of a frame button. Action types \"mint\"\n                    & \"link\" are to be handled on the client side only and so they\n                    will produce a no/op for POST /farcaster/frame/action.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1661, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "379407c6-a95a-423d-94ae-997617e7e21f": {"__data__": {"id_": "379407c6-a95a-423d-94ae-997617e7e21f", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frame-meta-tags-from-url.md", "file_name": "neynar_fetch-frame-meta-tags-from-url.md", "file_type": "text/markdown", "file_size": 6687, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "74793ae7-2e0b-43e1-b2e0-c974182ddee6", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frame-meta-tags-from-url.md", "file_name": "neynar_fetch-frame-meta-tags-from-url.md", "file_type": "text/markdown", "file_size": 6687, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "cb4b0b8f349201e7d57ada650ce2ebc8ce256f1102833c3bc020560cf5a4828a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a437ffd2-be26-4d04-8ec7-fd1071eed8be", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frame-meta-tags-from-url.md", "file_name": "neynar_fetch-frame-meta-tags-from-url.md", "file_type": "text/markdown", "file_size": 6687, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "9c8224502dcfb25fd8c07378f54fc9dd21f12a1e18b467050df92e68fdbb9db5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Action types \"mint\"\n                    & \"link\" are to be handled on the client side only and so they\n                    will produce a no/op for POST /farcaster/frame/action.\n                  enum:\n                  - post\n                  - post_redirect\n                  - tx\n                  - link\n                  - mint\n                target:\n                  type: string\n                  description: Target of the button\n                post_url:\n                  type: string\n                  description: Used specifically for the tx action type to post a\n                    successful transaction hash\n          post_url:\n            type: string\n            description: Post URL to take an action on this frame\n          title:\n            type: string\n          image_aspect_ratio:\n            type: string\n          input:\n            type: object\n            properties:\n              text:\n                type: string\n                description: Input text for the frame\n          state:\n            type: object\n            properties:\n              serialized:\n                type: string\n                description: State for the frame in a serialized format\n    - description: Frame v2 object\n      allOf:\n      - *id001\n      - type: object\n        required:\n        - title\n        - name\n        - icon\n        properties:\n          manifest:\n            type: object\n            properties:\n              account_association:\n                type: object\n                properties:\n                  header:\n                    type: string\n                  payload:\n                    type: string\n                  signature:\n                    type: string\n                required:\n                - header\n                - payload\n                - signature\n              frame:\n                type: object\n                properties:\n                  version:\n                    type: string\n                    enum:\n                    - 0.0.0\n                    - 0.0.1\n                    - '1'\n                    - next\n                  name:\n                    type: string\n                    maxLength: 32\n                  home_url:\n                    type: string\n                    maxLength: 512\n                  icon_url:\n                    type: string\n                    maxLength: 512\n                  image_url:\n                    type: string\n                    maxLength: 512\n                  button_title:\n                    type: string\n                    maxLength: 32\n                  splash_image_url:\n                    type: string\n                    maxLength: 512\n                  splash_background_color:\n                    type: string\n                  webhook_url:\n                    type: string\n                    maxLength: 512\n                required:\n                - version\n                - name\n                - home_url\n                - icon_url\n              triggers:\n                type: array\n                items:\n                  oneOf:\n                  - type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                        - cast\n                      id:\n                        type: string\n                      url:\n                        type: string\n                        maxLength: 512\n                      name:\n                        type: string\n                        maxLength: 32\n                    required:\n                    - type\n                    - id\n                    - url\n                  - type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                        - composer\n                      id:\n                        type: string\n                      url:\n                        type: string\n                        maxLength: 512\n                      name:\n                        type: string\n                        maxLength: 32\n                    required:\n                    - type\n                    - id\n                    - url\n            required:\n            - account_association\n          author:\n            type: object\n            required:\n            - object\n            - fid\n            properties:\n              object:\n                type: string\n                enum:\n                - user_dehydrated\n              fid:\n                type: integer\n                format: int32\n                description: The unique identifier of a farcaster user (unsigned integer)\n                examples:\n                - 3\n                - 191\n                - 2\n                - 194\n                - 19960\n              username:\n                type: string\n              display_name:\n                type: string\n              pfp_url:\n                type: string\n    mapping:\n      vNext: '#/components/schemas/FrameV1'\n      next: '#/components/schemas/FrameV2'\n      '1': '#/components/schemas/FrameV2'\n      0.0.0: '#/components/schemas/FrameV2'\n      0.0.1: '#/components/schemas/FrameV2'\n```", "mimetype": "text/plain", "start_char_idx": 1484, "end_char_idx": 6686, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7abc76c3-0547-426d-81e4-070382b2136f": {"__data__": {"id_": "7abc76c3-0547-426d-81e4-070382b2136f", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "babf25b7-4762-43b1-bd99-bed26c60a2a7", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "7650a3268912e139f8b9d679d1cb33de81ac932f35e602989a77dc8896f420cc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f6fa5e93-ed80-424c-9360-48168fecaaf1", "node_type": "1", "metadata": {}, "hash": "5c551bf9b8e2c35fcc1cf384c95add49f00a3fc4b2edf11f1bfe16e591afba28", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-frames-only-feed\n\n**Endpoint**: `GET /farcaster/feed/frames`\n\n## Description\nFetch feed of casts with Frames, reverse chronological order\n\n## Parameters\n- `limit` (query): Number of results to fetch\n- `viewer_fid` (query): Providing this will return a feed that respects this user's mutes and blocks and includes `viewer_context`.\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- casts\n- next\nproperties:\n  casts:\n    type: array\n    items:\n      allOf:\n      - type: object\n        required:\n        - hash\n        - parent_hash\n        - parent_url\n        - root_parent_url\n        - parent_author\n        - author\n        - text\n        - timestamp\n        - embeds\n        properties:\n          hash:\n            type: string\n          parent_hash:\n            type:\n            - string\n            - 'null'\n          parent_url:\n            type:\n            - string\n            - 'null'\n          root_parent_url:\n            type:\n            - string\n            - 'null'\n          parent_author:\n            type: object\n            required:\n            - fid\n            properties:\n              fid:\n                oneOf:\n                - type: 'null'\n                - &id001\n                  type: integer\n                  format: int32\n                  description: The unique identifier of a farcaster user (unsigned\n                    integer)\n                  examples:\n                  - 3\n                  - 191\n                  - 2\n                  - 194\n                  - 19960\n          author: &id011\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: *id001\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id002\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5617, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f6fa5e93-ed80-424c-9360-48168fecaaf1": {"__data__": {"id_": "f6fa5e93-ed80-424c-9360-48168fecaaf1", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "babf25b7-4762-43b1-bd99-bed26c60a2a7", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "7650a3268912e139f8b9d679d1cb33de81ac932f35e602989a77dc8896f420cc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7abc76c3-0547-426d-81e4-070382b2136f", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "119fe29ae0f41f3a774c3b4aad1526daaeaec4e2bcb0f7e57e7998cef4535bda", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aa87b83f-cc16-449f-8705-ada919bcbc60", "node_type": "1", "metadata": {}, "hash": "fe0df8fb809538d41413faf06c0a270674cb9253987f2f1009b522ab38419e14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 4568, "end_char_idx": 7228, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aa87b83f-cc16-449f-8705-ada919bcbc60": {"__data__": {"id_": "aa87b83f-cc16-449f-8705-ada919bcbc60", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "babf25b7-4762-43b1-bd99-bed26c60a2a7", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "7650a3268912e139f8b9d679d1cb33de81ac932f35e602989a77dc8896f420cc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f6fa5e93-ed80-424c-9360-48168fecaaf1", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "703f53db88fef82cbd73c3e4893dc254a8fb355705a7998d5608d2dab7ed9966", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "50b138c5-750f-4197-bc0e-44c514f5cc33", "node_type": "1", "metadata": {}, "hash": "7693468d1bce4d6458a0c00eb5858d0c52e0d3acfd9f809418886132f3cd260d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          text:\n            type: string\n          timestamp: &id006\n            type: string\n            format: date-time\n          embeds:\n            type: array\n            items:\n              oneOf:\n              - &id007\n                type: object\n                required:\n                - url\n                properties:\n                  url:\n                    type: string\n                  metadata:\n                    type: object\n                    required:\n                    - _status\n                    properties:\n                      _status:\n                        type: string\n                      content_type:\n                        type:\n                        - string\n                        - 'null'\n                      content_length:\n                        type:\n                        - integer\n                        - 'null'\n                      image:\n                        type: object\n                        properties:\n                          height_px:\n                            type: integer\n                          width_px:\n                            type: integer\n                      video:\n                        type: object\n                        properties:\n                          duration_s:\n                            type: number\n                          stream:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                codec_name:\n                                  type: string\n                                height_px:\n                                  type: integer\n                                width_px:\n                                  type: integer\n                      html:\n                        allOf:\n                        - type: object\n                          properties:\n                            favicon:\n                              type: string\n                            modifiedTime:\n                              type: string\n                            ogArticleAuthor:\n                              type: string\n                            ogArticleExpirationTime:\n                              type: string\n                            ogArticleModifiedTime:\n                              type: string\n                            ogArticlePublishedTime:\n                              type: string\n                            ogArticlePublisher:\n                              type: string\n                            ogArticleSection:\n                              type: string\n                            ogArticleTag:\n                              type: string\n                            ogAudio:\n                              type: string\n                            ogAudioSecureURL:\n                              type: string\n                            ogAudioType:\n                              type: string\n                            ogAudioURL:\n                              type: string\n                            ogAvailability:\n                              type: string\n                            ogDate:\n                              type: string\n                            ogDescription:\n                              type: string\n                            ogDeterminer:\n                              type: string\n                            ogEpisode:\n                              type: string\n                            ogImage:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                  alt:\n                                    type: string\n                                required:\n                                - url\n                            ogLocale:\n                              type: string\n                            ogLocaleAlternate:\n                              type: string\n                            ogLogo:\n                              type: string\n                            ogMovie:\n                              type: string\n                            ogPriceAmount:\n                              type: string\n                            ogPriceCurrency:\n                              type: string\n                            ogProductAvailability:\n                              type: string\n                            ogProductCondition:\n                              type: string\n                            ogProductPriceAmount:\n                              type: string\n                            ogProductPriceCurrency:\n                              type: string\n                            ogProductRetailerItemId:\n                              type: string\n                            ogSiteName:\n                              type: string\n                            ogTitle:\n                              type: string\n                            ogType:\n                              type: string\n                            ogUrl:\n                              type: string\n                            ogVideo:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                required:\n                                - url\n                            ogVideoActor:\n                              type: string\n                            ogVideoActorId:\n                              type: string\n                            ogVideoActorRole:\n                              type: string\n                            ogVideoDirector:\n                              type: string\n                            ogVideoDuration:\n                              type: string\n                            ogVideoOther:\n                              type: string\n                            ogVideoReleaseDate:\n                              type: string\n                            ogVideoSecureURL:\n                              type: string\n                            ogVideoSeries:\n                              type: string\n                            ogVideoTag:\n                              type: string\n                            ogVideoTvShow:\n                              type: string\n                            ogVideoWriter:\n                              type: string\n                            ogWebsite:\n                              type: string\n                            updatedTime:\n                              type: string\n                        - type: object\n                          properties:\n                            oembed:\n                              oneOf:\n                              - allOf:\n                                - &id003\n                                  type: object\n                                  description: Basic data structure of every oembed\n                                    response see https://oembed.com/\n                                  required:\n                                  - type\n                                  - version\n                                  properties:\n                                    type:\n                                      type: string\n                                    version:\n                                      type:\n                                      - string\n                                      - 'null'\n                                    title:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A text title, describing the resource.", "mimetype": "text/plain", "start_char_idx": 6363, "end_char_idx": 15768, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "50b138c5-750f-4197-bc0e-44c514f5cc33": {"__data__": {"id_": "50b138c5-750f-4197-bc0e-44c514f5cc33", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "babf25b7-4762-43b1-bd99-bed26c60a2a7", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "7650a3268912e139f8b9d679d1cb33de81ac932f35e602989a77dc8896f420cc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aa87b83f-cc16-449f-8705-ada919bcbc60", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "b12986088ad966661941e8774b4fcdd231b7da8fe1c7e5511eadc9d8ef2c8eb6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f721d90e-0076-4b6e-82d9-67dfbddc946a", "node_type": "1", "metadata": {}, "hash": "02bb5551c6319ad9c9e131ba050e77c2a58a5756c4a5f538be3d18d6c2b844c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the author/owner of\n                                        the resource.\n                                    author_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL for the author/owner of the\n                                        resource.\n                                    provider_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the resource provider.\n                                    provider_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The url of the resource provider.\n                                    cache_age:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The suggested cache lifetime for\n                                        this resource, in seconds. Consumers may choose\n                                        to use this value or not.\n                                    thumbnail_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL to a thumbnail image representing\n                                        the resource. The thumbnail must respect any\n                                        maxwidth and maxheight parameters. If this\n                                        parameter is present, thumbnail_width and\n                                        thumbnail_height must also be present.\n                                    thumbnail_width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_height must also be present.\n                                    thumbnail_height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_width must also be present.\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - rich\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to display the\n                                        resource. The HTML should have no padding\n                                        or margins. Consumers may wish to load the\n                                        HTML in an off-domain iframe to avoid XSS\n                                        vulnerabilities. The markup should be valid\n                                        XHTML 1.0 Basic.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - video\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to embed a video\n                                        player. The HTML should have no padding or\n                                        margins. Consumers may wish to load the HTML\n                                        in an off-domain iframe to avoid XSS vulnerabilities.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 15805, "end_char_idx": 24135, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f721d90e-0076-4b6e-82d9-67dfbddc946a": {"__data__": {"id_": "f721d90e-0076-4b6e-82d9-67dfbddc946a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "babf25b7-4762-43b1-bd99-bed26c60a2a7", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "7650a3268912e139f8b9d679d1cb33de81ac932f35e602989a77dc8896f420cc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "50b138c5-750f-4197-bc0e-44c514f5cc33", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "76d932703b4525a033bfb9c9bd74f8c35dff57350b4223966c8d52fb115a2bf4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5a2a1814-03d0-47d1-b27e-cda715accedd", "node_type": "1", "metadata": {}, "hash": "4bf0e8989166b44509d34059a21981076b724bc3fd8b9c3a31d03109f5c8881a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - link\n                              discriminator:\n                                propertyName: type\n                                mapping:\n                                  rich: '#/components/schemas/OembedRichData'\n                                  video: '#/components/schemas/OembedVideoData'\n                                  photo: '#/components/schemas/OembedPhotoData'\n                                  link: '#/components/schemas/OembedLinkData'\n                      frame: &id010\n                        discriminator:\n                          propertyName: version\n                        oneOf:\n                        - description: Frame v1 object\n                          allOf:\n                          - &id004\n                            description: Frame base object used across all versions\n                            type: object\n                            required:\n                            - version\n                            - image\n                            - frames_url\n                            properties:\n                              version:\n                                type: string\n                                description: Version of the frame, 'next' for v2,\n                                  'vNext' for v1\n                              image:\n                                type: string\n                                description: URL of the image\n                              frames_url:\n                                type: string\n                                description: Launch URL of the frame\n                          - type: object\n                            properties:\n                              buttons:\n                                type: array\n                                items:\n                                  type: object\n                                  required:\n                                  - index\n                                  - action_type\n                                  properties:\n                                    title:\n                                      type: string\n                                      description: Title of the button\n                                    index:\n                                      type: integer\n                                      description: Index of the button\n                                    action_type:\n                                      type: string\n                                      description: The action type of a frame button.\n                                        Action types \"mint\" & \"link\" are to be handled\n                                        on the client side only and so they will produce\n                                        a no/op for POST /farcaster/frame/action.\n                                      enum:\n                                      - post\n                                      - post_redirect\n                                      - tx\n                                      - link\n                                      - mint\n                                    target:\n                                      type: string\n                                      description: Target of the button\n                                    post_url:\n                                      type: string\n                                      description: Used specifically for the tx action\n                                        type to post a successful transaction hash\n                              post_url:\n                                type: string\n                                description: Post URL to take an action on this frame\n                              title:\n                                type: string\n                              image_aspect_ratio:\n                                type: string\n                              input:\n                                type: object\n                                properties:\n                                  text:\n                                    type: string\n                                    description: Input text for the frame\n                              state:\n                                type: object\n                                properties:\n                                  serialized:\n                                    type: string\n                                    description: State for the frame in a serialized\n                                      format\n                        - description: Frame v2 object\n                          allOf:\n                          - *id004\n                          - type: object\n                            required:\n                            - title\n                            - name\n                            - icon\n                            properties:\n                              manifest:\n                                type: object\n                                properties:\n                                  account_association:\n                                    type: object\n                                    properties:\n                                      header:\n                                        type: string\n                                      payload:\n                                        type: string\n                                      signature:\n                                        type: string\n                                    required:\n                                    - header\n                                    - payload\n                                    - signature\n                                  frame:\n                                    type: object\n                                    properties:\n                                      version:\n                                        type: string\n                                        enum:\n                                        - 0.0.0\n                                        - 0.0.", "mimetype": "text/plain", "start_char_idx": 22442, "end_char_idx": 30535, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5a2a1814-03d0-47d1-b27e-cda715accedd": {"__data__": {"id_": "5a2a1814-03d0-47d1-b27e-cda715accedd", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "babf25b7-4762-43b1-bd99-bed26c60a2a7", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "7650a3268912e139f8b9d679d1cb33de81ac932f35e602989a77dc8896f420cc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f721d90e-0076-4b6e-82d9-67dfbddc946a", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d6cae6d091e85bef8e9188d69b2ab7f635f3d8956a7dc0379533fdad579dc772", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7ec88278-81e1-43ba-be69-0a37ec887a0f", "node_type": "1", "metadata": {}, "hash": "256dbc3a053302772e68551d3c8ed80cd3cc87d6cacee7a7b90bcf151cedcd80", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                        - 0.0.1\n                                        - '1'\n                                        - next\n                                      name:\n                                        type: string\n                                        maxLength: 32\n                                      home_url:\n                                        type: string\n                                        maxLength: 512\n                                      icon_url:\n                                        type: string\n                                        maxLength: 512\n                                      image_url:\n                                        type: string\n                                        maxLength: 512\n                                      button_title:\n                                        type: string\n                                        maxLength: 32\n                                      splash_image_url:\n                                        type: string\n                                        maxLength: 512\n                                      splash_background_color:\n                                        type: string\n                                      webhook_url:\n                                        type: string\n                                        maxLength: 512\n                                    required:\n                                    - version\n                                    - name\n                                    - home_url\n                                    - icon_url\n                                  triggers:\n                                    type: array\n                                    items:\n                                      oneOf:\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - cast\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - composer\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                required:\n                                - account_association\n                              author: &id005\n                                type: object\n                                required:\n                                - object\n                                - fid\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - user_dehydrated\n                                  fid: *id001\n                                  username:\n                                    type: string\n                                  display_name:\n                                    type: string\n                                  pfp_url:\n                                    type: string\n                        mapping:\n                          vNext: '#/components/schemas/FrameV1'\n                          next: '#/components/schemas/FrameV2'\n                          '1': '#/components/schemas/FrameV2'\n                          0.0.0: '#/components/schemas/FrameV2'\n                          0.0.1: '#/components/schemas/FrameV2'\n              - type: object\n                required:\n                - cast\n                properties:\n                  cast_id: &id008\n                    type: object\n                    required:\n                    - fid\n                    - hash\n                    properties:\n                      fid: *id001\n                      hash:\n                        type: string\n                  cast:\n                    type: object\n                    required:\n                    - hash\n                    - parent_hash\n                    - parent_url\n                    - root_parent_url\n                    - parent_author\n                    - author\n                    - text\n                    - timestamp\n                    - type\n                    - embeds\n                    - channel\n                    properties:\n                      hash:\n                        type: string\n                      parent_hash:\n                        type:\n                        - string\n                        - 'null'\n                      parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      root_parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      parent_author:\n                        type: object\n                        required:\n                        - fid\n                        properties:\n                          fid:\n                            oneOf:\n                            - type: 'null'\n                            - *id001\n                      author: *id005\n                      text:\n                        type: string\n                      timestamp: *id006\n                      type: &id009\n                        type: string\n                        enum:\n                        - cast-mention\n                        - cast-reply\n                        description: 'The notification type of a cast.\n\n                          '\n                      embeds:\n                        type: array\n                        items:\n                          oneOf:\n                          - *id007\n                          - type: object\n                            required:\n                            - cast\n                            properties:\n                              cast_id: *id008\n                              cast:\n                                type: object\n                                required:\n                                - object\n                                - hash\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - cast_dehydrated\n                                  hash:\n                                    type: string\n                                  author: *id005\n                      channel:\n                        oneOf:\n                        - type: 'null'\n                        - &id013\n                          type: object\n                          required:\n                          - id\n                          - name\n                          - object\n                          properties:\n                            id:\n                              type: string\n                            name:\n                              type: string\n                            object:\n                              type: string\n                              enum:\n                              - channel_dehydrated\n                            image_url:\n                              type: string\n                            viewer_context: &id012\n                              description: Adds context on the viewer's or author's\n                                role in the channel.", "mimetype": "text/plain", "start_char_idx": 30485, "end_char_idx": 39252, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7ec88278-81e1-43ba-be69-0a37ec887a0f": {"__data__": {"id_": "7ec88278-81e1-43ba-be69-0a37ec887a0f", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "babf25b7-4762-43b1-bd99-bed26c60a2a7", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "7650a3268912e139f8b9d679d1cb33de81ac932f35e602989a77dc8896f420cc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5a2a1814-03d0-47d1-b27e-cda715accedd", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "0f69a3923be3049ad5fefdca4814791ea159f7e9803de2f98c865d9c60b11c33", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                              required:\n                              - following\n                              properties:\n                                following:\n                                  description: Indicates if the user is following\n                                    the channel.\n                                  type: boolean\n                                role:\n                                  type: string\n                                  description: The role of a channel member\n                                  enum:\n                                  - member\n                                  - moderator\n          type: *id009\n      - type: object\n        required:\n        - reactions\n        - replies\n        - thread_hash\n        - mentioned_profiles\n        - channel\n        properties:\n          frames:\n            type: array\n            items: *id010\n          reactions:\n            type: object\n            required:\n            - likes\n            - recasts\n            - likes_count\n            - recasts_count\n            properties:\n              likes:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  properties:\n                    fid: *id001\n              recasts:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  - fname\n                  properties:\n                    fid: *id001\n                    fname:\n                      type: string\n              likes_count:\n                type: integer\n                format: int32\n              recasts_count:\n                type: integer\n                format: int32\n          replies:\n            type: object\n            required:\n            - count\n            properties:\n              count:\n                type: integer\n                format: int32\n          thread_hash:\n            type:\n            - string\n            - 'null'\n          mentioned_profiles:\n            type: array\n            items: *id011\n          channel:\n            oneOf:\n            - oneOf:\n              - type: object\n                required:\n                - id\n                - url\n                - object\n                properties:\n                  id:\n                    type: string\n                  url:\n                    type: string\n                  name:\n                    type: string\n                  description:\n                    type: string\n                  object:\n                    type: string\n                    enum:\n                    - channel\n                  created_at:\n                    description: Epoch timestamp in seconds.\n                    type: number\n                  follower_count:\n                    description: Number of followers the channel has.\n                    type: number\n                  external_link:\n                    type: object\n                    description: Channel's external link.\n                    properties:\n                      title:\n                        type: string\n                      url:\n                        type: string\n                  image_url:\n                    type: string\n                  parent_url:\n                    type: string\n                    format: uri\n                  lead: *id011\n                  moderator_fids:\n                    type: array\n                    items: *id001\n                  member_count:\n                    type: integer\n                    format: int32\n                  moderator: *id011\n                  pinned_cast_hash:\n                    type: string\n                    default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                    description: Cast Hash\n                  hosts:\n                    type: array\n                    deprecated: true\n                    items: *id011\n                  viewer_context: *id012\n              - *id013\n              discriminator:\n                propertyName: object\n                mapping:\n                  channel: '#/components/schemas/Channel'\n                  dehydrated_channel: '#/components/schemas/DehydratedChannel'\n            - type: 'null'\n          viewer_context:\n            type: object\n            description: Adds context on interactions the viewer has made with the\n              cast.\n            required:\n            - liked\n            - recasted\n            properties:\n              liked:\n                description: Indicates if the viewer liked the cast.\n                type: boolean\n              recasted:\n                description: Indicates if the viewer recasted the cast.\n                type: boolean\n          author_channel_context: *id012\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 39283, "end_char_idx": 44292, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9b0e7e85-1774-46e8-a562-df0b3e891751": {"__data__": {"id_": "9b0e7e85-1774-46e8-a562-df0b3e891751", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-mute-list.md", "file_name": "neynar_fetch-mute-list.md", "file_type": "text/markdown", "file_size": 6430, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1ff9fb3d-a03c-4586-b3cd-cec5a4cb6f19", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-mute-list.md", "file_name": "neynar_fetch-mute-list.md", "file_type": "text/markdown", "file_size": 6430, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "9d6bb4086248d06accae3c1baaa34cc477186c85167706eb476daddada9f70dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "efd055c6-9667-432f-a7f3-f846cf3cc047", "node_type": "1", "metadata": {}, "hash": "80597905bf737af5cd7aeb39f62b2c77370a572d5713aafa74a65b2b34957ddc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-mute-list\n\n**Endpoint**: `GET /farcaster/mute/list`\n\n## Description\nFetches all FIDs that a user has muted.\n\n## Parameters\n- `fid` (query): The user's FID (identifier)\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- mutes\n- next\nproperties:\n  mutes:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - muted\n      - timestamp\n      - muted_at\n      properties:\n        object:\n          type: string\n          enum:\n          - mute\n        muted:\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid:\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5742, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "efd055c6-9667-432f-a7f3-f846cf3cc047": {"__data__": {"id_": "efd055c6-9667-432f-a7f3-f846cf3cc047", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-mute-list.md", "file_name": "neynar_fetch-mute-list.md", "file_type": "text/markdown", "file_size": 6430, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1ff9fb3d-a03c-4586-b3cd-cec5a4cb6f19", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-mute-list.md", "file_name": "neynar_fetch-mute-list.md", "file_type": "text/markdown", "file_size": 6430, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "9d6bb4086248d06accae3c1baaa34cc477186c85167706eb476daddada9f70dc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9b0e7e85-1774-46e8-a562-df0b3e891751", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-mute-list.md", "file_name": "neynar_fetch-mute-list.md", "file_type": "text/markdown", "file_size": 6430, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "668ec2c4c130d62d8e837e68ca1824de751768bc67352b86020caf7590c8d215", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        muted_at:\n          type: string\n          format: date-time\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4647, "end_char_idx": 6429, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f3e1712e-69c6-4af2-b6ac-23ebc54f15d9": {"__data__": {"id_": "f3e1712e-69c6-4af2-b6ac-23ebc54f15d9", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-neynar-frames.md", "file_name": "neynar_fetch-neynar-frames.md", "file_type": "text/markdown", "file_size": 3946, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "02d83d0b-7bcf-4f2d-a9e1-f16922bdd0e5", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-neynar-frames.md", "file_name": "neynar_fetch-neynar-frames.md", "file_type": "text/markdown", "file_size": 3946, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "31bbf03643d0ad19d58fe8ec945eaa893bf004124d3aaa3858b61be6070ab3b5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-neynar-frames\n\n**Endpoint**: `GET /farcaster/frame/list`\n\n## Description\nFetch a list of frames made by the developer (identified by API key)\n\n## Response\n```yaml\ntype: array\nitems:\n  type: object\n  properties:\n    uuid:\n      type: string\n      format: uuid\n      description: Unique identifier for the frame.\n    name:\n      type: string\n      description: Name of the frame.\n    link:\n      type: string\n      format: uri\n      description: Generated link for the frame's first page.\n    pages:\n      type: array\n      items:\n        type: object\n        properties:\n          uuid:\n            type: string\n            format: uuid\n            description: Unique identifier for the page.\n          version:\n            type: string\n            default: vNext\n            examples:\n            - vNext\n            description: The version of the page schema.\n          title:\n            type: string\n            examples:\n            - Welcome to Neynar\n            description: The title of the page.\n          image:\n            type: object\n            properties:\n              url:\n                type: string\n                format: uri\n                examples:\n                - https://i.imgur.com/qo2AzBf.jpeg\n                description: The URL of the page's image.\n              aspect_ratio:\n                type: string\n                description: The aspect ratio of the image.\n                enum:\n                - 1.91:1\n                - '1:1'\n            required:\n            - url\n            - aspect_ratio\n          buttons:\n            type: array\n            items:\n              type: object\n              properties:\n                title:\n                  type: string\n                  description: The title of the button.\n                index:\n                  type: integer\n                  description: The index of the button, first button should have index\n                    1 and so on.\n                action_type:\n                  type: string\n                  description: The type of action that the button performs.\n                  enum:\n                  - post\n                  - post_redirect\n                  - mint\n                  - link\n                next_page:\n                  oneOf:\n                  - type: object\n                    properties:\n                      uuid:\n                        type: string\n                        format: uuid\n                        description: The UUID of the next page.\n                    required:\n                    - uuid\n                  - type: object\n                    properties:\n                      redirect_url:\n                        type: string\n                        format: uri\n                        description: The URL to redirect to.\n                    required:\n                    - redirect_url\n                  - type: object\n                    properties:\n                      mint_url:\n                        type: string\n                        description: The URL for minting, specific to the mint action.\n                    required:\n                    - mint_url\n              required:\n              - title\n              - index\n              - action_type\n          input:\n            type: object\n            properties:\n              text:\n                type: object\n                properties:\n                  enabled:\n                    type: boolean\n                    default: false\n                    description: Indicates if text input is enabled.\n                  placeholder:\n                    type: string\n                    description: The placeholder text for the input.\n                required:\n                - enabled\n        required:\n        - uuid\n        - title\n        - version\n        - image\n    valid:\n      type: boolean\n      description: Indicates if the frame is valid.\n  required:\n  - uuid\n  - name\n  - pages\n  - link\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3945, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b5119240-b3a7-4916-b2b7-c42424388a9c": {"__data__": {"id_": "b5119240-b3a7-4916-b2b7-c42424388a9c", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notification-tokens.md", "file_name": "neynar_fetch-notification-tokens.md", "file_type": "text/markdown", "file_size": 1274, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bf3e08c-dadd-4e67-ae29-bc1b8831c917", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notification-tokens.md", "file_name": "neynar_fetch-notification-tokens.md", "file_type": "text/markdown", "file_size": 1274, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "a738d920a21a7cc7eab708e0581a204e156c8a54b1a74e10e7c4894f0e2866de", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-notification-tokens\n\n**Endpoint**: `GET /farcaster/frame/notification_tokens`\n\n## Description\nReturns a list of notifications tokens related for an app\n\n\n## Parameters\n- `limit` (query): Number of results to fetch\n- `fids` (query): Comma separated list of FIDs, up to 100 at a time\n\n## Response\n```yaml\ntype: object\nrequired:\n- notification_tokens\n- next\nproperties:\n  notification_tokens:\n    type: array\n    items:\n      type: object\n      properties:\n        object:\n          type: string\n          enum:\n          - notification_token\n        url:\n          type: string\n        token:\n          type: string\n        status:\n          type: string\n          enum:\n          - enabled\n          - disabled\n        fid:\n          type: integer\n          format: int32\n          description: The unique identifier of a farcaster user (unsigned integer)\n          examples:\n          - 3\n          - 191\n          - 2\n          - 194\n          - 19960\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1273, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0b1b855f-8316-4522-9052-b6112635e635": {"__data__": {"id_": "0b1b855f-8316-4522-9052-b6112635e635", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5c64aaaa-ecc9-402e-b26a-edb7c7ba7dfd", "node_type": "1", "metadata": {}, "hash": "28a51ea5068f3852330e1cd27ef845c9112e4b91fef90f0909c46aa9ca49b4b2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-notifications-by-parent-url-for-user\n\n**Endpoint**: `GET /farcaster/notifications/parent_url`\n\n## Description\nReturns a list of notifications for a user in specific parent_urls\n\n## Parameters\n- `fid` (query): FID of the user you you want to fetch notifications for. The response will respect this user's mutes and blocks.\n- `parent_urls` (query): Comma separated parent_urls\n- `priority_mode` (query): When true, only returns notifications from power badge users and users that the viewer follows (if viewer_fid is provided).\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- unseen_notifications_count\n- notifications\n- next\nproperties:\n  unseen_notifications_count:\n    type: integer\n    format: int32\n  notifications:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - most_recent_timestamp\n      - type\n      - seen\n      properties:\n        object:\n          type: string\n        most_recent_timestamp:\n          type: string\n          format: date-time\n        type:\n          type: string\n          enum:\n          - follows\n          - recasts\n          - likes\n          - mention\n          - reply\n          - quote\n        seen:\n          type: boolean\n        follows:\n          type: array\n          items:\n            type: object\n            required:\n            - object\n            - user\n            properties:\n              object:\n                type: string\n                enum:\n                - follow\n              user: &id003\n                type: object\n                required:\n                - object\n                - fid\n                - custody_address\n                - username\n                - profile\n                - follower_count\n                - following_count\n                - verifications\n                - verified_addresses\n                - verified_accounts\n                - power_badge\n                properties:\n                  object:\n                    type: string\n                    enum:\n                    - user\n                  fid: &id002\n                    type: integer\n                    format: int32\n                    description: The unique identifier of a farcaster user (unsigned\n                      integer)\n                    examples:\n                    - 3\n                    - 191\n                    - 2\n                    - 194\n                    - 19960\n                  username:\n                    type: string\n                  display_name:\n                    type: string\n                  custody_address: &id001\n                    type: string\n                    pattern: ^0x[a-fA-F0-9]{40}$\n                    description: Ethereum address\n                  pfp_url:\n                    type: string\n                    description: The URL of the user's profile picture\n                  profile:\n                    type: object\n                    required:\n                    - bio\n                    properties:\n                      bio:\n                        type: object\n                        required:\n                        - text\n                        - mentioned_profiles\n                        properties:\n                          text:\n                            type: string\n                          mentioned_profiles:\n                            type: array\n                            items:\n                              type: string\n                            default: []\n                      location:\n                        description: Coordinates and place names for a location\n                        type: object\n                        required:\n                        - latitude\n                        - longitude\n                        properties:\n                          latitude:\n                            type: number\n                            format: double\n                            minimum: -90\n                            maximum: 90\n                          longitude:\n                            type: number\n                            format: double\n                            minimum: -180\n                            maximum: 180\n                          address:\n                            type: object\n                            required:\n                            - city\n                            - country\n                            properties:\n                              city:\n                                type: string\n                              state:\n                                type: string\n                              state_code:\n                                type: string\n                              country:\n                                type: string\n                              country_code:\n                                type: string\n                  follower_count:\n                    type: integer\n                    format: int32\n                    description: The number of followers the user has.\n                  following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id001\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id001\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5972, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5c64aaaa-ecc9-402e-b26a-edb7c7ba7dfd": {"__data__": {"id_": "5c64aaaa-ecc9-402e-b26a-edb7c7ba7dfd", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b1b855f-8316-4522-9052-b6112635e635", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "1c427844784a2399505f7031ad70481bea3a4ad9ef539f79f3b8bed7d6759ae8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b69412d8-3dec-43d3-ac90-c7de044a7f25", "node_type": "1", "metadata": {}, "hash": "169a59319fb9d24fb0317dd2e49f2266fc7dc58ad08b58979bc54f908f94fb5b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id001\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id001\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.\n                        items:\n                          type: string\n                          pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                          description: Solana address\n                  verified_accounts:\n                    type: array\n                    description: Verified accounts of the user on other platforms,\n                      currently only X is supported.\n                    items:\n                      type: object\n                      properties:\n                        platform:\n                          type: string\n                          enum:\n                          - x\n                          - github\n                        username:\n                          type: string\n                  power_badge:\n                    type: boolean\n                  experimental:\n                    type: object\n                    required:\n                    - neynar_user_score\n                    properties:\n                      neynar_user_score:\n                        type: number\n                        format: double\n                        description: Score that represents the probability that the\n                          account is not spam.\n                  viewer_context:\n                    type: object\n                    description: Adds context on the viewer's follow relationship\n                      with the user.\n                    required:\n                    - following\n                    - followed_by\n                    - blocking\n                    - blocked_by\n                    properties:\n                      following:\n                        description: Indicates if the viewer is following the user.\n                        type: boolean\n                      followed_by:\n                        description: Indicates if the viewer is followed by the user.\n                        type: boolean\n                      blocking:\n                        description: Indicates if the viewer is blocking the user.\n                        type: boolean\n                      blocked_by:\n                        description: Indicates if the viewer is blocked by the user.\n                        type: boolean\n        cast:\n          allOf:\n          - type: object\n            required:\n            - hash\n            - parent_hash\n            - parent_url\n            - root_parent_url\n            - parent_author\n            - author\n            - text\n            - timestamp\n            - embeds\n            properties:\n              hash:\n                type: string\n              parent_hash:\n                type:\n                - string\n                - 'null'\n              parent_url:\n                type:\n                - string\n                - 'null'\n              root_parent_url:\n                type:\n                - string\n                - 'null'\n              parent_author:\n                type: object\n                required:\n                - fid\n                properties:\n                  fid:", "mimetype": "text/plain", "start_char_idx": 5038, "end_char_idx": 9008, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b69412d8-3dec-43d3-ac90-c7de044a7f25": {"__data__": {"id_": "b69412d8-3dec-43d3-ac90-c7de044a7f25", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5c64aaaa-ecc9-402e-b26a-edb7c7ba7dfd", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d958f9d734ab3ddda549eb10f8c9173d3319da0aae5795ea62824bd67d3b329b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3f673e89-0def-4ca8-b7e3-74ed3044a0b5", "node_type": "1", "metadata": {}, "hash": "52b458f77ee592d48e4766ccc889da44564713474057d1e23c41c84ca3b9781e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- 'null'\n              root_parent_url:\n                type:\n                - string\n                - 'null'\n              parent_author:\n                type: object\n                required:\n                - fid\n                properties:\n                  fid:\n                    oneOf:\n                    - type: 'null'\n                    - *id002\n              author: *id003\n              text:\n                type: string\n              timestamp: &id007\n                type: string\n                format: date-time\n              embeds:\n                type: array\n                items:\n                  oneOf:\n                  - &id008\n                    type: object\n                    required:\n                    - url\n                    properties:\n                      url:\n                        type: string\n                      metadata:\n                        type: object\n                        required:\n                        - _status\n                        properties:\n                          _status:\n                            type: string\n                          content_type:\n                            type:\n                            - string\n                            - 'null'\n                          content_length:\n                            type:", "mimetype": "text/plain", "start_char_idx": 8740, "end_char_idx": 10055, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3f673e89-0def-4ca8-b7e3-74ed3044a0b5": {"__data__": {"id_": "3f673e89-0def-4ca8-b7e3-74ed3044a0b5", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b69412d8-3dec-43d3-ac90-c7de044a7f25", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "730050176d4aa35f65df0c615d63ab111b51f3ec62bf3a94a824e1ae121df1d1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4eed544c-8141-4f6f-8c4e-dded59471603", "node_type": "1", "metadata": {}, "hash": "7ea3d4f5bcc4e2b23c3433b940f18b8ed7326f3f93f19b3c40f71a892b859eef", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "string\n                          content_type:\n                            type:\n                            - string\n                            - 'null'\n                          content_length:\n                            type:\n                            - integer\n                            - 'null'\n                          image:\n                            type: object\n                            properties:\n                              height_px:\n                                type: integer\n                              width_px:\n                                type: integer\n                          video:\n                            type: object\n                            properties:\n                              duration_s:\n                                type: number\n                              stream:\n                                type: array\n                                items:\n                                  type: object\n                                  properties:\n                                    codec_name:\n                                      type: string\n                                    height_px:\n                                      type: integer\n                                    width_px:", "mimetype": "text/plain", "start_char_idx": 9825, "end_char_idx": 11076, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4eed544c-8141-4f6f-8c4e-dded59471603": {"__data__": {"id_": "4eed544c-8141-4f6f-8c4e-dded59471603", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3f673e89-0def-4ca8-b7e3-74ed3044a0b5", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "c6c50aed76a6f2991f696f1da7f7d7a55bc12fd9b0701c50ade664e911912269", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8bab7f01-a06c-4153-b220-600679ff3ff4", "node_type": "1", "metadata": {}, "hash": "989c46f75b41c4c0d531bc62cea994519459af3c051739d6747b5be10cc53c11", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "codec_name:\n                                      type: string\n                                    height_px:\n                                      type: integer\n                                    width_px:\n                                      type: integer\n                          html:\n                            allOf:\n                            - type: object\n                              properties:\n                                favicon:\n                                  type: string\n                                modifiedTime:\n                                  type: string\n                                ogArticleAuthor:\n                                  type: string\n                                ogArticleExpirationTime:\n                                  type: string\n                                ogArticleModifiedTime:\n                                  type: string\n                                ogArticlePublishedTime:\n                                  type: string\n                                ogArticlePublisher:\n                                  type: string\n                                ogArticleSection:\n                                  type: string\n                                ogArticleTag:", "mimetype": "text/plain", "start_char_idx": 10869, "end_char_idx": 12108, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8bab7f01-a06c-4153-b220-600679ff3ff4": {"__data__": {"id_": "8bab7f01-a06c-4153-b220-600679ff3ff4", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4eed544c-8141-4f6f-8c4e-dded59471603", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "4197e3b1345c32e021411b035c4960390b7b9fdb85943928387e34465653c361", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b6c539b9-ef2e-4f27-bec5-beb469d07027", "node_type": "1", "metadata": {}, "hash": "eb1b37b820dfcf3988165f8ee339eab4ab3683dff99edb7c1c3ccbc05abe0f44", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ogArticlePublisher:\n                                  type: string\n                                ogArticleSection:\n                                  type: string\n                                ogArticleTag:\n                                  type: string\n                                ogAudio:\n                                  type: string\n                                ogAudioSecureURL:\n                                  type: string\n                                ogAudioType:\n                                  type: string\n                                ogAudioURL:\n                                  type: string\n                                ogAvailability:\n                                  type: string\n                                ogDate:\n                                  type: string\n                                ogDescription:\n                                  type: string\n                                ogDeterminer:\n                                  type: string\n                                ogEpisode:\n                                  type: string\n                                ogImage:\n                                  type: array\n                                  items:", "mimetype": "text/plain", "start_char_idx": 11899, "end_char_idx": 13110, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b6c539b9-ef2e-4f27-bec5-beb469d07027": {"__data__": {"id_": "b6c539b9-ef2e-4f27-bec5-beb469d07027", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8bab7f01-a06c-4153-b220-600679ff3ff4", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "6d8473491d692b235e6a74c421d32fdac67941057be0ba2666962c81d398c34a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5f551294-6615-4b2c-8217-a930ff1c5173", "node_type": "1", "metadata": {}, "hash": "20092ce7ecad094163eff191a397e80dc92a3a31b128997758d8bac50bed075b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ogEpisode:\n                                  type: string\n                                ogImage:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                      alt:\n                                        type: string\n                                    required:\n                                    - url\n                                ogLocale:\n                                  type: string\n                                ogLocaleAlternate:\n                                  type: string\n                                ogLogo:\n                                  type: string\n                                ogMovie:", "mimetype": "text/plain", "start_char_idx": 12925, "end_char_idx": 14096, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5f551294-6615-4b2c-8217-a930ff1c5173": {"__data__": {"id_": "5f551294-6615-4b2c-8217-a930ff1c5173", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b6c539b9-ef2e-4f27-bec5-beb469d07027", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "090b50268f97435d20889a4b93badcd5f22e1805f0d3ce9d94d901ddd95bd8eb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "35de5949-1b07-4551-887a-be0257633258", "node_type": "1", "metadata": {}, "hash": "a7ef150ba359ec8557cc65d99f66b228f2b0f0d1c95eff0430a24242c093774b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: string\n                                ogLocaleAlternate:\n                                  type: string\n                                ogLogo:\n                                  type: string\n                                ogMovie:\n                                  type: string\n                                ogPriceAmount:\n                                  type: string\n                                ogPriceCurrency:\n                                  type: string\n                                ogProductAvailability:\n                                  type: string\n                                ogProductCondition:\n                                  type: string\n                                ogProductPriceAmount:\n                                  type: string\n                                ogProductPriceCurrency:\n                                  type: string\n                                ogProductRetailerItemId:\n                                  type: string\n                                ogSiteName:\n                                  type: string\n                                ogTitle:\n                                  type: string\n                                ogType:\n                                  type: string\n                                ogUrl:", "mimetype": "text/plain", "start_char_idx": 13858, "end_char_idx": 15147, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "35de5949-1b07-4551-887a-be0257633258": {"__data__": {"id_": "35de5949-1b07-4551-887a-be0257633258", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f551294-6615-4b2c-8217-a930ff1c5173", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "5373d324a4a9397b18889e842a8cb6305928e1c496b2bb430ace6f507d4b7f6f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8448ba92-00d3-44a8-8a11-a9b20cce92bd", "node_type": "1", "metadata": {}, "hash": "3af02eeccf7cb54b27140a88acbaf831ea435731c97df9d48ec12e63ebceff8e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: string\n                                ogTitle:\n                                  type: string\n                                ogType:\n                                  type: string\n                                ogUrl:\n                                  type: string\n                                ogVideo:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                    required:\n                                    - url\n                                ogVideoActor:\n                                  type: string\n                                ogVideoActorId:\n                                  type: string", "mimetype": "text/plain", "start_char_idx": 14921, "end_char_idx": 16085, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8448ba92-00d3-44a8-8a11-a9b20cce92bd": {"__data__": {"id_": "8448ba92-00d3-44a8-8a11-a9b20cce92bd", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "35de5949-1b07-4551-887a-be0257633258", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "4985d34ef59e233680703e1f1e409de07ac920cce417a2398e7ff1f4b665b59a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e9216099-16bd-4917-93f0-5c7c4d027fbe", "node_type": "1", "metadata": {}, "hash": "58ef074b7bcac2403bf389dca37ffee37fd85c01a6e303f9d6e9b0b6ccc2e4af", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- url\n                                ogVideoActor:\n                                  type: string\n                                ogVideoActorId:\n                                  type: string\n                                ogVideoActorRole:\n                                  type: string\n                                ogVideoDirector:\n                                  type: string\n                                ogVideoDuration:\n                                  type: string\n                                ogVideoOther:\n                                  type: string\n                                ogVideoReleaseDate:\n                                  type: string\n                                ogVideoSecureURL:\n                                  type: string\n                                ogVideoSeries:\n                                  type: string\n                                ogVideoTag:\n                                  type: string\n                                ogVideoTvShow:\n                                  type: string\n                                ogVideoWriter:\n                                  type: string\n                                ogWebsite:\n                                  type: string", "mimetype": "text/plain", "start_char_idx": 15892, "end_char_idx": 17126, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e9216099-16bd-4917-93f0-5c7c4d027fbe": {"__data__": {"id_": "e9216099-16bd-4917-93f0-5c7c4d027fbe", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8448ba92-00d3-44a8-8a11-a9b20cce92bd", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "9458cd757c2429fec616be0f32522caed691f1de79fc3304af631276b744a019", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9fbcf625-6eab-4914-b71c-e8a286ab9b31", "node_type": "1", "metadata": {}, "hash": "351c428f60b47a81478c53e7dccf44c0c50b56b5373abf41bbc2294c725f7ea3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: string\n                                ogVideoWriter:\n                                  type: string\n                                ogWebsite:\n                                  type: string\n                                updatedTime:\n                                  type: string\n                            - type: object\n                              properties:\n                                oembed:\n                                  oneOf:\n                                  - allOf:\n                                    - &id004\n                                      type: object\n                                      description: Basic data structure of every oembed\n                                        response see https://oembed.com/\n                                      required:\n                                      - type\n                                      - version\n                                      properties:\n                                        type:\n                                          type: string\n                                        version:\n                                          type:\n                                          - string\n                                          - 'null'\n                                        title:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A text title, describing the\n                                            resource.\n                                        author_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the author/owner\n                                            of the resource.\n                                        author_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL for the author/owner\n                                            of the resource.\n                                        provider_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the resource provider.\n                                        provider_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The url of the resource provider.\n                                        cache_age:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The suggested cache lifetime\n                                            for this resource, in seconds. Consumers\n                                            may choose to use this value or not.\n                                        thumbnail_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL to a thumbnail image\n                                            representing the resource. The thumbnail\n                                            must respect any maxwidth and maxheight\n                                            parameters. If this parameter is present,\n                                            thumbnail_width and thumbnail_height must\n                                            also be present.\n                                        thumbnail_width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width of the optional thumbnail.\n                                            If this parameter is present, thumbnail_url\n                                            and thumbnail_height must also be present.\n                                        thumbnail_height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height of the optional\n                                            thumbnail. If this parameter is present,\n                                            thumbnail_url and thumbnail_width must\n                                            also be present.", "mimetype": "text/plain", "start_char_idx": 16930, "end_char_idx": 21924, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9fbcf625-6eab-4914-b71c-e8a286ab9b31": {"__data__": {"id_": "9fbcf625-6eab-4914-b71c-e8a286ab9b31", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e9216099-16bd-4917-93f0-5c7c4d027fbe", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "45646bdb3a215c4439c1880280a5ce3f8ee3a3c56e2024e30dcd69523d1e429e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "32a9345c-150b-448c-8daa-5b5e264865fa", "node_type": "1", "metadata": {}, "hash": "8d9eab161584c6914f00db415326f13b4659f496da5188af18a808772433f07b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Consumers\n                                            may choose to use this value or not.\n                                        thumbnail_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL to a thumbnail image\n                                            representing the resource. The thumbnail\n                                            must respect any maxwidth and maxheight\n                                            parameters. If this parameter is present,\n                                            thumbnail_width and thumbnail_height must\n                                            also be present.\n                                        thumbnail_width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width of the optional thumbnail.\n                                            If this parameter is present, thumbnail_url\n                                            and thumbnail_height must also be present.\n                                        thumbnail_height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height of the optional\n                                            thumbnail. If this parameter is present,\n                                            thumbnail_url and thumbnail_width must\n                                            also be present.\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - rich\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to display\n                                            the resource. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities. The markup\n                                            should be valid XHTML 1.0 Basic.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - video\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to embed\n                                            a video player. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 20152, "end_char_idx": 27613, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "32a9345c-150b-448c-8daa-5b5e264865fa": {"__data__": {"id_": "32a9345c-150b-448c-8daa-5b5e264865fa", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9fbcf625-6eab-4914-b71c-e8a286ab9b31", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "05e00b8ec30e21f1ff0d8ac337eff534e1e89cd9040dd72dde182ccd737c1ba1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3c9a4659-25aa-4da1-92ae-e12a915f6977", "node_type": "1", "metadata": {}, "hash": "a027f1d3aa0f63f1af93da32e5ea91007c869a127a6f300f43465241edf0789d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.\n                                  - allOf:\n                                    - *id004\n                                    - type: object\n                                      required:\n                                      - type\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - link\n                                  discriminator:\n                                    propertyName: type\n                                    mapping:\n                                      rich: '#/components/schemas/OembedRichData'\n                                      video: '#/components/schemas/OembedVideoData'\n                                      photo: '#/components/schemas/OembedPhotoData'\n                                      link: '#/components/schemas/OembedLinkData'\n                          frame: &id011\n                            discriminator:\n                              propertyName: version\n                            oneOf:\n                            - description: Frame v1 object\n                              allOf:\n                              - &id005\n                                description: Frame base object used across all versions\n                                type: object\n                                required:\n                                - version\n                                - image\n                                - frames_url\n                                properties:\n                                  version:\n                                    type: string\n                                    description: Version of the frame, 'next' for\n                                      v2, 'vNext' for v1\n                                  image:\n                                    type: string\n                                    description: URL of the image\n                                  frames_url:\n                                    type: string\n                                    description: Launch URL of the frame\n                              - type: object\n                                properties:\n                                  buttons:\n                                    type: array\n                                    items:\n                                      type: object\n                                      required:\n                                      - index\n                                      - action_type\n                                      properties:\n                                        title:\n                                          type: string\n                                          description: Title of the button\n                                        index:\n                                          type: integer\n                                          description: Index of the button\n                                        action_type:\n                                          type: string\n                                          description: The action type of a frame\n                                            button. Action types \"mint\" & \"link\" are\n                                            to be handled on the client side only\n                                            and so they will produce a no/op for POST\n                                            /farcaster/frame/action.\n                                          enum:\n                                          - post\n                                          - post_redirect\n                                          - tx\n                                          - link\n                                          - mint\n                                        target:\n                                          type: string\n                                          description: Target of the button\n                                        post_url:\n                                          type: string\n                                          description: Used specifically for the tx\n                                            action type to post a successful transaction\n                                            hash\n                                  post_url:\n                                    type: string\n                                    description: Post URL to take an action on this\n                                      frame\n                                  title:\n                                    type: string\n                                  image_aspect_ratio:\n                                    type: string\n                                  input:\n                                    type: object\n                                    properties:\n                                      text:\n                                        type: string\n                                        description: Input text for the frame\n                                  state:\n                                    type: object\n                                    properties:\n                                      serialized:\n                                        type: string\n                                        description: State for the frame in a serialized\n                                          format\n                            - description: Frame v2 object\n                              allOf:\n                              - *id005\n                              - type: object\n                                required:\n                                - title\n                                - name\n                                - icon\n                                properties:\n                                  manifest:\n                                    type: object\n                                    properties:\n                                      account_association:\n                                        type: object\n                                        properties:\n                                          header:\n                                            type: string\n                                          payload:\n                                            type: string\n                                          signature:\n                                            type: string\n                                        required:\n                                        - header\n                                        - payload\n                                        - signature\n                                      frame:\n                                        type: object\n                                        properties:\n                                          version:\n                                            type: string\n                                            enum:\n                                            - 0.0.0\n                                            - 0.0.", "mimetype": "text/plain", "start_char_idx": 25792, "end_char_idx": 34655, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3c9a4659-25aa-4da1-92ae-e12a915f6977": {"__data__": {"id_": "3c9a4659-25aa-4da1-92ae-e12a915f6977", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "32a9345c-150b-448c-8daa-5b5e264865fa", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "e243345d2cf9e68020ca2e4080235c56beea2e0b0912625121ab707bd056daba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7536db83-127f-485f-9fe3-5055d2af2c4c", "node_type": "1", "metadata": {}, "hash": "26d36fbb0caec6026b91aa3ecf03098312b6fd65f2e50432df9195ee34007f99", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                            - 0.0.1\n                                            - '1'\n                                            - next\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                          home_url:\n                                            type: string\n                                            maxLength: 512\n                                          icon_url:\n                                            type: string\n                                            maxLength: 512\n                                          image_url:\n                                            type: string\n                                            maxLength: 512\n                                          button_title:\n                                            type: string\n                                            maxLength: 32\n                                          splash_image_url:\n                                            type: string\n                                            maxLength: 512\n                                          splash_background_color:\n                                            type: string\n                                          webhook_url:\n                                            type: string\n                                            maxLength: 512\n                                        required:\n                                        - version\n                                        - name\n                                        - home_url\n                                        - icon_url\n                                      triggers:\n                                        type: array\n                                        items:\n                                          oneOf:\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - cast\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - composer\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                    required:\n                                    - account_association\n                                  author: &id006\n                                    type: object\n                                    required:\n                                    - object\n                                    - fid\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - user_dehydrated\n                                      fid: *id002\n                                      username:\n                                        type: string\n                                      display_name:\n                                        type: string\n                                      pfp_url:\n                                        type: string\n                            mapping:\n                              vNext: '#/components/schemas/FrameV1'\n                              next: '#/components/schemas/FrameV2'\n                              '1': '#/components/schemas/FrameV2'\n                              0.0.0: '#/components/schemas/FrameV2'\n                              0.0.1: '#/components/schemas/FrameV2'\n                  - type: object\n                    required:\n                    - cast\n                    properties:\n                      cast_id: &id009\n                        type: object\n                        required:\n                        - fid\n                        - hash\n                        properties:\n                          fid: *id002\n                          hash:\n                            type: string\n                      cast:\n                        type: object\n                        required:\n                        - hash\n                        - parent_hash\n                        - parent_url\n                        - root_parent_url\n                        - parent_author\n                        - author\n                        - text\n                        - timestamp\n                        - type\n                        - embeds\n                        - channel\n                        properties:\n                          hash:\n                            type: string\n                          parent_hash:\n                            type:\n                            - string\n                            - 'null'\n                          parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          root_parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          parent_author:\n                            type: object\n                            required:\n                            - fid\n                            properties:\n                              fid:\n                                oneOf:\n                                - type: 'null'\n                                - *id002\n                          author: *id006\n                          text:\n                            type: string\n                          timestamp: *id007\n                          type: &id010\n                            type: string\n                            enum:\n                            - cast-mention\n                            - cast-reply\n                            description: 'The notification type of a cast.\n\n                              '\n                          embeds:\n                            type: array\n                            items:\n                              oneOf:\n                              - *id008\n                              - type: object\n                                required:\n                                - cast\n                                properties:\n                                  cast_id: *id009\n                                  cast: &id014\n                                    type: object\n                                    required:\n                                    - object\n                                    - hash\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - cast_dehydrated\n                                      hash:\n                                        type: string\n                                      author: *id006\n                          channel:\n                            oneOf:\n                            - type: 'null'\n                            - &id013\n                              type: object\n                              required:\n                              - id\n                              - name\n                              - object\n                              properties:\n                                id:\n                                  type: string\n                                name:\n                                  type: string\n                                object:\n                                  type: string\n                                  enum:\n                                  - channel_dehydrated\n                                image_url:\n                                  type: string\n                                viewer_context: &id012\n                                  description: Adds context on the viewer's or author's\n                                    role in the channel.", "mimetype": "text/plain", "start_char_idx": 34601, "end_char_idx": 44191, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7536db83-127f-485f-9fe3-5055d2af2c4c": {"__data__": {"id_": "7536db83-127f-485f-9fe3-5055d2af2c4c", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27098a12-910d-4a45-bb4a-cf81fa0396dc", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "df84a686da982f2a31bf5938a9895f1d4ccc17a9f01cf61f01193d587f00354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3c9a4659-25aa-4da1-92ae-e12a915f6977", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "af6fe8ea9324b511088f4fa64f6844b8c04f65d06f7d7488f7f882e52e87d2d6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                                  required:\n                                  - following\n                                  properties:\n                                    following:\n                                      description: Indicates if the user is following\n                                        the channel.\n                                      type: boolean\n                                    role:\n                                      type: string\n                                      description: The role of a channel member\n                                      enum:\n                                      - member\n                                      - moderator\n              type: *id010\n          - type: object\n            required:\n            - reactions\n            - replies\n            - thread_hash\n            - mentioned_profiles\n            - channel\n            properties:\n              frames:\n                type: array\n                items: *id011\n              reactions:\n                type: object\n                required:\n                - likes\n                - recasts\n                - likes_count\n                - recasts_count\n                properties:\n                  likes:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      properties:\n                        fid: *id002\n                  recasts:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      - fname\n                      properties:\n                        fid: *id002\n                        fname:\n                          type: string\n                  likes_count:\n                    type: integer\n                    format: int32\n                  recasts_count:\n                    type: integer\n                    format: int32\n              replies:\n                type: object\n                required:\n                - count\n                properties:\n                  count:\n                    type: integer\n                    format: int32\n              thread_hash:\n                type:\n                - string\n                - 'null'\n              mentioned_profiles:\n                type: array\n                items: *id003\n              channel:\n                oneOf:\n                - oneOf:\n                  - type: object\n                    required:\n                    - id\n                    - url\n                    - object\n                    properties:\n                      id:\n                        type: string\n                      url:\n                        type: string\n                      name:\n                        type: string\n                      description:\n                        type: string\n                      object:\n                        type: string\n                        enum:\n                        - channel\n                      created_at:\n                        description: Epoch timestamp in seconds.\n                        type: number\n                      follower_count:\n                        description: Number of followers the channel has.\n                        type: number\n                      external_link:\n                        type: object\n                        description: Channel's external link.\n                        properties:\n                          title:\n                            type: string\n                          url:\n                            type: string\n                      image_url:\n                        type: string\n                      parent_url:\n                        type: string\n                        format: uri\n                      lead: *id003\n                      moderator_fids:\n                        type: array\n                        items: *id002\n                      member_count:\n                        type: integer\n                        format: int32\n                      moderator: *id003\n                      pinned_cast_hash:\n                        type: string\n                        default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                        description: Cast Hash\n                      hosts:\n                        type: array\n                        deprecated: true\n                        items: *id003\n                      viewer_context: *id012\n                  - *id013\n                  discriminator:\n                    propertyName: object\n                    mapping:\n                      channel: '#/components/schemas/Channel'\n                      dehydrated_channel: '#/components/schemas/DehydratedChannel'\n                - type: 'null'\n              viewer_context:\n                type: object\n                description: Adds context on interactions the viewer has made with\n                  the cast.\n                required:\n                - liked\n                - recasted\n                properties:\n                  liked:\n                    description: Indicates if the viewer liked the cast.\n                    type: boolean\n                  recasted:\n                    description: Indicates if the viewer recasted the cast.\n                    type: boolean\n              author_channel_context: *id012\n        reactions:\n          type: array\n          items:\n            type: object\n            required:\n            - object\n            - cast\n            - user\n            properties:\n              object:\n                type: string\n                enum:\n                - likes\n                - recasts\n              cast: *id014\n              user: *id003\n        count:\n          type: integer\n          format: int32\n          description: The number of notifications of this(follows, likes, recast)\n            type bundled in a single notification.\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 44226, "end_char_idx": 50405, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "322db0df-a197-4cc5-870b-1986e633450d": {"__data__": {"id_": "322db0df-a197-4cc5-870b-1986e633450d", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fdae7d65-0b77-4e7e-98a6-a56375798dde", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d84013fee861369e164a15d86fea703b4c2dcc498618677bb000a02170fb7b16", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9c8370e3-7210-47b5-a294-8934d1a53de9", "node_type": "1", "metadata": {}, "hash": "5c551bf9b8e2c35fcc1cf384c95add49f00a3fc4b2edf11f1bfe16e591afba28", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-popular-casts-by-user\n\n**Endpoint**: `GET /farcaster/feed/user/popular`\n\n## Description\nFetch 10 most popular casts for a given user FID; popularity based on replies, likes and recasts; sorted by most popular first\n\n## Parameters\n- `fid` (query): FID of user whose feed you want to create\n- `viewer_fid` (query): No description\n\n## Response\n```yaml\ntype: object\nrequired:\n- casts\nproperties:\n  casts:\n    type: array\n    items:\n      allOf:\n      - type: object\n        required:\n        - hash\n        - parent_hash\n        - parent_url\n        - root_parent_url\n        - parent_author\n        - author\n        - text\n        - timestamp\n        - embeds\n        properties:\n          hash:\n            type: string\n          parent_hash:\n            type:\n            - string\n            - 'null'\n          parent_url:\n            type:\n            - string\n            - 'null'\n          root_parent_url:\n            type:\n            - string\n            - 'null'\n          parent_author:\n            type: object\n            required:\n            - fid\n            properties:\n              fid:\n                oneOf:\n                - type: 'null'\n                - &id001\n                  type: integer\n                  format: int32\n                  description: The unique identifier of a farcaster user (unsigned\n                    integer)\n                  examples:\n                  - 3\n                  - 191\n                  - 2\n                  - 194\n                  - 19960\n          author: &id011\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: *id001\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id002\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5568, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9c8370e3-7210-47b5-a294-8934d1a53de9": {"__data__": {"id_": "9c8370e3-7210-47b5-a294-8934d1a53de9", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fdae7d65-0b77-4e7e-98a6-a56375798dde", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d84013fee861369e164a15d86fea703b4c2dcc498618677bb000a02170fb7b16", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "322db0df-a197-4cc5-870b-1986e633450d", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "9b4c56981ea10656a9b2ad81f450710f1aac0bab7b35418a8d1bfef3e803fdc4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a5cb5963-c98f-423f-9ba8-06f31292f50e", "node_type": "1", "metadata": {}, "hash": "fe0df8fb809538d41413faf06c0a270674cb9253987f2f1009b522ab38419e14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 4519, "end_char_idx": 7179, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a5cb5963-c98f-423f-9ba8-06f31292f50e": {"__data__": {"id_": "a5cb5963-c98f-423f-9ba8-06f31292f50e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fdae7d65-0b77-4e7e-98a6-a56375798dde", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d84013fee861369e164a15d86fea703b4c2dcc498618677bb000a02170fb7b16", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9c8370e3-7210-47b5-a294-8934d1a53de9", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "c25efa0d78279f555936ba4603038a5d71392ed46752a61fccf4805ee380db42", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ed5082b5-f3ea-4636-8931-3f2f3b4ce146", "node_type": "1", "metadata": {}, "hash": "7693468d1bce4d6458a0c00eb5858d0c52e0d3acfd9f809418886132f3cd260d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          text:\n            type: string\n          timestamp: &id006\n            type: string\n            format: date-time\n          embeds:\n            type: array\n            items:\n              oneOf:\n              - &id007\n                type: object\n                required:\n                - url\n                properties:\n                  url:\n                    type: string\n                  metadata:\n                    type: object\n                    required:\n                    - _status\n                    properties:\n                      _status:\n                        type: string\n                      content_type:\n                        type:\n                        - string\n                        - 'null'\n                      content_length:\n                        type:\n                        - integer\n                        - 'null'\n                      image:\n                        type: object\n                        properties:\n                          height_px:\n                            type: integer\n                          width_px:\n                            type: integer\n                      video:\n                        type: object\n                        properties:\n                          duration_s:\n                            type: number\n                          stream:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                codec_name:\n                                  type: string\n                                height_px:\n                                  type: integer\n                                width_px:\n                                  type: integer\n                      html:\n                        allOf:\n                        - type: object\n                          properties:\n                            favicon:\n                              type: string\n                            modifiedTime:\n                              type: string\n                            ogArticleAuthor:\n                              type: string\n                            ogArticleExpirationTime:\n                              type: string\n                            ogArticleModifiedTime:\n                              type: string\n                            ogArticlePublishedTime:\n                              type: string\n                            ogArticlePublisher:\n                              type: string\n                            ogArticleSection:\n                              type: string\n                            ogArticleTag:\n                              type: string\n                            ogAudio:\n                              type: string\n                            ogAudioSecureURL:\n                              type: string\n                            ogAudioType:\n                              type: string\n                            ogAudioURL:\n                              type: string\n                            ogAvailability:\n                              type: string\n                            ogDate:\n                              type: string\n                            ogDescription:\n                              type: string\n                            ogDeterminer:\n                              type: string\n                            ogEpisode:\n                              type: string\n                            ogImage:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                  alt:\n                                    type: string\n                                required:\n                                - url\n                            ogLocale:\n                              type: string\n                            ogLocaleAlternate:\n                              type: string\n                            ogLogo:\n                              type: string\n                            ogMovie:\n                              type: string\n                            ogPriceAmount:\n                              type: string\n                            ogPriceCurrency:\n                              type: string\n                            ogProductAvailability:\n                              type: string\n                            ogProductCondition:\n                              type: string\n                            ogProductPriceAmount:\n                              type: string\n                            ogProductPriceCurrency:\n                              type: string\n                            ogProductRetailerItemId:\n                              type: string\n                            ogSiteName:\n                              type: string\n                            ogTitle:\n                              type: string\n                            ogType:\n                              type: string\n                            ogUrl:\n                              type: string\n                            ogVideo:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                required:\n                                - url\n                            ogVideoActor:\n                              type: string\n                            ogVideoActorId:\n                              type: string\n                            ogVideoActorRole:\n                              type: string\n                            ogVideoDirector:\n                              type: string\n                            ogVideoDuration:\n                              type: string\n                            ogVideoOther:\n                              type: string\n                            ogVideoReleaseDate:\n                              type: string\n                            ogVideoSecureURL:\n                              type: string\n                            ogVideoSeries:\n                              type: string\n                            ogVideoTag:\n                              type: string\n                            ogVideoTvShow:\n                              type: string\n                            ogVideoWriter:\n                              type: string\n                            ogWebsite:\n                              type: string\n                            updatedTime:\n                              type: string\n                        - type: object\n                          properties:\n                            oembed:\n                              oneOf:\n                              - allOf:\n                                - &id003\n                                  type: object\n                                  description: Basic data structure of every oembed\n                                    response see https://oembed.com/\n                                  required:\n                                  - type\n                                  - version\n                                  properties:\n                                    type:\n                                      type: string\n                                    version:\n                                      type:\n                                      - string\n                                      - 'null'\n                                    title:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A text title, describing the resource.", "mimetype": "text/plain", "start_char_idx": 6314, "end_char_idx": 15719, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ed5082b5-f3ea-4636-8931-3f2f3b4ce146": {"__data__": {"id_": "ed5082b5-f3ea-4636-8931-3f2f3b4ce146", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fdae7d65-0b77-4e7e-98a6-a56375798dde", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d84013fee861369e164a15d86fea703b4c2dcc498618677bb000a02170fb7b16", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a5cb5963-c98f-423f-9ba8-06f31292f50e", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "3dfcb6802ac6f03786bade3044d42749367a3fa63b7e1513862df2c2a48a756d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1483e82b-8ab3-42a9-9783-4c2375a2614d", "node_type": "1", "metadata": {}, "hash": "02bb5551c6319ad9c9e131ba050e77c2a58a5756c4a5f538be3d18d6c2b844c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the author/owner of\n                                        the resource.\n                                    author_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL for the author/owner of the\n                                        resource.\n                                    provider_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the resource provider.\n                                    provider_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The url of the resource provider.\n                                    cache_age:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The suggested cache lifetime for\n                                        this resource, in seconds. Consumers may choose\n                                        to use this value or not.\n                                    thumbnail_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL to a thumbnail image representing\n                                        the resource. The thumbnail must respect any\n                                        maxwidth and maxheight parameters. If this\n                                        parameter is present, thumbnail_width and\n                                        thumbnail_height must also be present.\n                                    thumbnail_width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_height must also be present.\n                                    thumbnail_height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_width must also be present.\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - rich\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to display the\n                                        resource. The HTML should have no padding\n                                        or margins. Consumers may wish to load the\n                                        HTML in an off-domain iframe to avoid XSS\n                                        vulnerabilities. The markup should be valid\n                                        XHTML 1.0 Basic.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - video\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to embed a video\n                                        player. The HTML should have no padding or\n                                        margins. Consumers may wish to load the HTML\n                                        in an off-domain iframe to avoid XSS vulnerabilities.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 15756, "end_char_idx": 24086, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1483e82b-8ab3-42a9-9783-4c2375a2614d": {"__data__": {"id_": "1483e82b-8ab3-42a9-9783-4c2375a2614d", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fdae7d65-0b77-4e7e-98a6-a56375798dde", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d84013fee861369e164a15d86fea703b4c2dcc498618677bb000a02170fb7b16", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ed5082b5-f3ea-4636-8931-3f2f3b4ce146", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "3932b7ee9be57835f087bd227d07644d1cb431a67ee7fd5a26d9b7fded268cc9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "15fd8a3c-faeb-4135-8c15-b10b43ee30e5", "node_type": "1", "metadata": {}, "hash": "4bf0e8989166b44509d34059a21981076b724bc3fd8b9c3a31d03109f5c8881a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - link\n                              discriminator:\n                                propertyName: type\n                                mapping:\n                                  rich: '#/components/schemas/OembedRichData'\n                                  video: '#/components/schemas/OembedVideoData'\n                                  photo: '#/components/schemas/OembedPhotoData'\n                                  link: '#/components/schemas/OembedLinkData'\n                      frame: &id010\n                        discriminator:\n                          propertyName: version\n                        oneOf:\n                        - description: Frame v1 object\n                          allOf:\n                          - &id004\n                            description: Frame base object used across all versions\n                            type: object\n                            required:\n                            - version\n                            - image\n                            - frames_url\n                            properties:\n                              version:\n                                type: string\n                                description: Version of the frame, 'next' for v2,\n                                  'vNext' for v1\n                              image:\n                                type: string\n                                description: URL of the image\n                              frames_url:\n                                type: string\n                                description: Launch URL of the frame\n                          - type: object\n                            properties:\n                              buttons:\n                                type: array\n                                items:\n                                  type: object\n                                  required:\n                                  - index\n                                  - action_type\n                                  properties:\n                                    title:\n                                      type: string\n                                      description: Title of the button\n                                    index:\n                                      type: integer\n                                      description: Index of the button\n                                    action_type:\n                                      type: string\n                                      description: The action type of a frame button.\n                                        Action types \"mint\" & \"link\" are to be handled\n                                        on the client side only and so they will produce\n                                        a no/op for POST /farcaster/frame/action.\n                                      enum:\n                                      - post\n                                      - post_redirect\n                                      - tx\n                                      - link\n                                      - mint\n                                    target:\n                                      type: string\n                                      description: Target of the button\n                                    post_url:\n                                      type: string\n                                      description: Used specifically for the tx action\n                                        type to post a successful transaction hash\n                              post_url:\n                                type: string\n                                description: Post URL to take an action on this frame\n                              title:\n                                type: string\n                              image_aspect_ratio:\n                                type: string\n                              input:\n                                type: object\n                                properties:\n                                  text:\n                                    type: string\n                                    description: Input text for the frame\n                              state:\n                                type: object\n                                properties:\n                                  serialized:\n                                    type: string\n                                    description: State for the frame in a serialized\n                                      format\n                        - description: Frame v2 object\n                          allOf:\n                          - *id004\n                          - type: object\n                            required:\n                            - title\n                            - name\n                            - icon\n                            properties:\n                              manifest:\n                                type: object\n                                properties:\n                                  account_association:\n                                    type: object\n                                    properties:\n                                      header:\n                                        type: string\n                                      payload:\n                                        type: string\n                                      signature:\n                                        type: string\n                                    required:\n                                    - header\n                                    - payload\n                                    - signature\n                                  frame:\n                                    type: object\n                                    properties:\n                                      version:\n                                        type: string\n                                        enum:\n                                        - 0.0.0\n                                        - 0.0.", "mimetype": "text/plain", "start_char_idx": 22393, "end_char_idx": 30486, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "15fd8a3c-faeb-4135-8c15-b10b43ee30e5": {"__data__": {"id_": "15fd8a3c-faeb-4135-8c15-b10b43ee30e5", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fdae7d65-0b77-4e7e-98a6-a56375798dde", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d84013fee861369e164a15d86fea703b4c2dcc498618677bb000a02170fb7b16", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1483e82b-8ab3-42a9-9783-4c2375a2614d", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "db31f69d6899606af11c6f2f3aac08ba9346e158b1cfe73572ae2a3af1aaf43f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "db11137c-b23f-4e4e-8ae1-f3ee6063d261", "node_type": "1", "metadata": {}, "hash": "1b52ac5af209a0426a92c2f19a37bb99d486308b3c5997979a49d30657d920ad", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                        - 0.0.1\n                                        - '1'\n                                        - next\n                                      name:\n                                        type: string\n                                        maxLength: 32\n                                      home_url:\n                                        type: string\n                                        maxLength: 512\n                                      icon_url:\n                                        type: string\n                                        maxLength: 512\n                                      image_url:\n                                        type: string\n                                        maxLength: 512\n                                      button_title:\n                                        type: string\n                                        maxLength: 32\n                                      splash_image_url:\n                                        type: string\n                                        maxLength: 512\n                                      splash_background_color:\n                                        type: string\n                                      webhook_url:\n                                        type: string\n                                        maxLength: 512\n                                    required:\n                                    - version\n                                    - name\n                                    - home_url\n                                    - icon_url\n                                  triggers:\n                                    type: array\n                                    items:\n                                      oneOf:\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - cast\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - composer\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                required:\n                                - account_association\n                              author: &id005\n                                type: object\n                                required:\n                                - object\n                                - fid\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - user_dehydrated\n                                  fid: *id001\n                                  username:\n                                    type: string\n                                  display_name:\n                                    type: string\n                                  pfp_url:\n                                    type: string\n                        mapping:\n                          vNext: '#/components/schemas/FrameV1'\n                          next: '#/components/schemas/FrameV2'\n                          '1': '#/components/schemas/FrameV2'\n                          0.0.0: '#/components/schemas/FrameV2'\n                          0.0.1: '#/components/schemas/FrameV2'\n              - type: object\n                required:\n                - cast\n                properties:\n                  cast_id: &id008\n                    type: object\n                    required:\n                    - fid\n                    - hash\n                    properties:\n                      fid: *id001\n                      hash:\n                        type: string\n                  cast:\n                    type: object\n                    required:\n                    - hash\n                    - parent_hash\n                    - parent_url\n                    - root_parent_url\n                    - parent_author\n                    - author\n                    - text\n                    - timestamp\n                    - type\n                    - embeds\n                    - channel\n                    properties:\n                      hash:\n                        type: string\n                      parent_hash:\n                        type:\n                        - string\n                        - 'null'\n                      parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      root_parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      parent_author:\n                        type: object\n                        required:\n                        - fid\n                        properties:\n                          fid:\n                            oneOf:\n                            - type: 'null'\n                            - *id001\n                      author: *id005\n                      text:\n                        type: string\n                      timestamp: *id006\n                      type: &id009\n                        type: string\n                        enum:\n                        - cast-mention\n                        - cast-reply\n                        description: 'The notification type of a cast.\n\n                          '\n                      embeds:\n                        type: array\n                        items:\n                          oneOf:\n                          - *id007\n                          - type: object\n                            required:\n                            - cast\n                            properties:\n                              cast_id: *id008\n                              cast:\n                                type: object\n                                required:\n                                - object\n                                - hash\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - cast_dehydrated\n                                  hash:\n                                    type: string\n                                  author: *id005\n                      channel:\n                        oneOf:\n                        - type: 'null'\n                        - &id013\n                          type: object\n                          required:\n                          - id\n                          - name\n                          - object\n                          properties:\n                            id:\n                              type: string\n                            name:\n                              type: string\n                            object:\n                              type: string\n                              enum:\n                              - channel_dehydrated\n                            image_url:\n                              type: string\n                            viewer_context: &id012\n                              description: Adds context on the viewer's or author's\n                                role in the channel.", "mimetype": "text/plain", "start_char_idx": 30436, "end_char_idx": 39203, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "db11137c-b23f-4e4e-8ae1-f3ee6063d261": {"__data__": {"id_": "db11137c-b23f-4e4e-8ae1-f3ee6063d261", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fdae7d65-0b77-4e7e-98a6-a56375798dde", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d84013fee861369e164a15d86fea703b4c2dcc498618677bb000a02170fb7b16", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "15fd8a3c-faeb-4135-8c15-b10b43ee30e5", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f272c1fc385df1a00e32dbcf2a7ab135f76390253f2d4a0f526539718d3e666e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                              required:\n                              - following\n                              properties:\n                                following:\n                                  description: Indicates if the user is following\n                                    the channel.\n                                  type: boolean\n                                role:\n                                  type: string\n                                  description: The role of a channel member\n                                  enum:\n                                  - member\n                                  - moderator\n          type: *id009\n      - type: object\n        required:\n        - reactions\n        - replies\n        - thread_hash\n        - mentioned_profiles\n        - channel\n        properties:\n          frames:\n            type: array\n            items: *id010\n          reactions:\n            type: object\n            required:\n            - likes\n            - recasts\n            - likes_count\n            - recasts_count\n            properties:\n              likes:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  properties:\n                    fid: *id001\n              recasts:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  - fname\n                  properties:\n                    fid: *id001\n                    fname:\n                      type: string\n              likes_count:\n                type: integer\n                format: int32\n              recasts_count:\n                type: integer\n                format: int32\n          replies:\n            type: object\n            required:\n            - count\n            properties:\n              count:\n                type: integer\n                format: int32\n          thread_hash:\n            type:\n            - string\n            - 'null'\n          mentioned_profiles:\n            type: array\n            items: *id011\n          channel:\n            oneOf:\n            - oneOf:\n              - type: object\n                required:\n                - id\n                - url\n                - object\n                properties:\n                  id:\n                    type: string\n                  url:\n                    type: string\n                  name:\n                    type: string\n                  description:\n                    type: string\n                  object:\n                    type: string\n                    enum:\n                    - channel\n                  created_at:\n                    description: Epoch timestamp in seconds.\n                    type: number\n                  follower_count:\n                    description: Number of followers the channel has.\n                    type: number\n                  external_link:\n                    type: object\n                    description: Channel's external link.\n                    properties:\n                      title:\n                        type: string\n                      url:\n                        type: string\n                  image_url:\n                    type: string\n                  parent_url:\n                    type: string\n                    format: uri\n                  lead: *id011\n                  moderator_fids:\n                    type: array\n                    items: *id001\n                  member_count:\n                    type: integer\n                    format: int32\n                  moderator: *id011\n                  pinned_cast_hash:\n                    type: string\n                    default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                    description: Cast Hash\n                  hosts:\n                    type: array\n                    deprecated: true\n                    items: *id011\n                  viewer_context: *id012\n              - *id013\n              discriminator:\n                propertyName: object\n                mapping:\n                  channel: '#/components/schemas/Channel'\n                  dehydrated_channel: '#/components/schemas/DehydratedChannel'\n            - type: 'null'\n          viewer_context:\n            type: object\n            description: Adds context on interactions the viewer has made with the\n              cast.\n            required:\n            - liked\n            - recasted\n            properties:\n              liked:\n                description: Indicates if the viewer liked the cast.\n                type: boolean\n              recasted:\n                description: Indicates if the viewer recasted the cast.\n                type: boolean\n          author_channel_context: *id012\n```", "mimetype": "text/plain", "start_char_idx": 39234, "end_char_idx": 44076, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e388e187-33fd-478b-8ed5-3fcbcd86c006": {"__data__": {"id_": "e388e187-33fd-478b-8ed5-3fcbcd86c006", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-power-users-lite.md", "file_name": "neynar_fetch-power-users-lite.md", "file_type": "text/markdown", "file_size": 664, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d2df5bc0-bc8c-4f7d-bf68-f227c1fe6e3d", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-power-users-lite.md", "file_name": "neynar_fetch-power-users-lite.md", "file_type": "text/markdown", "file_size": 664, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "fdafa2d4f69026fa03004cd0a8297be7080a7d7a837b7055677fa9f701d931c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-power-users-lite\n\n**Endpoint**: `GET /farcaster/user/power_lite`\n\n## Description\nFetches power users and respond in a backwards compatible format to Warpcast's deprecated power badge endpoint.\n\n## Parameters\n\n## Response\n```yaml\ntype: object\nrequired:\n- result\nproperties:\n  result:\n    type: object\n    required:\n    - fids\n    properties:\n      fids:\n        type: array\n        items:\n          type: integer\n          format: int32\n          description: The unique identifier of a farcaster user (unsigned integer)\n          examples:\n          - 3\n          - 191\n          - 2\n          - 194\n          - 19960\n        description: List of FIDs\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 663, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4588c15e-460c-442d-b239-dcfb116511da": {"__data__": {"id_": "4588c15e-460c-442d-b239-dcfb116511da", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-power-users.md", "file_name": "neynar_fetch-power-users.md", "file_type": "text/markdown", "file_size": 5521, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0229706e-3ab3-4de6-80cf-2adbfce12529", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-power-users.md", "file_name": "neynar_fetch-power-users.md", "file_type": "text/markdown", "file_size": 5521, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "6a83066bf527405de68601ca93192c62fe6c2e800e123b38f028abddd33e678c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b04fbd32-8e9f-46c0-ad15-af5c23674e72", "node_type": "1", "metadata": {}, "hash": "a14a716ecac17de8916767d591b1cc5c15ebd32207abe7ff02890f9018d468dd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-power-users\n\n**Endpoint**: `GET /farcaster/user/power`\n\n## Description\nFetches power users based on Warpcast power badges. Information is updated once a day.\n\n## Parameters\n- `viewer_fid` (query): No description\n- `limit` (query): Number of power users to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- users\n- next\nproperties:\n  users:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - fid\n      - custody_address\n      - username\n      - profile\n      - follower_count\n      - following_count\n      - verifications\n      - verified_addresses\n      - verified_accounts\n      - power_badge\n      properties:\n        object:\n          type: string\n          enum:\n          - user\n        fid:\n          type: integer\n          format: int32\n          description: The unique identifier of a farcaster user (unsigned integer)\n          examples:\n          - 3\n          - 191\n          - 2\n          - 194\n          - 19960\n        username:\n          type: string\n        display_name:\n          type: string\n        custody_address: &id001\n          type: string\n          pattern: ^0x[a-fA-F0-9]{40}$\n          description: Ethereum address\n        pfp_url:\n          type: string\n          description: The URL of the user's profile picture\n        profile:\n          type: object\n          required:\n          - bio\n          properties:\n            bio:\n              type: object\n              required:\n              - text\n              - mentioned_profiles\n              properties:\n                text:\n                  type: string\n                mentioned_profiles:\n                  type: array\n                  items:\n                    type: string\n                  default: []\n            location:\n              description: Coordinates and place names for a location\n              type: object\n              required:\n              - latitude\n              - longitude\n              properties:\n                latitude:\n                  type: number\n                  format: double\n                  minimum: -90\n                  maximum: 90\n                longitude:\n                  type: number\n                  format: double\n                  minimum: -180\n                  maximum: 180\n                address:\n                  type: object\n                  required:\n                  - city\n                  - country\n                  properties:\n                    city:\n                      type: string\n                    state:\n                      type: string\n                    state_code:\n                      type: string\n                    country:\n                      type: string\n                    country_code:\n                      type: string\n        follower_count:\n          type: integer\n          format: int32\n          description: The number of followers the user has.\n        following_count:\n          type: integer\n          format: int32\n          description: The number of users the user is following.\n        verifications:\n          type: array\n          items: *id001\n        verified_addresses:\n          type: object\n          required:\n          - eth_addresses\n          - sol_addresses\n          properties:\n            eth_addresses:\n              type: array\n              description: List of verified Ethereum addresses of the user sorted\n                by oldest to most recent.\n              items: *id001\n            sol_addresses:\n              type: array\n              description: List of verified Solana addresses of the user sorted by\n                oldest to most recent.\n              items:\n                type: string\n                pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                description: Solana address\n        verified_accounts:\n          type: array\n          description: Verified accounts of the user on other platforms, currently\n            only X is supported.\n          items:\n            type: object\n            properties:\n              platform:\n                type: string\n                enum:\n                - x\n                - github\n              username:\n                type: string\n        power_badge:\n          type: boolean\n        experimental:\n          type: object\n          required:\n          - neynar_user_score\n          properties:\n            neynar_user_score:\n              type: number\n              format: double\n              description: Score that represents the probability that the account\n                is not spam.\n        viewer_context:\n          type: object\n          description: Adds context on the viewer's follow relationship with the user.\n          required:\n          - following\n          - followed_by\n          - blocking\n          - blocked_by\n          properties:\n            following:\n              description: Indicates if the viewer is following the user.\n              type: boolean\n            followed_by:\n              description: Indicates if the viewer is followed by the user.\n              type: boolean\n            blocking:\n              description: Indicates if the viewer is blocking the user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5194, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b04fbd32-8e9f-46c0-ad15-af5c23674e72": {"__data__": {"id_": "b04fbd32-8e9f-46c0-ad15-af5c23674e72", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-power-users.md", "file_name": "neynar_fetch-power-users.md", "file_type": "text/markdown", "file_size": 5521, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0229706e-3ab3-4de6-80cf-2adbfce12529", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-power-users.md", "file_name": "neynar_fetch-power-users.md", "file_type": "text/markdown", "file_size": 5521, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "6a83066bf527405de68601ca93192c62fe6c2e800e123b38f028abddd33e678c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4588c15e-460c-442d-b239-dcfb116511da", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-power-users.md", "file_name": "neynar_fetch-power-users.md", "file_type": "text/markdown", "file_size": 5521, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "55091e6b7bf19a71db1853e822a2df106f1a986181be656e0e99a9960be85a92", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n          type: object\n          description: Adds context on the viewer's follow relationship with the user.\n          required:\n          - following\n          - followed_by\n          - blocking\n          - blocked_by\n          properties:\n            following:\n              description: Indicates if the viewer is following the user.\n              type: boolean\n            followed_by:\n              description: Indicates if the viewer is followed by the user.\n              type: boolean\n            blocking:\n              description: Indicates if the viewer is blocking the user.\n              type: boolean\n            blocked_by:\n              description: Indicates if the viewer is blocked by the user.\n              type: boolean\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4588, "end_char_idx": 5520, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bc4143a4-54ae-484e-8c10-605bee5e20b2": {"__data__": {"id_": "bc4143a4-54ae-484e-8c10-605bee5e20b2", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers-for-a-channel.md", "file_name": "neynar_fetch-relevant-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 7009, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c68543cd-99fe-4c67-ad79-6f77f5afdf64", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers-for-a-channel.md", "file_name": "neynar_fetch-relevant-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 7009, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "5365d082cca8306f08753ad43aaf1783cf41951ab52ed8d98b616ca36b8f24ad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cae23eb3-0a35-4241-bc04-4de01f529a26", "node_type": "1", "metadata": {}, "hash": "1eed8a835c8bb92600f4ab2581d3677e76dcdf4f1042618c2aa5021bb85c885d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-relevant-followers-for-a-channel\n\n**Endpoint**: `GET /farcaster/channel/followers/relevant`\n\n## Description\nReturns a list of relevant channel followers for a specific FID. This usually shows on a channel as \"X, Y, Z follow this channel\".\n\n## Parameters\n- `id` (query): Channel ID being queried\n- `viewer_fid` (query): The FID of the user to customize this response for. Providing this will also return a list of followers that respects this user's mutes and blocks and includes `viewer_context`.\n\n## Response\n```yaml\ntype: object\nrequired:\n- top_relevant_followers_hydrated\n- all_relevant_followers_dehydrated\nproperties:\n  top_relevant_followers_hydrated:\n    type: array\n    items:\n      type: object\n      properties:\n        object:\n          type: string\n          enum:\n          - follow\n        user:\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid: &id002\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5572, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cae23eb3-0a35-4241-bc04-4de01f529a26": {"__data__": {"id_": "cae23eb3-0a35-4241-bc04-4de01f529a26", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers-for-a-channel.md", "file_name": "neynar_fetch-relevant-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 7009, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c68543cd-99fe-4c67-ad79-6f77f5afdf64", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers-for-a-channel.md", "file_name": "neynar_fetch-relevant-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 7009, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "5365d082cca8306f08753ad43aaf1783cf41951ab52ed8d98b616ca36b8f24ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bc4143a4-54ae-484e-8c10-605bee5e20b2", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers-for-a-channel.md", "file_name": "neynar_fetch-relevant-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 7009, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f2aa70da3dd8b68f6fc9b97daa87a95e5802f0360f91ba8114fb19f4a97d99ab", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n  all_relevant_followers_dehydrated:\n    type: array\n    items:\n      type: object\n      properties:\n        object:\n          type: string\n          enum:\n          - follow\n        user:\n          type: object\n          required:\n          - object\n          - fid\n          properties:\n            object:\n              type: string\n              enum:\n              - user_dehydrated\n            fid: *id002\n            username:\n              type: string\n            display_name:\n              type: string\n            pfp_url:\n              type: string\n```", "mimetype": "text/plain", "start_char_idx": 4558, "end_char_idx": 7008, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "350dc3b8-eede-437f-baa5-4a1a6564faff": {"__data__": {"id_": "350dc3b8-eede-437f-baa5-4a1a6564faff", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers.md", "file_name": "neynar_fetch-relevant-followers.md", "file_type": "text/markdown", "file_size": 7000, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c84833b-95a6-457f-9999-f6f1e212a3ad", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers.md", "file_name": "neynar_fetch-relevant-followers.md", "file_type": "text/markdown", "file_size": 7000, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "69d45480ee13be1cfcb65b4360d6d4e683505ccb36d8489c7f28e09a3e036a0a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "de6abdb3-81f2-40e3-b229-c731ef7c914d", "node_type": "1", "metadata": {}, "hash": "1eed8a835c8bb92600f4ab2581d3677e76dcdf4f1042618c2aa5021bb85c885d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-relevant-followers\n\n**Endpoint**: `GET /farcaster/followers/relevant`\n\n## Description\nReturns a list of relevant followers for a specific FID. This usually shows on a profile as \"X, Y and Z follow this user\".\n\n## Parameters\n- `target_fid` (query): User who's profile you are looking at\n- `viewer_fid` (query): The FID of the user to customize this response for. Providing this will also return a list of followers that respects this user's mutes and blocks and includes `viewer_context`.\n\n## Response\n```yaml\ntype: object\nrequired:\n- top_relevant_followers_hydrated\n- all_relevant_followers_dehydrated\nproperties:\n  top_relevant_followers_hydrated:\n    type: array\n    items:\n      type: object\n      properties:\n        object:\n          type: string\n          enum:\n          - follow\n        user:\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid: &id002\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5725, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "de6abdb3-81f2-40e3-b229-c731ef7c914d": {"__data__": {"id_": "de6abdb3-81f2-40e3-b229-c731ef7c914d", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers.md", "file_name": "neynar_fetch-relevant-followers.md", "file_type": "text/markdown", "file_size": 7000, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c84833b-95a6-457f-9999-f6f1e212a3ad", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers.md", "file_name": "neynar_fetch-relevant-followers.md", "file_type": "text/markdown", "file_size": 7000, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "69d45480ee13be1cfcb65b4360d6d4e683505ccb36d8489c7f28e09a3e036a0a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "350dc3b8-eede-437f-baa5-4a1a6564faff", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers.md", "file_name": "neynar_fetch-relevant-followers.md", "file_type": "text/markdown", "file_size": 7000, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "50616c5bccbed96a8a380a3996f8f2a3dec1e6a3064f36d1ea67508591e8c9a6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n  all_relevant_followers_dehydrated:\n    type: array\n    items:\n      type: object\n      properties:\n        object:\n          type: string\n          enum:\n          - follow\n        user:\n          type: object\n          required:\n          - object\n          - fid\n          properties:\n            object:\n              type: string\n              enum:\n              - user_dehydrated\n            fid: *id002\n            username:\n              type: string\n            display_name:\n              type: string\n            pfp_url:\n              type: string\n```", "mimetype": "text/plain", "start_char_idx": 4549, "end_char_idx": 6999, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "33403ca0-9e4f-4cdc-aef1-e91af2cc37f7": {"__data__": {"id_": "33403ca0-9e4f-4cdc-aef1-e91af2cc37f7", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-fungible-owners.md", "file_name": "neynar_fetch-relevant-fungible-owners.md", "file_type": "text/markdown", "file_size": 5860, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "741d6fed-4413-463d-a6f2-2ff9e23b5d9d", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-fungible-owners.md", "file_name": "neynar_fetch-relevant-fungible-owners.md", "file_type": "text/markdown", "file_size": 5860, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "39685a06d9f21c2c036df8e1d12a5b0487e9986526eff724e46214bdc6b20a6b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3697c03e-1b95-4812-91f5-5954d39564ea", "node_type": "1", "metadata": {}, "hash": "2e957ef945eb3ef0191e2c5a1d2ffedb36c695cf694c562308b5711cb0711368", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-relevant-fungible-owners\n\n**Endpoint**: `GET /farcaster/fungible/owner/relevant`\n\n## Description\nFetch a list of relevant owners for a specific FID. This usually shows on a fungible asset page as \"X, Y, Z and N others you know own this asset\".\n\n## Parameters\n- `contract_address` (query): Contract address of the fungible asset\n- `networks` (query): Comma separated list of networks to fetch balances for. Currently, only \"base\" is supported.\n- `viewer_fid` (query): The FID of the user to customize this response for. Providing this will also return a list of owners that respects this user's mutes and blocks and includes `viewer_context`.\n\n## Response\n```yaml\ntype: object\nrequired:\n- top_relevant_fungible_owners_hydrated\n- all_relevant_fungible_owners_dehydrated\nproperties:\n  top_relevant_owners_hydrated:\n    type: array\n    items: &id002\n      type: object\n      required:\n      - object\n      - fid\n      - custody_address\n      - username\n      - profile\n      - follower_count\n      - following_count\n      - verifications\n      - verified_addresses\n      - verified_accounts\n      - power_badge\n      properties:\n        object:\n          type: string\n          enum:\n          - user\n        fid:\n          type: integer\n          format: int32\n          description: The unique identifier of a farcaster user (unsigned integer)\n          examples:\n          - 3\n          - 191\n          - 2\n          - 194\n          - 19960\n        username:\n          type: string\n        display_name:\n          type: string\n        custody_address: &id001\n          type: string\n          pattern: ^0x[a-fA-F0-9]{40}$\n          description: Ethereum address\n        pfp_url:\n          type: string\n          description: The URL of the user's profile picture\n        profile:\n          type: object\n          required:\n          - bio\n          properties:\n            bio:\n              type: object\n              required:\n              - text\n              - mentioned_profiles\n              properties:\n                text:\n                  type: string\n                mentioned_profiles:\n                  type: array\n                  items:\n                    type: string\n                  default: []\n            location:\n              description: Coordinates and place names for a location\n              type: object\n              required:\n              - latitude\n              - longitude\n              properties:\n                latitude:\n                  type: number\n                  format: double\n                  minimum: -90\n                  maximum: 90\n                longitude:\n                  type: number\n                  format: double\n                  minimum: -180\n                  maximum: 180\n                address:\n                  type: object\n                  required:\n                  - city\n                  - country\n                  properties:\n                    city:\n                      type: string\n                    state:\n                      type: string\n                    state_code:\n                      type: string\n                    country:\n                      type: string\n                    country_code:\n                      type: string\n        follower_count:\n          type: integer\n          format: int32\n          description: The number of followers the user has.\n        following_count:\n          type: integer\n          format: int32\n          description: The number of users the user is following.\n        verifications:\n          type: array\n          items: *id001\n        verified_addresses:\n          type: object\n          required:\n          - eth_addresses\n          - sol_addresses\n          properties:\n            eth_addresses:\n              type: array\n              description: List of verified Ethereum addresses of the user sorted\n                by oldest to most recent.\n              items: *id001\n            sol_addresses:\n              type: array\n              description: List of verified Solana addresses of the user sorted by\n                oldest to most recent.\n              items:\n                type: string\n                pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                description: Solana address\n        verified_accounts:\n          type: array\n          description: Verified accounts of the user on other platforms, currently\n            only X is supported.\n          items:\n            type: object\n            properties:\n              platform:\n                type: string\n                enum:\n                - x\n                - github\n              username:\n                type: string\n        power_badge:\n          type: boolean\n        experimental:\n          type: object\n          required:\n          - neynar_user_score\n          properties:\n            neynar_user_score:\n              type: number\n              format: double\n              description: Score that represents the probability that the account\n                is not spam.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5017, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3697c03e-1b95-4812-91f5-5954d39564ea": {"__data__": {"id_": "3697c03e-1b95-4812-91f5-5954d39564ea", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-fungible-owners.md", "file_name": "neynar_fetch-relevant-fungible-owners.md", "file_type": "text/markdown", "file_size": 5860, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "741d6fed-4413-463d-a6f2-2ff9e23b5d9d", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-fungible-owners.md", "file_name": "neynar_fetch-relevant-fungible-owners.md", "file_type": "text/markdown", "file_size": 5860, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "39685a06d9f21c2c036df8e1d12a5b0487e9986526eff724e46214bdc6b20a6b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "33403ca0-9e4f-4cdc-aef1-e91af2cc37f7", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-fungible-owners.md", "file_name": "neynar_fetch-relevant-fungible-owners.md", "file_type": "text/markdown", "file_size": 5860, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "66cdc5f6540041c65f2f049521320b41db3180c08b3c39863a43edd9df47f96f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                type: string\n                pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                description: Solana address\n        verified_accounts:\n          type: array\n          description: Verified accounts of the user on other platforms, currently\n            only X is supported.\n          items:\n            type: object\n            properties:\n              platform:\n                type: string\n                enum:\n                - x\n                - github\n              username:\n                type: string\n        power_badge:\n          type: boolean\n        experimental:\n          type: object\n          required:\n          - neynar_user_score\n          properties:\n            neynar_user_score:\n              type: number\n              format: double\n              description: Score that represents the probability that the account\n                is not spam.\n        viewer_context:\n          type: object\n          description: Adds context on the viewer's follow relationship with the user.\n          required:\n          - following\n          - followed_by\n          - blocking\n          - blocked_by\n          properties:\n            following:\n              description: Indicates if the viewer is following the user.\n              type: boolean\n            followed_by:\n              description: Indicates if the viewer is followed by the user.\n              type: boolean\n            blocking:\n              description: Indicates if the viewer is blocking the user.\n              type: boolean\n            blocked_by:\n              description: Indicates if the viewer is blocked by the user.\n              type: boolean\n  all_relevant_owners_dehydrated:\n    type: array\n    items: *id002\n```", "mimetype": "text/plain", "start_char_idx": 4119, "end_char_idx": 5859, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "06b1f652-c631-4835-b981-a702c5c13d16": {"__data__": {"id_": "06b1f652-c631-4835-b981-a702c5c13d16", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "67caaf31-0abd-45ff-8aee-a8fd39ad2dca", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "355b8426e1df6cf9116d365ca6767aca6205f9062921341e4398e1874d08ca13", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "32b4b039-6b2a-4beb-a2f0-6ae0f369bcfd", "node_type": "1", "metadata": {}, "hash": "276d9829bd28ca7c832cf3651919d5f3d9662484a0269ecacb934ce07c8af95d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-replies-and-recasts-for-user\n\n**Endpoint**: `GET /farcaster/feed/user/replies_and_recasts`\n\n## Description\nFetch recent replies and recasts for a given user FID; sorted by most recent first\n\n## Parameters\n- `fid` (query): FID of user whose replies and recasts you want to fetch\n- `filter` (query): filter to fetch only replies or recasts\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n- `viewer_fid` (query): Providing this will return a feed that respects this user's mutes and blocks and includes `viewer_context`.\n\n## Response\n```yaml\ntype: object\nrequired:\n- casts\n- next\nproperties:\n  casts:\n    type: array\n    items:\n      allOf:\n      - type: object\n        required:\n        - hash\n        - parent_hash\n        - parent_url\n        - root_parent_url\n        - parent_author\n        - author\n        - text\n        - timestamp\n        - embeds\n        properties:\n          hash:\n            type: string\n          parent_hash:\n            type:\n            - string\n            - 'null'\n          parent_url:\n            type:\n            - string\n            - 'null'\n          root_parent_url:\n            type:\n            - string\n            - 'null'\n          parent_author:\n            type: object\n            required:\n            - fid\n            properties:\n              fid:\n                oneOf:\n                - type: 'null'\n                - &id001\n                  type: integer\n                  format: int32\n                  description: The unique identifier of a farcaster user (unsigned\n                    integer)\n                  examples:\n                  - 3\n                  - 191\n                  - 2\n                  - 194\n                  - 19960\n          author: &id011\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: *id001\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id002\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5440, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "32b4b039-6b2a-4beb-a2f0-6ae0f369bcfd": {"__data__": {"id_": "32b4b039-6b2a-4beb-a2f0-6ae0f369bcfd", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "67caaf31-0abd-45ff-8aee-a8fd39ad2dca", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "355b8426e1df6cf9116d365ca6767aca6205f9062921341e4398e1874d08ca13", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "06b1f652-c631-4835-b981-a702c5c13d16", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "04bb282e9b4de2dcd83d1da65e22981be739315d88b77d2116f7a5a3fc7210f3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3de03ce0-0c80-4006-ad6c-111958bd422d", "node_type": "1", "metadata": {}, "hash": "fe0df8fb809538d41413faf06c0a270674cb9253987f2f1009b522ab38419e14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 4590, "end_char_idx": 7413, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3de03ce0-0c80-4006-ad6c-111958bd422d": {"__data__": {"id_": "3de03ce0-0c80-4006-ad6c-111958bd422d", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "67caaf31-0abd-45ff-8aee-a8fd39ad2dca", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "355b8426e1df6cf9116d365ca6767aca6205f9062921341e4398e1874d08ca13", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "32b4b039-6b2a-4beb-a2f0-6ae0f369bcfd", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "8a3008e9b9f3081bd5381917f122843967911d083fae1bcb9a3c583ce9880f6e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f35635d8-d6ba-4599-8df4-54064116dfe2", "node_type": "1", "metadata": {}, "hash": "7693468d1bce4d6458a0c00eb5858d0c52e0d3acfd9f809418886132f3cd260d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          text:\n            type: string\n          timestamp: &id006\n            type: string\n            format: date-time\n          embeds:\n            type: array\n            items:\n              oneOf:\n              - &id007\n                type: object\n                required:\n                - url\n                properties:\n                  url:\n                    type: string\n                  metadata:\n                    type: object\n                    required:\n                    - _status\n                    properties:\n                      _status:\n                        type: string\n                      content_type:\n                        type:\n                        - string\n                        - 'null'\n                      content_length:\n                        type:\n                        - integer\n                        - 'null'\n                      image:\n                        type: object\n                        properties:\n                          height_px:\n                            type: integer\n                          width_px:\n                            type: integer\n                      video:\n                        type: object\n                        properties:\n                          duration_s:\n                            type: number\n                          stream:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                codec_name:\n                                  type: string\n                                height_px:\n                                  type: integer\n                                width_px:\n                                  type: integer\n                      html:\n                        allOf:\n                        - type: object\n                          properties:\n                            favicon:\n                              type: string\n                            modifiedTime:\n                              type: string\n                            ogArticleAuthor:\n                              type: string\n                            ogArticleExpirationTime:\n                              type: string\n                            ogArticleModifiedTime:\n                              type: string\n                            ogArticlePublishedTime:\n                              type: string\n                            ogArticlePublisher:\n                              type: string\n                            ogArticleSection:\n                              type: string\n                            ogArticleTag:\n                              type: string\n                            ogAudio:\n                              type: string\n                            ogAudioSecureURL:\n                              type: string\n                            ogAudioType:\n                              type: string\n                            ogAudioURL:\n                              type: string\n                            ogAvailability:\n                              type: string\n                            ogDate:\n                              type: string\n                            ogDescription:\n                              type: string\n                            ogDeterminer:\n                              type: string\n                            ogEpisode:\n                              type: string\n                            ogImage:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                  alt:\n                                    type: string\n                                required:\n                                - url\n                            ogLocale:\n                              type: string\n                            ogLocaleAlternate:\n                              type: string\n                            ogLogo:\n                              type: string\n                            ogMovie:\n                              type: string\n                            ogPriceAmount:\n                              type: string\n                            ogPriceCurrency:\n                              type: string\n                            ogProductAvailability:\n                              type: string\n                            ogProductCondition:\n                              type: string\n                            ogProductPriceAmount:\n                              type: string\n                            ogProductPriceCurrency:\n                              type: string\n                            ogProductRetailerItemId:\n                              type: string\n                            ogSiteName:\n                              type: string\n                            ogTitle:\n                              type: string\n                            ogType:\n                              type: string\n                            ogUrl:\n                              type: string\n                            ogVideo:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                required:\n                                - url\n                            ogVideoActor:\n                              type: string\n                            ogVideoActorId:\n                              type: string\n                            ogVideoActorRole:\n                              type: string\n                            ogVideoDirector:\n                              type: string\n                            ogVideoDuration:\n                              type: string\n                            ogVideoOther:\n                              type: string\n                            ogVideoReleaseDate:\n                              type: string\n                            ogVideoSecureURL:\n                              type: string\n                            ogVideoSeries:\n                              type: string\n                            ogVideoTag:\n                              type: string\n                            ogVideoTvShow:\n                              type: string\n                            ogVideoWriter:\n                              type: string\n                            ogWebsite:\n                              type: string\n                            updatedTime:\n                              type: string\n                        - type: object\n                          properties:\n                            oembed:\n                              oneOf:\n                              - allOf:\n                                - &id003\n                                  type: object\n                                  description: Basic data structure of every oembed\n                                    response see https://oembed.com/\n                                  required:\n                                  - type\n                                  - version\n                                  properties:\n                                    type:\n                                      type: string\n                                    version:\n                                      type:\n                                      - string\n                                      - 'null'\n                                    title:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A text title, describing the resource.", "mimetype": "text/plain", "start_char_idx": 6548, "end_char_idx": 15953, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f35635d8-d6ba-4599-8df4-54064116dfe2": {"__data__": {"id_": "f35635d8-d6ba-4599-8df4-54064116dfe2", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "67caaf31-0abd-45ff-8aee-a8fd39ad2dca", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "355b8426e1df6cf9116d365ca6767aca6205f9062921341e4398e1874d08ca13", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3de03ce0-0c80-4006-ad6c-111958bd422d", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "000cefa5294325b361d6905103df5e919844ab4e8127962eae05090a8ca83f6e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75b56390-c7c0-4aa3-92bd-360fb300beff", "node_type": "1", "metadata": {}, "hash": "02bb5551c6319ad9c9e131ba050e77c2a58a5756c4a5f538be3d18d6c2b844c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the author/owner of\n                                        the resource.\n                                    author_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL for the author/owner of the\n                                        resource.\n                                    provider_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the resource provider.\n                                    provider_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The url of the resource provider.\n                                    cache_age:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The suggested cache lifetime for\n                                        this resource, in seconds. Consumers may choose\n                                        to use this value or not.\n                                    thumbnail_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL to a thumbnail image representing\n                                        the resource. The thumbnail must respect any\n                                        maxwidth and maxheight parameters. If this\n                                        parameter is present, thumbnail_width and\n                                        thumbnail_height must also be present.\n                                    thumbnail_width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_height must also be present.\n                                    thumbnail_height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_width must also be present.\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - rich\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to display the\n                                        resource. The HTML should have no padding\n                                        or margins. Consumers may wish to load the\n                                        HTML in an off-domain iframe to avoid XSS\n                                        vulnerabilities. The markup should be valid\n                                        XHTML 1.0 Basic.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - video\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to embed a video\n                                        player. The HTML should have no padding or\n                                        margins. Consumers may wish to load the HTML\n                                        in an off-domain iframe to avoid XSS vulnerabilities.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 15990, "end_char_idx": 24320, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "75b56390-c7c0-4aa3-92bd-360fb300beff": {"__data__": {"id_": "75b56390-c7c0-4aa3-92bd-360fb300beff", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "67caaf31-0abd-45ff-8aee-a8fd39ad2dca", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "355b8426e1df6cf9116d365ca6767aca6205f9062921341e4398e1874d08ca13", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f35635d8-d6ba-4599-8df4-54064116dfe2", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "edbc01b8802267640e2ca41b85fd8ddc105031682bb03e9da1639e2807955773", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6f4fa22c-36ab-4189-856d-0359ea97c164", "node_type": "1", "metadata": {}, "hash": "4bf0e8989166b44509d34059a21981076b724bc3fd8b9c3a31d03109f5c8881a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - link\n                              discriminator:\n                                propertyName: type\n                                mapping:\n                                  rich: '#/components/schemas/OembedRichData'\n                                  video: '#/components/schemas/OembedVideoData'\n                                  photo: '#/components/schemas/OembedPhotoData'\n                                  link: '#/components/schemas/OembedLinkData'\n                      frame: &id010\n                        discriminator:\n                          propertyName: version\n                        oneOf:\n                        - description: Frame v1 object\n                          allOf:\n                          - &id004\n                            description: Frame base object used across all versions\n                            type: object\n                            required:\n                            - version\n                            - image\n                            - frames_url\n                            properties:\n                              version:\n                                type: string\n                                description: Version of the frame, 'next' for v2,\n                                  'vNext' for v1\n                              image:\n                                type: string\n                                description: URL of the image\n                              frames_url:\n                                type: string\n                                description: Launch URL of the frame\n                          - type: object\n                            properties:\n                              buttons:\n                                type: array\n                                items:\n                                  type: object\n                                  required:\n                                  - index\n                                  - action_type\n                                  properties:\n                                    title:\n                                      type: string\n                                      description: Title of the button\n                                    index:\n                                      type: integer\n                                      description: Index of the button\n                                    action_type:\n                                      type: string\n                                      description: The action type of a frame button.\n                                        Action types \"mint\" & \"link\" are to be handled\n                                        on the client side only and so they will produce\n                                        a no/op for POST /farcaster/frame/action.\n                                      enum:\n                                      - post\n                                      - post_redirect\n                                      - tx\n                                      - link\n                                      - mint\n                                    target:\n                                      type: string\n                                      description: Target of the button\n                                    post_url:\n                                      type: string\n                                      description: Used specifically for the tx action\n                                        type to post a successful transaction hash\n                              post_url:\n                                type: string\n                                description: Post URL to take an action on this frame\n                              title:\n                                type: string\n                              image_aspect_ratio:\n                                type: string\n                              input:\n                                type: object\n                                properties:\n                                  text:\n                                    type: string\n                                    description: Input text for the frame\n                              state:\n                                type: object\n                                properties:\n                                  serialized:\n                                    type: string\n                                    description: State for the frame in a serialized\n                                      format\n                        - description: Frame v2 object\n                          allOf:\n                          - *id004\n                          - type: object\n                            required:\n                            - title\n                            - name\n                            - icon\n                            properties:\n                              manifest:\n                                type: object\n                                properties:\n                                  account_association:\n                                    type: object\n                                    properties:\n                                      header:\n                                        type: string\n                                      payload:\n                                        type: string\n                                      signature:\n                                        type: string\n                                    required:\n                                    - header\n                                    - payload\n                                    - signature\n                                  frame:\n                                    type: object\n                                    properties:\n                                      version:\n                                        type: string\n                                        enum:\n                                        - 0.0.0\n                                        - 0.0.", "mimetype": "text/plain", "start_char_idx": 22627, "end_char_idx": 30720, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6f4fa22c-36ab-4189-856d-0359ea97c164": {"__data__": {"id_": "6f4fa22c-36ab-4189-856d-0359ea97c164", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "67caaf31-0abd-45ff-8aee-a8fd39ad2dca", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "355b8426e1df6cf9116d365ca6767aca6205f9062921341e4398e1874d08ca13", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "75b56390-c7c0-4aa3-92bd-360fb300beff", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "3d13d3a79b4861c389dffa0aee60116f6312b34225012aea88c8b7d781826bf1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e8534c91-b331-4be3-b790-77a816f72ea1", "node_type": "1", "metadata": {}, "hash": "256dbc3a053302772e68551d3c8ed80cd3cc87d6cacee7a7b90bcf151cedcd80", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                        - 0.0.1\n                                        - '1'\n                                        - next\n                                      name:\n                                        type: string\n                                        maxLength: 32\n                                      home_url:\n                                        type: string\n                                        maxLength: 512\n                                      icon_url:\n                                        type: string\n                                        maxLength: 512\n                                      image_url:\n                                        type: string\n                                        maxLength: 512\n                                      button_title:\n                                        type: string\n                                        maxLength: 32\n                                      splash_image_url:\n                                        type: string\n                                        maxLength: 512\n                                      splash_background_color:\n                                        type: string\n                                      webhook_url:\n                                        type: string\n                                        maxLength: 512\n                                    required:\n                                    - version\n                                    - name\n                                    - home_url\n                                    - icon_url\n                                  triggers:\n                                    type: array\n                                    items:\n                                      oneOf:\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - cast\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - composer\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                required:\n                                - account_association\n                              author: &id005\n                                type: object\n                                required:\n                                - object\n                                - fid\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - user_dehydrated\n                                  fid: *id001\n                                  username:\n                                    type: string\n                                  display_name:\n                                    type: string\n                                  pfp_url:\n                                    type: string\n                        mapping:\n                          vNext: '#/components/schemas/FrameV1'\n                          next: '#/components/schemas/FrameV2'\n                          '1': '#/components/schemas/FrameV2'\n                          0.0.0: '#/components/schemas/FrameV2'\n                          0.0.1: '#/components/schemas/FrameV2'\n              - type: object\n                required:\n                - cast\n                properties:\n                  cast_id: &id008\n                    type: object\n                    required:\n                    - fid\n                    - hash\n                    properties:\n                      fid: *id001\n                      hash:\n                        type: string\n                  cast:\n                    type: object\n                    required:\n                    - hash\n                    - parent_hash\n                    - parent_url\n                    - root_parent_url\n                    - parent_author\n                    - author\n                    - text\n                    - timestamp\n                    - type\n                    - embeds\n                    - channel\n                    properties:\n                      hash:\n                        type: string\n                      parent_hash:\n                        type:\n                        - string\n                        - 'null'\n                      parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      root_parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      parent_author:\n                        type: object\n                        required:\n                        - fid\n                        properties:\n                          fid:\n                            oneOf:\n                            - type: 'null'\n                            - *id001\n                      author: *id005\n                      text:\n                        type: string\n                      timestamp: *id006\n                      type: &id009\n                        type: string\n                        enum:\n                        - cast-mention\n                        - cast-reply\n                        description: 'The notification type of a cast.\n\n                          '\n                      embeds:\n                        type: array\n                        items:\n                          oneOf:\n                          - *id007\n                          - type: object\n                            required:\n                            - cast\n                            properties:\n                              cast_id: *id008\n                              cast:\n                                type: object\n                                required:\n                                - object\n                                - hash\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - cast_dehydrated\n                                  hash:\n                                    type: string\n                                  author: *id005\n                      channel:\n                        oneOf:\n                        - type: 'null'\n                        - &id013\n                          type: object\n                          required:\n                          - id\n                          - name\n                          - object\n                          properties:\n                            id:\n                              type: string\n                            name:\n                              type: string\n                            object:\n                              type: string\n                              enum:\n                              - channel_dehydrated\n                            image_url:\n                              type: string\n                            viewer_context: &id012\n                              description: Adds context on the viewer's or author's\n                                role in the channel.", "mimetype": "text/plain", "start_char_idx": 30670, "end_char_idx": 39437, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e8534c91-b331-4be3-b790-77a816f72ea1": {"__data__": {"id_": "e8534c91-b331-4be3-b790-77a816f72ea1", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "67caaf31-0abd-45ff-8aee-a8fd39ad2dca", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "355b8426e1df6cf9116d365ca6767aca6205f9062921341e4398e1874d08ca13", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6f4fa22c-36ab-4189-856d-0359ea97c164", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "dba16c3982cf1ce70711febc7fe547dbea73dd27448c83c85430b5c0fdc752b5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                              required:\n                              - following\n                              properties:\n                                following:\n                                  description: Indicates if the user is following\n                                    the channel.\n                                  type: boolean\n                                role:\n                                  type: string\n                                  description: The role of a channel member\n                                  enum:\n                                  - member\n                                  - moderator\n          type: *id009\n      - type: object\n        required:\n        - reactions\n        - replies\n        - thread_hash\n        - mentioned_profiles\n        - channel\n        properties:\n          frames:\n            type: array\n            items: *id010\n          reactions:\n            type: object\n            required:\n            - likes\n            - recasts\n            - likes_count\n            - recasts_count\n            properties:\n              likes:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  properties:\n                    fid: *id001\n              recasts:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  - fname\n                  properties:\n                    fid: *id001\n                    fname:\n                      type: string\n              likes_count:\n                type: integer\n                format: int32\n              recasts_count:\n                type: integer\n                format: int32\n          replies:\n            type: object\n            required:\n            - count\n            properties:\n              count:\n                type: integer\n                format: int32\n          thread_hash:\n            type:\n            - string\n            - 'null'\n          mentioned_profiles:\n            type: array\n            items: *id011\n          channel:\n            oneOf:\n            - oneOf:\n              - type: object\n                required:\n                - id\n                - url\n                - object\n                properties:\n                  id:\n                    type: string\n                  url:\n                    type: string\n                  name:\n                    type: string\n                  description:\n                    type: string\n                  object:\n                    type: string\n                    enum:\n                    - channel\n                  created_at:\n                    description: Epoch timestamp in seconds.\n                    type: number\n                  follower_count:\n                    description: Number of followers the channel has.\n                    type: number\n                  external_link:\n                    type: object\n                    description: Channel's external link.\n                    properties:\n                      title:\n                        type: string\n                      url:\n                        type: string\n                  image_url:\n                    type: string\n                  parent_url:\n                    type: string\n                    format: uri\n                  lead: *id011\n                  moderator_fids:\n                    type: array\n                    items: *id001\n                  member_count:\n                    type: integer\n                    format: int32\n                  moderator: *id011\n                  pinned_cast_hash:\n                    type: string\n                    default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                    description: Cast Hash\n                  hosts:\n                    type: array\n                    deprecated: true\n                    items: *id011\n                  viewer_context: *id012\n              - *id013\n              discriminator:\n                propertyName: object\n                mapping:\n                  channel: '#/components/schemas/Channel'\n                  dehydrated_channel: '#/components/schemas/DehydratedChannel'\n            - type: 'null'\n          viewer_context:\n            type: object\n            description: Adds context on interactions the viewer has made with the\n              cast.\n            required:\n            - liked\n            - recasted\n            properties:\n              liked:\n                description: Indicates if the viewer liked the cast.\n                type: boolean\n              recasted:\n                description: Indicates if the viewer recasted the cast.\n                type: boolean\n          author_channel_context: *id012\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 39468, "end_char_idx": 44477, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2634fb89-fb15-4512-8377-b2ef79a93946": {"__data__": {"id_": "2634fb89-fb15-4512-8377-b2ef79a93946", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribed-to-for-fid.md", "file_name": "neynar_fetch-subscribed-to-for-fid.md", "file_type": "text/markdown", "file_size": 10101, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f69422f9-3bbf-42ab-a90b-6dfd4de29c6b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribed-to-for-fid.md", "file_name": "neynar_fetch-subscribed-to-for-fid.md", "file_type": "text/markdown", "file_size": 10101, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "126c74d9f1c2ccdc9b532c96143e9cdb0844769497aed56d1171619827b26afc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8649b97f-3190-4208-aa9c-eaab63e5490e", "node_type": "1", "metadata": {}, "hash": "ba8f437399380739603c2291c35939275282167afadcef7d47e30ad6b1a810ec", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-subscribed-to-for-fid\n\n**Endpoint**: `GET /farcaster/user/subscribed_to`\n\n## Description\nFetch what FIDs and contracts a FID is subscribed to.\n\n## Parameters\n- `fid` (query): No description\n- `viewer_fid` (query): No description\n- `subscription_provider` (query): No description\n\n## Response\n```yaml\ntype: object\nproperties:\n  subscribed_to:\n    type: array\n    items:\n      allOf:\n      - type: object\n        required:\n        - object\n        - contract_address\n        - chain\n        - metadata\n        - owner_address\n        - price\n        - protocol_version\n        - token\n        properties:\n          object:\n            type: string\n            examples:\n            - subscription\n          provider_name:\n            type: string\n            examples:\n            - fabric_stp\n          contract_address:\n            type: string\n            examples:\n            - '0xff63fc310d47ef80961056ac8df0b3f1a9e3ef58'\n          chain:\n            type: integer\n            examples:\n            - 8453\n          metadata:\n            type: object\n            properties:\n              title:\n                type: string\n                examples:\n                - /memes channel sub\n              symbol:\n                type: string\n                examples:\n                - MMS\n              art_url:\n                type: string\n                examples:\n                - https://storage.withfabric.xyz/loom/403fdc10-95f3-4b25-9d77-5aac7ccb9fd1.jpg\n            required:\n            - title\n            - symbol\n            - art_url\n          owner_address:\n            type: string\n            examples:\n            - '0xb6f6dce6000ca88cc936b450cedb16a5c15f157f'\n          price:\n            type: object\n            properties:\n              period_duration_seconds:\n                type: integer\n                examples:\n                - 2592000\n              tokens_per_period:\n                type: string\n                examples:\n                - '350574998400000'\n              initial_mint_price:\n                type: string\n                examples:\n                - '0'\n            required:\n            - period_duration_seconds\n            - tokens_per_period\n            - initial_mint_price\n          tiers:\n            type: array\n            items: &id001\n              type: object\n              properties:\n                id:\n                  type: integer\n                  examples:\n                  - 1\n                price:\n                  type: object\n                  properties:\n                    period_duration_seconds:\n                      type: integer\n                      examples:\n                      - 2592000\n                    tokens_per_period:\n                      type: string\n                      examples:\n                      - '3000000000000000'\n                    initial_mint_price:\n                      type: string\n                      examples:\n                      - '0'\n          protocol_version:\n            type: integer\n            examples:\n            - 1\n          token:\n            type: object\n            properties:\n              symbol:\n                type: string\n                examples:\n                - ETH\n              address:\n                type:\n                - string\n                - 'null'\n                examples:\n                - null\n              decimals:\n                type: integer\n                examples:\n                - 18\n              erc20:\n                type: boolean\n                examples:\n                - false\n            required:\n            - symbol\n            - address\n            - decimals\n            - erc20\n      - type: object\n        required:\n        - expires_at\n        - subscribed_at\n        - tier\n        - creator\n        properties:\n          expires_at:\n            type: string\n            format: date-time\n            examples:\n            - '2023-09-13T22:10:22.000Z'\n          subscribed_at:\n            type: string\n            format: date-time\n            examples:\n            - '2023-09-13T22:10:22.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4095, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8649b97f-3190-4208-aa9c-eaab63e5490e": {"__data__": {"id_": "8649b97f-3190-4208-aa9c-eaab63e5490e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribed-to-for-fid.md", "file_name": "neynar_fetch-subscribed-to-for-fid.md", "file_type": "text/markdown", "file_size": 10101, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f69422f9-3bbf-42ab-a90b-6dfd4de29c6b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribed-to-for-fid.md", "file_name": "neynar_fetch-subscribed-to-for-fid.md", "file_type": "text/markdown", "file_size": 10101, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "126c74d9f1c2ccdc9b532c96143e9cdb0844769497aed56d1171619827b26afc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2634fb89-fb15-4512-8377-b2ef79a93946", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribed-to-for-fid.md", "file_name": "neynar_fetch-subscribed-to-for-fid.md", "file_type": "text/markdown", "file_size": 10101, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "6e3b1a3c6bb356cec06c45526c49a47ece61e76f34fcad722e5d615122bc727e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "000Z'\n          subscribed_at:\n            type: string\n            format: date-time\n            examples:\n            - '2023-09-13T22:10:22.000Z'\n          tier: *id001\n          creator:\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid:\n                type: integer\n                format: int32\n                description: The unique identifier of a farcaster user (unsigned integer)\n                examples:\n                - 3\n                - 191\n                - 2\n                - 194\n                - 19960\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id002\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n```", "mimetype": "text/plain", "start_char_idx": 3952, "end_char_idx": 10100, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "225d592a-5c05-43d8-994c-0fb2e8948929": {"__data__": {"id_": "225d592a-5c05-43d8-994c-0fb2e8948929", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribers-for-fid.md", "file_name": "neynar_fetch-subscribers-for-fid.md", "file_type": "text/markdown", "file_size": 7312, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b7651718-c022-4b9a-84c6-55af40abf08e", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribers-for-fid.md", "file_name": "neynar_fetch-subscribers-for-fid.md", "file_type": "text/markdown", "file_size": 7312, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "4151233ddf21b29f4c80a606ce3be0ee085e9fe704477342d12123872d7ce891", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5f7a56ab-3811-400f-93f3-ce17f9fd03c3", "node_type": "1", "metadata": {}, "hash": "9b736745c42ae93e420470b2a2fda4a6505ae06a7f41d66a91263db052ce1c60", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-subscribers-for-fid\n\n**Endpoint**: `GET /farcaster/user/subscribers`\n\n## Description\nFetch subscribers for a given FID's contracts. Doesn't return addresses that don't have an FID.\n\n## Parameters\n- `fid` (query): No description\n- `viewer_fid` (query): No description\n- `subscription_provider` (query): No description\n\n## Response\n```yaml\ntype: object\nproperties:\n  subscribers:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - user\n      - subscribed_to\n      properties:\n        object:\n          type: string\n          examples:\n          - subscriber\n        user:\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid:\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5782, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5f7a56ab-3811-400f-93f3-ce17f9fd03c3": {"__data__": {"id_": "5f7a56ab-3811-400f-93f3-ce17f9fd03c3", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribers-for-fid.md", "file_name": "neynar_fetch-subscribers-for-fid.md", "file_type": "text/markdown", "file_size": 7312, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b7651718-c022-4b9a-84c6-55af40abf08e", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribers-for-fid.md", "file_name": "neynar_fetch-subscribers-for-fid.md", "file_type": "text/markdown", "file_size": 7312, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "4151233ddf21b29f4c80a606ce3be0ee085e9fe704477342d12123872d7ce891", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "225d592a-5c05-43d8-994c-0fb2e8948929", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribers-for-fid.md", "file_name": "neynar_fetch-subscribers-for-fid.md", "file_type": "text/markdown", "file_size": 7312, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "deac29da695b6f608338be4704c7b6e970c755dc68c60ab616b0e10e06d20bfa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        subscribed_to:\n          type: object\n          properties:\n            object:\n              type: string\n              examples:\n              - subscription_dehydrated\n            provider_name:\n              type: string\n              examples:\n              - fabric_stp\n            contract_address:\n              type: string\n              examples:\n              - '0x325b3e2c19f4900f8f4eb5f6872dc2715e77cbac'\n            protocol_version:\n              type: integer\n              examples:\n              - 1\n            chain:\n              type: integer\n              examples:\n              - 8453\n            expires_at:\n              type: string\n              format: date-time\n              examples:\n              - '2023-09-13T22:10:22.000Z'\n            subscribed_at:\n              type: string\n              format: date-time\n              examples:\n              - '2023-09-13T22:10:22.000Z'\n            tier_id:\n              type: string\n              examples:\n              - '0'\n          required:\n          - object\n          - provider_name\n```", "mimetype": "text/plain", "start_char_idx": 4687, "end_char_idx": 7311, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4ca82251-7c02-40ba-9c4e-25a5daa2e6a4": {"__data__": {"id_": "4ca82251-7c02-40ba-9c4e-25a5daa2e6a4", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscription-check.md", "file_name": "neynar_fetch-subscription-check.md", "file_type": "text/markdown", "file_size": 1118, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e4ace45a-51e2-4bf6-a4bd-c15ac40c1d88", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscription-check.md", "file_name": "neynar_fetch-subscription-check.md", "file_type": "text/markdown", "file_size": 1118, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "2a1384b24e22f818ea4b6c30803270c2ab99c5548c068412f1ae12dd19662ef0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-subscription-check\n\n**Endpoint**: `GET /stp/subscription_check`\n\n## Description\nCheck if a wallet address is subscribed to a given STP (Hypersub) contract.\n\n## Parameters\n- `addresses` (query): Comma separated list of Ethereum addresses, up to 350 at a time\n- `contract_address` (query): Ethereum address of the STP contract\n- `chain_id` (query): Chain ID of the STP contract\n\n## Response\n```yaml\ntype: object\nadditionalProperties:\n  $ref: '#/components/schemas/SubscriptionStatus'\nexamples:\n- summary: Active subscription example\n  value:\n    '0xedd3783e8c7c52b80cfbd026a63c207edc9cbee7':\n      object: subscribed_to_dehydrated\n      status: true\n      expires_at: 1748890497000\n      subscribed_at: 1719256819704\n      tier:\n        id: 1\n        price:\n          period_duration_seconds: 2592000\n          tokens_per_period: '3499999997472000'\n          initial_mint_price: '0'\n- summary: Inactive subscription example\n  value:\n    '0x5a927ac639636e534b678e81768ca19e2c6280b7':\n      object: subscribed_to_dehydrated\n      status: false\n      expires_at: null\n      subscribed_at: null\n      tier: null\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1117, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0fdb5891-8193-4d80-ba81-5215e5899e04": {"__data__": {"id_": "0fdb5891-8193-4d80-ba81-5215e5899e04", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscriptions-for-fid.md", "file_name": "neynar_fetch-subscriptions-for-fid.md", "file_type": "text/markdown", "file_size": 4334, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "615a3998-f805-43b5-abfa-6298517a81c2", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscriptions-for-fid.md", "file_name": "neynar_fetch-subscriptions-for-fid.md", "file_type": "text/markdown", "file_size": 4334, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "3e6e555f085feeb1496cedc9c4ff65378ffb24ef6099eb6bcff0373f8e8ab95b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-subscriptions-for-fid\n\n**Endpoint**: `GET /farcaster/user/subscriptions_created`\n\n## Description\nFetch created subscriptions for a given FID's.\n\n## Parameters\n- `fid` (query): No description\n- `subscription_provider` (query): No description\n\n## Response\n```yaml\ntype: object\nproperties:\n  subscriptions_created:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - subscriptions_created\n      properties:\n        object:\n          type: string\n        subscriptions_created:\n          type: array\n          items:\n            type: object\n            required:\n            - object\n            - contract_address\n            - chain\n            - metadata\n            - owner_address\n            - price\n            - protocol_version\n            - token\n            properties:\n              object:\n                type: string\n                examples:\n                - subscription\n              provider_name:\n                type: string\n                examples:\n                - fabric_stp\n              contract_address:\n                type: string\n                examples:\n                - '0xff63fc310d47ef80961056ac8df0b3f1a9e3ef58'\n              chain:\n                type: integer\n                examples:\n                - 8453\n              metadata:\n                type: object\n                properties:\n                  title:\n                    type: string\n                    examples:\n                    - /memes channel sub\n                  symbol:\n                    type: string\n                    examples:\n                    - MMS\n                  art_url:\n                    type: string\n                    examples:\n                    - https://storage.withfabric.xyz/loom/403fdc10-95f3-4b25-9d77-5aac7ccb9fd1.jpg\n                required:\n                - title\n                - symbol\n                - art_url\n              owner_address:\n                type: string\n                examples:\n                - '0xb6f6dce6000ca88cc936b450cedb16a5c15f157f'\n              price:\n                type: object\n                properties:\n                  period_duration_seconds:\n                    type: integer\n                    examples:\n                    - 2592000\n                  tokens_per_period:\n                    type: string\n                    examples:\n                    - '350574998400000'\n                  initial_mint_price:\n                    type: string\n                    examples:\n                    - '0'\n                required:\n                - period_duration_seconds\n                - tokens_per_period\n                - initial_mint_price\n              tiers:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: integer\n                      examples:\n                      - 1\n                    price:\n                      type: object\n                      properties:\n                        period_duration_seconds:\n                          type: integer\n                          examples:\n                          - 2592000\n                        tokens_per_period:\n                          type: string\n                          examples:\n                          - '3000000000000000'\n                        initial_mint_price:\n                          type: string\n                          examples:\n                          - '0'\n              protocol_version:\n                type: integer\n                examples:\n                - 1\n              token:\n                type: object\n                properties:\n                  symbol:\n                    type: string\n                    examples:\n                    - ETH\n                  address:\n                    type:\n                    - string\n                    - 'null'\n                    examples:\n                    - null\n                  decimals:\n                    type: integer\n                    examples:\n                    - 18\n                  erc20:\n                    type: boolean\n                    examples:\n                    - false\n                required:\n                - symbol\n                - address\n                - decimals\n                - erc20\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4333, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "85951a62-48e2-42a0-8342-2bb8dda24b17": {"__data__": {"id_": "85951a62-48e2-42a0-8342-2bb8dda24b17", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-channels.md", "file_name": "neynar_fetch-trending-channels.md", "file_type": "text/markdown", "file_size": 9294, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a460c8ee-dc48-4652-a367-01965f59667d", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-channels.md", "file_name": "neynar_fetch-trending-channels.md", "file_type": "text/markdown", "file_size": 9294, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "2b12fa953e3f76380a6ab9b6b5451b798cc3a07e155f47f5bcc1710dd16d266c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4be74f8d-4aed-444f-beea-13918db68784", "node_type": "1", "metadata": {}, "hash": "d73dd98aeb5c8df5f53c3e00320655c38a1f7d8daa60ce10d4c458e0c0e165ae", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-trending-channels\n\n**Endpoint**: `GET /farcaster/channel/trending`\n\n## Description\nReturns a list of trending channels based on activity\n\n## Parameters\n- `time_window` (query): No description\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- channels\n- next\nproperties:\n  channels:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - cast_count_1d\n      - cast_count_7d\n      - cast_count_30d\n      - channel\n      properties:\n        object:\n          type: string\n          enum:\n          - channel_activity\n        cast_count_1d:\n          type: string\n        cast_count_7d:\n          type: string\n        cast_count_30d:\n          type: string\n        channel:\n          type: object\n          required:\n          - id\n          - url\n          - object\n          properties:\n            id:\n              type: string\n            url:\n              type: string\n            name:\n              type: string\n            description:\n              type: string\n            object:\n              type: string\n              enum:\n              - channel\n            created_at:\n              description: Epoch timestamp in seconds.\n              type: number\n            follower_count:\n              description: Number of followers the channel has.\n              type: number\n            external_link:\n              type: object\n              description: Channel's external link.\n              properties:\n                title:\n                  type: string\n                url:\n                  type: string\n            image_url:\n              type: string\n            parent_url:\n              type: string\n              format: uri\n            lead: &id003\n              type: object\n              required:\n              - object\n              - fid\n              - custody_address\n              - username\n              - profile\n              - follower_count\n              - following_count\n              - verifications\n              - verified_addresses\n              - verified_accounts\n              - power_badge\n              properties:\n                object:\n                  type: string\n                  enum:\n                  - user\n                fid: &id002\n                  type: integer\n                  format: int32\n                  description: The unique identifier of a farcaster user (unsigned\n                    integer)\n                  examples:\n                  - 3\n                  - 191\n                  - 2\n                  - 194\n                  - 19960\n                username:\n                  type: string\n                display_name:\n                  type: string\n                custody_address: &id001\n                  type: string\n                  pattern: ^0x[a-fA-F0-9]{40}$\n                  description: Ethereum address\n                pfp_url:\n                  type: string\n                  description: The URL of the user's profile picture\n                profile:\n                  type: object\n                  required:\n                  - bio\n                  properties:\n                    bio:\n                      type: object\n                      required:\n                      - text\n                      - mentioned_profiles\n                      properties:\n                        text:\n                          type: string\n                        mentioned_profiles:\n                          type: array\n                          items:\n                            type: string\n                          default: []\n                    location:\n                      description: Coordinates and place names for a location\n                      type: object\n                      required:\n                      - latitude\n                      - longitude\n                      properties:\n                        latitude:\n                          type: number\n                          format: double\n                          minimum: -90\n                          maximum: 90\n                        longitude:\n                          type: number\n                          format: double\n                          minimum: -180\n                          maximum: 180\n                        address:\n                          type: object\n                          required:\n                          - city\n                          - country\n                          properties:\n                            city:\n                              type: string\n                            state:\n                              type: string\n                            state_code:\n                              type: string\n                            country:\n                              type: string\n                            country_code:\n                              type: string\n                follower_count:\n                  type: integer\n                  format: int32\n                  description: The number of followers the user has.\n                following_count:\n                  type: integer\n                  format: int32\n                  description: The number of users the user is following.\n                verifications:\n                  type: array\n                  items: *id001\n                verified_addresses:\n                  type: object\n                  required:\n                  - eth_addresses\n                  - sol_addresses\n                  properties:\n                    eth_addresses:\n                      type: array\n                      description: List of verified Ethereum addresses of the user\n                        sorted by oldest to most recent.\n                      items: *id001\n                    sol_addresses:\n                      type: array\n                      description: List of verified Solana addresses of the user sorted\n                        by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5999, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4be74f8d-4aed-444f-beea-13918db68784": {"__data__": {"id_": "4be74f8d-4aed-444f-beea-13918db68784", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-channels.md", "file_name": "neynar_fetch-trending-channels.md", "file_type": "text/markdown", "file_size": 9294, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a460c8ee-dc48-4652-a367-01965f59667d", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-channels.md", "file_name": "neynar_fetch-trending-channels.md", "file_type": "text/markdown", "file_size": 9294, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "2b12fa953e3f76380a6ab9b6b5451b798cc3a07e155f47f5bcc1710dd16d266c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "85951a62-48e2-42a0-8342-2bb8dda24b17", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-channels.md", "file_name": "neynar_fetch-trending-channels.md", "file_type": "text/markdown", "file_size": 9294, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "54890bcde7e4929cc86175e92c4b39b3c0396b5c0d02e7cdbbad6dc9a50bdff8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                  type: integer\n                  format: int32\n                  description: The number of users the user is following.\n                verifications:\n                  type: array\n                  items: *id001\n                verified_addresses:\n                  type: object\n                  required:\n                  - eth_addresses\n                  - sol_addresses\n                  properties:\n                    eth_addresses:\n                      type: array\n                      description: List of verified Ethereum addresses of the user\n                        sorted by oldest to most recent.\n                      items: *id001\n                    sol_addresses:\n                      type: array\n                      description: List of verified Solana addresses of the user sorted\n                        by oldest to most recent.\n                      items:\n                        type: string\n                        pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                        description: Solana address\n                verified_accounts:\n                  type: array\n                  description: Verified accounts of the user on other platforms, currently\n                    only X is supported.\n                  items:\n                    type: object\n                    properties:\n                      platform:\n                        type: string\n                        enum:\n                        - x\n                        - github\n                      username:\n                        type: string\n                power_badge:\n                  type: boolean\n                experimental:\n                  type: object\n                  required:\n                  - neynar_user_score\n                  properties:\n                    neynar_user_score:\n                      type: number\n                      format: double\n                      description: Score that represents the probability that the\n                        account is not spam.\n                viewer_context:\n                  type: object\n                  description: Adds context on the viewer's follow relationship with\n                    the user.\n                  required:\n                  - following\n                  - followed_by\n                  - blocking\n                  - blocked_by\n                  properties:\n                    following:\n                      description: Indicates if the viewer is following the user.\n                      type: boolean\n                    followed_by:\n                      description: Indicates if the viewer is followed by the user.\n                      type: boolean\n                    blocking:\n                      description: Indicates if the viewer is blocking the user.\n                      type: boolean\n                    blocked_by:\n                      description: Indicates if the viewer is blocked by the user.\n                      type: boolean\n            moderator_fids:\n              type: array\n              items: *id002\n            member_count:\n              type: integer\n              format: int32\n            moderator: *id003\n            pinned_cast_hash:\n              type: string\n              default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n              description: Cast Hash\n            hosts:\n              type: array\n              deprecated: true\n              items: *id003\n            viewer_context:\n              description: Adds context on the viewer's or author's role in the channel.\n              type: object\n              required:\n              - following\n              properties:\n                following:\n                  description: Indicates if the user is following the channel.\n                  type: boolean\n                role:\n                  type: string\n                  description: The role of a channel member\n                  enum:\n                  - member\n                  - moderator\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 5107, "end_char_idx": 9293, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "abc9aed4-4149-4c30-a31a-68da53bab925": {"__data__": {"id_": "abc9aed4-4149-4c30-a31a-68da53bab925", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "15c15a95-fc5f-4b58-8490-aa52eaed33ef", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "204ec5e36a6738c85fb637621109e18392555c2b6ac120bc2eed32b0d3b60207", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f0cc3f11-4ab4-4ddc-946d-d3165a0b0c04", "node_type": "1", "metadata": {}, "hash": "276d9829bd28ca7c832cf3651919d5f3d9662484a0269ecacb934ce07c8af95d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-trending-feed\n\n**Endpoint**: `GET /farcaster/feed/trending`\n\n## Description\nFetch trending casts or on the global feed or channels feeds. 7d time window available for channel feeds only.\n\n## Parameters\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor\n- `viewer_fid` (query): Providing this will return a feed that respects this user's mutes and blocks and includes `viewer_context`.\n- `time_window` (query): Time window for trending casts (7d window for channel feeds only)\n- `channel_id` (query): Channel ID to filter trending casts. Less active channels might have no casts in the time window selected.\n- `provider` (query): The provider of the trending casts feed.\n- `provider_metadata` (query): provider_metadata is a URI-encoded stringified JSON object that can be used to pass additional metadata to the provider. Only available for mbd provider right now. See [here](https://docs.neynar.com/docs/feed-for-you-w-external-providers) on how to use.\n\n\n## Response\n```yaml\ntype: object\nrequired:\n- casts\n- next\nproperties:\n  casts:\n    type: array\n    items:\n      allOf:\n      - type: object\n        required:\n        - hash\n        - parent_hash\n        - parent_url\n        - root_parent_url\n        - parent_author\n        - author\n        - text\n        - timestamp\n        - embeds\n        properties:\n          hash:\n            type: string\n          parent_hash:\n            type:\n            - string\n            - 'null'\n          parent_url:\n            type:\n            - string\n            - 'null'\n          root_parent_url:\n            type:\n            - string\n            - 'null'\n          parent_author:\n            type: object\n            required:\n            - fid\n            properties:\n              fid:\n                oneOf:\n                - type: 'null'\n                - &id001\n                  type: integer\n                  format: int32\n                  description: The unique identifier of a farcaster user (unsigned\n                    integer)\n                  examples:\n                  - 3\n                  - 191\n                  - 2\n                  - 194\n                  - 19960\n          author: &id011\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: *id001\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id002\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5641, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f0cc3f11-4ab4-4ddc-946d-d3165a0b0c04": {"__data__": {"id_": "f0cc3f11-4ab4-4ddc-946d-d3165a0b0c04", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "15c15a95-fc5f-4b58-8490-aa52eaed33ef", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "204ec5e36a6738c85fb637621109e18392555c2b6ac120bc2eed32b0d3b60207", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "abc9aed4-4149-4c30-a31a-68da53bab925", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "e8b984f31a498e6f89e871f92310b04e7ef7e9cf0e25f0400921d597b9125fde", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "edd03f20-bb9a-44a9-b058-f4ff46fdbbc1", "node_type": "1", "metadata": {}, "hash": "fe0df8fb809538d41413faf06c0a270674cb9253987f2f1009b522ab38419e14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 5024, "end_char_idx": 7847, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "edd03f20-bb9a-44a9-b058-f4ff46fdbbc1": {"__data__": {"id_": "edd03f20-bb9a-44a9-b058-f4ff46fdbbc1", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "15c15a95-fc5f-4b58-8490-aa52eaed33ef", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "204ec5e36a6738c85fb637621109e18392555c2b6ac120bc2eed32b0d3b60207", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f0cc3f11-4ab4-4ddc-946d-d3165a0b0c04", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "71862bb7b5e15c4b9b5dbd4bd6b592f4239dd60914e960e7d0a54fa27cf319b4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1726f152-9d02-489d-aec5-555acf9f7b62", "node_type": "1", "metadata": {}, "hash": "7693468d1bce4d6458a0c00eb5858d0c52e0d3acfd9f809418886132f3cd260d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          text:\n            type: string\n          timestamp: &id006\n            type: string\n            format: date-time\n          embeds:\n            type: array\n            items:\n              oneOf:\n              - &id007\n                type: object\n                required:\n                - url\n                properties:\n                  url:\n                    type: string\n                  metadata:\n                    type: object\n                    required:\n                    - _status\n                    properties:\n                      _status:\n                        type: string\n                      content_type:\n                        type:\n                        - string\n                        - 'null'\n                      content_length:\n                        type:\n                        - integer\n                        - 'null'\n                      image:\n                        type: object\n                        properties:\n                          height_px:\n                            type: integer\n                          width_px:\n                            type: integer\n                      video:\n                        type: object\n                        properties:\n                          duration_s:\n                            type: number\n                          stream:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                codec_name:\n                                  type: string\n                                height_px:\n                                  type: integer\n                                width_px:\n                                  type: integer\n                      html:\n                        allOf:\n                        - type: object\n                          properties:\n                            favicon:\n                              type: string\n                            modifiedTime:\n                              type: string\n                            ogArticleAuthor:\n                              type: string\n                            ogArticleExpirationTime:\n                              type: string\n                            ogArticleModifiedTime:\n                              type: string\n                            ogArticlePublishedTime:\n                              type: string\n                            ogArticlePublisher:\n                              type: string\n                            ogArticleSection:\n                              type: string\n                            ogArticleTag:\n                              type: string\n                            ogAudio:\n                              type: string\n                            ogAudioSecureURL:\n                              type: string\n                            ogAudioType:\n                              type: string\n                            ogAudioURL:\n                              type: string\n                            ogAvailability:\n                              type: string\n                            ogDate:\n                              type: string\n                            ogDescription:\n                              type: string\n                            ogDeterminer:\n                              type: string\n                            ogEpisode:\n                              type: string\n                            ogImage:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                  alt:\n                                    type: string\n                                required:\n                                - url\n                            ogLocale:\n                              type: string\n                            ogLocaleAlternate:\n                              type: string\n                            ogLogo:\n                              type: string\n                            ogMovie:\n                              type: string\n                            ogPriceAmount:\n                              type: string\n                            ogPriceCurrency:\n                              type: string\n                            ogProductAvailability:\n                              type: string\n                            ogProductCondition:\n                              type: string\n                            ogProductPriceAmount:\n                              type: string\n                            ogProductPriceCurrency:\n                              type: string\n                            ogProductRetailerItemId:\n                              type: string\n                            ogSiteName:\n                              type: string\n                            ogTitle:\n                              type: string\n                            ogType:\n                              type: string\n                            ogUrl:\n                              type: string\n                            ogVideo:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                required:\n                                - url\n                            ogVideoActor:\n                              type: string\n                            ogVideoActorId:\n                              type: string\n                            ogVideoActorRole:\n                              type: string\n                            ogVideoDirector:\n                              type: string\n                            ogVideoDuration:\n                              type: string\n                            ogVideoOther:\n                              type: string\n                            ogVideoReleaseDate:\n                              type: string\n                            ogVideoSecureURL:\n                              type: string\n                            ogVideoSeries:\n                              type: string\n                            ogVideoTag:\n                              type: string\n                            ogVideoTvShow:\n                              type: string\n                            ogVideoWriter:\n                              type: string\n                            ogWebsite:\n                              type: string\n                            updatedTime:\n                              type: string\n                        - type: object\n                          properties:\n                            oembed:\n                              oneOf:\n                              - allOf:\n                                - &id003\n                                  type: object\n                                  description: Basic data structure of every oembed\n                                    response see https://oembed.com/\n                                  required:\n                                  - type\n                                  - version\n                                  properties:\n                                    type:\n                                      type: string\n                                    version:\n                                      type:\n                                      - string\n                                      - 'null'\n                                    title:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A text title, describing the resource.", "mimetype": "text/plain", "start_char_idx": 6982, "end_char_idx": 16387, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1726f152-9d02-489d-aec5-555acf9f7b62": {"__data__": {"id_": "1726f152-9d02-489d-aec5-555acf9f7b62", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "15c15a95-fc5f-4b58-8490-aa52eaed33ef", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "204ec5e36a6738c85fb637621109e18392555c2b6ac120bc2eed32b0d3b60207", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "edd03f20-bb9a-44a9-b058-f4ff46fdbbc1", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f9df796a75236e941874cf8c28357b987484eb01114b76f76b86f4da3ca38729", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d8ba8dc5-7c29-4941-bb42-8a74e07d080f", "node_type": "1", "metadata": {}, "hash": "02bb5551c6319ad9c9e131ba050e77c2a58a5756c4a5f538be3d18d6c2b844c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the author/owner of\n                                        the resource.\n                                    author_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL for the author/owner of the\n                                        resource.\n                                    provider_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the resource provider.\n                                    provider_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The url of the resource provider.\n                                    cache_age:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The suggested cache lifetime for\n                                        this resource, in seconds. Consumers may choose\n                                        to use this value or not.\n                                    thumbnail_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL to a thumbnail image representing\n                                        the resource. The thumbnail must respect any\n                                        maxwidth and maxheight parameters. If this\n                                        parameter is present, thumbnail_width and\n                                        thumbnail_height must also be present.\n                                    thumbnail_width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_height must also be present.\n                                    thumbnail_height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_width must also be present.\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - rich\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to display the\n                                        resource. The HTML should have no padding\n                                        or margins. Consumers may wish to load the\n                                        HTML in an off-domain iframe to avoid XSS\n                                        vulnerabilities. The markup should be valid\n                                        XHTML 1.0 Basic.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - video\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to embed a video\n                                        player. The HTML should have no padding or\n                                        margins. Consumers may wish to load the HTML\n                                        in an off-domain iframe to avoid XSS vulnerabilities.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 16424, "end_char_idx": 24754, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d8ba8dc5-7c29-4941-bb42-8a74e07d080f": {"__data__": {"id_": "d8ba8dc5-7c29-4941-bb42-8a74e07d080f", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "15c15a95-fc5f-4b58-8490-aa52eaed33ef", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "204ec5e36a6738c85fb637621109e18392555c2b6ac120bc2eed32b0d3b60207", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1726f152-9d02-489d-aec5-555acf9f7b62", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "a5be3dff00ffd718815b860167509e9bfc138af862e7640026b9ef6b9909ee6c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6364689a-092b-405b-ae4f-91b09e296e92", "node_type": "1", "metadata": {}, "hash": "4bf0e8989166b44509d34059a21981076b724bc3fd8b9c3a31d03109f5c8881a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - link\n                              discriminator:\n                                propertyName: type\n                                mapping:\n                                  rich: '#/components/schemas/OembedRichData'\n                                  video: '#/components/schemas/OembedVideoData'\n                                  photo: '#/components/schemas/OembedPhotoData'\n                                  link: '#/components/schemas/OembedLinkData'\n                      frame: &id010\n                        discriminator:\n                          propertyName: version\n                        oneOf:\n                        - description: Frame v1 object\n                          allOf:\n                          - &id004\n                            description: Frame base object used across all versions\n                            type: object\n                            required:\n                            - version\n                            - image\n                            - frames_url\n                            properties:\n                              version:\n                                type: string\n                                description: Version of the frame, 'next' for v2,\n                                  'vNext' for v1\n                              image:\n                                type: string\n                                description: URL of the image\n                              frames_url:\n                                type: string\n                                description: Launch URL of the frame\n                          - type: object\n                            properties:\n                              buttons:\n                                type: array\n                                items:\n                                  type: object\n                                  required:\n                                  - index\n                                  - action_type\n                                  properties:\n                                    title:\n                                      type: string\n                                      description: Title of the button\n                                    index:\n                                      type: integer\n                                      description: Index of the button\n                                    action_type:\n                                      type: string\n                                      description: The action type of a frame button.\n                                        Action types \"mint\" & \"link\" are to be handled\n                                        on the client side only and so they will produce\n                                        a no/op for POST /farcaster/frame/action.\n                                      enum:\n                                      - post\n                                      - post_redirect\n                                      - tx\n                                      - link\n                                      - mint\n                                    target:\n                                      type: string\n                                      description: Target of the button\n                                    post_url:\n                                      type: string\n                                      description: Used specifically for the tx action\n                                        type to post a successful transaction hash\n                              post_url:\n                                type: string\n                                description: Post URL to take an action on this frame\n                              title:\n                                type: string\n                              image_aspect_ratio:\n                                type: string\n                              input:\n                                type: object\n                                properties:\n                                  text:\n                                    type: string\n                                    description: Input text for the frame\n                              state:\n                                type: object\n                                properties:\n                                  serialized:\n                                    type: string\n                                    description: State for the frame in a serialized\n                                      format\n                        - description: Frame v2 object\n                          allOf:\n                          - *id004\n                          - type: object\n                            required:\n                            - title\n                            - name\n                            - icon\n                            properties:\n                              manifest:\n                                type: object\n                                properties:\n                                  account_association:\n                                    type: object\n                                    properties:\n                                      header:\n                                        type: string\n                                      payload:\n                                        type: string\n                                      signature:\n                                        type: string\n                                    required:\n                                    - header\n                                    - payload\n                                    - signature\n                                  frame:\n                                    type: object\n                                    properties:\n                                      version:\n                                        type: string\n                                        enum:\n                                        - 0.0.0\n                                        - 0.0.", "mimetype": "text/plain", "start_char_idx": 23061, "end_char_idx": 31154, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6364689a-092b-405b-ae4f-91b09e296e92": {"__data__": {"id_": "6364689a-092b-405b-ae4f-91b09e296e92", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "15c15a95-fc5f-4b58-8490-aa52eaed33ef", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "204ec5e36a6738c85fb637621109e18392555c2b6ac120bc2eed32b0d3b60207", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d8ba8dc5-7c29-4941-bb42-8a74e07d080f", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "0fe85c110c42061ad5e899d5e03d4012dc6041b942423aee8da5f1e873107e12", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dfe04ab0-37d8-4de1-b912-84a4324f08d5", "node_type": "1", "metadata": {}, "hash": "256dbc3a053302772e68551d3c8ed80cd3cc87d6cacee7a7b90bcf151cedcd80", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                        - 0.0.1\n                                        - '1'\n                                        - next\n                                      name:\n                                        type: string\n                                        maxLength: 32\n                                      home_url:\n                                        type: string\n                                        maxLength: 512\n                                      icon_url:\n                                        type: string\n                                        maxLength: 512\n                                      image_url:\n                                        type: string\n                                        maxLength: 512\n                                      button_title:\n                                        type: string\n                                        maxLength: 32\n                                      splash_image_url:\n                                        type: string\n                                        maxLength: 512\n                                      splash_background_color:\n                                        type: string\n                                      webhook_url:\n                                        type: string\n                                        maxLength: 512\n                                    required:\n                                    - version\n                                    - name\n                                    - home_url\n                                    - icon_url\n                                  triggers:\n                                    type: array\n                                    items:\n                                      oneOf:\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - cast\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - composer\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                required:\n                                - account_association\n                              author: &id005\n                                type: object\n                                required:\n                                - object\n                                - fid\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - user_dehydrated\n                                  fid: *id001\n                                  username:\n                                    type: string\n                                  display_name:\n                                    type: string\n                                  pfp_url:\n                                    type: string\n                        mapping:\n                          vNext: '#/components/schemas/FrameV1'\n                          next: '#/components/schemas/FrameV2'\n                          '1': '#/components/schemas/FrameV2'\n                          0.0.0: '#/components/schemas/FrameV2'\n                          0.0.1: '#/components/schemas/FrameV2'\n              - type: object\n                required:\n                - cast\n                properties:\n                  cast_id: &id008\n                    type: object\n                    required:\n                    - fid\n                    - hash\n                    properties:\n                      fid: *id001\n                      hash:\n                        type: string\n                  cast:\n                    type: object\n                    required:\n                    - hash\n                    - parent_hash\n                    - parent_url\n                    - root_parent_url\n                    - parent_author\n                    - author\n                    - text\n                    - timestamp\n                    - type\n                    - embeds\n                    - channel\n                    properties:\n                      hash:\n                        type: string\n                      parent_hash:\n                        type:\n                        - string\n                        - 'null'\n                      parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      root_parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      parent_author:\n                        type: object\n                        required:\n                        - fid\n                        properties:\n                          fid:\n                            oneOf:\n                            - type: 'null'\n                            - *id001\n                      author: *id005\n                      text:\n                        type: string\n                      timestamp: *id006\n                      type: &id009\n                        type: string\n                        enum:\n                        - cast-mention\n                        - cast-reply\n                        description: 'The notification type of a cast.\n\n                          '\n                      embeds:\n                        type: array\n                        items:\n                          oneOf:\n                          - *id007\n                          - type: object\n                            required:\n                            - cast\n                            properties:\n                              cast_id: *id008\n                              cast:\n                                type: object\n                                required:\n                                - object\n                                - hash\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - cast_dehydrated\n                                  hash:\n                                    type: string\n                                  author: *id005\n                      channel:\n                        oneOf:\n                        - type: 'null'\n                        - &id013\n                          type: object\n                          required:\n                          - id\n                          - name\n                          - object\n                          properties:\n                            id:\n                              type: string\n                            name:\n                              type: string\n                            object:\n                              type: string\n                              enum:\n                              - channel_dehydrated\n                            image_url:\n                              type: string\n                            viewer_context: &id012\n                              description: Adds context on the viewer's or author's\n                                role in the channel.", "mimetype": "text/plain", "start_char_idx": 31104, "end_char_idx": 39871, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dfe04ab0-37d8-4de1-b912-84a4324f08d5": {"__data__": {"id_": "dfe04ab0-37d8-4de1-b912-84a4324f08d5", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "15c15a95-fc5f-4b58-8490-aa52eaed33ef", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "204ec5e36a6738c85fb637621109e18392555c2b6ac120bc2eed32b0d3b60207", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6364689a-092b-405b-ae4f-91b09e296e92", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "3e920eafeae229db6c15aa16e3040aafe6cf159d0be0545bf8aa28e7d768fbc2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                              required:\n                              - following\n                              properties:\n                                following:\n                                  description: Indicates if the user is following\n                                    the channel.\n                                  type: boolean\n                                role:\n                                  type: string\n                                  description: The role of a channel member\n                                  enum:\n                                  - member\n                                  - moderator\n          type: *id009\n      - type: object\n        required:\n        - reactions\n        - replies\n        - thread_hash\n        - mentioned_profiles\n        - channel\n        properties:\n          frames:\n            type: array\n            items: *id010\n          reactions:\n            type: object\n            required:\n            - likes\n            - recasts\n            - likes_count\n            - recasts_count\n            properties:\n              likes:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  properties:\n                    fid: *id001\n              recasts:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  - fname\n                  properties:\n                    fid: *id001\n                    fname:\n                      type: string\n              likes_count:\n                type: integer\n                format: int32\n              recasts_count:\n                type: integer\n                format: int32\n          replies:\n            type: object\n            required:\n            - count\n            properties:\n              count:\n                type: integer\n                format: int32\n          thread_hash:\n            type:\n            - string\n            - 'null'\n          mentioned_profiles:\n            type: array\n            items: *id011\n          channel:\n            oneOf:\n            - oneOf:\n              - type: object\n                required:\n                - id\n                - url\n                - object\n                properties:\n                  id:\n                    type: string\n                  url:\n                    type: string\n                  name:\n                    type: string\n                  description:\n                    type: string\n                  object:\n                    type: string\n                    enum:\n                    - channel\n                  created_at:\n                    description: Epoch timestamp in seconds.\n                    type: number\n                  follower_count:\n                    description: Number of followers the channel has.\n                    type: number\n                  external_link:\n                    type: object\n                    description: Channel's external link.\n                    properties:\n                      title:\n                        type: string\n                      url:\n                        type: string\n                  image_url:\n                    type: string\n                  parent_url:\n                    type: string\n                    format: uri\n                  lead: *id011\n                  moderator_fids:\n                    type: array\n                    items: *id001\n                  member_count:\n                    type: integer\n                    format: int32\n                  moderator: *id011\n                  pinned_cast_hash:\n                    type: string\n                    default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                    description: Cast Hash\n                  hosts:\n                    type: array\n                    deprecated: true\n                    items: *id011\n                  viewer_context: *id012\n              - *id013\n              discriminator:\n                propertyName: object\n                mapping:\n                  channel: '#/components/schemas/Channel'\n                  dehydrated_channel: '#/components/schemas/DehydratedChannel'\n            - type: 'null'\n          viewer_context:\n            type: object\n            description: Adds context on interactions the viewer has made with the\n              cast.\n            required:\n            - liked\n            - recasted\n            properties:\n              liked:\n                description: Indicates if the viewer liked the cast.\n                type: boolean\n              recasted:\n                description: Indicates if the viewer recasted the cast.\n                type: boolean\n          author_channel_context: *id012\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 39902, "end_char_idx": 44911, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e93a5b0f-61bf-4144-acfb-df1f1a6197e9": {"__data__": {"id_": "e93a5b0f-61bf-4144-acfb-df1f1a6197e9", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-balance.md", "file_name": "neynar_fetch-user-balance.md", "file_type": "text/markdown", "file_size": 3777, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5f2edb2f-eb39-44c4-a3b6-cc756152e550", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-balance.md", "file_name": "neynar_fetch-user-balance.md", "file_type": "text/markdown", "file_size": 3777, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "c06b0ff8adad7b63823fba5a91599f9768916489241864cc9c91f6ea0c335e9f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-user-balance\n\n**Endpoint**: `GET /farcaster/user/balance`\n\n## Description\nFetches the token balances of a user given their FID\n\n## Parameters\n- `fid` (query): FID of the user to fetch\n- `networks` (query): Comma separated list of networks to fetch balances for. Currently, only \"base\" is supported.\n\n## Response\n```yaml\ntype: object\nproperties:\n  user_balance:\n    type: object\n    required:\n    - object\n    - user\n    - address_balances\n    properties:\n      object:\n        type: string\n        enum:\n        - user_balance\n      user:\n        type: object\n        required:\n        - object\n        - fid\n        properties:\n          object:\n            type: string\n            enum:\n            - user_dehydrated\n          fid:\n            type: integer\n            format: int32\n            description: The unique identifier of a farcaster user (unsigned integer)\n            examples:\n            - 3\n            - 191\n            - 2\n            - 194\n            - 19960\n          username:\n            type: string\n          display_name:\n            type: string\n          pfp_url:\n            type: string\n      address_balances:\n        type: array\n        items:\n          type: object\n          description: The token balances associated with a wallet address\n          required:\n          - object\n          - verified_address\n          - token_balances\n          properties:\n            object:\n              type: string\n              enum:\n              - address_balance\n            verified_address:\n              type: object\n              required:\n              - address\n              - network\n              properties:\n                address:\n                  type: string\n                  description: The wallet address\n                network:\n                  type: string\n                  description: A blockchain network e.g. \"base\"\n                  enum:\n                  - base\n            token_balances:\n              type: array\n              items:\n                type: object\n                description: The token balance associated with a wallet address and\n                  a network\n                required:\n                - object\n                - token\n                - balance\n                properties:\n                  object:\n                    type: string\n                    enum:\n                    - token_balance\n                  token:\n                    type: object\n                    required:\n                    - object\n                    - name\n                    - symbol\n                    properties:\n                      object:\n                        type: string\n                        enum:\n                        - token\n                      name:\n                        type: string\n                        description: The token name e.g. \"Ethereum\"\n                      symbol:\n                        type: string\n                        description: The token symbol e.g. \"ETH\"\n                      address:\n                        type: string\n                        description: The contract address of the token (omitted for\n                          native token)\n                      decimals:\n                        type: integer\n                        description: The number of decimals the token uses\n                  balance:\n                    type: object\n                    required:\n                    - in_token\n                    - in_usdc\n                    properties:\n                      in_token:\n                        type: string\n                        description: The balance in the token\n                      in_usdc:\n                        type: string\n                        description: The balance in USDC\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3776, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f1553cf6-ef2c-46ab-ba6a-94807f0401b1": {"__data__": {"id_": "f1553cf6-ef2c-46ab-ba6a-94807f0401b1", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channel-memberships.md", "file_name": "neynar_fetch-user-channel-memberships.md", "file_type": "text/markdown", "file_size": 9855, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c4f348d0-ee7d-4342-8e5a-ba0c45af1230", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channel-memberships.md", "file_name": "neynar_fetch-user-channel-memberships.md", "file_type": "text/markdown", "file_size": 9855, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "b0a6576f863e04ecf27fa3c502fdd7e2283bd5dc493d2c067ed830afd9dc5eda", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2df0cae3-e4c3-44e7-9a5b-9ebe31cd0f06", "node_type": "1", "metadata": {}, "hash": "4df8622b9a903cd4b4c520dd66079d29d68d3dba729e3a548f3397e1f3aae731", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-user-channel-memberships\n\n**Endpoint**: `GET /farcaster/user/memberships/list`\n\n## Description\nReturns a list of all channels with their details that an FID is a member of. Data may have a delay of up to 1 hour.\n\n## Parameters\n- `fid` (query): The FID of the user.\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- members\n- next\nproperties:\n  members:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - role\n      - user\n      - channel\n      properties:\n        object:\n          type: string\n          enum:\n          - member\n        role: &id004\n          type: string\n          description: The role of a channel member\n          enum:\n          - member\n          - moderator\n        user:\n          oneOf:\n          - &id003\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: &id002\n                type: integer\n                format: int32\n                description: The unique identifier of a farcaster user (unsigned integer)\n                examples:\n                - 3\n                - 191\n                - 2\n                - 194\n                - 19960\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id001\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id001\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id001\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5902, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2df0cae3-e4c3-44e7-9a5b-9ebe31cd0f06": {"__data__": {"id_": "2df0cae3-e4c3-44e7-9a5b-9ebe31cd0f06", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channel-memberships.md", "file_name": "neynar_fetch-user-channel-memberships.md", "file_type": "text/markdown", "file_size": 9855, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c4f348d0-ee7d-4342-8e5a-ba0c45af1230", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channel-memberships.md", "file_name": "neynar_fetch-user-channel-memberships.md", "file_type": "text/markdown", "file_size": 9855, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "b0a6576f863e04ecf27fa3c502fdd7e2283bd5dc493d2c067ed830afd9dc5eda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f1553cf6-ef2c-46ab-ba6a-94807f0401b1", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channel-memberships.md", "file_name": "neynar_fetch-user-channel-memberships.md", "file_type": "text/markdown", "file_size": 9855, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "1fd3fe3b157f042efd1436a41eee63c2a8b5227f3fea469bb627a6561872ce71", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          - type: object\n            required:\n            - object\n            - fid\n            properties:\n              object:\n                type: string\n                enum:\n                - user_dehydrated\n              fid: *id002\n              username:\n                type: string\n              display_name:\n                type: string\n              pfp_url:\n                type: string\n        channel:\n          oneOf:\n          - type: object\n            required:\n            - id\n            - url\n            - object\n            properties:\n              id:\n                type: string\n              url:\n                type: string\n              name:\n                type: string\n              description:\n                type: string\n              object:\n                type: string\n                enum:\n                - channel\n              created_at:\n                description: Epoch timestamp in seconds.\n                type: number\n              follower_count:\n                description: Number of followers the channel has.\n                type: number\n              external_link:\n                type: object\n                description: Channel's external link.\n                properties:\n                  title:\n                    type: string\n                  url:\n                    type: string\n              image_url:\n                type: string\n              parent_url:\n                type: string\n                format: uri\n              lead: *id003\n              moderator_fids:\n                type: array\n                items: *id002\n              member_count:\n                type: integer\n                format: int32\n              moderator: *id003\n              pinned_cast_hash:\n                type: string\n                default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                description: Cast Hash\n              hosts:\n                type: array\n                deprecated: true\n                items: *id003\n              viewer_context: &id005\n                description: Adds context on the viewer's or author's role in the\n                  channel.\n                type: object\n                required:\n                - following\n                properties:\n                  following:\n                    description: Indicates if the user is following the channel.\n                    type: boolean\n                  role: *id004\n          - type: object\n            required:\n            - id\n            - name\n            - object\n            properties:\n              id:\n                type: string\n              name:\n                type: string\n              object:\n                type: string\n                enum:\n                - channel_dehydrated\n              image_url:\n                type: string\n              viewer_context: *id005\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4830, "end_char_idx": 9854, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c53b6e61-705b-43c8-83a6-2f6fa74d62e6": {"__data__": {"id_": "c53b6e61-705b-43c8-83a6-2f6fa74d62e6", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channels.md", "file_name": "neynar_fetch-user-channels.md", "file_type": "text/markdown", "file_size": 7939, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2a2db8b3-1661-4454-930a-9f7e80dcc03e", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channels.md", "file_name": "neynar_fetch-user-channels.md", "file_type": "text/markdown", "file_size": 7939, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "78014355356023a815c144998dd98101b73e0bc5382a1f544b100baadb692f6b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "600a2904-a510-4a00-b7ae-6192c0b8ed3e", "node_type": "1", "metadata": {}, "hash": "9d0c9b940e135b0c04a55010e78e0dd02d0fb493419219de7ca70c5a002aa1a6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-user-channels\n\n**Endpoint**: `GET /farcaster/user/channels`\n\n## Description\nReturns a list of all channels with their details that a FID follows.\n\n## Parameters\n- `fid` (query): The FID of the user.\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- channels\nproperties:\n  channels:\n    type: array\n    items:\n      type: object\n      required:\n      - id\n      - url\n      - object\n      properties:\n        id:\n          type: string\n        url:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        object:\n          type: string\n          enum:\n          - channel\n        created_at:\n          description: Epoch timestamp in seconds.\n          type: number\n        follower_count:\n          description: Number of followers the channel has.\n          type: number\n        external_link:\n          type: object\n          description: Channel's external link.\n          properties:\n            title:\n              type: string\n            url:\n              type: string\n        image_url:\n          type: string\n        parent_url:\n          type: string\n          format: uri\n        lead: &id003\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid: &id002\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5318, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "600a2904-a510-4a00-b7ae-6192c0b8ed3e": {"__data__": {"id_": "600a2904-a510-4a00-b7ae-6192c0b8ed3e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channels.md", "file_name": "neynar_fetch-user-channels.md", "file_type": "text/markdown", "file_size": 7939, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2a2db8b3-1661-4454-930a-9f7e80dcc03e", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channels.md", "file_name": "neynar_fetch-user-channels.md", "file_type": "text/markdown", "file_size": 7939, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "78014355356023a815c144998dd98101b73e0bc5382a1f544b100baadb692f6b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c53b6e61-705b-43c8-83a6-2f6fa74d62e6", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channels.md", "file_name": "neynar_fetch-user-channels.md", "file_type": "text/markdown", "file_size": 7939, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f3f6860826be1dc5980b7884477798e6ea51d780e2071b79e491eec17d89fa34", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        moderator_fids:\n          type: array\n          items: *id002\n        member_count:\n          type: integer\n          format: int32\n        moderator: *id003\n        pinned_cast_hash:\n          type: string\n          default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n          description: Cast Hash\n        hosts:\n          type: array\n          deprecated: true\n          items: *id003\n        viewer_context:\n          description: Adds context on the viewer's or author's role in the channel.\n          type: object\n          required:\n          - following\n          properties:\n            following:\n              description: Indicates if the user is following the channel.\n              type: boolean\n            role:\n              type: string\n              description: The role of a channel member\n              enum:\n              - member\n              - moderator\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4319, "end_char_idx": 7938, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "54ec65b9-d035-44e4-8854-78882ec4f3cf": {"__data__": {"id_": "54ec65b9-d035-44e4-8854-78882ec4f3cf", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-followers.md", "file_name": "neynar_fetch-user-followers.md", "file_type": "text/markdown", "file_size": 6528, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "480aee47-3d73-4005-a011-a2cdf3e5c36b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-followers.md", "file_name": "neynar_fetch-user-followers.md", "file_type": "text/markdown", "file_size": 6528, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "a6bc117841d7202b1a67dcd2da9e6cf37b009ce590e030a174fc92a09ce4f326", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8798443a-ce21-4ebb-be9c-07168555f445", "node_type": "1", "metadata": {}, "hash": "7a5f8826c6f2b3e5d81fa8f79be03fe46f46482a2e31880b00b590a324d25ccb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-user-followers\n\n**Endpoint**: `GET /farcaster/followers`\n\n## Description\nReturns a list of followers for a specific FID.\n\n## Parameters\n- `fid` (query): User who's profile you are looking at\n- `viewer_fid` (query): Providing this will return a list of followers that respects this user's mutes and blocks and includes `viewer_context`.\n- `sort_type` (query): Sort type for fetch followers. Default is `desc_chron`\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- users\n- next\nproperties:\n  users:\n    type: array\n    items:\n      type: object\n      properties:\n        object:\n          type: string\n          enum:\n          - follow\n        user:\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid:\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5648, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8798443a-ce21-4ebb-be9c-07168555f445": {"__data__": {"id_": "8798443a-ce21-4ebb-be9c-07168555f445", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-followers.md", "file_name": "neynar_fetch-user-followers.md", "file_type": "text/markdown", "file_size": 6528, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "480aee47-3d73-4005-a011-a2cdf3e5c36b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-followers.md", "file_name": "neynar_fetch-user-followers.md", "file_type": "text/markdown", "file_size": 6528, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "a6bc117841d7202b1a67dcd2da9e6cf37b009ce590e030a174fc92a09ce4f326", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "54ec65b9-d035-44e4-8854-78882ec4f3cf", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-followers.md", "file_name": "neynar_fetch-user-followers.md", "file_type": "text/markdown", "file_size": 6528, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "80c3058e91d1fe1f5fe3da1e6e26bbaa1755949fad3437310fadcda4d837b735", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4472, "end_char_idx": 6527, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f283b1a9-9e29-4d74-83ba-25416ddb85b4": {"__data__": {"id_": "f283b1a9-9e29-4d74-83ba-25416ddb85b4", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b538b4d3-fb8a-4f2e-9349-c0f9d4620e3f", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "22ca61817ca2c2acb89be483adee4f0dedd9283e9c49bc8cfbd44a2f28a81fad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "966cc906-fe3f-4c41-b893-bfec380c136b", "node_type": "1", "metadata": {}, "hash": "5c551bf9b8e2c35fcc1cf384c95add49f00a3fc4b2edf11f1bfe16e591afba28", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-user-following-feed\n\n**Endpoint**: `GET /farcaster/feed/following`\n\n## Description\nFetch feed based on who a user is following\n\n## Parameters\n- `fid` (query): FID of user whose feed you want to create\n- `viewer_fid` (query): Providing this will return a feed that respects this user's mutes and blocks and includes `viewer_context`.\n- `with_recasts` (query): Include recasts in the response, true by default\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- casts\n- next\nproperties:\n  casts:\n    type: array\n    items:\n      allOf:\n      - type: object\n        required:\n        - hash\n        - parent_hash\n        - parent_url\n        - root_parent_url\n        - parent_author\n        - author\n        - text\n        - timestamp\n        - embeds\n        properties:\n          hash:\n            type: string\n          parent_hash:\n            type:\n            - string\n            - 'null'\n          parent_url:\n            type:\n            - string\n            - 'null'\n          root_parent_url:\n            type:\n            - string\n            - 'null'\n          parent_author:\n            type: object\n            required:\n            - fid\n            properties:\n              fid:\n                oneOf:\n                - type: 'null'\n                - &id001\n                  type: integer\n                  format: int32\n                  description: The unique identifier of a farcaster user (unsigned\n                    integer)\n                  examples:\n                  - 3\n                  - 191\n                  - 2\n                  - 194\n                  - 19960\n          author: &id011\n            type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid: *id001\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id002\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5740, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "966cc906-fe3f-4c41-b893-bfec380c136b": {"__data__": {"id_": "966cc906-fe3f-4c41-b893-bfec380c136b", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b538b4d3-fb8a-4f2e-9349-c0f9d4620e3f", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "22ca61817ca2c2acb89be483adee4f0dedd9283e9c49bc8cfbd44a2f28a81fad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f283b1a9-9e29-4d74-83ba-25416ddb85b4", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "39acaeae723675f574900c090d712b9a399474afebd958365a64233f95fd9c4b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c308d7f5-db1c-408c-99e3-fed6e9dc2500", "node_type": "1", "metadata": {}, "hash": "fe0df8fb809538d41413faf06c0a270674cb9253987f2f1009b522ab38419e14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n                type: array\n                items: *id002\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id002\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 4691, "end_char_idx": 7351, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c308d7f5-db1c-408c-99e3-fed6e9dc2500": {"__data__": {"id_": "c308d7f5-db1c-408c-99e3-fed6e9dc2500", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b538b4d3-fb8a-4f2e-9349-c0f9d4620e3f", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "22ca61817ca2c2acb89be483adee4f0dedd9283e9c49bc8cfbd44a2f28a81fad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "966cc906-fe3f-4c41-b893-bfec380c136b", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "154febc2e478e3d378d620de48bdd7f2c8db919fcd84447f5ac271bf703015c6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9acbed65-3e96-4ec8-94a5-e0f41dfa6906", "node_type": "1", "metadata": {}, "hash": "7693468d1bce4d6458a0c00eb5858d0c52e0d3acfd9f809418886132f3cd260d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          text:\n            type: string\n          timestamp: &id006\n            type: string\n            format: date-time\n          embeds:\n            type: array\n            items:\n              oneOf:\n              - &id007\n                type: object\n                required:\n                - url\n                properties:\n                  url:\n                    type: string\n                  metadata:\n                    type: object\n                    required:\n                    - _status\n                    properties:\n                      _status:\n                        type: string\n                      content_type:\n                        type:\n                        - string\n                        - 'null'\n                      content_length:\n                        type:\n                        - integer\n                        - 'null'\n                      image:\n                        type: object\n                        properties:\n                          height_px:\n                            type: integer\n                          width_px:\n                            type: integer\n                      video:\n                        type: object\n                        properties:\n                          duration_s:\n                            type: number\n                          stream:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                codec_name:\n                                  type: string\n                                height_px:\n                                  type: integer\n                                width_px:\n                                  type: integer\n                      html:\n                        allOf:\n                        - type: object\n                          properties:\n                            favicon:\n                              type: string\n                            modifiedTime:\n                              type: string\n                            ogArticleAuthor:\n                              type: string\n                            ogArticleExpirationTime:\n                              type: string\n                            ogArticleModifiedTime:\n                              type: string\n                            ogArticlePublishedTime:\n                              type: string\n                            ogArticlePublisher:\n                              type: string\n                            ogArticleSection:\n                              type: string\n                            ogArticleTag:\n                              type: string\n                            ogAudio:\n                              type: string\n                            ogAudioSecureURL:\n                              type: string\n                            ogAudioType:\n                              type: string\n                            ogAudioURL:\n                              type: string\n                            ogAvailability:\n                              type: string\n                            ogDate:\n                              type: string\n                            ogDescription:\n                              type: string\n                            ogDeterminer:\n                              type: string\n                            ogEpisode:\n                              type: string\n                            ogImage:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                  alt:\n                                    type: string\n                                required:\n                                - url\n                            ogLocale:\n                              type: string\n                            ogLocaleAlternate:\n                              type: string\n                            ogLogo:\n                              type: string\n                            ogMovie:\n                              type: string\n                            ogPriceAmount:\n                              type: string\n                            ogPriceCurrency:\n                              type: string\n                            ogProductAvailability:\n                              type: string\n                            ogProductCondition:\n                              type: string\n                            ogProductPriceAmount:\n                              type: string\n                            ogProductPriceCurrency:\n                              type: string\n                            ogProductRetailerItemId:\n                              type: string\n                            ogSiteName:\n                              type: string\n                            ogTitle:\n                              type: string\n                            ogType:\n                              type: string\n                            ogUrl:\n                              type: string\n                            ogVideo:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  height:\n                                    type: string\n                                  type:\n                                    type: string\n                                  url:\n                                    type: string\n                                  width:\n                                    type: string\n                                required:\n                                - url\n                            ogVideoActor:\n                              type: string\n                            ogVideoActorId:\n                              type: string\n                            ogVideoActorRole:\n                              type: string\n                            ogVideoDirector:\n                              type: string\n                            ogVideoDuration:\n                              type: string\n                            ogVideoOther:\n                              type: string\n                            ogVideoReleaseDate:\n                              type: string\n                            ogVideoSecureURL:\n                              type: string\n                            ogVideoSeries:\n                              type: string\n                            ogVideoTag:\n                              type: string\n                            ogVideoTvShow:\n                              type: string\n                            ogVideoWriter:\n                              type: string\n                            ogWebsite:\n                              type: string\n                            updatedTime:\n                              type: string\n                        - type: object\n                          properties:\n                            oembed:\n                              oneOf:\n                              - allOf:\n                                - &id003\n                                  type: object\n                                  description: Basic data structure of every oembed\n                                    response see https://oembed.com/\n                                  required:\n                                  - type\n                                  - version\n                                  properties:\n                                    type:\n                                      type: string\n                                    version:\n                                      type:\n                                      - string\n                                      - 'null'\n                                    title:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A text title, describing the resource.", "mimetype": "text/plain", "start_char_idx": 6486, "end_char_idx": 15891, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9acbed65-3e96-4ec8-94a5-e0f41dfa6906": {"__data__": {"id_": "9acbed65-3e96-4ec8-94a5-e0f41dfa6906", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b538b4d3-fb8a-4f2e-9349-c0f9d4620e3f", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "22ca61817ca2c2acb89be483adee4f0dedd9283e9c49bc8cfbd44a2f28a81fad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c308d7f5-db1c-408c-99e3-fed6e9dc2500", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "c1e775d3c45522a3f3452b92066120431288303b33c0b575bb74b782a83a7194", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "38cb9f32-05ac-41b0-a0b6-34f9bcab0c1e", "node_type": "1", "metadata": {}, "hash": "02bb5551c6319ad9c9e131ba050e77c2a58a5756c4a5f538be3d18d6c2b844c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the author/owner of\n                                        the resource.\n                                    author_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL for the author/owner of the\n                                        resource.\n                                    provider_name:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The name of the resource provider.\n                                    provider_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The url of the resource provider.\n                                    cache_age:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The suggested cache lifetime for\n                                        this resource, in seconds. Consumers may choose\n                                        to use this value or not.\n                                    thumbnail_url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: A URL to a thumbnail image representing\n                                        the resource. The thumbnail must respect any\n                                        maxwidth and maxheight parameters. If this\n                                        parameter is present, thumbnail_width and\n                                        thumbnail_height must also be present.\n                                    thumbnail_width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_height must also be present.\n                                    thumbnail_height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height of the optional thumbnail.\n                                        If this parameter is present, thumbnail_url\n                                        and thumbnail_width must also be present.\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - rich\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to display the\n                                        resource. The HTML should have no padding\n                                        or margins. Consumers may wish to load the\n                                        HTML in an off-domain iframe to avoid XSS\n                                        vulnerabilities. The markup should be valid\n                                        XHTML 1.0 Basic.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - html\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - video\n                                    html:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The HTML required to embed a video\n                                        player. The HTML should have no padding or\n                                        margins. Consumers may wish to load the HTML\n                                        in an off-domain iframe to avoid XSS vulnerabilities.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels required to\n                                        display the HTML.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels required to\n                                        display the HTML.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 15928, "end_char_idx": 24258, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "38cb9f32-05ac-41b0-a0b6-34f9bcab0c1e": {"__data__": {"id_": "38cb9f32-05ac-41b0-a0b6-34f9bcab0c1e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b538b4d3-fb8a-4f2e-9349-c0f9d4620e3f", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "22ca61817ca2c2acb89be483adee4f0dedd9283e9c49bc8cfbd44a2f28a81fad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9acbed65-3e96-4ec8-94a5-e0f41dfa6906", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "e81bc99b8b653e90ca877e766758e577f65f4a1745cb70561362f54ebfe143f7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ea729bc7-7309-4996-9fd7-511296e1a9fe", "node_type": "1", "metadata": {}, "hash": "4bf0e8989166b44509d34059a21981076b724bc3fd8b9c3a31d03109f5c8881a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  - url\n                                  - width\n                                  - height\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - photo\n                                    url:\n                                      type:\n                                      - string\n                                      - 'null'\n                                      description: The source URL of the image. Consumers\n                                        should be able to insert this URL into an\n                                        <img> element. Only HTTP and HTTPS URLs are\n                                        valid.\n                                    width:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The width in pixels of the image\n                                        specified in the url parameter.\n                                    height:\n                                      type:\n                                      - number\n                                      - 'null'\n                                      description: The height in pixels of the image\n                                        specified in the url parameter.\n                              - allOf:\n                                - *id003\n                                - type: object\n                                  required:\n                                  - type\n                                  properties:\n                                    type:\n                                      type: string\n                                      enum:\n                                      - link\n                              discriminator:\n                                propertyName: type\n                                mapping:\n                                  rich: '#/components/schemas/OembedRichData'\n                                  video: '#/components/schemas/OembedVideoData'\n                                  photo: '#/components/schemas/OembedPhotoData'\n                                  link: '#/components/schemas/OembedLinkData'\n                      frame: &id010\n                        discriminator:\n                          propertyName: version\n                        oneOf:\n                        - description: Frame v1 object\n                          allOf:\n                          - &id004\n                            description: Frame base object used across all versions\n                            type: object\n                            required:\n                            - version\n                            - image\n                            - frames_url\n                            properties:\n                              version:\n                                type: string\n                                description: Version of the frame, 'next' for v2,\n                                  'vNext' for v1\n                              image:\n                                type: string\n                                description: URL of the image\n                              frames_url:\n                                type: string\n                                description: Launch URL of the frame\n                          - type: object\n                            properties:\n                              buttons:\n                                type: array\n                                items:\n                                  type: object\n                                  required:\n                                  - index\n                                  - action_type\n                                  properties:\n                                    title:\n                                      type: string\n                                      description: Title of the button\n                                    index:\n                                      type: integer\n                                      description: Index of the button\n                                    action_type:\n                                      type: string\n                                      description: The action type of a frame button.\n                                        Action types \"mint\" & \"link\" are to be handled\n                                        on the client side only and so they will produce\n                                        a no/op for POST /farcaster/frame/action.\n                                      enum:\n                                      - post\n                                      - post_redirect\n                                      - tx\n                                      - link\n                                      - mint\n                                    target:\n                                      type: string\n                                      description: Target of the button\n                                    post_url:\n                                      type: string\n                                      description: Used specifically for the tx action\n                                        type to post a successful transaction hash\n                              post_url:\n                                type: string\n                                description: Post URL to take an action on this frame\n                              title:\n                                type: string\n                              image_aspect_ratio:\n                                type: string\n                              input:\n                                type: object\n                                properties:\n                                  text:\n                                    type: string\n                                    description: Input text for the frame\n                              state:\n                                type: object\n                                properties:\n                                  serialized:\n                                    type: string\n                                    description: State for the frame in a serialized\n                                      format\n                        - description: Frame v2 object\n                          allOf:\n                          - *id004\n                          - type: object\n                            required:\n                            - title\n                            - name\n                            - icon\n                            properties:\n                              manifest:\n                                type: object\n                                properties:\n                                  account_association:\n                                    type: object\n                                    properties:\n                                      header:\n                                        type: string\n                                      payload:\n                                        type: string\n                                      signature:\n                                        type: string\n                                    required:\n                                    - header\n                                    - payload\n                                    - signature\n                                  frame:\n                                    type: object\n                                    properties:\n                                      version:\n                                        type: string\n                                        enum:\n                                        - 0.0.0\n                                        - 0.0.", "mimetype": "text/plain", "start_char_idx": 22565, "end_char_idx": 30658, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ea729bc7-7309-4996-9fd7-511296e1a9fe": {"__data__": {"id_": "ea729bc7-7309-4996-9fd7-511296e1a9fe", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b538b4d3-fb8a-4f2e-9349-c0f9d4620e3f", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "22ca61817ca2c2acb89be483adee4f0dedd9283e9c49bc8cfbd44a2f28a81fad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "38cb9f32-05ac-41b0-a0b6-34f9bcab0c1e", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "4d2b8607d3c09bf10647a3e828b55c55d8060f9352814c96fc607abd6f48cb59", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "15093888-59b3-40f4-bdcf-b940b1d5507f", "node_type": "1", "metadata": {}, "hash": "256dbc3a053302772e68551d3c8ed80cd3cc87d6cacee7a7b90bcf151cedcd80", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                        - 0.0.1\n                                        - '1'\n                                        - next\n                                      name:\n                                        type: string\n                                        maxLength: 32\n                                      home_url:\n                                        type: string\n                                        maxLength: 512\n                                      icon_url:\n                                        type: string\n                                        maxLength: 512\n                                      image_url:\n                                        type: string\n                                        maxLength: 512\n                                      button_title:\n                                        type: string\n                                        maxLength: 32\n                                      splash_image_url:\n                                        type: string\n                                        maxLength: 512\n                                      splash_background_color:\n                                        type: string\n                                      webhook_url:\n                                        type: string\n                                        maxLength: 512\n                                    required:\n                                    - version\n                                    - name\n                                    - home_url\n                                    - icon_url\n                                  triggers:\n                                    type: array\n                                    items:\n                                      oneOf:\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - cast\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                      - type: object\n                                        properties:\n                                          type:\n                                            type: string\n                                            enum:\n                                            - composer\n                                          id:\n                                            type: string\n                                          url:\n                                            type: string\n                                            maxLength: 512\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                        required:\n                                        - type\n                                        - id\n                                        - url\n                                required:\n                                - account_association\n                              author: &id005\n                                type: object\n                                required:\n                                - object\n                                - fid\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - user_dehydrated\n                                  fid: *id001\n                                  username:\n                                    type: string\n                                  display_name:\n                                    type: string\n                                  pfp_url:\n                                    type: string\n                        mapping:\n                          vNext: '#/components/schemas/FrameV1'\n                          next: '#/components/schemas/FrameV2'\n                          '1': '#/components/schemas/FrameV2'\n                          0.0.0: '#/components/schemas/FrameV2'\n                          0.0.1: '#/components/schemas/FrameV2'\n              - type: object\n                required:\n                - cast\n                properties:\n                  cast_id: &id008\n                    type: object\n                    required:\n                    - fid\n                    - hash\n                    properties:\n                      fid: *id001\n                      hash:\n                        type: string\n                  cast:\n                    type: object\n                    required:\n                    - hash\n                    - parent_hash\n                    - parent_url\n                    - root_parent_url\n                    - parent_author\n                    - author\n                    - text\n                    - timestamp\n                    - type\n                    - embeds\n                    - channel\n                    properties:\n                      hash:\n                        type: string\n                      parent_hash:\n                        type:\n                        - string\n                        - 'null'\n                      parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      root_parent_url:\n                        type:\n                        - string\n                        - 'null'\n                      parent_author:\n                        type: object\n                        required:\n                        - fid\n                        properties:\n                          fid:\n                            oneOf:\n                            - type: 'null'\n                            - *id001\n                      author: *id005\n                      text:\n                        type: string\n                      timestamp: *id006\n                      type: &id009\n                        type: string\n                        enum:\n                        - cast-mention\n                        - cast-reply\n                        description: 'The notification type of a cast.\n\n                          '\n                      embeds:\n                        type: array\n                        items:\n                          oneOf:\n                          - *id007\n                          - type: object\n                            required:\n                            - cast\n                            properties:\n                              cast_id: *id008\n                              cast:\n                                type: object\n                                required:\n                                - object\n                                - hash\n                                properties:\n                                  object:\n                                    type: string\n                                    enum:\n                                    - cast_dehydrated\n                                  hash:\n                                    type: string\n                                  author: *id005\n                      channel:\n                        oneOf:\n                        - type: 'null'\n                        - &id013\n                          type: object\n                          required:\n                          - id\n                          - name\n                          - object\n                          properties:\n                            id:\n                              type: string\n                            name:\n                              type: string\n                            object:\n                              type: string\n                              enum:\n                              - channel_dehydrated\n                            image_url:\n                              type: string\n                            viewer_context: &id012\n                              description: Adds context on the viewer's or author's\n                                role in the channel.", "mimetype": "text/plain", "start_char_idx": 30608, "end_char_idx": 39375, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "15093888-59b3-40f4-bdcf-b940b1d5507f": {"__data__": {"id_": "15093888-59b3-40f4-bdcf-b940b1d5507f", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b538b4d3-fb8a-4f2e-9349-c0f9d4620e3f", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "22ca61817ca2c2acb89be483adee4f0dedd9283e9c49bc8cfbd44a2f28a81fad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ea729bc7-7309-4996-9fd7-511296e1a9fe", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d820f6978ac7d44c23ea4ccf346121ad364df353356b79326f38605dda4286e6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                              required:\n                              - following\n                              properties:\n                                following:\n                                  description: Indicates if the user is following\n                                    the channel.\n                                  type: boolean\n                                role:\n                                  type: string\n                                  description: The role of a channel member\n                                  enum:\n                                  - member\n                                  - moderator\n          type: *id009\n      - type: object\n        required:\n        - reactions\n        - replies\n        - thread_hash\n        - mentioned_profiles\n        - channel\n        properties:\n          frames:\n            type: array\n            items: *id010\n          reactions:\n            type: object\n            required:\n            - likes\n            - recasts\n            - likes_count\n            - recasts_count\n            properties:\n              likes:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  properties:\n                    fid: *id001\n              recasts:\n                type: array\n                items:\n                  type: object\n                  required:\n                  - fid\n                  - fname\n                  properties:\n                    fid: *id001\n                    fname:\n                      type: string\n              likes_count:\n                type: integer\n                format: int32\n              recasts_count:\n                type: integer\n                format: int32\n          replies:\n            type: object\n            required:\n            - count\n            properties:\n              count:\n                type: integer\n                format: int32\n          thread_hash:\n            type:\n            - string\n            - 'null'\n          mentioned_profiles:\n            type: array\n            items: *id011\n          channel:\n            oneOf:\n            - oneOf:\n              - type: object\n                required:\n                - id\n                - url\n                - object\n                properties:\n                  id:\n                    type: string\n                  url:\n                    type: string\n                  name:\n                    type: string\n                  description:\n                    type: string\n                  object:\n                    type: string\n                    enum:\n                    - channel\n                  created_at:\n                    description: Epoch timestamp in seconds.\n                    type: number\n                  follower_count:\n                    description: Number of followers the channel has.\n                    type: number\n                  external_link:\n                    type: object\n                    description: Channel's external link.\n                    properties:\n                      title:\n                        type: string\n                      url:\n                        type: string\n                  image_url:\n                    type: string\n                  parent_url:\n                    type: string\n                    format: uri\n                  lead: *id011\n                  moderator_fids:\n                    type: array\n                    items: *id001\n                  member_count:\n                    type: integer\n                    format: int32\n                  moderator: *id011\n                  pinned_cast_hash:\n                    type: string\n                    default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                    description: Cast Hash\n                  hosts:\n                    type: array\n                    deprecated: true\n                    items: *id011\n                  viewer_context: *id012\n              - *id013\n              discriminator:\n                propertyName: object\n                mapping:\n                  channel: '#/components/schemas/Channel'\n                  dehydrated_channel: '#/components/schemas/DehydratedChannel'\n            - type: 'null'\n          viewer_context:\n            type: object\n            description: Adds context on interactions the viewer has made with the\n              cast.\n            required:\n            - liked\n            - recasted\n            properties:\n              liked:\n                description: Indicates if the viewer liked the cast.\n                type: boolean\n              recasted:\n                description: Indicates if the viewer recasted the cast.\n                type: boolean\n          author_channel_context: *id012\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 39406, "end_char_idx": 44415, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3aed001b-20fe-4f0d-a1d5-2480e18b45ea": {"__data__": {"id_": "3aed001b-20fe-4f0d-a1d5-2480e18b45ea", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following.md", "file_name": "neynar_fetch-user-following.md", "file_type": "text/markdown", "file_size": 6593, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1c7be2fa-8287-4845-a5e1-d12a3f1f8b6a", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following.md", "file_name": "neynar_fetch-user-following.md", "file_type": "text/markdown", "file_size": 6593, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "38ba9ab13249535ff12316a5fac71c69ad041a8e92181a5948c5519a348ac337", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "92df86b5-3739-4ac5-8c2d-657ff353e45c", "node_type": "1", "metadata": {}, "hash": "7a5f8826c6f2b3e5d81fa8f79be03fe46f46482a2e31880b00b590a324d25ccb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-user-following\n\n**Endpoint**: `GET /farcaster/following`\n\n## Description\nFetch a list of users followed by a user. Can optionally include a viewer_fid and sort_type.\n\n## Parameters\n- `fid` (query): FID of the user whose following you want to fetch.\n- `viewer_fid` (query): Providing this will return a list of users that respects this user's mutes and blocks and includes `viewer_context`.\n- `sort_type` (query): Optional parameter to sort the users based on different criteria.\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- users\n- next\nproperties:\n  users:\n    type: array\n    items:\n      type: object\n      properties:\n        object:\n          type: string\n          enum:\n          - follow\n        user:\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid:\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5713, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "92df86b5-3739-4ac5-8c2d-657ff353e45c": {"__data__": {"id_": "92df86b5-3739-4ac5-8c2d-657ff353e45c", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following.md", "file_name": "neynar_fetch-user-following.md", "file_type": "text/markdown", "file_size": 6593, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1c7be2fa-8287-4845-a5e1-d12a3f1f8b6a", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following.md", "file_name": "neynar_fetch-user-following.md", "file_type": "text/markdown", "file_size": 6593, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "38ba9ab13249535ff12316a5fac71c69ad041a8e92181a5948c5519a348ac337", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3aed001b-20fe-4f0d-a1d5-2480e18b45ea", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following.md", "file_name": "neynar_fetch-user-following.md", "file_type": "text/markdown", "file_size": 6593, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "3013da98cef2eed901bf4e11d34ce10a2758b453866186521c28cd9d89ceb382", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4537, "end_char_idx": 6592, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c5cb6f00-e26c-45b5-804d-f1642a20730e": {"__data__": {"id_": "c5cb6f00-e26c-45b5-804d-f1642a20730e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9163378a-17bd-44d7-99ca-4db49ce71038", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "7be8a7a70ae569ebc86e83fa8059a2b77d488c155110e84879fad6f46564c20c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7572a6f0-85cf-40f9-9c6c-a61069b48bc1", "node_type": "1", "metadata": {}, "hash": "02f587cd3aa3383dd0364ccf187a476f3733ff55999517f15538a4b8d31fd576", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-user-reactions\n\n**Endpoint**: `GET /farcaster/reactions/user`\n\n## Description\nFetches reactions for a given user\n\n## Parameters\n- `fid` (query): No description\n- `viewer_fid` (query): Providing this will return a list of reactions that respects this user's mutes and blocks and includes `viewer_context`.\n- `type` (query): Type of reaction to fetch (likes or recasts or all)\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- reactions\n- next\nproperties:\n  reactions:\n    type: array\n    items:\n      type: object\n      required:\n      - reaction_type\n      - cast\n      - reaction_timestamp\n      - object\n      - user\n      properties:\n        reaction_type:\n          type: string\n          enum:\n          - like\n          - recast\n        cast:\n          allOf:\n          - type: object\n            required:\n            - hash\n            - parent_hash\n            - parent_url\n            - root_parent_url\n            - parent_author\n            - author\n            - text\n            - timestamp\n            - embeds\n            properties:\n              hash:\n                type: string\n              parent_hash:\n                type:\n                - string\n                - 'null'\n              parent_url:\n                type:\n                - string\n                - 'null'\n              root_parent_url:\n                type:\n                - string\n                - 'null'\n              parent_author:\n                type: object\n                required:\n                - fid\n                properties:\n                  fid:\n                    oneOf:\n                    - type: 'null'\n                    - &id001\n                      type: integer\n                      format: int32\n                      description: The unique identifier of a farcaster user (unsigned\n                        integer)\n                      examples:\n                      - 3\n                      - 191\n                      - 2\n                      - 194\n                      - 19960\n              author: &id011\n                type: object\n                required:\n                - object\n                - fid\n                - custody_address\n                - username\n                - profile\n                - follower_count\n                - following_count\n                - verifications\n                - verified_addresses\n                - verified_accounts\n                - power_badge\n                properties:\n                  object:\n                    type: string\n                    enum:\n                    - user\n                  fid: *id001\n                  username:\n                    type: string\n                  display_name:\n                    type: string\n                  custody_address: &id002\n                    type: string\n                    pattern: ^0x[a-fA-F0-9]{40}$\n                    description: Ethereum address\n                  pfp_url:\n                    type: string\n                    description: The URL of the user's profile picture\n                  profile:\n                    type: object\n                    required:\n                    - bio\n                    properties:\n                      bio:\n                        type: object\n                        required:\n                        - text\n                        - mentioned_profiles\n                        properties:\n                          text:\n                            type: string\n                          mentioned_profiles:\n                            type: array\n                            items:\n                              type: string\n                            default: []\n                      location:\n                        description: Coordinates and place names for a location\n                        type: object\n                        required:\n                        - latitude\n                        - longitude\n                        properties:\n                          latitude:\n                            type: number\n                            format: double\n                            minimum: -90\n                            maximum: 90\n                          longitude:\n                            type: number\n                            format: double\n                            minimum: -180\n                            maximum: 180\n                          address:\n                            type: object\n                            required:\n                            - city\n                            - country\n                            properties:\n                              city:\n                                type: string\n                              state:\n                                type: string\n                              state_code:\n                                type: string\n                              country:\n                                type: string\n                              country_code:\n                                type: string\n                  follower_count:\n                    type: integer\n                    format: int32\n                    description: The number of followers the user has.\n                  following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id002\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id002\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 6224, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7572a6f0-85cf-40f9-9c6c-a61069b48bc1": {"__data__": {"id_": "7572a6f0-85cf-40f9-9c6c-a61069b48bc1", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9163378a-17bd-44d7-99ca-4db49ce71038", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "7be8a7a70ae569ebc86e83fa8059a2b77d488c155110e84879fad6f46564c20c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c5cb6f00-e26c-45b5-804d-f1642a20730e", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "3ec62a236dfb29961462068f563b1e930bd48f8fdd4ed71cd6cbc78b060fb5ba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b92aeba7-6504-49f0-bbab-675078bc7579", "node_type": "1", "metadata": {}, "hash": "9ebc3fd550923fdff8ab84e34c75e2105afeae99bba64bf4a496052492dc326d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id002\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id002\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.\n                        items:\n                          type: string\n                          pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                          description: Solana address\n                  verified_accounts:\n                    type: array\n                    description: Verified accounts of the user on other platforms,\n                      currently only X is supported.\n                    items:\n                      type: object\n                      properties:\n                        platform:\n                          type: string\n                          enum:\n                          - x\n                          - github\n                        username:\n                          type: string\n                  power_badge:\n                    type: boolean\n                  experimental:\n                    type: object\n                    required:\n                    - neynar_user_score\n                    properties:\n                      neynar_user_score:\n                        type: number\n                        format: double\n                        description: Score that represents the probability that the\n                          account is not spam.\n                  viewer_context:\n                    type: object\n                    description: Adds context on the viewer's follow relationship\n                      with the user.\n                    required:\n                    - following\n                    - followed_by\n                    - blocking\n                    - blocked_by\n                    properties:\n                      following:\n                        description: Indicates if the viewer is following the user.\n                        type: boolean\n                      followed_by:\n                        description: Indicates if the viewer is followed by the user.\n                        type: boolean\n                      blocking:\n                        description: Indicates if the viewer is blocking the user.\n                        type: boolean\n                      blocked_by:\n                        description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 5290, "end_char_idx": 8401, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b92aeba7-6504-49f0-bbab-675078bc7579": {"__data__": {"id_": "b92aeba7-6504-49f0-bbab-675078bc7579", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9163378a-17bd-44d7-99ca-4db49ce71038", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "7be8a7a70ae569ebc86e83fa8059a2b77d488c155110e84879fad6f46564c20c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7572a6f0-85cf-40f9-9c6c-a61069b48bc1", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "720c2bb2b102c20c32edfec6a50947354dfacc64176e05445f93e0f10de85cdc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d08fbc0b-24a6-4d45-a789-9f3bc37d909e", "node_type": "1", "metadata": {}, "hash": "1ba7c92044a2c3addbb8adb178277cf9c49e5a8c99bbe3676369af19c345a358", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                    type: object\n                    description: Adds context on the viewer's follow relationship\n                      with the user.\n                    required:\n                    - following\n                    - followed_by\n                    - blocking\n                    - blocked_by\n                    properties:\n                      following:\n                        description: Indicates if the viewer is following the user.\n                        type: boolean\n                      followed_by:\n                        description: Indicates if the viewer is followed by the user.\n                        type: boolean\n                      blocking:\n                        description: Indicates if the viewer is blocking the user.\n                        type: boolean\n                      blocked_by:\n                        description: Indicates if the viewer is blocked by the user.\n                        type: boolean\n              text:\n                type: string\n              timestamp: &id006\n                type: string\n                format: date-time\n              embeds:\n                type: array\n                items:\n                  oneOf:\n                  - &id007\n                    type: object\n                    required:\n                    - url\n                    properties:\n                      url:\n                        type: string\n                      metadata:\n                        type: object\n                        required:\n                        - _status\n                        properties:\n                          _status:\n                            type: string\n                          content_type:\n                            type:\n                            - string\n                            - 'null'\n                          content_length:\n                            type:\n                            - integer\n                            - 'null'\n                          image:\n                            type: object\n                            properties:\n                              height_px:\n                                type: integer\n                              width_px:\n                                type: integer\n                          video:\n                            type: object\n                            properties:\n                              duration_s:\n                                type: number\n                              stream:\n                                type: array\n                                items:\n                                  type: object\n                                  properties:\n                                    codec_name:\n                                      type: string\n                                    height_px:\n                                      type: integer\n                                    width_px:\n                                      type: integer\n                          html:\n                            allOf:\n                            - type: object\n                              properties:\n                                favicon:\n                                  type: string\n                                modifiedTime:\n                                  type: string\n                                ogArticleAuthor:\n                                  type: string\n                                ogArticleExpirationTime:\n                                  type: string\n                                ogArticleModifiedTime:\n                                  type: string\n                                ogArticlePublishedTime:\n                                  type: string\n                                ogArticlePublisher:\n                                  type: string\n                                ogArticleSection:\n                                  type: string\n                                ogArticleTag:\n                                  type: string\n                                ogAudio:\n                                  type: string\n                                ogAudioSecureURL:\n                                  type: string\n                                ogAudioType:\n                                  type: string\n                                ogAudioURL:\n                                  type: string\n                                ogAvailability:\n                                  type: string\n                                ogDate:\n                                  type: string\n                                ogDescription:\n                                  type: string\n                                ogDeterminer:\n                                  type: string\n                                ogEpisode:\n                                  type: string\n                                ogImage:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                      alt:\n                                        type: string\n                                    required:\n                                    - url\n                                ogLocale:\n                                  type: string\n                                ogLocaleAlternate:\n                                  type: string\n                                ogLogo:\n                                  type: string\n                                ogMovie:\n                                  type: string\n                                ogPriceAmount:\n                                  type: string\n                                ogPriceCurrency:\n                                  type: string\n                                ogProductAvailability:\n                                  type: string\n                                ogProductCondition:\n                                  type: string\n                                ogProductPriceAmount:\n                                  type: string\n                                ogProductPriceCurrency:\n                                  type: string\n                                ogProductRetailerItemId:\n                                  type: string\n                                ogSiteName:\n                                  type: string\n                                ogTitle:\n                                  type: string\n                                ogType:\n                                  type: string\n                                ogUrl:\n                                  type: string\n                                ogVideo:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                    required:\n                                    - url\n                                ogVideoActor:\n                                  type: string\n                                ogVideoActorId:\n                                  type: string\n                                ogVideoActorRole:\n                                  type: string\n                                ogVideoDirector:\n                                  type: string\n                                ogVideoDuration:\n                                  type: string\n                                ogVideoOther:\n                                  type: string\n                                ogVideoReleaseDate:\n                                  type: string\n                                ogVideoSecureURL:\n                                  type: string\n                                ogVideoSeries:\n                                  type: string\n                                ogVideoTag:\n                                  type: string\n                                ogVideoTvShow:\n                                  type: string\n                                ogVideoWriter:\n                                  type: string\n                                ogWebsite:\n                                  type: string\n                                updatedTime:\n                                  type: string\n                            - type: object\n                              properties:\n                                oembed:\n                                  oneOf:\n                                  - allOf:\n                                    - &id003\n                                      type: object\n                                      description: Basic data structure of every oembed\n                                        response see https://oembed.com/\n                                      required:\n                                      - type\n                                      - version\n                                      properties:\n                                        type:\n                                          type: string\n                                        version:\n                                          type:\n                                          - string\n                                          - 'null'\n                                        title:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A text title, describing the\n                                            resource.", "mimetype": "text/plain", "start_char_idx": 7456, "end_char_idx": 17821, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d08fbc0b-24a6-4d45-a789-9f3bc37d909e": {"__data__": {"id_": "d08fbc0b-24a6-4d45-a789-9f3bc37d909e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9163378a-17bd-44d7-99ca-4db49ce71038", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "7be8a7a70ae569ebc86e83fa8059a2b77d488c155110e84879fad6f46564c20c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b92aeba7-6504-49f0-bbab-675078bc7579", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "0f93d4ac555737271002b17dc93710367eda9d62608da8a4e9d3e91386e9db2f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "64fdb6e5-4bbf-488d-b4dc-2d898d1a2d7a", "node_type": "1", "metadata": {}, "hash": "23a04483365d8bcc2b18a2d1ac96edd50ac2b76ebbbf7ad056f6abdb7ce9a7f4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the author/owner\n                                            of the resource.\n                                        author_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL for the author/owner\n                                            of the resource.\n                                        provider_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the resource provider.\n                                        provider_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The url of the resource provider.\n                                        cache_age:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The suggested cache lifetime\n                                            for this resource, in seconds. Consumers\n                                            may choose to use this value or not.\n                                        thumbnail_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL to a thumbnail image\n                                            representing the resource. The thumbnail\n                                            must respect any maxwidth and maxheight\n                                            parameters. If this parameter is present,\n                                            thumbnail_width and thumbnail_height must\n                                            also be present.\n                                        thumbnail_width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width of the optional thumbnail.\n                                            If this parameter is present, thumbnail_url\n                                            and thumbnail_height must also be present.\n                                        thumbnail_height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height of the optional\n                                            thumbnail. If this parameter is present,\n                                            thumbnail_url and thumbnail_width must\n                                            also be present.\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - rich\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to display\n                                            the resource. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities. The markup\n                                            should be valid XHTML 1.0 Basic.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - video\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to embed\n                                            a video player. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 17862, "end_char_idx": 26924, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "64fdb6e5-4bbf-488d-b4dc-2d898d1a2d7a": {"__data__": {"id_": "64fdb6e5-4bbf-488d-b4dc-2d898d1a2d7a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9163378a-17bd-44d7-99ca-4db49ce71038", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "7be8a7a70ae569ebc86e83fa8059a2b77d488c155110e84879fad6f46564c20c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d08fbc0b-24a6-4d45-a789-9f3bc37d909e", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "2aa542001ca165cdb2e271c7f79f784f16f475e5d12bc84eecb4ae4ed800337c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b82268ef-daae-46bd-94c4-344ded6b6108", "node_type": "1", "metadata": {}, "hash": "d2c745055c34b05df38156a53e572587481b7019a7d17c71b53ebf72656e7c1e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - link\n                                  discriminator:\n                                    propertyName: type\n                                    mapping:\n                                      rich: '#/components/schemas/OembedRichData'\n                                      video: '#/components/schemas/OembedVideoData'\n                                      photo: '#/components/schemas/OembedPhotoData'\n                                      link: '#/components/schemas/OembedLinkData'\n                          frame: &id010\n                            discriminator:\n                              propertyName: version\n                            oneOf:\n                            - description: Frame v1 object\n                              allOf:\n                              - &id004\n                                description: Frame base object used across all versions\n                                type: object\n                                required:\n                                - version\n                                - image\n                                - frames_url\n                                properties:\n                                  version:\n                                    type: string\n                                    description: Version of the frame, 'next' for\n                                      v2, 'vNext' for v1\n                                  image:\n                                    type: string\n                                    description: URL of the image\n                                  frames_url:\n                                    type: string\n                                    description: Launch URL of the frame\n                              - type: object\n                                properties:\n                                  buttons:\n                                    type: array\n                                    items:\n                                      type: object\n                                      required:\n                                      - index\n                                      - action_type\n                                      properties:\n                                        title:\n                                          type: string\n                                          description: Title of the button\n                                        index:\n                                          type: integer\n                                          description: Index of the button\n                                        action_type:\n                                          type: string\n                                          description: The action type of a frame\n                                            button. Action types \"mint\" & \"link\" are\n                                            to be handled on the client side only\n                                            and so they will produce a no/op for POST\n                                            /farcaster/frame/action.\n                                          enum:\n                                          - post\n                                          - post_redirect\n                                          - tx\n                                          - link\n                                          - mint\n                                        target:\n                                          type: string\n                                          description: Target of the button\n                                        post_url:\n                                          type: string\n                                          description: Used specifically for the tx\n                                            action type to post a successful transaction\n                                            hash\n                                  post_url:\n                                    type: string\n                                    description: Post URL to take an action on this\n                                      frame\n                                  title:\n                                    type: string\n                                  image_aspect_ratio:\n                                    type: string\n                                  input:\n                                    type: object\n                                    properties:\n                                      text:\n                                        type: string\n                                        description: Input text for the frame\n                                  state:\n                                    type: object\n                                    properties:\n                                      serialized:\n                                        type: string\n                                        description: State for the frame in a serialized\n                                          format\n                            - description: Frame v2 object\n                              allOf:\n                              - *id004\n                              - type: object\n                                required:\n                                - title\n                                - name\n                                - icon\n                                properties:\n                                  manifest:\n                                    type: object\n                                    properties:\n                                      account_association:\n                                        type: object\n                                        properties:\n                                          header:\n                                            type: string\n                                          payload:\n                                            type: string\n                                          signature:\n                                            type: string\n                                        required:\n                                        - header\n                                        - payload\n                                        - signature\n                                      frame:\n                                        type: object\n                                        properties:\n                                          version:\n                                            type: string\n                                            enum:\n                                            - 0.0.0\n                                            - 0.0.", "mimetype": "text/plain", "start_char_idx": 25103, "end_char_idx": 33966, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b82268ef-daae-46bd-94c4-344ded6b6108": {"__data__": {"id_": "b82268ef-daae-46bd-94c4-344ded6b6108", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9163378a-17bd-44d7-99ca-4db49ce71038", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "7be8a7a70ae569ebc86e83fa8059a2b77d488c155110e84879fad6f46564c20c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "64fdb6e5-4bbf-488d-b4dc-2d898d1a2d7a", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f5b6af537624b099da25e418f38b3bb71e2012e239c31f635a7a7661bb1bad40", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c1a871cb-a7ae-4fd6-928f-9c40439d67c7", "node_type": "1", "metadata": {}, "hash": "c527a4018989db2cbb830dd28b7ff51be65ef4b845943825e166f4764a944b6f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                            - 0.0.1\n                                            - '1'\n                                            - next\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                          home_url:\n                                            type: string\n                                            maxLength: 512\n                                          icon_url:\n                                            type: string\n                                            maxLength: 512\n                                          image_url:\n                                            type: string\n                                            maxLength: 512\n                                          button_title:\n                                            type: string\n                                            maxLength: 32\n                                          splash_image_url:\n                                            type: string\n                                            maxLength: 512\n                                          splash_background_color:\n                                            type: string\n                                          webhook_url:\n                                            type: string\n                                            maxLength: 512\n                                        required:\n                                        - version\n                                        - name\n                                        - home_url\n                                        - icon_url\n                                      triggers:\n                                        type: array\n                                        items:\n                                          oneOf:\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - cast\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - composer\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                    required:\n                                    - account_association\n                                  author: &id005\n                                    type: object\n                                    required:\n                                    - object\n                                    - fid\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - user_dehydrated\n                                      fid: *id001\n                                      username:\n                                        type: string\n                                      display_name:\n                                        type: string\n                                      pfp_url:\n                                        type: string\n                            mapping:\n                              vNext: '#/components/schemas/FrameV1'\n                              next: '#/components/schemas/FrameV2'\n                              '1': '#/components/schemas/FrameV2'\n                              0.0.0: '#/components/schemas/FrameV2'\n                              0.0.1: '#/components/schemas/FrameV2'\n                  - type: object\n                    required:\n                    - cast\n                    properties:\n                      cast_id: &id008\n                        type: object\n                        required:\n                        - fid\n                        - hash\n                        properties:\n                          fid: *id001\n                          hash:\n                            type: string\n                      cast:\n                        type: object\n                        required:\n                        - hash\n                        - parent_hash\n                        - parent_url\n                        - root_parent_url\n                        - parent_author\n                        - author\n                        - text\n                        - timestamp\n                        - type\n                        - embeds\n                        - channel\n                        properties:\n                          hash:\n                            type: string\n                          parent_hash:\n                            type:\n                            - string\n                            - 'null'\n                          parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          root_parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          parent_author:\n                            type: object\n                            required:\n                            - fid\n                            properties:\n                              fid:\n                                oneOf:\n                                - type: 'null'\n                                - *id001\n                          author: *id005\n                          text:\n                            type: string\n                          timestamp: *id006\n                          type: &id009\n                            type: string\n                            enum:\n                            - cast-mention\n                            - cast-reply\n                            description: 'The notification type of a cast.\n\n                              '\n                          embeds:\n                            type: array\n                            items:\n                              oneOf:\n                              - *id007\n                              - type: object\n                                required:\n                                - cast\n                                properties:\n                                  cast_id: *id008\n                                  cast:\n                                    type: object\n                                    required:\n                                    - object\n                                    - hash\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - cast_dehydrated\n                                      hash:\n                                        type: string\n                                      author: *id005\n                          channel:\n                            oneOf:\n                            - type: 'null'\n                            - &id013\n                              type: object\n                              required:\n                              - id\n                              - name\n                              - object\n                              properties:\n                                id:\n                                  type: string\n                                name:\n                                  type: string\n                                object:\n                                  type: string\n                                  enum:\n                                  - channel_dehydrated\n                                image_url:\n                                  type: string\n                                viewer_context: &id012\n                                  description: Adds context on the viewer's or author's\n                                    role in the channel.", "mimetype": "text/plain", "start_char_idx": 33912, "end_char_idx": 43495, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c1a871cb-a7ae-4fd6-928f-9c40439d67c7": {"__data__": {"id_": "c1a871cb-a7ae-4fd6-928f-9c40439d67c7", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9163378a-17bd-44d7-99ca-4db49ce71038", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "7be8a7a70ae569ebc86e83fa8059a2b77d488c155110e84879fad6f46564c20c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b82268ef-daae-46bd-94c4-344ded6b6108", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "6d46b559dc048afe6042dbb71e3210ef23c0d05ad7aca49d6d87d1a4a1095e54", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                                  required:\n                                  - following\n                                  properties:\n                                    following:\n                                      description: Indicates if the user is following\n                                        the channel.\n                                      type: boolean\n                                    role:\n                                      type: string\n                                      description: The role of a channel member\n                                      enum:\n                                      - member\n                                      - moderator\n              type: *id009\n          - type: object\n            required:\n            - reactions\n            - replies\n            - thread_hash\n            - mentioned_profiles\n            - channel\n            properties:\n              frames:\n                type: array\n                items: *id010\n              reactions:\n                type: object\n                required:\n                - likes\n                - recasts\n                - likes_count\n                - recasts_count\n                properties:\n                  likes:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      properties:\n                        fid: *id001\n                  recasts:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      - fname\n                      properties:\n                        fid: *id001\n                        fname:\n                          type: string\n                  likes_count:\n                    type: integer\n                    format: int32\n                  recasts_count:\n                    type: integer\n                    format: int32\n              replies:\n                type: object\n                required:\n                - count\n                properties:\n                  count:\n                    type: integer\n                    format: int32\n              thread_hash:\n                type:\n                - string\n                - 'null'\n              mentioned_profiles:\n                type: array\n                items: *id011\n              channel:\n                oneOf:\n                - oneOf:\n                  - type: object\n                    required:\n                    - id\n                    - url\n                    - object\n                    properties:\n                      id:\n                        type: string\n                      url:\n                        type: string\n                      name:\n                        type: string\n                      description:\n                        type: string\n                      object:\n                        type: string\n                        enum:\n                        - channel\n                      created_at:\n                        description: Epoch timestamp in seconds.\n                        type: number\n                      follower_count:\n                        description: Number of followers the channel has.\n                        type: number\n                      external_link:\n                        type: object\n                        description: Channel's external link.\n                        properties:\n                          title:\n                            type: string\n                          url:\n                            type: string\n                      image_url:\n                        type: string\n                      parent_url:\n                        type: string\n                        format: uri\n                      lead: *id011\n                      moderator_fids:\n                        type: array\n                        items: *id001\n                      member_count:\n                        type: integer\n                        format: int32\n                      moderator: *id011\n                      pinned_cast_hash:\n                        type: string\n                        default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                        description: Cast Hash\n                      hosts:\n                        type: array\n                        deprecated: true\n                        items: *id011\n                      viewer_context: *id012\n                  - *id013\n                  discriminator:\n                    propertyName: object\n                    mapping:\n                      channel: '#/components/schemas/Channel'\n                      dehydrated_channel: '#/components/schemas/DehydratedChannel'\n                - type: 'null'\n              viewer_context:\n                type: object\n                description: Adds context on interactions the viewer has made with\n                  the cast.\n                required:\n                - liked\n                - recasted\n                properties:\n                  liked:\n                    description: Indicates if the viewer liked the cast.\n                    type: boolean\n                  recasted:\n                    description: Indicates if the viewer recasted the cast.\n                    type: boolean\n              author_channel_context: *id012\n        reaction_timestamp:\n          type: string\n          format: date-time\n        object:\n          type: string\n          enum:\n          - likes\n          - recasts\n        user: *id005\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 43530, "end_char_idx": 49340, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c7a77f1c-8dcd-40e8-b4e1-fc598601b2da": {"__data__": {"id_": "c7a77f1c-8dcd-40e8-b4e1-fc598601b2da", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-active-channels.md", "file_name": "neynar_fetch-users-active-channels.md", "file_type": "text/markdown", "file_size": 7942, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0841d887-6c2e-4726-8d80-e1b1276bfbf4", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-active-channels.md", "file_name": "neynar_fetch-users-active-channels.md", "file_type": "text/markdown", "file_size": 7942, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "02af12b27552f13ccf8846a6513f366f9cdb4cb877fc43b5d50c665543b0a49e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bceaeffd-6772-4372-8a11-0dcd55169289", "node_type": "1", "metadata": {}, "hash": "9d0c9b940e135b0c04a55010e78e0dd02d0fb493419219de7ca70c5a002aa1a6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-users-active-channels\n\n**Endpoint**: `GET /farcaster/channel/user`\n\n## Description\nFetches all channels that a user has casted in, in reverse chronological order.\n\n## Parameters\n- `fid` (query): The user's FID (identifier)\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nproperties:\n  channels:\n    type: array\n    items:\n      type: object\n      required:\n      - id\n      - url\n      - object\n      properties:\n        id:\n          type: string\n        url:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        object:\n          type: string\n          enum:\n          - channel\n        created_at:\n          description: Epoch timestamp in seconds.\n          type: number\n        follower_count:\n          description: Number of followers the channel has.\n          type: number\n        external_link:\n          type: object\n          description: Channel's external link.\n          properties:\n            title:\n              type: string\n            url:\n              type: string\n        image_url:\n          type: string\n        parent_url:\n          type: string\n          format: uri\n        lead: &id003\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid: &id002\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5321, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bceaeffd-6772-4372-8a11-0dcd55169289": {"__data__": {"id_": "bceaeffd-6772-4372-8a11-0dcd55169289", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-active-channels.md", "file_name": "neynar_fetch-users-active-channels.md", "file_type": "text/markdown", "file_size": 7942, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0841d887-6c2e-4726-8d80-e1b1276bfbf4", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-active-channels.md", "file_name": "neynar_fetch-users-active-channels.md", "file_type": "text/markdown", "file_size": 7942, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "02af12b27552f13ccf8846a6513f366f9cdb4cb877fc43b5d50c665543b0a49e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c7a77f1c-8dcd-40e8-b4e1-fc598601b2da", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-active-channels.md", "file_name": "neynar_fetch-users-active-channels.md", "file_type": "text/markdown", "file_size": 7942, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "de222bc410d72cd19bba888f545c8e99d76bd4cff41b95dee9b86dca6452e06e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        moderator_fids:\n          type: array\n          items: *id002\n        member_count:\n          type: integer\n          format: int32\n        moderator: *id003\n        pinned_cast_hash:\n          type: string\n          default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n          description: Cast Hash\n        hosts:\n          type: array\n          deprecated: true\n          items: *id003\n        viewer_context:\n          description: Adds context on the viewer's or author's role in the channel.\n          type: object\n          required:\n          - following\n          properties:\n            following:\n              description: Indicates if the user is following the channel.\n              type: boolean\n            role:\n              type: string\n              description: The role of a channel member\n              enum:\n              - member\n              - moderator\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4322, "end_char_idx": 7941, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cb809c7f-4dfd-4772-b78f-f6a4f89090b5": {"__data__": {"id_": "cb809c7f-4dfd-4772-b78f-f6a4f89090b5", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-by-location.md", "file_name": "neynar_fetch-users-by-location.md", "file_type": "text/markdown", "file_size": 5714, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "88854f72-5bc3-4eb6-9d97-37a11e6d00cb", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-by-location.md", "file_name": "neynar_fetch-users-by-location.md", "file_type": "text/markdown", "file_size": 5714, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "34c37b6b3da7bd79fc0ac492c2f10ddbf9c03a4160f4c97edbc939b8f6265336", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cd197ac2-243a-4973-8c62-7c2bacc19cc8", "node_type": "1", "metadata": {}, "hash": "29c2991ce65ad25d30a51b153b3a7546f709e524636f4813ed06b4f33eee85f2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-users-by-location\n\n**Endpoint**: `GET /farcaster/user/by_location`\n\n## Description\nFetches a list of users given a location\n\n## Parameters\n- `latitude` (query): Latitude of the location\n- `longitude` (query): Longitude of the location\n- `viewer_fid` (query): FID of the user viewing the feed. Providing this will return a list of users that respects this user's mutes and blocks and includes `viewer_context`.\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor\n\n## Response\n```yaml\ntype: object\nrequired:\n- users\n- next\nproperties:\n  users:\n    type: array\n    items:\n      type: object\n      required:\n      - object\n      - fid\n      - custody_address\n      - username\n      - profile\n      - follower_count\n      - following_count\n      - verifications\n      - verified_addresses\n      - verified_accounts\n      - power_badge\n      properties:\n        object:\n          type: string\n          enum:\n          - user\n        fid:\n          type: integer\n          format: int32\n          description: The unique identifier of a farcaster user (unsigned integer)\n          examples:\n          - 3\n          - 191\n          - 2\n          - 194\n          - 19960\n        username:\n          type: string\n        display_name:\n          type: string\n        custody_address: &id001\n          type: string\n          pattern: ^0x[a-fA-F0-9]{40}$\n          description: Ethereum address\n        pfp_url:\n          type: string\n          description: The URL of the user's profile picture\n        profile:\n          type: object\n          required:\n          - bio\n          properties:\n            bio:\n              type: object\n              required:\n              - text\n              - mentioned_profiles\n              properties:\n                text:\n                  type: string\n                mentioned_profiles:\n                  type: array\n                  items:\n                    type: string\n                  default: []\n            location:\n              description: Coordinates and place names for a location\n              type: object\n              required:\n              - latitude\n              - longitude\n              properties:\n                latitude:\n                  type: number\n                  format: double\n                  minimum: -90\n                  maximum: 90\n                longitude:\n                  type: number\n                  format: double\n                  minimum: -180\n                  maximum: 180\n                address:\n                  type: object\n                  required:\n                  - city\n                  - country\n                  properties:\n                    city:\n                      type: string\n                    state:\n                      type: string\n                    state_code:\n                      type: string\n                    country:\n                      type: string\n                    country_code:\n                      type: string\n        follower_count:\n          type: integer\n          format: int32\n          description: The number of followers the user has.\n        following_count:\n          type: integer\n          format: int32\n          description: The number of users the user is following.\n        verifications:\n          type: array\n          items: *id001\n        verified_addresses:\n          type: object\n          required:\n          - eth_addresses\n          - sol_addresses\n          properties:\n            eth_addresses:\n              type: array\n              description: List of verified Ethereum addresses of the user sorted\n                by oldest to most recent.\n              items: *id001\n            sol_addresses:\n              type: array\n              description: List of verified Solana addresses of the user sorted by\n                oldest to most recent.\n              items:\n                type: string\n                pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                description: Solana address\n        verified_accounts:\n          type: array\n          description: Verified accounts of the user on other platforms, currently\n            only X is supported.\n          items:\n            type: object\n            properties:\n              platform:\n                type: string\n                enum:\n                - x\n                - github\n              username:\n                type: string\n        power_badge:\n          type: boolean\n        experimental:\n          type: object\n          required:\n          - neynar_user_score\n          properties:\n            neynar_user_score:\n              type: number\n              format: double\n              description: Score that represents the probability that the account\n                is not spam.\n        viewer_context:\n          type: object\n          description: Adds context on the viewer's follow relationship with the user.\n          required:\n          - following\n          - followed_by\n          - blocking\n          - blocked_by\n          properties:\n            following:\n              description: Indicates if the viewer is following the user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5135, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cd197ac2-243a-4973-8c62-7c2bacc19cc8": {"__data__": {"id_": "cd197ac2-243a-4973-8c62-7c2bacc19cc8", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-by-location.md", "file_name": "neynar_fetch-users-by-location.md", "file_type": "text/markdown", "file_size": 5714, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "88854f72-5bc3-4eb6-9d97-37a11e6d00cb", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-by-location.md", "file_name": "neynar_fetch-users-by-location.md", "file_type": "text/markdown", "file_size": 5714, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "34c37b6b3da7bd79fc0ac492c2f10ddbf9c03a4160f4c97edbc939b8f6265336", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cb809c7f-4dfd-4772-b78f-f6a4f89090b5", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-by-location.md", "file_name": "neynar_fetch-users-by-location.md", "file_type": "text/markdown", "file_size": 5714, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "5b6e66df4fa69cd1970f978dba95de1c2ad3b0ddf83857cac55db161ade4f3d9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n            type: object\n            properties:\n              platform:\n                type: string\n                enum:\n                - x\n                - github\n              username:\n                type: string\n        power_badge:\n          type: boolean\n        experimental:\n          type: object\n          required:\n          - neynar_user_score\n          properties:\n            neynar_user_score:\n              type: number\n              format: double\n              description: Score that represents the probability that the account\n                is not spam.\n        viewer_context:\n          type: object\n          description: Adds context on the viewer's follow relationship with the user.\n          required:\n          - following\n          - followed_by\n          - blocking\n          - blocked_by\n          properties:\n            following:\n              description: Indicates if the viewer is following the user.\n              type: boolean\n            followed_by:\n              description: Indicates if the viewer is followed by the user.\n              type: boolean\n            blocking:\n              description: Indicates if the viewer is blocking the user.\n              type: boolean\n            blocked_by:\n              description: Indicates if the viewer is blocked by the user.\n              type: boolean\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4184, "end_char_idx": 5713, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "df9c95c5-4b47-4699-8491-652639d49c33": {"__data__": {"id_": "df9c95c5-4b47-4699-8491-652639d49c33", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-validate-frame-analytics.md", "file_name": "neynar_fetch-validate-frame-analytics.md", "file_type": "text/markdown", "file_size": 2117, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ee109f25-ba0c-4a93-af47-c7737d3534fe", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-validate-frame-analytics.md", "file_name": "neynar_fetch-validate-frame-analytics.md", "file_type": "text/markdown", "file_size": 2117, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "e13dc53b0fb3c01e0320d0026a3441b4c6cd6d62a95b65bdb9705e34e6e48eee", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-validate-frame-analytics\n\n**Endpoint**: `GET /farcaster/frame/validate/analytics`\n\n## Description\nFetch analytics for total-interactors, interactors, nteractions-per-cast and input-text.\n\n## Parameters\n- `frame_url` (query): No description\n- `analytics_type` (query): No description\n- `start` (query): No description\n- `stop` (query): No description\n- `aggregate_window` (query): Required for `analytics_type=interactions-per-cast`\n\n## Response\n```yaml\noneOf:\n- type: object\n  required:\n  - interactors\n  properties:\n    interactors:\n      type: array\n      items:\n        type: object\n        required:\n        - fid\n        - username\n        - interaction_count\n        properties:\n          fid: &id001\n            type: integer\n            format: int32\n            description: The unique identifier of a farcaster user (unsigned integer)\n            examples:\n            - 3\n            - 191\n            - 2\n            - 194\n            - 19960\n          username:\n            type: string\n          interaction_count:\n            type: number\n- type: object\n  required:\n  - total_interactors\n  properties:\n    total_interactors:\n      type: number\n- type: object\n  required:\n  - interactions_per_cast\n  properties:\n    interactions_per_cast:\n      type: array\n      items:\n        type: object\n        required:\n        - start\n        - stop\n        - time\n        - interaction_count\n        - cast_url\n        properties:\n          start:\n            type: string\n            format: date-time\n          stop:\n            type: string\n            format: date-time\n          time:\n            type: string\n            format: date-time\n          interaction_count:\n            type: number\n          cast_url:\n            type: string\n            format: uri\n- type: object\n  required:\n  - input_texts\n  properties:\n    input_texts:\n      type: array\n      items:\n        type: object\n        required:\n        - fid\n        - username\n        - input_text\n        properties:\n          fid: *id001\n          username:\n            type: string\n          input_text:\n            type: string\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2116, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "51efda83-c5ec-497c-a1a5-4d7870c8eff6": {"__data__": {"id_": "51efda83-c5ec-497c-a1a5-4d7870c8eff6", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-validate-frame-list.md", "file_name": "neynar_fetch-validate-frame-list.md", "file_type": "text/markdown", "file_size": 290, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "21fc4d23-2342-4854-9d3a-9c182580c80b", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-validate-frame-list.md", "file_name": "neynar_fetch-validate-frame-list.md", "file_type": "text/markdown", "file_size": 290, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "aa4f925dc95ef6d82a243261e5b8b2f0833a51fe11f1f48e03f53183a90f6dcd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# fetch-validate-frame-list\n\n**Endpoint**: `GET /farcaster/frame/validate/list`\n\n## Description\nFetch a list of all the frames validated by a user\n\n## Response\n```yaml\ntype: object\nrequired:\n- frames\nproperties:\n  frames:\n    type: array\n    items:\n      type: string\n      format: uri\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 289, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "baec1a96-838d-4dcc-8a75-8d9f401d77c1": {"__data__": {"id_": "baec1a96-838d-4dcc-8a75-8d9f401d77c1", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_follow-channel.md", "file_name": "neynar_follow-channel.md", "file_type": "text/markdown", "file_size": 205, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c072613c-baec-4287-9adc-d80350737e07", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_follow-channel.md", "file_name": "neynar_follow-channel.md", "file_type": "text/markdown", "file_size": 205, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "140d473982f60d7f94a78df9b761aa135d567172f4c04e97739ee16805c21d47", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# follow-channel\n\n**Endpoint**: `POST /farcaster/channel/follow`\n\n## Description\nFollow a channel\n\n## Response\n```yaml\ntype: object\nproperties:\n  success:\n    type: boolean\n  message:\n    type: string\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 204, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d62f0f91-d4c8-4acc-93bd-a29438537f2b": {"__data__": {"id_": "d62f0f91-d4c8-4acc-93bd-a29438537f2b", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_get-fresh-account-FID.md", "file_name": "neynar_get-fresh-account-FID.md", "file_type": "text/markdown", "file_size": 278, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7c38a766-2006-49e9-8faf-523c26f7e9bb", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_get-fresh-account-FID.md", "file_name": "neynar_get-fresh-account-FID.md", "file_type": "text/markdown", "file_size": 278, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "90f5a40d2bbe54987fb5377cbf79c50f937b9878d14b9e005c54b1aba3721c33", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# get-fresh-account-FID\n\n**Endpoint**: `GET /farcaster/user/fid`\n\n## Description\nFetches FID to [assign it to new user](https://docs.neynar.com/reference/register-account)\n\n## Parameters\n\n## Response\n```yaml\ntype: object\nrequired:\n- fid\nproperties:\n  fid:\n    type: integer\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 277, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2b09d979-9795-4cfa-92d1-dddc06c18fa3": {"__data__": {"id_": "2b09d979-9795-4cfa-92d1-dddc06c18fa3", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_invite-channel-member.md", "file_name": "neynar_invite-channel-member.md", "file_type": "text/markdown", "file_size": 229, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0a18e2e4-3fdf-4cf6-b442-4e8d1f6f08cd", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_invite-channel-member.md", "file_name": "neynar_invite-channel-member.md", "file_type": "text/markdown", "file_size": 229, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "4ccbffcffef01a93159b700f2ab1158281e6d478a02257e535a8b0eb10f649c0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# invite-channel-member\n\n**Endpoint**: `POST /farcaster/channel/member/invite`\n\n## Description\nInvite a user to a channel\n\n## Response\n```yaml\ntype: object\nproperties:\n  success:\n    type: boolean\n  message:\n    type: string\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 228, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "53072224-d8b7-4075-9422-40253e9021ae": {"__data__": {"id_": "53072224-d8b7-4075-9422-40253e9021ae", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_is-fname-available.md", "file_name": "neynar_is-fname-available.md", "file_type": "text/markdown", "file_size": 276, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "122838c8-d639-4921-93fb-5955862e46b1", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_is-fname-available.md", "file_name": "neynar_is-fname-available.md", "file_type": "text/markdown", "file_size": 276, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "fd0dd43ef9a6ac9b24d8f1a60582a137f54f04ffd848b0825833b74e4283e491", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# is-fname-available\n\n**Endpoint**: `GET /farcaster/fname/availability`\n\n## Description\nCheck if a given fname is available\n\n## Parameters\n- `fname` (query): No description\n\n## Response\n```yaml\ntype: object\nrequired:\n- available\nproperties:\n  available:\n    type: boolean\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 275, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d8fe4b90-02d4-4699-aacb-b776f76f85ad": {"__data__": {"id_": "d8fe4b90-02d4-4699-aacb-b776f76f85ad", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "05701ad3-36a7-453a-8b0b-c9307eaa10fa", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "6c5f43340bc9e0187691e5b436f78f19bfadcca1585084387badb7e69ab14405", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c6e52d0c-f10c-4439-a553-a72462761dce", "node_type": "1", "metadata": {}, "hash": "fb204e0c63a22c6629af67f64c76737ae6a964cb79da329e81dc197993f00ab4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# lookup-cast-by-hash-or-warpcast-url\n\n**Endpoint**: `GET /farcaster/cast`\n\n## Description\nGets information about an individual cast by passing in a Warpcast web URL or cast hash\n\n## Parameters\n- `identifier` (query): Cast identifier (Its either a url or a hash)\n- `type` (query): No description\n- `viewer_fid` (query): adds viewer_context to cast object to show whether viewer has liked or recasted the cast.\n\n## Response\n```yaml\ntype: object\nrequired:\n- cast\nproperties:\n  cast:\n    allOf:\n    - type: object\n      required:\n      - hash\n      - parent_hash\n      - parent_url\n      - root_parent_url\n      - parent_author\n      - author\n      - text\n      - timestamp\n      - embeds\n      properties:\n        hash:\n          type: string\n        parent_hash:\n          type:\n          - string\n          - 'null'\n        parent_url:\n          type:\n          - string\n          - 'null'\n        root_parent_url:\n          type:\n          - string\n          - 'null'\n        parent_author:\n          type: object\n          required:\n          - fid\n          properties:\n            fid:\n              oneOf:\n              - type: 'null'\n              - &id001\n                type: integer\n                format: int32\n                description: The unique identifier of a farcaster user (unsigned integer)\n                examples:\n                - 3\n                - 191\n                - 2\n                - 194\n                - 19960\n        author: &id011\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid: *id001\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id002\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id002\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id002\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5271, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c6e52d0c-f10c-4439-a553-a72462761dce": {"__data__": {"id_": "c6e52d0c-f10c-4439-a553-a72462761dce", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "05701ad3-36a7-453a-8b0b-c9307eaa10fa", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "6c5f43340bc9e0187691e5b436f78f19bfadcca1585084387badb7e69ab14405", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d8fe4b90-02d4-4699-aacb-b776f76f85ad", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "635ca72427027f65737ffc40dfeb963853b69ace4918d2ed8f18a3fae8c5e2ea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9f3f25ee-5bcd-4a9a-8213-a82119c42509", "node_type": "1", "metadata": {}, "hash": "dec6309dccfeabb74a41ef2c4b7452c5c39b9c6fd6716f6f95144395e0ff2e72", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n              type: array\n              items: *id002\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id002\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 4272, "end_char_idx": 6796, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9f3f25ee-5bcd-4a9a-8213-a82119c42509": {"__data__": {"id_": "9f3f25ee-5bcd-4a9a-8213-a82119c42509", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "05701ad3-36a7-453a-8b0b-c9307eaa10fa", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "6c5f43340bc9e0187691e5b436f78f19bfadcca1585084387badb7e69ab14405", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c6e52d0c-f10c-4439-a553-a72462761dce", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "3f2dfe95275158a829bd8ee8c90d260632f287e1ad81f5a373aa8385e7c64747", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "117f86ad-147c-4fe5-902d-b99d4a74bf01", "node_type": "1", "metadata": {}, "hash": "0f86d80ad501e54bdf3a00ac30be1c049851a334f1426e04190fb8c11cec1c08", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        text:\n          type: string\n        timestamp: &id006\n          type: string\n          format: date-time\n        embeds:\n          type: array\n          items:\n            oneOf:\n            - &id007\n              type: object\n              required:\n              - url\n              properties:\n                url:\n                  type: string\n                metadata:\n                  type: object\n                  required:\n                  - _status\n                  properties:\n                    _status:\n                      type: string\n                    content_type:\n                      type:\n                      - string\n                      - 'null'\n                    content_length:\n                      type:\n                      - integer\n                      - 'null'\n                    image:\n                      type: object\n                      properties:\n                        height_px:\n                          type: integer\n                        width_px:\n                          type: integer\n                    video:\n                      type: object\n                      properties:\n                        duration_s:\n                          type: number\n                        stream:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              codec_name:\n                                type: string\n                              height_px:\n                                type: integer\n                              width_px:\n                                type: integer\n                    html:\n                      allOf:\n                      - type: object\n                        properties:\n                          favicon:\n                            type: string\n                          modifiedTime:\n                            type: string\n                          ogArticleAuthor:\n                            type: string\n                          ogArticleExpirationTime:\n                            type: string\n                          ogArticleModifiedTime:\n                            type: string\n                          ogArticlePublishedTime:\n                            type: string\n                          ogArticlePublisher:\n                            type: string\n                          ogArticleSection:\n                            type: string\n                          ogArticleTag:\n                            type: string\n                          ogAudio:\n                            type: string\n                          ogAudioSecureURL:\n                            type: string\n                          ogAudioType:\n                            type: string\n                          ogAudioURL:\n                            type: string\n                          ogAvailability:\n                            type: string\n                          ogDate:\n                            type: string\n                          ogDescription:\n                            type: string\n                          ogDeterminer:\n                            type: string\n                          ogEpisode:\n                            type: string\n                          ogImage:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                height:\n                                  type: string\n                                type:\n                                  type: string\n                                url:\n                                  type: string\n                                width:\n                                  type: string\n                                alt:\n                                  type: string\n                              required:\n                              - url\n                          ogLocale:\n                            type: string\n                          ogLocaleAlternate:\n                            type: string\n                          ogLogo:\n                            type: string\n                          ogMovie:\n                            type: string\n                          ogPriceAmount:\n                            type: string\n                          ogPriceCurrency:\n                            type: string\n                          ogProductAvailability:\n                            type: string\n                          ogProductCondition:\n                            type: string\n                          ogProductPriceAmount:\n                            type: string\n                          ogProductPriceCurrency:\n                            type: string\n                          ogProductRetailerItemId:\n                            type: string\n                          ogSiteName:\n                            type: string\n                          ogTitle:\n                            type: string\n                          ogType:\n                            type: string\n                          ogUrl:\n                            type: string\n                          ogVideo:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                height:\n                                  type: string\n                                type:\n                                  type: string\n                                url:\n                                  type: string\n                                width:\n                                  type: string\n                              required:\n                              - url\n                          ogVideoActor:\n                            type: string\n                          ogVideoActorId:\n                            type: string\n                          ogVideoActorRole:\n                            type: string\n                          ogVideoDirector:\n                            type: string\n                          ogVideoDuration:\n                            type: string\n                          ogVideoOther:\n                            type: string\n                          ogVideoReleaseDate:\n                            type: string\n                          ogVideoSecureURL:\n                            type: string\n                          ogVideoSeries:\n                            type: string\n                          ogVideoTag:\n                            type: string\n                          ogVideoTvShow:\n                            type: string\n                          ogVideoWriter:\n                            type: string\n                          ogWebsite:\n                            type: string\n                          updatedTime:\n                            type: string\n                      - type: object\n                        properties:\n                          oembed:\n                            oneOf:\n                            - allOf:\n                              - &id003\n                                type: object\n                                description: Basic data structure of every oembed\n                                  response see https://oembed.com/\n                                required:\n                                - type\n                                - version\n                                properties:\n                                  type:\n                                    type: string\n                                  version:\n                                    type:\n                                    - string\n                                    - 'null'\n                                  title:\n                                    type:\n                                    - string\n                                    - 'null'\n                                    description: A text title, describing the resource.", "mimetype": "text/plain", "start_char_idx": 5971, "end_char_idx": 14918, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "117f86ad-147c-4fe5-902d-b99d4a74bf01": {"__data__": {"id_": "117f86ad-147c-4fe5-902d-b99d4a74bf01", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "05701ad3-36a7-453a-8b0b-c9307eaa10fa", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "6c5f43340bc9e0187691e5b436f78f19bfadcca1585084387badb7e69ab14405", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9f3f25ee-5bcd-4a9a-8213-a82119c42509", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "88ff7c49b9055a46818679e4210307ba576b67a73370477d39f281b3c8faadb4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aa3a14e5-fba5-42eb-93b2-0fcf9d6ea1ca", "node_type": "1", "metadata": {}, "hash": "c0d465939c9c23a6c9a8c463ef4c19cc33d8f1988deada456e710686014f179b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                    type:\n                                    - string\n                                    - 'null'\n                                    description: The name of the author/owner of the\n                                      resource.\n                                  author_url:\n                                    type:\n                                    - string\n                                    - 'null'\n                                    description: A URL for the author/owner of the\n                                      resource.\n                                  provider_name:\n                                    type:\n                                    - string\n                                    - 'null'\n                                    description: The name of the resource provider.\n                                  provider_url:\n                                    type:\n                                    - string\n                                    - 'null'\n                                    description: The url of the resource provider.\n                                  cache_age:\n                                    type:\n                                    - string\n                                    - 'null'\n                                    description: The suggested cache lifetime for\n                                      this resource, in seconds. Consumers may choose\n                                      to use this value or not.\n                                  thumbnail_url:\n                                    type:\n                                    - string\n                                    - 'null'\n                                    description: A URL to a thumbnail image representing\n                                      the resource. The thumbnail must respect any\n                                      maxwidth and maxheight parameters. If this parameter\n                                      is present, thumbnail_width and thumbnail_height\n                                      must also be present.\n                                  thumbnail_width:\n                                    type:\n                                    - number\n                                    - 'null'\n                                    description: The width of the optional thumbnail.\n                                      If this parameter is present, thumbnail_url\n                                      and thumbnail_height must also be present.\n                                  thumbnail_height:\n                                    type:\n                                    - number\n                                    - 'null'\n                                    description: The height of the optional thumbnail.\n                                      If this parameter is present, thumbnail_url\n                                      and thumbnail_width must also be present.\n                              - type: object\n                                required:\n                                - type\n                                - html\n                                - width\n                                - height\n                                properties:\n                                  type:\n                                    type: string\n                                    enum:\n                                    - rich\n                                  html:\n                                    type:\n                                    - string\n                                    - 'null'\n                                    description: The HTML required to display the\n                                      resource. The HTML should have no padding or\n                                      margins. Consumers may wish to load the HTML\n                                      in an off-domain iframe to avoid XSS vulnerabilities.\n                                      The markup should be valid XHTML 1.0 Basic.\n                                  width:\n                                    type:\n                                    - number\n                                    - 'null'\n                                    description: The width in pixels required to display\n                                      the HTML.\n                                  height:\n                                    type:\n                                    - number\n                                    - 'null'\n                                    description: The height in pixels required to\n                                      display the HTML.\n                            - allOf:\n                              - *id003\n                              - type: object\n                                required:\n                                - type\n                                - html\n                                - width\n                                - height\n                                properties:\n                                  type:\n                                    type: string\n                                    enum:\n                                    - video\n                                  html:\n                                    type:\n                                    - string\n                                    - 'null'\n                                    description: The HTML required to embed a video\n                                      player. The HTML should have no padding or margins.\n                                      Consumers may wish to load the HTML in an off-domain\n                                      iframe to avoid XSS vulnerabilities.\n                                  width:\n                                    type:\n                                    - number\n                                    - 'null'\n                                    description: The width in pixels required to display\n                                      the HTML.\n                                  height:\n                                    type:\n                                    - number\n                                    - 'null'\n                                    description: The height in pixels required to\n                                      display the HTML.\n                            - allOf:\n                              - *id003\n                              - type: object\n                                required:\n                                - type\n                                - url\n                                - width\n                                - height\n                                properties:\n                                  type:\n                                    type: string\n                                    enum:\n                                    - photo\n                                  url:\n                                    type:\n                                    - string\n                                    - 'null'\n                                    description: The source URL of the image. Consumers\n                                      should be able to insert this URL into an <img>\n                                      element. Only HTTP and HTTPS URLs are valid.\n                                  width:\n                                    type:\n                                    - number\n                                    - 'null'\n                                    description: The width in pixels of the image\n                                      specified in the url parameter.\n                                  height:\n                                    type:\n                                    - number\n                                    - 'null'\n                                    description: The height in pixels of the image\n                                      specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 14953, "end_char_idx": 22907, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aa3a14e5-fba5-42eb-93b2-0fcf9d6ea1ca": {"__data__": {"id_": "aa3a14e5-fba5-42eb-93b2-0fcf9d6ea1ca", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "05701ad3-36a7-453a-8b0b-c9307eaa10fa", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "6c5f43340bc9e0187691e5b436f78f19bfadcca1585084387badb7e69ab14405", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "117f86ad-147c-4fe5-902d-b99d4a74bf01", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "ef95fd04859eb25120c3430656baa8881bc58ea66ef3bf7fcccc9063e24a0d78", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "af799cb2-cf85-4ec8-b63e-e1f654c99f68", "node_type": "1", "metadata": {}, "hash": "5bf765300554356f79e3ffdb61925c95376647997b0f6c32bdb6a5c9a0c7e9df", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                              - *id003\n                              - type: object\n                                required:\n                                - type\n                                - url\n                                - width\n                                - height\n                                properties:\n                                  type:\n                                    type: string\n                                    enum:\n                                    - photo\n                                  url:\n                                    type:\n                                    - string\n                                    - 'null'\n                                    description: The source URL of the image. Consumers\n                                      should be able to insert this URL into an <img>\n                                      element. Only HTTP and HTTPS URLs are valid.\n                                  width:\n                                    type:\n                                    - number\n                                    - 'null'\n                                    description: The width in pixels of the image\n                                      specified in the url parameter.\n                                  height:\n                                    type:\n                                    - number\n                                    - 'null'\n                                    description: The height in pixels of the image\n                                      specified in the url parameter.\n                            - allOf:\n                              - *id003\n                              - type: object\n                                required:\n                                - type\n                                properties:\n                                  type:\n                                    type: string\n                                    enum:\n                                    - link\n                            discriminator:\n                              propertyName: type\n                              mapping:\n                                rich: '#/components/schemas/OembedRichData'\n                                video: '#/components/schemas/OembedVideoData'\n                                photo: '#/components/schemas/OembedPhotoData'\n                                link: '#/components/schemas/OembedLinkData'\n                    frame: &id010\n                      discriminator:\n                        propertyName: version\n                      oneOf:\n                      - description: Frame v1 object\n                        allOf:\n                        - &id004\n                          description: Frame base object used across all versions\n                          type: object\n                          required:\n                          - version\n                          - image\n                          - frames_url\n                          properties:\n                            version:\n                              type: string\n                              description: Version of the frame, 'next' for v2, 'vNext'\n                                for v1\n                            image:\n                              type: string\n                              description: URL of the image\n                            frames_url:\n                              type: string\n                              description: Launch URL of the frame\n                        - type: object\n                          properties:\n                            buttons:\n                              type: array\n                              items:\n                                type: object\n                                required:\n                                - index\n                                - action_type\n                                properties:\n                                  title:\n                                    type: string\n                                    description: Title of the button\n                                  index:\n                                    type: integer\n                                    description: Index of the button\n                                  action_type:\n                                    type: string\n                                    description: The action type of a frame button.\n                                      Action types \"mint\" & \"link\" are to be handled\n                                      on the client side only and so they will produce\n                                      a no/op for POST /farcaster/frame/action.\n                                    enum:\n                                    - post\n                                    - post_redirect\n                                    - tx\n                                    - link\n                                    - mint\n                                  target:\n                                    type: string\n                                    description: Target of the button\n                                  post_url:\n                                    type: string\n                                    description: Used specifically for the tx action\n                                      type to post a successful transaction hash\n                            post_url:\n                              type: string\n                              description: Post URL to take an action on this frame\n                            title:\n                              type: string\n                            image_aspect_ratio:\n                              type: string\n                            input:\n                              type: object\n                              properties:\n                                text:\n                                  type: string\n                                  description: Input text for the frame\n                            state:\n                              type: object\n                              properties:\n                                serialized:\n                                  type: string\n                                  description: State for the frame in a serialized\n                                    format\n                      - description: Frame v2 object\n                        allOf:\n                        - *id004\n                        - type: object\n                          required:\n                          - title\n                          - name\n                          - icon\n                          properties:\n                            manifest:\n                              type: object\n                              properties:\n                                account_association:\n                                  type: object\n                                  properties:\n                                    header:\n                                      type: string\n                                    payload:\n                                      type: string\n                                    signature:\n                                      type: string\n                                  required:\n                                  - header\n                                  - payload\n                                  - signature\n                                frame:\n                                  type: object\n                                  properties:\n                                    version:\n                                      type: string\n                                      enum:\n                                      - 0.0.0\n                                      - 0.0.", "mimetype": "text/plain", "start_char_idx": 21316, "end_char_idx": 29049, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "af799cb2-cf85-4ec8-b63e-e1f654c99f68": {"__data__": {"id_": "af799cb2-cf85-4ec8-b63e-e1f654c99f68", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "05701ad3-36a7-453a-8b0b-c9307eaa10fa", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "6c5f43340bc9e0187691e5b436f78f19bfadcca1585084387badb7e69ab14405", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aa3a14e5-fba5-42eb-93b2-0fcf9d6ea1ca", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "71b985ae98578bc80dc109f7e26f073e6e0bdebb85c899cdfb8ccb961cda723d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "97150e0c-1c44-45fe-86eb-c48322f4edd2", "node_type": "1", "metadata": {}, "hash": "e7b4c6b1dd1e874359d49a52ea8d9fc8df6d6f5d86b7b14b83f9184f330a880b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                      - 0.0.1\n                                      - '1'\n                                      - next\n                                    name:\n                                      type: string\n                                      maxLength: 32\n                                    home_url:\n                                      type: string\n                                      maxLength: 512\n                                    icon_url:\n                                      type: string\n                                      maxLength: 512\n                                    image_url:\n                                      type: string\n                                      maxLength: 512\n                                    button_title:\n                                      type: string\n                                      maxLength: 32\n                                    splash_image_url:\n                                      type: string\n                                      maxLength: 512\n                                    splash_background_color:\n                                      type: string\n                                    webhook_url:\n                                      type: string\n                                      maxLength: 512\n                                  required:\n                                  - version\n                                  - name\n                                  - home_url\n                                  - icon_url\n                                triggers:\n                                  type: array\n                                  items:\n                                    oneOf:\n                                    - type: object\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - cast\n                                        id:\n                                          type: string\n                                        url:\n                                          type: string\n                                          maxLength: 512\n                                        name:\n                                          type: string\n                                          maxLength: 32\n                                      required:\n                                      - type\n                                      - id\n                                      - url\n                                    - type: object\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - composer\n                                        id:\n                                          type: string\n                                        url:\n                                          type: string\n                                          maxLength: 512\n                                        name:\n                                          type: string\n                                          maxLength: 32\n                                      required:\n                                      - type\n                                      - id\n                                      - url\n                              required:\n                              - account_association\n                            author: &id005\n                              type: object\n                              required:\n                              - object\n                              - fid\n                              properties:\n                                object:\n                                  type: string\n                                  enum:\n                                  - user_dehydrated\n                                fid: *id001\n                                username:\n                                  type: string\n                                display_name:\n                                  type: string\n                                pfp_url:\n                                  type: string\n                      mapping:\n                        vNext: '#/components/schemas/FrameV1'\n                        next: '#/components/schemas/FrameV2'\n                        '1': '#/components/schemas/FrameV2'\n                        0.0.0: '#/components/schemas/FrameV2'\n                        0.0.1: '#/components/schemas/FrameV2'\n            - type: object\n              required:\n              - cast\n              properties:\n                cast_id: &id008\n                  type: object\n                  required:\n                  - fid\n                  - hash\n                  properties:\n                    fid: *id001\n                    hash:\n                      type: string\n                cast:\n                  type: object\n                  required:\n                  - hash\n                  - parent_hash\n                  - parent_url\n                  - root_parent_url\n                  - parent_author\n                  - author\n                  - text\n                  - timestamp\n                  - type\n                  - embeds\n                  - channel\n                  properties:\n                    hash:\n                      type: string\n                    parent_hash:\n                      type:\n                      - string\n                      - 'null'\n                    parent_url:\n                      type:\n                      - string\n                      - 'null'\n                    root_parent_url:\n                      type:\n                      - string\n                      - 'null'\n                    parent_author:\n                      type: object\n                      required:\n                      - fid\n                      properties:\n                        fid:\n                          oneOf:\n                          - type: 'null'\n                          - *id001\n                    author: *id005\n                    text:\n                      type: string\n                    timestamp: *id006\n                    type: &id009\n                      type: string\n                      enum:\n                      - cast-mention\n                      - cast-reply\n                      description: 'The notification type of a cast.\n\n                        '\n                    embeds:\n                      type: array\n                      items:\n                        oneOf:\n                        - *id007\n                        - type: object\n                          required:\n                          - cast\n                          properties:\n                            cast_id: *id008\n                            cast:\n                              type: object\n                              required:\n                              - object\n                              - hash\n                              properties:\n                                object:\n                                  type: string\n                                  enum:\n                                  - cast_dehydrated\n                                hash:\n                                  type: string\n                                author: *id005\n                    channel:\n                      oneOf:\n                      - type: 'null'\n                      - &id013\n                        type: object\n                        required:\n                        - id\n                        - name\n                        - object\n                        properties:\n                          id:\n                            type: string\n                          name:\n                            type: string\n                          object:\n                            type: string\n                            enum:\n                            - channel_dehydrated\n                          image_url:\n                            type: string\n                          viewer_context: &id012\n                            description: Adds context on the viewer's or author's\n                              role in the channel.", "mimetype": "text/plain", "start_char_idx": 29001, "end_char_idx": 37360, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "97150e0c-1c44-45fe-86eb-c48322f4edd2": {"__data__": {"id_": "97150e0c-1c44-45fe-86eb-c48322f4edd2", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "05701ad3-36a7-453a-8b0b-c9307eaa10fa", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "6c5f43340bc9e0187691e5b436f78f19bfadcca1585084387badb7e69ab14405", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "af799cb2-cf85-4ec8-b63e-e1f654c99f68", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "611d1e4d2ecdd2074bf84095908b2b4b0300a6212c634882376ff6d27ba9cf76", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                            required:\n                            - following\n                            properties:\n                              following:\n                                description: Indicates if the user is following the\n                                  channel.\n                                type: boolean\n                              role:\n                                type: string\n                                description: The role of a channel member\n                                enum:\n                                - member\n                                - moderator\n        type: *id009\n    - type: object\n      required:\n      - reactions\n      - replies\n      - thread_hash\n      - mentioned_profiles\n      - channel\n      properties:\n        frames:\n          type: array\n          items: *id010\n        reactions:\n          type: object\n          required:\n          - likes\n          - recasts\n          - likes_count\n          - recasts_count\n          properties:\n            likes:\n              type: array\n              items:\n                type: object\n                required:\n                - fid\n                properties:\n                  fid: *id001\n            recasts:\n              type: array\n              items:\n                type: object\n                required:\n                - fid\n                - fname\n                properties:\n                  fid: *id001\n                  fname:\n                    type: string\n            likes_count:\n              type: integer\n              format: int32\n            recasts_count:\n              type: integer\n              format: int32\n        replies:\n          type: object\n          required:\n          - count\n          properties:\n            count:\n              type: integer\n              format: int32\n        thread_hash:\n          type:\n          - string\n          - 'null'\n        mentioned_profiles:\n          type: array\n          items: *id011\n        channel:\n          oneOf:\n          - oneOf:\n            - type: object\n              required:\n              - id\n              - url\n              - object\n              properties:\n                id:\n                  type: string\n                url:\n                  type: string\n                name:\n                  type: string\n                description:\n                  type: string\n                object:\n                  type: string\n                  enum:\n                  - channel\n                created_at:\n                  description: Epoch timestamp in seconds.\n                  type: number\n                follower_count:\n                  description: Number of followers the channel has.\n                  type: number\n                external_link:\n                  type: object\n                  description: Channel's external link.\n                  properties:\n                    title:\n                      type: string\n                    url:\n                      type: string\n                image_url:\n                  type: string\n                parent_url:\n                  type: string\n                  format: uri\n                lead: *id011\n                moderator_fids:\n                  type: array\n                  items: *id001\n                member_count:\n                  type: integer\n                  format: int32\n                moderator: *id011\n                pinned_cast_hash:\n                  type: string\n                  default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                  description: Cast Hash\n                hosts:\n                  type: array\n                  deprecated: true\n                  items: *id011\n                viewer_context: *id012\n            - *id013\n            discriminator:\n              propertyName: object\n              mapping:\n                channel: '#/components/schemas/Channel'\n                dehydrated_channel: '#/components/schemas/DehydratedChannel'\n          - type: 'null'\n        viewer_context:\n          type: object\n          description: Adds context on interactions the viewer has made with the cast.\n          required:\n          - liked\n          - recasted\n          properties:\n            liked:\n              description: Indicates if the viewer liked the cast.\n              type: boolean\n            recasted:\n              description: Indicates if the viewer recasted the cast.\n              type: boolean\n        author_channel_context: *id012\n```", "mimetype": "text/plain", "start_char_idx": 37389, "end_char_idx": 41915, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "996de952-92fd-435b-932d-785c21e0bd05": {"__data__": {"id_": "996de952-92fd-435b-932d-785c21e0bd05", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation-summary.md", "file_name": "neynar_lookup-cast-conversation-summary.md", "file_type": "text/markdown", "file_size": 6704, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ad321512-8ac2-4b6d-ba02-5224d7e8bf31", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation-summary.md", "file_name": "neynar_lookup-cast-conversation-summary.md", "file_type": "text/markdown", "file_size": 6704, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "56ca2fff4248543c51114fa5fc0463b9a076e29e7b352620b87b0ea4d520db36", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "53bba905-f6e5-4fbb-86f2-f501c0a7936b", "node_type": "1", "metadata": {}, "hash": "3f8ec94405a1ce6630a62613c8ae1183ee0f33c5b7d250684de38a92350d8f4f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# lookup-cast-conversation-summary\n\n**Endpoint**: `GET /farcaster/cast/conversation/summary`\n\n## Description\nGenerates a summary of all casts related to a conversation surrounding a cast by passing in a cast hash or Warpcast URL.  Summary is generated by an LLM and is intended to be passed as a context to AI agents.\n\n\n## Parameters\n- `identifier` (query): Cast identifier (Its either a url or a hash)\n- `limit` (query): Number of casts to consider in a summary up to a point of target cast\n- `prompt` (query): Additional prompt used to generate a summary\n\n## Response\n```yaml\ntype: object\nrequired:\n- summary\nproperties:\n  summary:\n    type: object\n    required:\n    - text\n    - participants\n    - mentioned_profiles\n    properties:\n      text:\n        type: string\n        description: Summary generated by an LLM\n      participants:\n        type: array\n        items: &id002\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid:\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5627, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "53bba905-f6e5-4fbb-86f2-f501c0a7936b": {"__data__": {"id_": "53bba905-f6e5-4fbb-86f2-f501c0a7936b", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation-summary.md", "file_name": "neynar_lookup-cast-conversation-summary.md", "file_type": "text/markdown", "file_size": 6704, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ad321512-8ac2-4b6d-ba02-5224d7e8bf31", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation-summary.md", "file_name": "neynar_lookup-cast-conversation-summary.md", "file_type": "text/markdown", "file_size": 6704, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "56ca2fff4248543c51114fa5fc0463b9a076e29e7b352620b87b0ea4d520db36", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "996de952-92fd-435b-932d-785c21e0bd05", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation-summary.md", "file_name": "neynar_lookup-cast-conversation-summary.md", "file_type": "text/markdown", "file_size": 6704, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f6a11c434bf0d0ef0538798338d9061bf27499bb969010fb0fd0f30803ce25d6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        description: Users who casted in a conversation thread\n      mentioned_profiles:\n        type: array\n        items: *id002\n        description: Users who were mentioned in a conversation thread\n```", "mimetype": "text/plain", "start_char_idx": 4613, "end_char_idx": 6703, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bee3f728-6e21-4e72-8a42-2d53f6ae5955": {"__data__": {"id_": "bee3f728-6e21-4e72-8a42-2d53f6ae5955", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bd615567-0e53-4243-a9d7-ddc0f6531d78", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "2cdac9838e5c499839513c753f4516740d7ebfdf9d8bef75736ade43d7cff746", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "03b2fcf5-5c41-4cff-8d79-37a1c1db88ba", "node_type": "1", "metadata": {}, "hash": "02f587cd3aa3383dd0364ccf187a476f3733ff55999517f15538a4b8d31fd576", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# lookup-cast-conversation\n\n**Endpoint**: `GET /farcaster/cast/conversation`\n\n## Description\nGets all casts related to a conversation surrounding a cast by passing in a cast hash or Warpcast URL. Includes all the ancestors of a cast up to the root parent in a chronological order. Includes all direct_replies to the cast up to the reply_depth specified in the query parameter.\n\n## Parameters\n- `identifier` (query): Cast identifier (Its either a url or a hash)\n- `type` (query): No description\n- `reply_depth` (query): The depth of replies in the conversation that will be returned (default 2)\n- `include_chronological_parent_casts` (query): Include all parent casts in chronological order\n- `viewer_fid` (query): Providing this will return a conversation that respects this user's mutes and blocks and includes `viewer_context`.\n- `sort_type` (query): Sort type for the ordering of descendants. Default is `chron`\n- `fold` (query): Show conversation above or below the fold. Lower quality responses are hidden below the fold. Not passing in a value shows the full conversation without any folding.\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- conversation\nproperties:\n  conversation:\n    type: object\n    required:\n    - cast\n    properties:\n      cast:\n        allOf:\n        - &id014\n          allOf:\n          - type: object\n            required:\n            - hash\n            - parent_hash\n            - parent_url\n            - root_parent_url\n            - parent_author\n            - author\n            - text\n            - timestamp\n            - embeds\n            properties:\n              hash:\n                type: string\n              parent_hash:\n                type:\n                - string\n                - 'null'\n              parent_url:\n                type:\n                - string\n                - 'null'\n              root_parent_url:\n                type:\n                - string\n                - 'null'\n              parent_author:\n                type: object\n                required:\n                - fid\n                properties:\n                  fid:\n                    oneOf:\n                    - type: 'null'\n                    - &id001\n                      type: integer\n                      format: int32\n                      description: The unique identifier of a farcaster user (unsigned\n                        integer)\n                      examples:\n                      - 3\n                      - 191\n                      - 2\n                      - 194\n                      - 19960\n              author: &id011\n                type: object\n                required:\n                - object\n                - fid\n                - custody_address\n                - username\n                - profile\n                - follower_count\n                - following_count\n                - verifications\n                - verified_addresses\n                - verified_accounts\n                - power_badge\n                properties:\n                  object:\n                    type: string\n                    enum:\n                    - user\n                  fid: *id001\n                  username:\n                    type: string\n                  display_name:\n                    type: string\n                  custody_address: &id002\n                    type: string\n                    pattern: ^0x[a-fA-F0-9]{40}$\n                    description: Ethereum address\n                  pfp_url:\n                    type: string\n                    description: The URL of the user's profile picture\n                  profile:\n                    type: object\n                    required:\n                    - bio\n                    properties:\n                      bio:\n                        type: object\n                        required:\n                        - text\n                        - mentioned_profiles\n                        properties:\n                          text:\n                            type: string\n                          mentioned_profiles:\n                            type: array\n                            items:\n                              type: string\n                            default: []\n                      location:\n                        description: Coordinates and place names for a location\n                        type: object\n                        required:\n                        - latitude\n                        - longitude\n                        properties:\n                          latitude:\n                            type: number\n                            format: double\n                            minimum: -90\n                            maximum: 90\n                          longitude:\n                            type: number\n                            format: double\n                            minimum: -180\n                            maximum: 180\n                          address:\n                            type: object\n                            required:\n                            - city\n                            - country\n                            properties:\n                              city:\n                                type: string\n                              state:\n                                type: string\n                              state_code:\n                                type: string\n                              country:\n                                type: string\n                              country_code:\n                                type: string\n                  follower_count:\n                    type: integer\n                    format: int32\n                    description: The number of followers the user has.\n                  following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5985, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "03b2fcf5-5c41-4cff-8d79-37a1c1db88ba": {"__data__": {"id_": "03b2fcf5-5c41-4cff-8d79-37a1c1db88ba", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bd615567-0e53-4243-a9d7-ddc0f6531d78", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "2cdac9838e5c499839513c753f4516740d7ebfdf9d8bef75736ade43d7cff746", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bee3f728-6e21-4e72-8a42-2d53f6ae5955", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "2a3055a85eba523f6a085a218f0cac5591a10974319dc9b2c460d3ddecc12203", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b75469d9-a4ce-4552-80d0-31121dfb1109", "node_type": "1", "metadata": {}, "hash": "9ebc3fd550923fdff8ab84e34c75e2105afeae99bba64bf4a496052492dc326d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id002\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id002\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.\n                        items:\n                          type: string\n                          pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                          description: Solana address\n                  verified_accounts:\n                    type: array\n                    description: Verified accounts of the user on other platforms,\n                      currently only X is supported.\n                    items:\n                      type: object\n                      properties:\n                        platform:\n                          type: string\n                          enum:\n                          - x\n                          - github\n                        username:\n                          type: string\n                  power_badge:\n                    type: boolean\n                  experimental:\n                    type: object\n                    required:\n                    - neynar_user_score\n                    properties:\n                      neynar_user_score:\n                        type: number\n                        format: double\n                        description: Score that represents the probability that the\n                          account is not spam.\n                  viewer_context:\n                    type: object\n                    description: Adds context on the viewer's follow relationship\n                      with the user.\n                    required:\n                    - following\n                    - followed_by\n                    - blocking\n                    - blocked_by\n                    properties:\n                      following:\n                        description: Indicates if the viewer is following the user.\n                        type: boolean\n                      followed_by:\n                        description: Indicates if the viewer is followed by the user.\n                        type: boolean\n                      blocking:\n                        description: Indicates if the viewer is blocking the user.\n                        type: boolean\n                      blocked_by:\n                        description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 5825, "end_char_idx": 8936, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b75469d9-a4ce-4552-80d0-31121dfb1109": {"__data__": {"id_": "b75469d9-a4ce-4552-80d0-31121dfb1109", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bd615567-0e53-4243-a9d7-ddc0f6531d78", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "2cdac9838e5c499839513c753f4516740d7ebfdf9d8bef75736ade43d7cff746", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "03b2fcf5-5c41-4cff-8d79-37a1c1db88ba", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "31c54ad70d8d068d77224616f3beb4e45d3a7d61b38e43ffe0c66f08c3263b0f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "844a40ca-56e2-4377-80e9-a5012cdb116e", "node_type": "1", "metadata": {}, "hash": "1ba7c92044a2c3addbb8adb178277cf9c49e5a8c99bbe3676369af19c345a358", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                    type: object\n                    description: Adds context on the viewer's follow relationship\n                      with the user.\n                    required:\n                    - following\n                    - followed_by\n                    - blocking\n                    - blocked_by\n                    properties:\n                      following:\n                        description: Indicates if the viewer is following the user.\n                        type: boolean\n                      followed_by:\n                        description: Indicates if the viewer is followed by the user.\n                        type: boolean\n                      blocking:\n                        description: Indicates if the viewer is blocking the user.\n                        type: boolean\n                      blocked_by:\n                        description: Indicates if the viewer is blocked by the user.\n                        type: boolean\n              text:\n                type: string\n              timestamp: &id006\n                type: string\n                format: date-time\n              embeds:\n                type: array\n                items:\n                  oneOf:\n                  - &id007\n                    type: object\n                    required:\n                    - url\n                    properties:\n                      url:\n                        type: string\n                      metadata:\n                        type: object\n                        required:\n                        - _status\n                        properties:\n                          _status:\n                            type: string\n                          content_type:\n                            type:\n                            - string\n                            - 'null'\n                          content_length:\n                            type:\n                            - integer\n                            - 'null'\n                          image:\n                            type: object\n                            properties:\n                              height_px:\n                                type: integer\n                              width_px:\n                                type: integer\n                          video:\n                            type: object\n                            properties:\n                              duration_s:\n                                type: number\n                              stream:\n                                type: array\n                                items:\n                                  type: object\n                                  properties:\n                                    codec_name:\n                                      type: string\n                                    height_px:\n                                      type: integer\n                                    width_px:\n                                      type: integer\n                          html:\n                            allOf:\n                            - type: object\n                              properties:\n                                favicon:\n                                  type: string\n                                modifiedTime:\n                                  type: string\n                                ogArticleAuthor:\n                                  type: string\n                                ogArticleExpirationTime:\n                                  type: string\n                                ogArticleModifiedTime:\n                                  type: string\n                                ogArticlePublishedTime:\n                                  type: string\n                                ogArticlePublisher:\n                                  type: string\n                                ogArticleSection:\n                                  type: string\n                                ogArticleTag:\n                                  type: string\n                                ogAudio:\n                                  type: string\n                                ogAudioSecureURL:\n                                  type: string\n                                ogAudioType:\n                                  type: string\n                                ogAudioURL:\n                                  type: string\n                                ogAvailability:\n                                  type: string\n                                ogDate:\n                                  type: string\n                                ogDescription:\n                                  type: string\n                                ogDeterminer:\n                                  type: string\n                                ogEpisode:\n                                  type: string\n                                ogImage:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                      alt:\n                                        type: string\n                                    required:\n                                    - url\n                                ogLocale:\n                                  type: string\n                                ogLocaleAlternate:\n                                  type: string\n                                ogLogo:\n                                  type: string\n                                ogMovie:\n                                  type: string\n                                ogPriceAmount:\n                                  type: string\n                                ogPriceCurrency:\n                                  type: string\n                                ogProductAvailability:\n                                  type: string\n                                ogProductCondition:\n                                  type: string\n                                ogProductPriceAmount:\n                                  type: string\n                                ogProductPriceCurrency:\n                                  type: string\n                                ogProductRetailerItemId:\n                                  type: string\n                                ogSiteName:\n                                  type: string\n                                ogTitle:\n                                  type: string\n                                ogType:\n                                  type: string\n                                ogUrl:\n                                  type: string\n                                ogVideo:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                    required:\n                                    - url\n                                ogVideoActor:\n                                  type: string\n                                ogVideoActorId:\n                                  type: string\n                                ogVideoActorRole:\n                                  type: string\n                                ogVideoDirector:\n                                  type: string\n                                ogVideoDuration:\n                                  type: string\n                                ogVideoOther:\n                                  type: string\n                                ogVideoReleaseDate:\n                                  type: string\n                                ogVideoSecureURL:\n                                  type: string\n                                ogVideoSeries:\n                                  type: string\n                                ogVideoTag:\n                                  type: string\n                                ogVideoTvShow:\n                                  type: string\n                                ogVideoWriter:\n                                  type: string\n                                ogWebsite:\n                                  type: string\n                                updatedTime:\n                                  type: string\n                            - type: object\n                              properties:\n                                oembed:\n                                  oneOf:\n                                  - allOf:\n                                    - &id003\n                                      type: object\n                                      description: Basic data structure of every oembed\n                                        response see https://oembed.com/\n                                      required:\n                                      - type\n                                      - version\n                                      properties:\n                                        type:\n                                          type: string\n                                        version:\n                                          type:\n                                          - string\n                                          - 'null'\n                                        title:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A text title, describing the\n                                            resource.", "mimetype": "text/plain", "start_char_idx": 7991, "end_char_idx": 18356, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "844a40ca-56e2-4377-80e9-a5012cdb116e": {"__data__": {"id_": "844a40ca-56e2-4377-80e9-a5012cdb116e", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bd615567-0e53-4243-a9d7-ddc0f6531d78", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "2cdac9838e5c499839513c753f4516740d7ebfdf9d8bef75736ade43d7cff746", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b75469d9-a4ce-4552-80d0-31121dfb1109", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "f4aad964b0f4ac4211db89cace88ced1c0ab6afffd7b05016493f316bcedb466", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1f444111-b07e-4bcd-9d0a-8a1f138f253a", "node_type": "1", "metadata": {}, "hash": "23a04483365d8bcc2b18a2d1ac96edd50ac2b76ebbbf7ad056f6abdb7ce9a7f4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the author/owner\n                                            of the resource.\n                                        author_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL for the author/owner\n                                            of the resource.\n                                        provider_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the resource provider.\n                                        provider_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The url of the resource provider.\n                                        cache_age:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The suggested cache lifetime\n                                            for this resource, in seconds. Consumers\n                                            may choose to use this value or not.\n                                        thumbnail_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL to a thumbnail image\n                                            representing the resource. The thumbnail\n                                            must respect any maxwidth and maxheight\n                                            parameters. If this parameter is present,\n                                            thumbnail_width and thumbnail_height must\n                                            also be present.\n                                        thumbnail_width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width of the optional thumbnail.\n                                            If this parameter is present, thumbnail_url\n                                            and thumbnail_height must also be present.\n                                        thumbnail_height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height of the optional\n                                            thumbnail. If this parameter is present,\n                                            thumbnail_url and thumbnail_width must\n                                            also be present.\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - rich\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to display\n                                            the resource. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities. The markup\n                                            should be valid XHTML 1.0 Basic.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - video\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to embed\n                                            a video player. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 18397, "end_char_idx": 27459, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1f444111-b07e-4bcd-9d0a-8a1f138f253a": {"__data__": {"id_": "1f444111-b07e-4bcd-9d0a-8a1f138f253a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bd615567-0e53-4243-a9d7-ddc0f6531d78", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "2cdac9838e5c499839513c753f4516740d7ebfdf9d8bef75736ade43d7cff746", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "844a40ca-56e2-4377-80e9-a5012cdb116e", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "0a80c45db10a31b695d0fad68489999b90d3fbfb7c48e0ad68ae2ea39b3fa9bb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "392ceefc-6532-4b38-afdd-213eef62fcf2", "node_type": "1", "metadata": {}, "hash": "d2c745055c34b05df38156a53e572587481b7019a7d17c71b53ebf72656e7c1e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - link\n                                  discriminator:\n                                    propertyName: type\n                                    mapping:\n                                      rich: '#/components/schemas/OembedRichData'\n                                      video: '#/components/schemas/OembedVideoData'\n                                      photo: '#/components/schemas/OembedPhotoData'\n                                      link: '#/components/schemas/OembedLinkData'\n                          frame: &id010\n                            discriminator:\n                              propertyName: version\n                            oneOf:\n                            - description: Frame v1 object\n                              allOf:\n                              - &id004\n                                description: Frame base object used across all versions\n                                type: object\n                                required:\n                                - version\n                                - image\n                                - frames_url\n                                properties:\n                                  version:\n                                    type: string\n                                    description: Version of the frame, 'next' for\n                                      v2, 'vNext' for v1\n                                  image:\n                                    type: string\n                                    description: URL of the image\n                                  frames_url:\n                                    type: string\n                                    description: Launch URL of the frame\n                              - type: object\n                                properties:\n                                  buttons:\n                                    type: array\n                                    items:\n                                      type: object\n                                      required:\n                                      - index\n                                      - action_type\n                                      properties:\n                                        title:\n                                          type: string\n                                          description: Title of the button\n                                        index:\n                                          type: integer\n                                          description: Index of the button\n                                        action_type:\n                                          type: string\n                                          description: The action type of a frame\n                                            button. Action types \"mint\" & \"link\" are\n                                            to be handled on the client side only\n                                            and so they will produce a no/op for POST\n                                            /farcaster/frame/action.\n                                          enum:\n                                          - post\n                                          - post_redirect\n                                          - tx\n                                          - link\n                                          - mint\n                                        target:\n                                          type: string\n                                          description: Target of the button\n                                        post_url:\n                                          type: string\n                                          description: Used specifically for the tx\n                                            action type to post a successful transaction\n                                            hash\n                                  post_url:\n                                    type: string\n                                    description: Post URL to take an action on this\n                                      frame\n                                  title:\n                                    type: string\n                                  image_aspect_ratio:\n                                    type: string\n                                  input:\n                                    type: object\n                                    properties:\n                                      text:\n                                        type: string\n                                        description: Input text for the frame\n                                  state:\n                                    type: object\n                                    properties:\n                                      serialized:\n                                        type: string\n                                        description: State for the frame in a serialized\n                                          format\n                            - description: Frame v2 object\n                              allOf:\n                              - *id004\n                              - type: object\n                                required:\n                                - title\n                                - name\n                                - icon\n                                properties:\n                                  manifest:\n                                    type: object\n                                    properties:\n                                      account_association:\n                                        type: object\n                                        properties:\n                                          header:\n                                            type: string\n                                          payload:\n                                            type: string\n                                          signature:\n                                            type: string\n                                        required:\n                                        - header\n                                        - payload\n                                        - signature\n                                      frame:\n                                        type: object\n                                        properties:\n                                          version:\n                                            type: string\n                                            enum:\n                                            - 0.0.0\n                                            - 0.0.", "mimetype": "text/plain", "start_char_idx": 25638, "end_char_idx": 34501, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "392ceefc-6532-4b38-afdd-213eef62fcf2": {"__data__": {"id_": "392ceefc-6532-4b38-afdd-213eef62fcf2", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bd615567-0e53-4243-a9d7-ddc0f6531d78", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "2cdac9838e5c499839513c753f4516740d7ebfdf9d8bef75736ade43d7cff746", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1f444111-b07e-4bcd-9d0a-8a1f138f253a", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "9d0975ac2e3f7408706bdf81889422bef78a47e1d70cd765326deca6d601cb01", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "98207a61-5f10-46bf-a3be-7510e79c6f42", "node_type": "1", "metadata": {}, "hash": "0ce42071a4c05518bd4dd683cb3fe427908f320971bd60c3bbaab371144844c4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                            - 0.0.1\n                                            - '1'\n                                            - next\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                          home_url:\n                                            type: string\n                                            maxLength: 512\n                                          icon_url:\n                                            type: string\n                                            maxLength: 512\n                                          image_url:\n                                            type: string\n                                            maxLength: 512\n                                          button_title:\n                                            type: string\n                                            maxLength: 32\n                                          splash_image_url:\n                                            type: string\n                                            maxLength: 512\n                                          splash_background_color:\n                                            type: string\n                                          webhook_url:\n                                            type: string\n                                            maxLength: 512\n                                        required:\n                                        - version\n                                        - name\n                                        - home_url\n                                        - icon_url\n                                      triggers:\n                                        type: array\n                                        items:\n                                          oneOf:\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - cast\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - composer\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                    required:\n                                    - account_association\n                                  author: &id005\n                                    type: object\n                                    required:\n                                    - object\n                                    - fid\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - user_dehydrated\n                                      fid: *id001\n                                      username:\n                                        type: string\n                                      display_name:\n                                        type: string\n                                      pfp_url:\n                                        type: string\n                            mapping:\n                              vNext: '#/components/schemas/FrameV1'\n                              next: '#/components/schemas/FrameV2'\n                              '1': '#/components/schemas/FrameV2'\n                              0.0.0: '#/components/schemas/FrameV2'\n                              0.0.1: '#/components/schemas/FrameV2'\n                  - type: object\n                    required:\n                    - cast\n                    properties:\n                      cast_id: &id008\n                        type: object\n                        required:\n                        - fid\n                        - hash\n                        properties:\n                          fid: *id001\n                          hash:\n                            type: string\n                      cast:\n                        type: object\n                        required:\n                        - hash\n                        - parent_hash\n                        - parent_url\n                        - root_parent_url\n                        - parent_author\n                        - author\n                        - text\n                        - timestamp\n                        - type\n                        - embeds\n                        - channel\n                        properties:\n                          hash:\n                            type: string\n                          parent_hash:\n                            type:\n                            - string\n                            - 'null'\n                          parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          root_parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          parent_author:\n                            type: object\n                            required:\n                            - fid\n                            properties:\n                              fid:\n                                oneOf:\n                                - type: 'null'\n                                - *id001\n                          author: *id005\n                          text:\n                            type: string\n                          timestamp: *id006\n                          type: &id009\n                            type: string\n                            enum:\n                            - cast-mention\n                            - cast-reply\n                            description: 'The notification type of a cast.\n\n                              '\n                          embeds:\n                            type: array\n                            items:\n                              oneOf:\n                              - *id007\n                              - type: object\n                                required:\n                                - cast\n                                properties:\n                                  cast_id: *id008\n                                  cast:\n                                    type: object\n                                    required:\n                                    - object\n                                    - hash\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - cast_dehydrated\n                                      hash:\n                                        type: string\n                                      author: *id005\n                          channel:\n                            oneOf:\n                            - type: 'null'\n                            - &id013\n                              type: object\n                              required:\n                              - id\n                              - name\n                              - object\n                              properties:\n                                id:\n                                  type: string\n                                name:\n                                  type: string\n                                object:\n                                  type: string\n                                  enum:\n                                  - channel_dehydrated\n                                image_url:\n                                  type: string\n                                viewer_context: &id012\n                                  description: Adds context on the viewer's or author's\n                                    role in the channel.", "mimetype": "text/plain", "start_char_idx": 34447, "end_char_idx": 44030, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "98207a61-5f10-46bf-a3be-7510e79c6f42": {"__data__": {"id_": "98207a61-5f10-46bf-a3be-7510e79c6f42", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bd615567-0e53-4243-a9d7-ddc0f6531d78", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "2cdac9838e5c499839513c753f4516740d7ebfdf9d8bef75736ade43d7cff746", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "392ceefc-6532-4b38-afdd-213eef62fcf2", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "23abccdce717049ed3de99f45f5e5be9a73248d5ae8948b4a6b555dd0e3ffa39", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                                  required:\n                                  - following\n                                  properties:\n                                    following:\n                                      description: Indicates if the user is following\n                                        the channel.\n                                      type: boolean\n                                    role:\n                                      type: string\n                                      description: The role of a channel member\n                                      enum:\n                                      - member\n                                      - moderator\n              type: *id009\n          - type: object\n            required:\n            - reactions\n            - replies\n            - thread_hash\n            - mentioned_profiles\n            - channel\n            properties:\n              frames:\n                type: array\n                items: *id010\n              reactions:\n                type: object\n                required:\n                - likes\n                - recasts\n                - likes_count\n                - recasts_count\n                properties:\n                  likes:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      properties:\n                        fid: *id001\n                  recasts:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      - fname\n                      properties:\n                        fid: *id001\n                        fname:\n                          type: string\n                  likes_count:\n                    type: integer\n                    format: int32\n                  recasts_count:\n                    type: integer\n                    format: int32\n              replies:\n                type: object\n                required:\n                - count\n                properties:\n                  count:\n                    type: integer\n                    format: int32\n              thread_hash:\n                type:\n                - string\n                - 'null'\n              mentioned_profiles:\n                type: array\n                items: *id011\n              channel:\n                oneOf:\n                - oneOf:\n                  - type: object\n                    required:\n                    - id\n                    - url\n                    - object\n                    properties:\n                      id:\n                        type: string\n                      url:\n                        type: string\n                      name:\n                        type: string\n                      description:\n                        type: string\n                      object:\n                        type: string\n                        enum:\n                        - channel\n                      created_at:\n                        description: Epoch timestamp in seconds.\n                        type: number\n                      follower_count:\n                        description: Number of followers the channel has.\n                        type: number\n                      external_link:\n                        type: object\n                        description: Channel's external link.\n                        properties:\n                          title:\n                            type: string\n                          url:\n                            type: string\n                      image_url:\n                        type: string\n                      parent_url:\n                        type: string\n                        format: uri\n                      lead: *id011\n                      moderator_fids:\n                        type: array\n                        items: *id001\n                      member_count:\n                        type: integer\n                        format: int32\n                      moderator: *id011\n                      pinned_cast_hash:\n                        type: string\n                        default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                        description: Cast Hash\n                      hosts:\n                        type: array\n                        deprecated: true\n                        items: *id011\n                      viewer_context: *id012\n                  - *id013\n                  discriminator:\n                    propertyName: object\n                    mapping:\n                      channel: '#/components/schemas/Channel'\n                      dehydrated_channel: '#/components/schemas/DehydratedChannel'\n                - type: 'null'\n              viewer_context:\n                type: object\n                description: Adds context on interactions the viewer has made with\n                  the cast.\n                required:\n                - liked\n                - recasted\n                properties:\n                  liked:\n                    description: Indicates if the viewer liked the cast.\n                    type: boolean\n                  recasted:\n                    description: Indicates if the viewer recasted the cast.\n                    type: boolean\n              author_channel_context: *id012\n        - type: object\n          required:\n          - direct_replies\n          properties:\n            direct_replies:\n              type: array\n              items:\n                description: Reference to CastWithInteractionsAndConversations to\n                  avoid circular reference\n                allOf:\n                - *id014\n                - type: object\n                  required:\n                  - direct_replies\n                  properties:\n                    direct_replies:\n                      type: array\n                      items:\n                        type: object\n                      description: 'note: This is recursive. It contains the direct\n                        replies to the cast and their direct replies up to n reply_depth.'\n              description: 'note: This is recursive. It contains the direct replies\n                to the cast and their direct replies up to n reply_depth.'\n      chronological_parent_casts:\n        type: array\n        items: *id014\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 44065, "end_char_idx": 50692, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "731e05a3-dbc8-478e-9cdc-644d711fde13": {"__data__": {"id_": "731e05a3-dbc8-478e-9cdc-644d711fde13", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-channel.md", "file_name": "neynar_lookup-channel.md", "file_type": "text/markdown", "file_size": 7300, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f98d43a4-c75c-44e1-8b88-783448616469", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-channel.md", "file_name": "neynar_lookup-channel.md", "file_type": "text/markdown", "file_size": 7300, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "4642013ee644c6f4e00d304ce775e9613f001ccd632a1643d940c3d8a4d4975e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aaf0f4c8-36bf-4d75-980a-fddf25eecda6", "node_type": "1", "metadata": {}, "hash": "3e7bfce45c8ee7ba1a1af1334c4ce4c551d68d1b33c4244b2d17395d10fca878", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# lookup-channel\n\n**Endpoint**: `GET /farcaster/channel`\n\n## Description\nReturns details of a channel\n\n## Parameters\n- `id` (query): Channel ID for the channel being queried\n- `type` (query): Type of identifier being used to query the channel. Defaults to ID.\n- `viewer_fid` (query): FID of the user viewing the channel.\n\n## Response\n```yaml\ntype: object\nrequired:\n- channel\nproperties:\n  channel:\n    type: object\n    required:\n    - id\n    - url\n    - object\n    properties:\n      id:\n        type: string\n      url:\n        type: string\n      name:\n        type: string\n      description:\n        type: string\n      object:\n        type: string\n        enum:\n        - channel\n      created_at:\n        description: Epoch timestamp in seconds.\n        type: number\n      follower_count:\n        description: Number of followers the channel has.\n        type: number\n      external_link:\n        type: object\n        description: Channel's external link.\n        properties:\n          title:\n            type: string\n          url:\n            type: string\n      image_url:\n        type: string\n      parent_url:\n        type: string\n        format: uri\n      lead: &id003\n        type: object\n        required:\n        - object\n        - fid\n        - custody_address\n        - username\n        - profile\n        - follower_count\n        - following_count\n        - verifications\n        - verified_addresses\n        - verified_accounts\n        - power_badge\n        properties:\n          object:\n            type: string\n            enum:\n            - user\n          fid: &id002\n            type: integer\n            format: int32\n            description: The unique identifier of a farcaster user (unsigned integer)\n            examples:\n            - 3\n            - 191\n            - 2\n            - 194\n            - 19960\n          username:\n            type: string\n          display_name:\n            type: string\n          custody_address: &id001\n            type: string\n            pattern: ^0x[a-fA-F0-9]{40}$\n            description: Ethereum address\n          pfp_url:\n            type: string\n            description: The URL of the user's profile picture\n          profile:\n            type: object\n            required:\n            - bio\n            properties:\n              bio:\n                type: object\n                required:\n                - text\n                - mentioned_profiles\n                properties:\n                  text:\n                    type: string\n                  mentioned_profiles:\n                    type: array\n                    items:\n                      type: string\n                    default: []\n              location:\n                description: Coordinates and place names for a location\n                type: object\n                required:\n                - latitude\n                - longitude\n                properties:\n                  latitude:\n                    type: number\n                    format: double\n                    minimum: -90\n                    maximum: 90\n                  longitude:\n                    type: number\n                    format: double\n                    minimum: -180\n                    maximum: 180\n                  address:\n                    type: object\n                    required:\n                    - city\n                    - country\n                    properties:\n                      city:\n                        type: string\n                      state:\n                        type: string\n                      state_code:\n                        type: string\n                      country:\n                        type: string\n                      country_code:\n                        type: string\n          follower_count:\n            type: integer\n            format: int32\n            description: The number of followers the user has.\n          following_count:\n            type: integer\n            format: int32\n            description: The number of users the user is following.\n          verifications:\n            type: array\n            items: *id001\n          verified_addresses:\n            type: object\n            required:\n            - eth_addresses\n            - sol_addresses\n            properties:\n              eth_addresses:\n                type: array\n                description: List of verified Ethereum addresses of the user sorted\n                  by oldest to most recent.\n                items: *id001\n              sol_addresses:\n                type: array\n                description: List of verified Solana addresses of the user sorted\n                  by oldest to most recent.\n                items:\n                  type: string\n                  pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                  description: Solana address\n          verified_accounts:\n            type: array\n            description: Verified accounts of the user on other platforms, currently\n              only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4994, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aaf0f4c8-36bf-4d75-980a-fddf25eecda6": {"__data__": {"id_": "aaf0f4c8-36bf-4d75-980a-fddf25eecda6", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-channel.md", "file_name": "neynar_lookup-channel.md", "file_type": "text/markdown", "file_size": 7300, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f98d43a4-c75c-44e1-8b88-783448616469", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-channel.md", "file_name": "neynar_lookup-channel.md", "file_type": "text/markdown", "file_size": 7300, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "4642013ee644c6f4e00d304ce775e9613f001ccd632a1643d940c3d8a4d4975e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "731e05a3-dbc8-478e-9cdc-644d711fde13", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-channel.md", "file_name": "neynar_lookup-channel.md", "file_type": "text/markdown", "file_size": 7300, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "678914e3afd4df0727f284f44cba60433a1a848d71daed9fc82da5a6e380fcb8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n            type: array\n            items: *id001\n          verified_addresses:\n            type: object\n            required:\n            - eth_addresses\n            - sol_addresses\n            properties:\n              eth_addresses:\n                type: array\n                description: List of verified Ethereum addresses of the user sorted\n                  by oldest to most recent.\n                items: *id001\n              sol_addresses:\n                type: array\n                description: List of verified Solana addresses of the user sorted\n                  by oldest to most recent.\n                items:\n                  type: string\n                  pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                  description: Solana address\n          verified_accounts:\n            type: array\n            description: Verified accounts of the user on other platforms, currently\n              only X is supported.\n            items:\n              type: object\n              properties:\n                platform:\n                  type: string\n                  enum:\n                  - x\n                  - github\n                username:\n                  type: string\n          power_badge:\n            type: boolean\n          experimental:\n            type: object\n            required:\n            - neynar_user_score\n            properties:\n              neynar_user_score:\n                type: number\n                format: double\n                description: Score that represents the probability that the account\n                  is not spam.\n          viewer_context:\n            type: object\n            description: Adds context on the viewer's follow relationship with the\n              user.\n            required:\n            - following\n            - followed_by\n            - blocking\n            - blocked_by\n            properties:\n              following:\n                description: Indicates if the viewer is following the user.\n                type: boolean\n              followed_by:\n                description: Indicates if the viewer is followed by the user.\n                type: boolean\n              blocking:\n                description: Indicates if the viewer is blocking the user.\n                type: boolean\n              blocked_by:\n                description: Indicates if the viewer is blocked by the user.\n                type: boolean\n      moderator_fids:\n        type: array\n        items: *id002\n      member_count:\n        type: integer\n        format: int32\n      moderator: *id003\n      pinned_cast_hash:\n        type: string\n        default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n        description: Cast Hash\n      hosts:\n        type: array\n        deprecated: true\n        items: *id003\n      viewer_context:\n        description: Adds context on the viewer's or author's role in the channel.\n        type: object\n        required:\n        - following\n        properties:\n          following:\n            description: Indicates if the user is following the channel.\n            type: boolean\n          role:\n            type: string\n            description: The role of a channel member\n            enum:\n            - member\n            - moderator\n```", "mimetype": "text/plain", "start_char_idx": 4045, "end_char_idx": 7299, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c84318ca-5580-4c61-9504-ffa964f49d9b": {"__data__": {"id_": "c84318ca-5580-4c61-9504-ffa964f49d9b", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-neynar-frame.md", "file_name": "neynar_lookup-neynar-frame.md", "file_type": "text/markdown", "file_size": 3783, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "018571e4-d492-4eb5-ad51-6e9535271bea", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-neynar-frame.md", "file_name": "neynar_lookup-neynar-frame.md", "file_type": "text/markdown", "file_size": 3783, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "0caee5db7bb4119bf1a70f19311b14a29fc775f6f4784f3e95150a8a48c14c31", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# lookup-neynar-frame\n\n**Endpoint**: `GET /farcaster/frame`\n\n## Description\nFetch a frame either by UUID or Neynar URL\n\n## Parameters\n- `type` (query): No description\n- `uuid` (query): UUID of the frame to fetch\n- `url` (query): URL of the Neynar frame to fetch\n\n## Response\n```yaml\ntype: object\nproperties:\n  uuid:\n    type: string\n    format: uuid\n    description: Unique identifier for the frame.\n  name:\n    type: string\n    description: Name of the frame.\n  link:\n    type: string\n    format: uri\n    description: Generated link for the frame's first page.\n  pages:\n    type: array\n    items:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n          description: Unique identifier for the page.\n        version:\n          type: string\n          default: vNext\n          examples:\n          - vNext\n          description: The version of the page schema.\n        title:\n          type: string\n          examples:\n          - Welcome to Neynar\n          description: The title of the page.\n        image:\n          type: object\n          properties:\n            url:\n              type: string\n              format: uri\n              examples:\n              - https://i.imgur.com/qo2AzBf.jpeg\n              description: The URL of the page's image.\n            aspect_ratio:\n              type: string\n              description: The aspect ratio of the image.\n              enum:\n              - 1.91:1\n              - '1:1'\n          required:\n          - url\n          - aspect_ratio\n        buttons:\n          type: array\n          items:\n            type: object\n            properties:\n              title:\n                type: string\n                description: The title of the button.\n              index:\n                type: integer\n                description: The index of the button, first button should have index\n                  1 and so on.\n              action_type:\n                type: string\n                description: The type of action that the button performs.\n                enum:\n                - post\n                - post_redirect\n                - mint\n                - link\n              next_page:\n                oneOf:\n                - type: object\n                  properties:\n                    uuid:\n                      type: string\n                      format: uuid\n                      description: The UUID of the next page.\n                  required:\n                  - uuid\n                - type: object\n                  properties:\n                    redirect_url:\n                      type: string\n                      format: uri\n                      description: The URL to redirect to.\n                  required:\n                  - redirect_url\n                - type: object\n                  properties:\n                    mint_url:\n                      type: string\n                      description: The URL for minting, specific to the mint action.\n                  required:\n                  - mint_url\n            required:\n            - title\n            - index\n            - action_type\n        input:\n          type: object\n          properties:\n            text:\n              type: object\n              properties:\n                enabled:\n                  type: boolean\n                  default: false\n                  description: Indicates if text input is enabled.\n                placeholder:\n                  type: string\n                  description: The placeholder text for the input.\n              required:\n              - enabled\n      required:\n      - uuid\n      - title\n      - version\n      - image\n  valid:\n    type: boolean\n    description: Indicates if the frame is valid.\nrequired:\n- uuid\n- name\n- pages\n- link\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3782, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1a75a8a2-89f6-4904-ac55-f3188b1af7f7": {"__data__": {"id_": "1a75a8a2-89f6-4904-ac55-f3188b1af7f7", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-by-custody-address.md", "file_name": "neynar_lookup-user-by-custody-address.md", "file_type": "text/markdown", "file_size": 4895, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8da3c507-947f-42fd-8338-09dfc8efc536", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-by-custody-address.md", "file_name": "neynar_lookup-user-by-custody-address.md", "file_type": "text/markdown", "file_size": 4895, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "eacb6cbf1434f10ca0d11bbf5cb3c7b93f26c39a168de46dc6d0b314b82371c6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# lookup-user-by-custody-address\n\n**Endpoint**: `GET /farcaster/user/custody-address`\n\n## Description\nLookup a user by custody-address\n\n## Parameters\n- `custody_address` (query): Custody Address associated with mnemonic\n\n## Response\n```yaml\ntype: object\nrequired:\n- user\nproperties:\n  user:\n    type: object\n    required:\n    - object\n    - fid\n    - custody_address\n    - username\n    - profile\n    - follower_count\n    - following_count\n    - verifications\n    - verified_addresses\n    - verified_accounts\n    - power_badge\n    properties:\n      object:\n        type: string\n        enum:\n        - user\n      fid:\n        type: integer\n        format: int32\n        description: The unique identifier of a farcaster user (unsigned integer)\n        examples:\n        - 3\n        - 191\n        - 2\n        - 194\n        - 19960\n      username:\n        type: string\n      display_name:\n        type: string\n      custody_address: &id001\n        type: string\n        pattern: ^0x[a-fA-F0-9]{40}$\n        description: Ethereum address\n      pfp_url:\n        type: string\n        description: The URL of the user's profile picture\n      profile:\n        type: object\n        required:\n        - bio\n        properties:\n          bio:\n            type: object\n            required:\n            - text\n            - mentioned_profiles\n            properties:\n              text:\n                type: string\n              mentioned_profiles:\n                type: array\n                items:\n                  type: string\n                default: []\n          location:\n            description: Coordinates and place names for a location\n            type: object\n            required:\n            - latitude\n            - longitude\n            properties:\n              latitude:\n                type: number\n                format: double\n                minimum: -90\n                maximum: 90\n              longitude:\n                type: number\n                format: double\n                minimum: -180\n                maximum: 180\n              address:\n                type: object\n                required:\n                - city\n                - country\n                properties:\n                  city:\n                    type: string\n                  state:\n                    type: string\n                  state_code:\n                    type: string\n                  country:\n                    type: string\n                  country_code:\n                    type: string\n      follower_count:\n        type: integer\n        format: int32\n        description: The number of followers the user has.\n      following_count:\n        type: integer\n        format: int32\n        description: The number of users the user is following.\n      verifications:\n        type: array\n        items: *id001\n      verified_addresses:\n        type: object\n        required:\n        - eth_addresses\n        - sol_addresses\n        properties:\n          eth_addresses:\n            type: array\n            description: List of verified Ethereum addresses of the user sorted by\n              oldest to most recent.\n            items: *id001\n          sol_addresses:\n            type: array\n            description: List of verified Solana addresses of the user sorted by oldest\n              to most recent.\n            items:\n              type: string\n              pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n              description: Solana address\n      verified_accounts:\n        type: array\n        description: Verified accounts of the user on other platforms, currently only\n          X is supported.\n        items:\n          type: object\n          properties:\n            platform:\n              type: string\n              enum:\n              - x\n              - github\n            username:\n              type: string\n      power_badge:\n        type: boolean\n      experimental:\n        type: object\n        required:\n        - neynar_user_score\n        properties:\n          neynar_user_score:\n            type: number\n            format: double\n            description: Score that represents the probability that the account is\n              not spam.\n      viewer_context:\n        type: object\n        description: Adds context on the viewer's follow relationship with the user.\n        required:\n        - following\n        - followed_by\n        - blocking\n        - blocked_by\n        properties:\n          following:\n            description: Indicates if the viewer is following the user.\n            type: boolean\n          followed_by:\n            description: Indicates if the viewer is followed by the user.\n            type: boolean\n          blocking:\n            description: Indicates if the viewer is blocking the user.\n            type: boolean\n          blocked_by:\n            description: Indicates if the viewer is blocked by the user.\n            type: boolean\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4894, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0fc6f802-5794-46cd-b803-8e885db7b013": {"__data__": {"id_": "0fc6f802-5794-46cd-b803-8e885db7b013", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-by-username.md", "file_name": "neynar_lookup-user-by-username.md", "file_type": "text/markdown", "file_size": 4927, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6b008b47-fd07-4e11-997f-e35767657214", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-by-username.md", "file_name": "neynar_lookup-user-by-username.md", "file_type": "text/markdown", "file_size": 4927, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d0c9ef07ffdfcc69d555c6a122304486c5e485e9b4bd34173df0f9349188cd9e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# lookup-user-by-username\n\n**Endpoint**: `GET /farcaster/user/by_username`\n\n## Description\nFetches a single hydrated user object given a username\n\n## Parameters\n- `username` (query): Username of the user to fetch\n- `viewer_fid` (query): No description\n\n## Response\n```yaml\ntype: object\nrequired:\n- user\nproperties:\n  user:\n    type: object\n    required:\n    - object\n    - fid\n    - custody_address\n    - username\n    - profile\n    - follower_count\n    - following_count\n    - verifications\n    - verified_addresses\n    - verified_accounts\n    - power_badge\n    properties:\n      object:\n        type: string\n        enum:\n        - user\n      fid:\n        type: integer\n        format: int32\n        description: The unique identifier of a farcaster user (unsigned integer)\n        examples:\n        - 3\n        - 191\n        - 2\n        - 194\n        - 19960\n      username:\n        type: string\n      display_name:\n        type: string\n      custody_address: &id001\n        type: string\n        pattern: ^0x[a-fA-F0-9]{40}$\n        description: Ethereum address\n      pfp_url:\n        type: string\n        description: The URL of the user's profile picture\n      profile:\n        type: object\n        required:\n        - bio\n        properties:\n          bio:\n            type: object\n            required:\n            - text\n            - mentioned_profiles\n            properties:\n              text:\n                type: string\n              mentioned_profiles:\n                type: array\n                items:\n                  type: string\n                default: []\n          location:\n            description: Coordinates and place names for a location\n            type: object\n            required:\n            - latitude\n            - longitude\n            properties:\n              latitude:\n                type: number\n                format: double\n                minimum: -90\n                maximum: 90\n              longitude:\n                type: number\n                format: double\n                minimum: -180\n                maximum: 180\n              address:\n                type: object\n                required:\n                - city\n                - country\n                properties:\n                  city:\n                    type: string\n                  state:\n                    type: string\n                  state_code:\n                    type: string\n                  country:\n                    type: string\n                  country_code:\n                    type: string\n      follower_count:\n        type: integer\n        format: int32\n        description: The number of followers the user has.\n      following_count:\n        type: integer\n        format: int32\n        description: The number of users the user is following.\n      verifications:\n        type: array\n        items: *id001\n      verified_addresses:\n        type: object\n        required:\n        - eth_addresses\n        - sol_addresses\n        properties:\n          eth_addresses:\n            type: array\n            description: List of verified Ethereum addresses of the user sorted by\n              oldest to most recent.\n            items: *id001\n          sol_addresses:\n            type: array\n            description: List of verified Solana addresses of the user sorted by oldest\n              to most recent.\n            items:\n              type: string\n              pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n              description: Solana address\n      verified_accounts:\n        type: array\n        description: Verified accounts of the user on other platforms, currently only\n          X is supported.\n        items:\n          type: object\n          properties:\n            platform:\n              type: string\n              enum:\n              - x\n              - github\n            username:\n              type: string\n      power_badge:\n        type: boolean\n      experimental:\n        type: object\n        required:\n        - neynar_user_score\n        properties:\n          neynar_user_score:\n            type: number\n            format: double\n            description: Score that represents the probability that the account is\n              not spam.\n      viewer_context:\n        type: object\n        description: Adds context on the viewer's follow relationship with the user.\n        required:\n        - following\n        - followed_by\n        - blocking\n        - blocked_by\n        properties:\n          following:\n            description: Indicates if the viewer is following the user.\n            type: boolean\n          followed_by:\n            description: Indicates if the viewer is followed by the user.\n            type: boolean\n          blocking:\n            description: Indicates if the viewer is blocking the user.\n            type: boolean\n          blocked_by:\n            description: Indicates if the viewer is blocked by the user.\n            type: boolean\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4926, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6f345aad-b1ff-408b-8b08-c2cce9c565b0": {"__data__": {"id_": "6f345aad-b1ff-408b-8b08-c2cce9c565b0", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-storage-allocations.md", "file_name": "neynar_lookup-user-storage-allocations.md", "file_type": "text/markdown", "file_size": 1451, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "196038fc-1366-4d00-9964-9a79a3506aca", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-storage-allocations.md", "file_name": "neynar_lookup-user-storage-allocations.md", "file_type": "text/markdown", "file_size": 1451, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "202d7e6747de18131be0a2da64c25ba3c731fd52002e9044259b7818482c7b9d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# lookup-user-storage-allocations\n\n**Endpoint**: `GET /farcaster/storage/allocations`\n\n## Description\nFetches storage allocations for a given user\n\n## Parameters\n- `fid` (query): No description\n\n## Response\n```yaml\ntype: object\nproperties:\n  total_active_units:\n    type: integer\n    examples:\n    - 13\n  allocations:\n    type: array\n    items:\n      type: object\n      properties:\n        object:\n          type: string\n          examples:\n          - storage_allocation\n        user:\n          type: object\n          required:\n          - object\n          - fid\n          properties:\n            object:\n              type: string\n              enum:\n              - user_dehydrated\n            fid:\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            pfp_url:\n              type: string\n        units:\n          type: integer\n          examples:\n          - 10\n        expiry:\n          type: string\n          format: date-time\n          examples:\n          - '2024-10-08T22:03:49.000Z'\n        timestamp:\n          type: string\n          format: date-time\n          examples:\n          - '2023-10-09T22:03:49.000Z'\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1450, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d5c82260-cf1e-4f11-94a8-ddad6ef7f565": {"__data__": {"id_": "d5c82260-cf1e-4f11-94a8-ddad6ef7f565", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-storage-usage.md", "file_name": "neynar_lookup-user-storage-usage.md", "file_type": "text/markdown", "file_size": 1207, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "65a4e1ae-01df-4a75-8dab-d2614b3f90f4", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-storage-usage.md", "file_name": "neynar_lookup-user-storage-usage.md", "file_type": "text/markdown", "file_size": 1207, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "fadae49c7ce9b600182615fdf08b0ac889b0a0fd12bbde631e0724655b21df31", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# lookup-user-storage-usage\n\n**Endpoint**: `GET /farcaster/storage/usage`\n\n## Description\nFetches storage usage for a given user\n\n## Parameters\n- `fid` (query): No description\n\n## Response\n```yaml\ntype: object\nproperties:\n  object:\n    type: string\n    examples:\n    - storage_usage\n  user:\n    type: object\n    required:\n    - object\n    - fid\n    properties:\n      object:\n        type: string\n        enum:\n        - user_dehydrated\n      fid:\n        type: integer\n        format: int32\n        description: The unique identifier of a farcaster user (unsigned integer)\n        examples:\n        - 3\n        - 191\n        - 2\n        - 194\n        - 19960\n      username:\n        type: string\n      display_name:\n        type: string\n      pfp_url:\n        type: string\n  casts: &id001\n    type: object\n    properties:\n      object:\n        type: string\n        examples:\n        - storage\n      used:\n        type: integer\n        examples:\n        - 3659\n      capacity:\n        type: integer\n        examples:\n        - 10000\n  reactions: *id001\n  links: *id001\n  verified_addresses: *id001\n  username_proofs: *id001\n  signers: *id001\n  total_active_units:\n    type: integer\n    examples:\n    - 2\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1206, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e62ad495-8263-45e0-800a-71a35f0e728b": {"__data__": {"id_": "e62ad495-8263-45e0-800a-71a35f0e728b", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_remove-channel-member.md", "file_name": "neynar_remove-channel-member.md", "file_type": "text/markdown", "file_size": 263, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1638439e-312c-49db-a171-783fba222374", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_remove-channel-member.md", "file_name": "neynar_remove-channel-member.md", "file_type": "text/markdown", "file_size": 263, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "183735031b6aecc928e4571aa638758b3584af2787aa4db77744a4a70e515c05", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# remove-channel-member\n\n**Endpoint**: `DELETE /farcaster/channel/member`\n\n## Description\nRemove a user from a channel or a user's invite to a channel role\n\n## Response\n```yaml\ntype: object\nproperties:\n  success:\n    type: boolean\n  message:\n    type: string\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 262, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2fdd2a99-9f51-4791-ac11-8d3b0226d61a": {"__data__": {"id_": "2fdd2a99-9f51-4791-ac11-8d3b0226d61a", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_respond-channel-invite.md", "file_name": "neynar_respond-channel-invite.md", "file_type": "text/markdown", "file_size": 236, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b4d27173-2a9e-4a5d-9c7e-df39b946ef87", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_respond-channel-invite.md", "file_name": "neynar_respond-channel-invite.md", "file_type": "text/markdown", "file_size": 236, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "b46b7d6c699b77c4dc10d10ae82b33e9fef81f053933d1ca7215d924a8657997", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# respond-channel-invite\n\n**Endpoint**: `PUT /farcaster/channel/member/invite`\n\n## Description\nAccept or reject a channel invite\n\n## Response\n```yaml\ntype: object\nproperties:\n  success:\n    type: boolean\n  message:\n    type: string\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 235, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "60f77b64-44c4-4f02-a112-2c6ebd82cfe8": {"__data__": {"id_": "60f77b64-44c4-4f02-a112-2c6ebd82cfe8", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0d5366e3-720d-4296-b3b8-0bc8ea181d53", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "2b5be6ac31bcc85d062ee50f3323dbb7cab319411b58be46cb7aed7c68211486", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5e7726f2-6863-4c98-b8fb-98cf4e47dfff", "node_type": "1", "metadata": {}, "hash": "02f587cd3aa3383dd0364ccf187a476f3733ff55999517f15538a4b8d31fd576", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# search-casts\n\n**Endpoint**: `GET /farcaster/cast/search`\n\n## Description\nSearch for casts based on a query string, with optional AND filters\n\n## Parameters\n- `q` (query): Query string to search for casts. Include 'before:YYYY-MM-DD' or 'after:YYYY-MM-DD' to search for casts before or after a specific date.\n- `author_fid` (query): Fid of the user whose casts you want to search\n- `viewer_fid` (query): Providing this will return search results that respects this user's mutes and blocks and includes `viewer_context`.\n- `parent_url` (query): Parent URL of the casts you want to search\n- `channel_id` (query): Channel ID of the casts you want to search\n- `priority_mode` (query): When true, only returns search results from power badge users and users that the viewer follows (if viewer_fid is provided).\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor\n\n## Response\n```yaml\ntype: object\nrequired:\n- result\nproperties:\n  result:\n    type: object\n    required:\n    - casts\n    - next\n    properties:\n      casts:\n        type: array\n        items:\n          allOf:\n          - type: object\n            required:\n            - hash\n            - parent_hash\n            - parent_url\n            - root_parent_url\n            - parent_author\n            - author\n            - text\n            - timestamp\n            - embeds\n            properties:\n              hash:\n                type: string\n              parent_hash:\n                type:\n                - string\n                - 'null'\n              parent_url:\n                type:\n                - string\n                - 'null'\n              root_parent_url:\n                type:\n                - string\n                - 'null'\n              parent_author:\n                type: object\n                required:\n                - fid\n                properties:\n                  fid:\n                    oneOf:\n                    - type: 'null'\n                    - &id001\n                      type: integer\n                      format: int32\n                      description: The unique identifier of a farcaster user (unsigned\n                        integer)\n                      examples:\n                      - 3\n                      - 191\n                      - 2\n                      - 194\n                      - 19960\n              author: &id011\n                type: object\n                required:\n                - object\n                - fid\n                - custody_address\n                - username\n                - profile\n                - follower_count\n                - following_count\n                - verifications\n                - verified_addresses\n                - verified_accounts\n                - power_badge\n                properties:\n                  object:\n                    type: string\n                    enum:\n                    - user\n                  fid: *id001\n                  username:\n                    type: string\n                  display_name:\n                    type: string\n                  custody_address: &id002\n                    type: string\n                    pattern: ^0x[a-fA-F0-9]{40}$\n                    description: Ethereum address\n                  pfp_url:\n                    type: string\n                    description: The URL of the user's profile picture\n                  profile:\n                    type: object\n                    required:\n                    - bio\n                    properties:\n                      bio:\n                        type: object\n                        required:\n                        - text\n                        - mentioned_profiles\n                        properties:\n                          text:\n                            type: string\n                          mentioned_profiles:\n                            type: array\n                            items:\n                              type: string\n                            default: []\n                      location:\n                        description: Coordinates and place names for a location\n                        type: object\n                        required:\n                        - latitude\n                        - longitude\n                        properties:\n                          latitude:\n                            type: number\n                            format: double\n                            minimum: -90\n                            maximum: 90\n                          longitude:\n                            type: number\n                            format: double\n                            minimum: -180\n                            maximum: 180\n                          address:\n                            type: object\n                            required:\n                            - city\n                            - country\n                            properties:\n                              city:\n                                type: string\n                              state:\n                                type: string\n                              state_code:\n                                type: string\n                              country:\n                                type: string\n                              country_code:\n                                type: string\n                  follower_count:\n                    type: integer\n                    format: int32\n                    description: The number of followers the user has.\n                  following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id002\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 6217, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5e7726f2-6863-4c98-b8fb-98cf4e47dfff": {"__data__": {"id_": "5e7726f2-6863-4c98-b8fb-98cf4e47dfff", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0d5366e3-720d-4296-b3b8-0bc8ea181d53", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "2b5be6ac31bcc85d062ee50f3323dbb7cab319411b58be46cb7aed7c68211486", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "60f77b64-44c4-4f02-a112-2c6ebd82cfe8", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "7c6a7795834f5d29c22f8afddca762dd58fa9e6be2799d96f019d9ab3c3e9ffb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2ec69cdd-6a38-4d5b-8f4d-b9e896bba69d", "node_type": "1", "metadata": {}, "hash": "9ebc3fd550923fdff8ab84e34c75e2105afeae99bba64bf4a496052492dc326d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "following_count:\n                    type: integer\n                    format: int32\n                    description: The number of users the user is following.\n                  verifications:\n                    type: array\n                    items: *id002\n                  verified_addresses:\n                    type: object\n                    required:\n                    - eth_addresses\n                    - sol_addresses\n                    properties:\n                      eth_addresses:\n                        type: array\n                        description: List of verified Ethereum addresses of the user\n                          sorted by oldest to most recent.\n                        items: *id002\n                      sol_addresses:\n                        type: array\n                        description: List of verified Solana addresses of the user\n                          sorted by oldest to most recent.\n                        items:\n                          type: string\n                          pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                          description: Solana address\n                  verified_accounts:\n                    type: array\n                    description: Verified accounts of the user on other platforms,\n                      currently only X is supported.\n                    items:\n                      type: object\n                      properties:\n                        platform:\n                          type: string\n                          enum:\n                          - x\n                          - github\n                        username:\n                          type: string\n                  power_badge:\n                    type: boolean\n                  experimental:\n                    type: object\n                    required:\n                    - neynar_user_score\n                    properties:\n                      neynar_user_score:\n                        type: number\n                        format: double\n                        description: Score that represents the probability that the\n                          account is not spam.\n                  viewer_context:\n                    type: object\n                    description: Adds context on the viewer's follow relationship\n                      with the user.\n                    required:\n                    - following\n                    - followed_by\n                    - blocking\n                    - blocked_by\n                    properties:\n                      following:\n                        description: Indicates if the viewer is following the user.\n                        type: boolean\n                      followed_by:\n                        description: Indicates if the viewer is followed by the user.\n                        type: boolean\n                      blocking:\n                        description: Indicates if the viewer is blocking the user.\n                        type: boolean\n                      blocked_by:\n                        description: Indicates if the viewer is blocked by the user.", "mimetype": "text/plain", "start_char_idx": 5536, "end_char_idx": 8647, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2ec69cdd-6a38-4d5b-8f4d-b9e896bba69d": {"__data__": {"id_": "2ec69cdd-6a38-4d5b-8f4d-b9e896bba69d", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0d5366e3-720d-4296-b3b8-0bc8ea181d53", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "2b5be6ac31bcc85d062ee50f3323dbb7cab319411b58be46cb7aed7c68211486", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5e7726f2-6863-4c98-b8fb-98cf4e47dfff", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "c82ab88acb05f9f96baa21ea5b2811c85813350a1c44cba491dd995c339cefbd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "65dc91a1-1dc1-407c-9dd2-5285ff3c3128", "node_type": "1", "metadata": {}, "hash": "1ba7c92044a2c3addbb8adb178277cf9c49e5a8c99bbe3676369af19c345a358", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "viewer_context:\n                    type: object\n                    description: Adds context on the viewer's follow relationship\n                      with the user.\n                    required:\n                    - following\n                    - followed_by\n                    - blocking\n                    - blocked_by\n                    properties:\n                      following:\n                        description: Indicates if the viewer is following the user.\n                        type: boolean\n                      followed_by:\n                        description: Indicates if the viewer is followed by the user.\n                        type: boolean\n                      blocking:\n                        description: Indicates if the viewer is blocking the user.\n                        type: boolean\n                      blocked_by:\n                        description: Indicates if the viewer is blocked by the user.\n                        type: boolean\n              text:\n                type: string\n              timestamp: &id006\n                type: string\n                format: date-time\n              embeds:\n                type: array\n                items:\n                  oneOf:\n                  - &id007\n                    type: object\n                    required:\n                    - url\n                    properties:\n                      url:\n                        type: string\n                      metadata:\n                        type: object\n                        required:\n                        - _status\n                        properties:\n                          _status:\n                            type: string\n                          content_type:\n                            type:\n                            - string\n                            - 'null'\n                          content_length:\n                            type:\n                            - integer\n                            - 'null'\n                          image:\n                            type: object\n                            properties:\n                              height_px:\n                                type: integer\n                              width_px:\n                                type: integer\n                          video:\n                            type: object\n                            properties:\n                              duration_s:\n                                type: number\n                              stream:\n                                type: array\n                                items:\n                                  type: object\n                                  properties:\n                                    codec_name:\n                                      type: string\n                                    height_px:\n                                      type: integer\n                                    width_px:\n                                      type: integer\n                          html:\n                            allOf:\n                            - type: object\n                              properties:\n                                favicon:\n                                  type: string\n                                modifiedTime:\n                                  type: string\n                                ogArticleAuthor:\n                                  type: string\n                                ogArticleExpirationTime:\n                                  type: string\n                                ogArticleModifiedTime:\n                                  type: string\n                                ogArticlePublishedTime:\n                                  type: string\n                                ogArticlePublisher:\n                                  type: string\n                                ogArticleSection:\n                                  type: string\n                                ogArticleTag:\n                                  type: string\n                                ogAudio:\n                                  type: string\n                                ogAudioSecureURL:\n                                  type: string\n                                ogAudioType:\n                                  type: string\n                                ogAudioURL:\n                                  type: string\n                                ogAvailability:\n                                  type: string\n                                ogDate:\n                                  type: string\n                                ogDescription:\n                                  type: string\n                                ogDeterminer:\n                                  type: string\n                                ogEpisode:\n                                  type: string\n                                ogImage:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                      alt:\n                                        type: string\n                                    required:\n                                    - url\n                                ogLocale:\n                                  type: string\n                                ogLocaleAlternate:\n                                  type: string\n                                ogLogo:\n                                  type: string\n                                ogMovie:\n                                  type: string\n                                ogPriceAmount:\n                                  type: string\n                                ogPriceCurrency:\n                                  type: string\n                                ogProductAvailability:\n                                  type: string\n                                ogProductCondition:\n                                  type: string\n                                ogProductPriceAmount:\n                                  type: string\n                                ogProductPriceCurrency:\n                                  type: string\n                                ogProductRetailerItemId:\n                                  type: string\n                                ogSiteName:\n                                  type: string\n                                ogTitle:\n                                  type: string\n                                ogType:\n                                  type: string\n                                ogUrl:\n                                  type: string\n                                ogVideo:\n                                  type: array\n                                  items:\n                                    type: object\n                                    properties:\n                                      height:\n                                        type: string\n                                      type:\n                                        type: string\n                                      url:\n                                        type: string\n                                      width:\n                                        type: string\n                                    required:\n                                    - url\n                                ogVideoActor:\n                                  type: string\n                                ogVideoActorId:\n                                  type: string\n                                ogVideoActorRole:\n                                  type: string\n                                ogVideoDirector:\n                                  type: string\n                                ogVideoDuration:\n                                  type: string\n                                ogVideoOther:\n                                  type: string\n                                ogVideoReleaseDate:\n                                  type: string\n                                ogVideoSecureURL:\n                                  type: string\n                                ogVideoSeries:\n                                  type: string\n                                ogVideoTag:\n                                  type: string\n                                ogVideoTvShow:\n                                  type: string\n                                ogVideoWriter:\n                                  type: string\n                                ogWebsite:\n                                  type: string\n                                updatedTime:\n                                  type: string\n                            - type: object\n                              properties:\n                                oembed:\n                                  oneOf:\n                                  - allOf:\n                                    - &id003\n                                      type: object\n                                      description: Basic data structure of every oembed\n                                        response see https://oembed.com/\n                                      required:\n                                      - type\n                                      - version\n                                      properties:\n                                        type:\n                                          type: string\n                                        version:\n                                          type:\n                                          - string\n                                          - 'null'\n                                        title:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A text title, describing the\n                                            resource.", "mimetype": "text/plain", "start_char_idx": 7702, "end_char_idx": 18067, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "65dc91a1-1dc1-407c-9dd2-5285ff3c3128": {"__data__": {"id_": "65dc91a1-1dc1-407c-9dd2-5285ff3c3128", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0d5366e3-720d-4296-b3b8-0bc8ea181d53", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "2b5be6ac31bcc85d062ee50f3323dbb7cab319411b58be46cb7aed7c68211486", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2ec69cdd-6a38-4d5b-8f4d-b9e896bba69d", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "b30902015d8ad8593f6c074295913b06d729f0773b4ca172da7f55ff90b66ca1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d3d45944-c42e-4e07-818c-3308de054334", "node_type": "1", "metadata": {}, "hash": "23a04483365d8bcc2b18a2d1ac96edd50ac2b76ebbbf7ad056f6abdb7ce9a7f4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "author_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the author/owner\n                                            of the resource.\n                                        author_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL for the author/owner\n                                            of the resource.\n                                        provider_name:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The name of the resource provider.\n                                        provider_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The url of the resource provider.\n                                        cache_age:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The suggested cache lifetime\n                                            for this resource, in seconds. Consumers\n                                            may choose to use this value or not.\n                                        thumbnail_url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: A URL to a thumbnail image\n                                            representing the resource. The thumbnail\n                                            must respect any maxwidth and maxheight\n                                            parameters. If this parameter is present,\n                                            thumbnail_width and thumbnail_height must\n                                            also be present.\n                                        thumbnail_width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width of the optional thumbnail.\n                                            If this parameter is present, thumbnail_url\n                                            and thumbnail_height must also be present.\n                                        thumbnail_height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height of the optional\n                                            thumbnail. If this parameter is present,\n                                            thumbnail_url and thumbnail_width must\n                                            also be present.\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - rich\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to display\n                                            the resource. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities. The markup\n                                            should be valid XHTML 1.0 Basic.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - html\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - video\n                                        html:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The HTML required to embed\n                                            a video player. The HTML should have no\n                                            padding or margins. Consumers may wish\n                                            to load the HTML in an off-domain iframe\n                                            to avoid XSS vulnerabilities.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels required\n                                            to display the HTML.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels required\n                                            to display the HTML.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.", "mimetype": "text/plain", "start_char_idx": 18108, "end_char_idx": 27170, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d3d45944-c42e-4e07-818c-3308de054334": {"__data__": {"id_": "d3d45944-c42e-4e07-818c-3308de054334", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0d5366e3-720d-4296-b3b8-0bc8ea181d53", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "2b5be6ac31bcc85d062ee50f3323dbb7cab319411b58be46cb7aed7c68211486", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "65dc91a1-1dc1-407c-9dd2-5285ff3c3128", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "605a60687fb9053bb1a997467253eac31269d72b64b47dd7ba743120a3baed35", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b78d9453-ea28-40a6-9f6d-0f380b707ac9", "node_type": "1", "metadata": {}, "hash": "d2c745055c34b05df38156a53e572587481b7019a7d17c71b53ebf72656e7c1e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      - url\n                                      - width\n                                      - height\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - photo\n                                        url:\n                                          type:\n                                          - string\n                                          - 'null'\n                                          description: The source URL of the image.\n                                            Consumers should be able to insert this\n                                            URL into an <img> element. Only HTTP and\n                                            HTTPS URLs are valid.\n                                        width:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The width in pixels of the\n                                            image specified in the url parameter.\n                                        height:\n                                          type:\n                                          - number\n                                          - 'null'\n                                          description: The height in pixels of the\n                                            image specified in the url parameter.\n                                  - allOf:\n                                    - *id003\n                                    - type: object\n                                      required:\n                                      - type\n                                      properties:\n                                        type:\n                                          type: string\n                                          enum:\n                                          - link\n                                  discriminator:\n                                    propertyName: type\n                                    mapping:\n                                      rich: '#/components/schemas/OembedRichData'\n                                      video: '#/components/schemas/OembedVideoData'\n                                      photo: '#/components/schemas/OembedPhotoData'\n                                      link: '#/components/schemas/OembedLinkData'\n                          frame: &id010\n                            discriminator:\n                              propertyName: version\n                            oneOf:\n                            - description: Frame v1 object\n                              allOf:\n                              - &id004\n                                description: Frame base object used across all versions\n                                type: object\n                                required:\n                                - version\n                                - image\n                                - frames_url\n                                properties:\n                                  version:\n                                    type: string\n                                    description: Version of the frame, 'next' for\n                                      v2, 'vNext' for v1\n                                  image:\n                                    type: string\n                                    description: URL of the image\n                                  frames_url:\n                                    type: string\n                                    description: Launch URL of the frame\n                              - type: object\n                                properties:\n                                  buttons:\n                                    type: array\n                                    items:\n                                      type: object\n                                      required:\n                                      - index\n                                      - action_type\n                                      properties:\n                                        title:\n                                          type: string\n                                          description: Title of the button\n                                        index:\n                                          type: integer\n                                          description: Index of the button\n                                        action_type:\n                                          type: string\n                                          description: The action type of a frame\n                                            button. Action types \"mint\" & \"link\" are\n                                            to be handled on the client side only\n                                            and so they will produce a no/op for POST\n                                            /farcaster/frame/action.\n                                          enum:\n                                          - post\n                                          - post_redirect\n                                          - tx\n                                          - link\n                                          - mint\n                                        target:\n                                          type: string\n                                          description: Target of the button\n                                        post_url:\n                                          type: string\n                                          description: Used specifically for the tx\n                                            action type to post a successful transaction\n                                            hash\n                                  post_url:\n                                    type: string\n                                    description: Post URL to take an action on this\n                                      frame\n                                  title:\n                                    type: string\n                                  image_aspect_ratio:\n                                    type: string\n                                  input:\n                                    type: object\n                                    properties:\n                                      text:\n                                        type: string\n                                        description: Input text for the frame\n                                  state:\n                                    type: object\n                                    properties:\n                                      serialized:\n                                        type: string\n                                        description: State for the frame in a serialized\n                                          format\n                            - description: Frame v2 object\n                              allOf:\n                              - *id004\n                              - type: object\n                                required:\n                                - title\n                                - name\n                                - icon\n                                properties:\n                                  manifest:\n                                    type: object\n                                    properties:\n                                      account_association:\n                                        type: object\n                                        properties:\n                                          header:\n                                            type: string\n                                          payload:\n                                            type: string\n                                          signature:\n                                            type: string\n                                        required:\n                                        - header\n                                        - payload\n                                        - signature\n                                      frame:\n                                        type: object\n                                        properties:\n                                          version:\n                                            type: string\n                                            enum:\n                                            - 0.0.0\n                                            - 0.0.", "mimetype": "text/plain", "start_char_idx": 25349, "end_char_idx": 34212, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b78d9453-ea28-40a6-9f6d-0f380b707ac9": {"__data__": {"id_": "b78d9453-ea28-40a6-9f6d-0f380b707ac9", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0d5366e3-720d-4296-b3b8-0bc8ea181d53", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "2b5be6ac31bcc85d062ee50f3323dbb7cab319411b58be46cb7aed7c68211486", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d3d45944-c42e-4e07-818c-3308de054334", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "572837703c210389462dd118a395be2edef3c0a612e627b8a323b9bad865b71f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4e0a404c-4696-4e79-b79b-6bc80db8a821", "node_type": "1", "metadata": {}, "hash": "aa47cbfe924a2131c13b5d8bcc0b8d3069087612f74a31aacb4bd27fb1e76912", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "0.0\n                                            - 0.0.1\n                                            - '1'\n                                            - next\n                                          name:\n                                            type: string\n                                            maxLength: 32\n                                          home_url:\n                                            type: string\n                                            maxLength: 512\n                                          icon_url:\n                                            type: string\n                                            maxLength: 512\n                                          image_url:\n                                            type: string\n                                            maxLength: 512\n                                          button_title:\n                                            type: string\n                                            maxLength: 32\n                                          splash_image_url:\n                                            type: string\n                                            maxLength: 512\n                                          splash_background_color:\n                                            type: string\n                                          webhook_url:\n                                            type: string\n                                            maxLength: 512\n                                        required:\n                                        - version\n                                        - name\n                                        - home_url\n                                        - icon_url\n                                      triggers:\n                                        type: array\n                                        items:\n                                          oneOf:\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - cast\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                          - type: object\n                                            properties:\n                                              type:\n                                                type: string\n                                                enum:\n                                                - composer\n                                              id:\n                                                type: string\n                                              url:\n                                                type: string\n                                                maxLength: 512\n                                              name:\n                                                type: string\n                                                maxLength: 32\n                                            required:\n                                            - type\n                                            - id\n                                            - url\n                                    required:\n                                    - account_association\n                                  author: &id005\n                                    type: object\n                                    required:\n                                    - object\n                                    - fid\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - user_dehydrated\n                                      fid: *id001\n                                      username:\n                                        type: string\n                                      display_name:\n                                        type: string\n                                      pfp_url:\n                                        type: string\n                            mapping:\n                              vNext: '#/components/schemas/FrameV1'\n                              next: '#/components/schemas/FrameV2'\n                              '1': '#/components/schemas/FrameV2'\n                              0.0.0: '#/components/schemas/FrameV2'\n                              0.0.1: '#/components/schemas/FrameV2'\n                  - type: object\n                    required:\n                    - cast\n                    properties:\n                      cast_id: &id008\n                        type: object\n                        required:\n                        - fid\n                        - hash\n                        properties:\n                          fid: *id001\n                          hash:\n                            type: string\n                      cast:\n                        type: object\n                        required:\n                        - hash\n                        - parent_hash\n                        - parent_url\n                        - root_parent_url\n                        - parent_author\n                        - author\n                        - text\n                        - timestamp\n                        - type\n                        - embeds\n                        - channel\n                        properties:\n                          hash:\n                            type: string\n                          parent_hash:\n                            type:\n                            - string\n                            - 'null'\n                          parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          root_parent_url:\n                            type:\n                            - string\n                            - 'null'\n                          parent_author:\n                            type: object\n                            required:\n                            - fid\n                            properties:\n                              fid:\n                                oneOf:\n                                - type: 'null'\n                                - *id001\n                          author: *id005\n                          text:\n                            type: string\n                          timestamp: *id006\n                          type: &id009\n                            type: string\n                            enum:\n                            - cast-mention\n                            - cast-reply\n                            description: 'The notification type of a cast.\n\n                              '\n                          embeds:\n                            type: array\n                            items:\n                              oneOf:\n                              - *id007\n                              - type: object\n                                required:\n                                - cast\n                                properties:\n                                  cast_id: *id008\n                                  cast:\n                                    type: object\n                                    required:\n                                    - object\n                                    - hash\n                                    properties:\n                                      object:\n                                        type: string\n                                        enum:\n                                        - cast_dehydrated\n                                      hash:\n                                        type: string\n                                      author: *id005\n                          channel:\n                            oneOf:\n                            - type: 'null'\n                            - &id013\n                              type: object\n                              required:\n                              - id\n                              - name\n                              - object\n                              properties:\n                                id:\n                                  type: string\n                                name:\n                                  type: string\n                                object:\n                                  type: string\n                                  enum:\n                                  - channel_dehydrated\n                                image_url:\n                                  type: string\n                                viewer_context: &id012\n                                  description: Adds context on the viewer's or author's\n                                    role in the channel.", "mimetype": "text/plain", "start_char_idx": 34158, "end_char_idx": 43741, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4e0a404c-4696-4e79-b79b-6bc80db8a821": {"__data__": {"id_": "4e0a404c-4696-4e79-b79b-6bc80db8a821", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0d5366e3-720d-4296-b3b8-0bc8ea181d53", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "2b5be6ac31bcc85d062ee50f3323dbb7cab319411b58be46cb7aed7c68211486", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b78d9453-ea28-40a6-9f6d-0f380b707ac9", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "2f8eb8268172a501bc0828482690533a395c4848a7f7d7d357b0d71792e65117", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type: object\n                                  required:\n                                  - following\n                                  properties:\n                                    following:\n                                      description: Indicates if the user is following\n                                        the channel.\n                                      type: boolean\n                                    role:\n                                      type: string\n                                      description: The role of a channel member\n                                      enum:\n                                      - member\n                                      - moderator\n              type: *id009\n          - type: object\n            required:\n            - reactions\n            - replies\n            - thread_hash\n            - mentioned_profiles\n            - channel\n            properties:\n              frames:\n                type: array\n                items: *id010\n              reactions:\n                type: object\n                required:\n                - likes\n                - recasts\n                - likes_count\n                - recasts_count\n                properties:\n                  likes:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      properties:\n                        fid: *id001\n                  recasts:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - fid\n                      - fname\n                      properties:\n                        fid: *id001\n                        fname:\n                          type: string\n                  likes_count:\n                    type: integer\n                    format: int32\n                  recasts_count:\n                    type: integer\n                    format: int32\n              replies:\n                type: object\n                required:\n                - count\n                properties:\n                  count:\n                    type: integer\n                    format: int32\n              thread_hash:\n                type:\n                - string\n                - 'null'\n              mentioned_profiles:\n                type: array\n                items: *id011\n              channel:\n                oneOf:\n                - oneOf:\n                  - type: object\n                    required:\n                    - id\n                    - url\n                    - object\n                    properties:\n                      id:\n                        type: string\n                      url:\n                        type: string\n                      name:\n                        type: string\n                      description:\n                        type: string\n                      object:\n                        type: string\n                        enum:\n                        - channel\n                      created_at:\n                        description: Epoch timestamp in seconds.\n                        type: number\n                      follower_count:\n                        description: Number of followers the channel has.\n                        type: number\n                      external_link:\n                        type: object\n                        description: Channel's external link.\n                        properties:\n                          title:\n                            type: string\n                          url:\n                            type: string\n                      image_url:\n                        type: string\n                      parent_url:\n                        type: string\n                        format: uri\n                      lead: *id011\n                      moderator_fids:\n                        type: array\n                        items: *id001\n                      member_count:\n                        type: integer\n                        format: int32\n                      moderator: *id011\n                      pinned_cast_hash:\n                        type: string\n                        default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n                        description: Cast Hash\n                      hosts:\n                        type: array\n                        deprecated: true\n                        items: *id011\n                      viewer_context: *id012\n                  - *id013\n                  discriminator:\n                    propertyName: object\n                    mapping:\n                      channel: '#/components/schemas/Channel'\n                      dehydrated_channel: '#/components/schemas/DehydratedChannel'\n                - type: 'null'\n              viewer_context:\n                type: object\n                description: Adds context on interactions the viewer has made with\n                  the cast.\n                required:\n                - liked\n                - recasted\n                properties:\n                  liked:\n                    description: Indicates if the viewer liked the cast.\n                    type: boolean\n                  recasted:\n                    description: Indicates if the viewer recasted the cast.\n                    type: boolean\n              author_channel_context: *id012\n      next:\n        type: object\n        description: Returns next cursor\n        required:\n        - cursor\n        properties:\n          cursor:\n            type:\n            - string\n            - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 43776, "end_char_idx": 49433, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e4d6595c-5848-4df5-8971-8c6cae4fcaa5": {"__data__": {"id_": "e4d6595c-5848-4df5-8971-8c6cae4fcaa5", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-channels.md", "file_name": "neynar_search-channels.md", "file_type": "text/markdown", "file_size": 7946, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "42794a6d-e39a-408f-b501-25d2e5075e43", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-channels.md", "file_name": "neynar_search-channels.md", "file_type": "text/markdown", "file_size": 7946, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d0e303bbd4d23d17b2a9e7220f85e67c3ea9f539fc55ea6900551105501ad035", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3ed0f161-780b-4520-9ac4-676a60c50d47", "node_type": "1", "metadata": {}, "hash": "9d0c9b940e135b0c04a55010e78e0dd02d0fb493419219de7ca70c5a002aa1a6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# search-channels\n\n**Endpoint**: `GET /farcaster/channel/search`\n\n## Description\nReturns a list of channels based on ID or name\n\n## Parameters\n- `q` (query): Channel ID or name for the channel being queried\n- `limit` (query): Number of results to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- channels\n- next\nproperties:\n  channels:\n    type: array\n    items:\n      type: object\n      required:\n      - id\n      - url\n      - object\n      properties:\n        id:\n          type: string\n        url:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        object:\n          type: string\n          enum:\n          - channel\n        created_at:\n          description: Epoch timestamp in seconds.\n          type: number\n        follower_count:\n          description: Number of followers the channel has.\n          type: number\n        external_link:\n          type: object\n          description: Channel's external link.\n          properties:\n            title:\n              type: string\n            url:\n              type: string\n        image_url:\n          type: string\n        parent_url:\n          type: string\n          format: uri\n        lead: &id003\n          type: object\n          required:\n          - object\n          - fid\n          - custody_address\n          - username\n          - profile\n          - follower_count\n          - following_count\n          - verifications\n          - verified_addresses\n          - verified_accounts\n          - power_badge\n          properties:\n            object:\n              type: string\n              enum:\n              - user\n            fid: &id002\n              type: integer\n              format: int32\n              description: The unique identifier of a farcaster user (unsigned integer)\n              examples:\n              - 3\n              - 191\n              - 2\n              - 194\n              - 19960\n            username:\n              type: string\n            display_name:\n              type: string\n            custody_address: &id001\n              type: string\n              pattern: ^0x[a-fA-F0-9]{40}$\n              description: Ethereum address\n            pfp_url:\n              type: string\n              description: The URL of the user's profile picture\n            profile:\n              type: object\n              required:\n              - bio\n              properties:\n                bio:\n                  type: object\n                  required:\n                  - text\n                  - mentioned_profiles\n                  properties:\n                    text:\n                      type: string\n                    mentioned_profiles:\n                      type: array\n                      items:\n                        type: string\n                      default: []\n                location:\n                  description: Coordinates and place names for a location\n                  type: object\n                  required:\n                  - latitude\n                  - longitude\n                  properties:\n                    latitude:\n                      type: number\n                      format: double\n                      minimum: -90\n                      maximum: 90\n                    longitude:\n                      type: number\n                      format: double\n                      minimum: -180\n                      maximum: 180\n                    address:\n                      type: object\n                      required:\n                      - city\n                      - country\n                      properties:\n                        city:\n                          type: string\n                        state:\n                          type: string\n                        state_code:\n                          type: string\n                        country:\n                          type: string\n                        country_code:\n                          type: string\n            follower_count:\n              type: integer\n              format: int32\n              description: The number of followers the user has.\n            following_count:\n              type: integer\n              format: int32\n              description: The number of users the user is following.\n            verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 5325, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3ed0f161-780b-4520-9ac4-676a60c50d47": {"__data__": {"id_": "3ed0f161-780b-4520-9ac4-676a60c50d47", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-channels.md", "file_name": "neynar_search-channels.md", "file_type": "text/markdown", "file_size": 7946, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "42794a6d-e39a-408f-b501-25d2e5075e43", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-channels.md", "file_name": "neynar_search-channels.md", "file_type": "text/markdown", "file_size": 7946, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "d0e303bbd4d23d17b2a9e7220f85e67c3ea9f539fc55ea6900551105501ad035", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e4d6595c-5848-4df5-8971-8c6cae4fcaa5", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-channels.md", "file_name": "neynar_search-channels.md", "file_type": "text/markdown", "file_size": 7946, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "acf051d019e59f79f71b8d0fb32ea339bfd430b24f2145f848ab8ee8889d8c31", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "verifications:\n              type: array\n              items: *id001\n            verified_addresses:\n              type: object\n              required:\n              - eth_addresses\n              - sol_addresses\n              properties:\n                eth_addresses:\n                  type: array\n                  description: List of verified Ethereum addresses of the user sorted\n                    by oldest to most recent.\n                  items: *id001\n                sol_addresses:\n                  type: array\n                  description: List of verified Solana addresses of the user sorted\n                    by oldest to most recent.\n                  items:\n                    type: string\n                    pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                    description: Solana address\n            verified_accounts:\n              type: array\n              description: Verified accounts of the user on other platforms, currently\n                only X is supported.\n              items:\n                type: object\n                properties:\n                  platform:\n                    type: string\n                    enum:\n                    - x\n                    - github\n                  username:\n                    type: string\n            power_badge:\n              type: boolean\n            experimental:\n              type: object\n              required:\n              - neynar_user_score\n              properties:\n                neynar_user_score:\n                  type: number\n                  format: double\n                  description: Score that represents the probability that the account\n                    is not spam.\n            viewer_context:\n              type: object\n              description: Adds context on the viewer's follow relationship with the\n                user.\n              required:\n              - following\n              - followed_by\n              - blocking\n              - blocked_by\n              properties:\n                following:\n                  description: Indicates if the viewer is following the user.\n                  type: boolean\n                followed_by:\n                  description: Indicates if the viewer is followed by the user.\n                  type: boolean\n                blocking:\n                  description: Indicates if the viewer is blocking the user.\n                  type: boolean\n                blocked_by:\n                  description: Indicates if the viewer is blocked by the user.\n                  type: boolean\n        moderator_fids:\n          type: array\n          items: *id002\n        member_count:\n          type: integer\n          format: int32\n        moderator: *id003\n        pinned_cast_hash:\n          type: string\n          default: '0xfe90f9de682273e05b201629ad2338bdcd89b6be'\n          description: Cast Hash\n        hosts:\n          type: array\n          deprecated: true\n          items: *id003\n        viewer_context:\n          description: Adds context on the viewer's or author's role in the channel.\n          type: object\n          required:\n          - following\n          properties:\n            following:\n              description: Indicates if the user is following the channel.\n              type: boolean\n            role:\n              type: string\n              description: The role of a channel member\n              enum:\n              - member\n              - moderator\n  next:\n    type: object\n    description: Returns next cursor\n    required:\n    - cursor\n    properties:\n      cursor:\n        type:\n        - string\n        - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4326, "end_char_idx": 7945, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "571503e2-b319-4536-9d5c-143ddab4f8e9": {"__data__": {"id_": "571503e2-b319-4536-9d5c-143ddab4f8e9", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-user.md", "file_name": "neynar_search-user.md", "file_type": "text/markdown", "file_size": 6996, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "645beb4b-3593-4ade-a39a-049bc36835ef", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-user.md", "file_name": "neynar_search-user.md", "file_type": "text/markdown", "file_size": 6996, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "157a8125a3b214169b4862cc2da2305204c77b3cd6d912860edf3ceb2d42b5dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "62febbfa-f5aa-4749-999e-2d9e47252b78", "node_type": "1", "metadata": {}, "hash": "fed4c39c0214dafbdce593fa9eeac9fd444f9892b8ec1583498f0587522bd6ee", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# search-user\n\n**Endpoint**: `GET /farcaster/user/search`\n\n## Description\nSearch for Usernames\n\n## Parameters\n- `q` (query): No description\n- `viewer_fid` (query): Providing this will return search results that respects this user's mutes and blocks and includes `viewer_context`.\n- `limit` (query): Number of users to fetch\n- `cursor` (query): Pagination cursor.\n\n## Response\n```yaml\ntype: object\nrequired:\n- result\nproperties:\n  result:\n    type: object\n    required:\n    - users\n    properties:\n      users:\n        type: array\n        items:\n          anyOf:\n          - type: object\n            required:\n            - object\n            - fid\n            - custody_address\n            - username\n            - profile\n            - follower_count\n            - following_count\n            - verifications\n            - verified_addresses\n            - verified_accounts\n            - power_badge\n            properties:\n              object:\n                type: string\n                enum:\n                - user\n              fid:\n                type: integer\n                format: int32\n                description: The unique identifier of a farcaster user (unsigned integer)\n                examples:\n                - 3\n                - 191\n                - 2\n                - 194\n                - 19960\n              username:\n                type: string\n              display_name:\n                type: string\n              custody_address: &id001\n                type: string\n                pattern: ^0x[a-fA-F0-9]{40}$\n                description: Ethereum address\n              pfp_url:\n                type: string\n                description: The URL of the user's profile picture\n              profile:\n                type: object\n                required:\n                - bio\n                properties:\n                  bio:\n                    type: object\n                    required:\n                    - text\n                    - mentioned_profiles\n                    properties:\n                      text:\n                        type: string\n                      mentioned_profiles:\n                        type: array\n                        items:\n                          type: string\n                        default: []\n                  location:\n                    description: Coordinates and place names for a location\n                    type: object\n                    required:\n                    - latitude\n                    - longitude\n                    properties:\n                      latitude:\n                        type: number\n                        format: double\n                        minimum: -90\n                        maximum: 90\n                      longitude:\n                        type: number\n                        format: double\n                        minimum: -180\n                        maximum: 180\n                      address:\n                        type: object\n                        required:\n                        - city\n                        - country\n                        properties:\n                          city:\n                            type: string\n                          state:\n                            type: string\n                          state_code:\n                            type: string\n                          country:\n                            type: string\n                          country_code:\n                            type: string\n              follower_count:\n                type: integer\n                format: int32\n                description: The number of followers the user has.\n              following_count:\n                type: integer\n                format: int32\n                description: The number of users the user is following.\n              verifications:\n                type: array\n                items: *id001\n              verified_addresses:\n                type: object\n                required:\n                - eth_addresses\n                - sol_addresses\n                properties:\n                  eth_addresses:\n                    type: array\n                    description: List of verified Ethereum addresses of the user sorted\n                      by oldest to most recent.\n                    items: *id001\n                  sol_addresses:\n                    type: array\n                    description: List of verified Solana addresses of the user sorted\n                      by oldest to most recent.\n                    items:\n                      type: string\n                      pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$\n                      description: Solana address\n              verified_accounts:\n                type: array\n                description: Verified accounts of the user on other platforms, currently\n                  only X is supported.\n                items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 6195, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "62febbfa-f5aa-4749-999e-2d9e47252b78": {"__data__": {"id_": "62febbfa-f5aa-4749-999e-2d9e47252b78", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-user.md", "file_name": "neynar_search-user.md", "file_type": "text/markdown", "file_size": 6996, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "645beb4b-3593-4ade-a39a-049bc36835ef", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-user.md", "file_name": "neynar_search-user.md", "file_type": "text/markdown", "file_size": 6996, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "157a8125a3b214169b4862cc2da2305204c77b3cd6d912860edf3ceb2d42b5dc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "571503e2-b319-4536-9d5c-143ddab4f8e9", "node_type": "1", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-user.md", "file_name": "neynar_search-user.md", "file_type": "text/markdown", "file_size": 6996, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}, "hash": "6c42be8505e8115996ef9bf07f282c18e8cdd9ba7509c387aba9263c0a4c1c4b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "items:\n                  type: object\n                  properties:\n                    platform:\n                      type: string\n                      enum:\n                      - x\n                      - github\n                    username:\n                      type: string\n              power_badge:\n                type: boolean\n              experimental:\n                type: object\n                required:\n                - neynar_user_score\n                properties:\n                  neynar_user_score:\n                    type: number\n                    format: double\n                    description: Score that represents the probability that the account\n                      is not spam.\n              viewer_context:\n                type: object\n                description: Adds context on the viewer's follow relationship with\n                  the user.\n                required:\n                - following\n                - followed_by\n                - blocking\n                - blocked_by\n                properties:\n                  following:\n                    description: Indicates if the viewer is following the user.\n                    type: boolean\n                  followed_by:\n                    description: Indicates if the viewer is followed by the user.\n                    type: boolean\n                  blocking:\n                    description: Indicates if the viewer is blocking the user.\n                    type: boolean\n                  blocked_by:\n                    description: Indicates if the viewer is blocked by the user.\n                    type: boolean\n          - type: object\n            required:\n            - pfp\n            properties:\n              pfp:\n                type: object\n                required:\n                - url\n                properties:\n                  url:\n                    type: string\n      next:\n        type: object\n        description: Returns next cursor\n        required:\n        - cursor\n        properties:\n          cursor:\n            type:\n            - string\n            - 'null'\n```", "mimetype": "text/plain", "start_char_idx": 4887, "end_char_idx": 6995, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "303d5504-c8ac-4b26-9ca0-e4f1808cb673": {"__data__": {"id_": "303d5504-c8ac-4b26-9ca0-e4f1808cb673", "embedding": null, "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/shared.md", "file_name": "shared.md", "file_type": "text/markdown", "file_size": 208, "creation_date": "2025-02-14", "last_modified_date": "2025-02-14"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4723f997-cf60-41aa-8790-7e5946369504", "node_type": "4", "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/shared.md", "file_name": "shared.md", "file_type": "text/markdown", "file_size": 208, "creation_date": "2025-02-14", "last_modified_date": "2025-02-14"}, "hash": "dc3cee809814716872256b6457757f864e333380df4dafa5f5d9dd196344b02b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Neynar API shared info:\n- API key is stored in env variable NEYNAR_API_KEY\n- it cannot be access from the frontend code and should be used only in the backend\n- create serverside functions to use the API key", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 207, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"b48593f2-ed3e-4266-882d-ec1d883803a2": {"node_ids": ["8d5804f3-511b-4db7-a348-7ff770daf7e2"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/dune/dune_api.md", "file_name": "dune_api.md", "file_type": "text/markdown", "file_size": 0, "creation_date": "2025-02-14", "last_modified_date": "2025-02-14"}}, "9b054b66-ca01-49a9-9d7d-0ee8485abdc2": {"node_ids": ["1b0df254-b641-4a14-9251-a51170ac9e6e", "cf3b7f08-a7e9-4674-b2b9-1313cddc8899", "3cb91a60-9ff1-4807-b7b9-b6955074342a", "5ba18b61-7f77-444a-a93d-61ae172f4beb", "5eeb7a06-f792-42b0-9d62-95c7d0857ca8"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/cast_search.md", "file_name": "cast_search.md", "file_type": "text/markdown", "file_size": 11630, "creation_date": "2025-02-14", "last_modified_date": "2025-02-14"}}, "efc7ce4b-e652-4f41-8ad4-42370f1a58fd": {"node_ids": ["e360434e-6ef8-413c-8cea-22dc1f510d1a", "61a8f499-462f-4916-a147-86ae161cbce4"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-channels.md", "file_name": "neynar_fetch-all-channels.md", "file_type": "text/markdown", "file_size": 7879, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "b55738b3-76b0-4f65-b4ce-a7a6a4c58e5c": {"node_ids": ["7ea787d4-3400-430f-be10-dbedfe463e5a", "d8dedfb5-356f-4f14-8f18-05fac4021531", "9ec494be-473a-4529-ae93-6039b881b25b", "e149830d-8091-4acb-bf78-c850551861c1", "78147b16-c7c6-484f-9e58-94eb1158572b", "4f39af8e-c178-44b6-b777-bad8758fae9d", "2377a955-26e8-4a48-b2d1-a67e785d3648", "57fef056-e28a-4288-98ba-ebe3c93052a9", "96bc48e2-9257-4c20-81d6-616b3b38ff90", "c382adb9-abfb-44a3-8a88-23cd350cc41f", "529572cd-fe86-4197-89e6-d130743f8176", "5a89dfc4-527e-4d61-9ad2-b2bf5646f7a6", "8282b677-49f3-4184-8a7e-24e27cb0b439", "c5d055c9-65c0-49fe-8102-4df39a427b9d", "207d1e01-17e1-4a59-9470-7298491ccd31"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-all-notifications.md", "file_name": "neynar_fetch-all-notifications.md", "file_type": "text/markdown", "file_size": 50424, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "2271936c-673f-462f-8cf8-ea5ec83a3d50": {"node_ids": ["a2d0a0a2-e2f6-41fb-8e99-cd0df7293316"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-authorization-url.md", "file_name": "neynar_fetch-authorization-url.md", "file_type": "text/markdown", "file_size": 400, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "70f168d9-009b-4805-8bbd-774229708a2e": {"node_ids": ["ae78a21f-1fd8-49b4-8f8d-619b9611bc74", "8fcde984-f8f5-43a9-919b-5eeef789c20c"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-ban-list.md", "file_name": "neynar_fetch-ban-list.md", "file_type": "text/markdown", "file_size": 6372, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "9f8417f3-5a22-4b2b-8195-711d5946f41b": {"node_ids": ["59e8503a-d123-4b84-b151-0ff85029c655", "b68a199f-8c60-4397-86ef-daaad0b5fc3b"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-block-list.md", "file_name": "neynar_fetch-block-list.md", "file_type": "text/markdown", "file_size": 6616, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "c04b84e4-ad03-403a-b1aa-d58f3520624b": {"node_ids": ["e44933de-d420-469f-8f44-313a0551c3ce", "4b80cc89-9cfb-4347-ba10-ac9223ca7d80", "4154f2e0-6174-4af8-8c31-4b7bd2016655", "cb3b5d33-eb10-481b-bd27-1f8ef9e49b96", "bfca3409-9a02-4a22-a779-3ceacaba4a9a", "92fd57d6-41c5-46c7-bb79-46e24b928d2a", "098473d0-50a0-487a-9426-187bccf67ef8"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-casts.md", "file_name": "neynar_fetch-bulk-casts.md", "file_type": "text/markdown", "file_size": 48749, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "80c6973b-abe6-4e91-ba5a-effb7ff66598": {"node_ids": ["51030bb1-9f42-44e7-9cda-b0ad911cf9b9", "79e5f9de-01a6-4fbe-8dce-6260c14f6487"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-channels.md", "file_name": "neynar_fetch-bulk-channels.md", "file_type": "text/markdown", "file_size": 7853, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "de1a1071-d1f5-4488-a9d5-6c573089538b": {"node_ids": ["ea735665-e6f0-4845-ad31-45ec895c5574"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-users-by-eth-or-sol-address.md", "file_name": "neynar_fetch-bulk-users-by-eth-or-sol-address.md", "file_type": "text/markdown", "file_size": 1264, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "220e9856-b60b-41d1-b139-e7e15ac094c8": {"node_ids": ["a8e92641-460f-4401-8cb1-6eeb2ee1eb34"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-bulk-users.md", "file_name": "neynar_fetch-bulk-users.md", "file_type": "text/markdown", "file_size": 5292, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "98a73a61-96f1-47cc-8c05-e1b7dddacdcc": {"node_ids": ["1e85b40b-eb6a-4887-bad0-68768af6f125"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-cast-metrics.md", "file_name": "neynar_fetch-cast-metrics.md", "file_type": "text/markdown", "file_size": 856, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "242e5282-687d-41c6-a785-f7e986ebdfa2": {"node_ids": ["863ecb33-617a-46c5-ac7f-c41a06f50a18", "54e3db40-6e76-4075-8eb6-f5b19d76e977"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-cast-reactions.md", "file_name": "neynar_fetch-cast-reactions.md", "file_type": "text/markdown", "file_size": 6993, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "2af4645b-a548-4241-a7d0-d319a2a700ba": {"node_ids": ["ae00f15c-8d8d-4366-9d0c-039c26106190", "6cd40cbe-2f30-4dd6-8c7e-09f722610f8f", "0efe17dc-f46c-4fca-8fdd-f9dc28ebfe06", "c058fb28-e0d3-4e3a-8f62-ca3e85331698", "61e76b09-3e31-496f-a005-de4a30bbcf08", "7a680cc7-39a1-459b-91ce-ab18e7a08a99", "5a07f857-208a-450f-8649-e0eff73dddea"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-casts-for-user.md", "file_name": "neynar_fetch-casts-for-user.md", "file_type": "text/markdown", "file_size": 44613, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "6183c71c-576a-4d8d-b5a3-3d9d1cec4c03": {"node_ids": ["fa1677ac-b93c-4cb5-ac1b-bbda106dde60", "5d10b3b1-327b-4f66-bc9f-fcc128cf764c"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-invites.md", "file_name": "neynar_fetch-channel-invites.md", "file_type": "text/markdown", "file_size": 6802, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "a02b6dd6-999b-443b-80c2-48582c81ec47": {"node_ids": ["ce042bf2-e224-4db5-8323-ef7b218c195a", "de43eeb2-b4b7-4706-9f98-f81d2b6f5f2a"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-members.md", "file_name": "neynar_fetch-channel-members.md", "file_type": "text/markdown", "file_size": 9938, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "facf980b-c336-4b8e-b6f6-63af1c3941b1": {"node_ids": ["41f54eda-a9a1-4333-ad34-ced841a861e1", "09573924-2766-4bae-8b84-d7b282345081", "9820be8e-a7c3-49c6-8241-8263d78c6549", "02fa3b0f-de52-472c-a9d8-0dc488ee1625", "3ac19dc4-a885-4130-8ca0-857194ee1ac8", "c4a9089b-6e16-4e1f-b3f5-cb373ed06c96", "f21707c2-a25c-4e11-b75b-b5e326d4e3b1", "6fbb01a2-c7f3-4bf9-a2c2-49750b86f8c9", "ea0dee89-86fc-4575-851b-a574debd4918", "4d7ce6f8-ba06-4beb-b999-4ef4dc3fd374", "6603c615-aed5-41f1-a81b-a828ac395269", "1b5f5925-7fec-41c0-8a28-1e1973120c1a", "c4e6b672-bbb5-4583-aa62-80522f2de65c", "087033fc-c19c-4887-a4b0-b1474499f271", "2a7ac5c1-ebe3-4dcd-b9f8-1ea8c07da005"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-channel-notifications-for-user.md", "file_name": "neynar_fetch-channel-notifications-for-user.md", "file_type": "text/markdown", "file_size": 50481, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "a12e66c5-3251-4dc2-b0d0-a807e2d3eb8e": {"node_ids": ["ab2c2a9a-9aa5-48b5-a457-6014f2300ae6"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-composer-actions.md", "file_name": "neynar_fetch-composer-actions.md", "file_type": "text/markdown", "file_size": 2132, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "4e43eb19-3a56-4808-bd92-9f9cd86dae61": {"node_ids": ["459da2fc-a395-4165-9af2-269b9e72c351", "1f770972-4725-4776-96c9-ed0be7dd3a4b", "25fcdf93-d641-42cb-aa09-83823dd82d26", "b42c5468-b9c0-46f1-99e4-e600f61ae731"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-embedded-url-metadata.md", "file_name": "neynar_fetch-embedded-url-metadata.md", "file_type": "text/markdown", "file_size": 18863, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "48362c28-add9-4247-918e-7b63f8b7427c": {"node_ids": ["6e05d2e7-ae58-42fb-83a2-4a0e507e292e", "e34f03c1-f92f-415a-926a-d680ee2092e7", "732ab74d-6ccb-41a8-9ed0-d86669f784e8", "312a4c86-963f-4a1f-9e74-f3dcfdd0e421", "a6325480-cd41-4821-a7a6-5083e6834979", "3ce22342-6423-4f1a-92c5-d3e888beb144", "6373b608-8652-4da3-8e9c-33cf5f712e58"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-channel-ids.md", "file_name": "neynar_fetch-feed-by-channel-ids.md", "file_type": "text/markdown", "file_size": 44813, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "4c911618-3208-4176-ac5e-e33c757deeda": {"node_ids": ["72b9748d-e13e-4bed-b2ee-6259608a2a9e", "b1b3d0ca-a3e9-46eb-95b0-da1b294033a9", "9b49f877-0188-4f79-97a9-f0fa3a1fb663", "994e82b4-1775-4f21-b549-dbcd6aa35f6a", "fbc7c33d-3148-475d-8ed0-4a3949aa0b2e", "aa733059-9f30-45af-baf2-f1283e7594e3", "267512d8-4901-473c-abf6-9cb09ebdc769"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-by-parent-urls.md", "file_name": "neynar_fetch-feed-by-parent-urls.md", "file_type": "text/markdown", "file_size": 44484, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "a493eef0-c14f-4b1d-8f1c-032c0fe859bd": {"node_ids": ["1adf74d7-b4b9-4d99-b74e-bce3f681a272", "34253a34-3c81-4479-a846-d684e34cc7f2", "709c9a9d-fe77-4931-9040-52d26fc372ae", "9b7f969e-e56a-4bc7-8311-19aa11944fe8", "00fd70fe-3b13-4bbd-b1ad-6611c07af160", "842620a9-d8d1-45da-88a4-aa4e3925455e", "46ef5de3-4d92-4bd7-84f1-79f3f90daa46"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed-for-you.md", "file_name": "neynar_fetch-feed-for-you.md", "file_type": "text/markdown", "file_size": 44656, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "a3183841-210f-4f53-8d51-622c70d427e8": {"node_ids": ["94dea1ec-7bc8-4836-8a6d-a8e84130442e", "b32ad36d-b66e-4f13-bb4b-2211a0155e2a", "c35af929-37c8-4a59-a3ef-c86643a26714", "62499b59-1527-48bb-ab88-a30670904f54", "1c03d3fb-8a0a-48c8-b739-f6c8fa79ffb8", "1d11c0d2-fe91-45e0-baae-842c991571fb", "78919c15-6bda-48d5-88e1-61157bc4b842", "7152baf1-bf93-47bd-b9c5-b38f1b765f58"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-feed.md", "file_name": "neynar_fetch-feed.md", "file_type": "text/markdown", "file_size": 45712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "951c8c62-f569-456f-aa6b-9a389d6d4772": {"node_ids": ["7a802e83-37fd-4af4-a2b7-2ad07a0fd043", "cf6c7ba7-892c-4638-aad2-e4348ff14639"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-follow-suggestions.md", "file_name": "neynar_fetch-follow-suggestions.md", "file_type": "text/markdown", "file_size": 5668, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "0c3d6bce-267c-49a7-8e62-749aa5ac90cd": {"node_ids": ["0de69666-2062-461c-911e-ce861af7abd0", "4e4f541d-d517-4658-bacd-b6ac4af9bf20"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-followers-for-a-channel.md", "file_name": "neynar_fetch-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 5712, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "f3675b9c-2725-43d9-855c-9d80f9896275": {"node_ids": ["3ba8e832-448f-4c20-b001-0e211dd30d98"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frame-catalog.md", "file_name": "neynar_fetch-frame-catalog.md", "file_type": "text/markdown", "file_size": 4732, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "74793ae7-2e0b-43e1-b2e0-c974182ddee6": {"node_ids": ["a437ffd2-be26-4d04-8ec7-fd1071eed8be", "379407c6-a95a-423d-94ae-997617e7e21f"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frame-meta-tags-from-url.md", "file_name": "neynar_fetch-frame-meta-tags-from-url.md", "file_type": "text/markdown", "file_size": 6687, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "babf25b7-4762-43b1-bd99-bed26c60a2a7": {"node_ids": ["7abc76c3-0547-426d-81e4-070382b2136f", "f6fa5e93-ed80-424c-9360-48168fecaaf1", "aa87b83f-cc16-449f-8705-ada919bcbc60", "50b138c5-750f-4197-bc0e-44c514f5cc33", "f721d90e-0076-4b6e-82d9-67dfbddc946a", "5a2a1814-03d0-47d1-b27e-cda715accedd", "7ec88278-81e1-43ba-be69-0a37ec887a0f"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-frames-only-feed.md", "file_name": "neynar_fetch-frames-only-feed.md", "file_type": "text/markdown", "file_size": 44293, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "1ff9fb3d-a03c-4586-b3cd-cec5a4cb6f19": {"node_ids": ["9b0e7e85-1774-46e8-a562-df0b3e891751", "efd055c6-9667-432f-a7f3-f846cf3cc047"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-mute-list.md", "file_name": "neynar_fetch-mute-list.md", "file_type": "text/markdown", "file_size": 6430, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "02d83d0b-7bcf-4f2d-a9e1-f16922bdd0e5": {"node_ids": ["f3e1712e-69c6-4af2-b6ac-23ebc54f15d9"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-neynar-frames.md", "file_name": "neynar_fetch-neynar-frames.md", "file_type": "text/markdown", "file_size": 3946, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "3bf3e08c-dadd-4e67-ae29-bc1b8831c917": {"node_ids": ["b5119240-b3a7-4916-b2b7-c42424388a9c"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notification-tokens.md", "file_name": "neynar_fetch-notification-tokens.md", "file_type": "text/markdown", "file_size": 1274, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "27098a12-910d-4a45-bb4a-cf81fa0396dc": {"node_ids": ["0b1b855f-8316-4522-9052-b6112635e635", "5c64aaaa-ecc9-402e-b26a-edb7c7ba7dfd", "b69412d8-3dec-43d3-ac90-c7de044a7f25", "3f673e89-0def-4ca8-b7e3-74ed3044a0b5", "4eed544c-8141-4f6f-8c4e-dded59471603", "8bab7f01-a06c-4153-b220-600679ff3ff4", "b6c539b9-ef2e-4f27-bec5-beb469d07027", "5f551294-6615-4b2c-8217-a930ff1c5173", "35de5949-1b07-4551-887a-be0257633258", "8448ba92-00d3-44a8-8a11-a9b20cce92bd", "e9216099-16bd-4917-93f0-5c7c4d027fbe", "9fbcf625-6eab-4914-b71c-e8a286ab9b31", "32a9345c-150b-448c-8daa-5b5e264865fa", "3c9a4659-25aa-4da1-92ae-e12a915f6977", "7536db83-127f-485f-9fe3-5055d2af2c4c"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-notifications-by-parent-url-for-user.md", "file_name": "neynar_fetch-notifications-by-parent-url-for-user.md", "file_type": "text/markdown", "file_size": 50406, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "fdae7d65-0b77-4e7e-98a6-a56375798dde": {"node_ids": ["322db0df-a197-4cc5-870b-1986e633450d", "9c8370e3-7210-47b5-a294-8934d1a53de9", "a5cb5963-c98f-423f-9ba8-06f31292f50e", "ed5082b5-f3ea-4636-8931-3f2f3b4ce146", "1483e82b-8ab3-42a9-9783-4c2375a2614d", "15fd8a3c-faeb-4135-8c15-b10b43ee30e5", "db11137c-b23f-4e4e-8ae1-f3ee6063d261"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-popular-casts-by-user.md", "file_name": "neynar_fetch-popular-casts-by-user.md", "file_type": "text/markdown", "file_size": 44077, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "d2df5bc0-bc8c-4f7d-bf68-f227c1fe6e3d": {"node_ids": ["e388e187-33fd-478b-8ed5-3fcbcd86c006"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-power-users-lite.md", "file_name": "neynar_fetch-power-users-lite.md", "file_type": "text/markdown", "file_size": 664, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "0229706e-3ab3-4de6-80cf-2adbfce12529": {"node_ids": ["4588c15e-460c-442d-b239-dcfb116511da", "b04fbd32-8e9f-46c0-ad15-af5c23674e72"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-power-users.md", "file_name": "neynar_fetch-power-users.md", "file_type": "text/markdown", "file_size": 5521, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "c68543cd-99fe-4c67-ad79-6f77f5afdf64": {"node_ids": ["bc4143a4-54ae-484e-8c10-605bee5e20b2", "cae23eb3-0a35-4241-bc04-4de01f529a26"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers-for-a-channel.md", "file_name": "neynar_fetch-relevant-followers-for-a-channel.md", "file_type": "text/markdown", "file_size": 7009, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "4c84833b-95a6-457f-9999-f6f1e212a3ad": {"node_ids": ["350dc3b8-eede-437f-baa5-4a1a6564faff", "de6abdb3-81f2-40e3-b229-c731ef7c914d"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-followers.md", "file_name": "neynar_fetch-relevant-followers.md", "file_type": "text/markdown", "file_size": 7000, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "741d6fed-4413-463d-a6f2-2ff9e23b5d9d": {"node_ids": ["33403ca0-9e4f-4cdc-aef1-e91af2cc37f7", "3697c03e-1b95-4812-91f5-5954d39564ea"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-relevant-fungible-owners.md", "file_name": "neynar_fetch-relevant-fungible-owners.md", "file_type": "text/markdown", "file_size": 5860, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "67caaf31-0abd-45ff-8aee-a8fd39ad2dca": {"node_ids": ["06b1f652-c631-4835-b981-a702c5c13d16", "32b4b039-6b2a-4beb-a2f0-6ae0f369bcfd", "3de03ce0-0c80-4006-ad6c-111958bd422d", "f35635d8-d6ba-4599-8df4-54064116dfe2", "75b56390-c7c0-4aa3-92bd-360fb300beff", "6f4fa22c-36ab-4189-856d-0359ea97c164", "e8534c91-b331-4be3-b790-77a816f72ea1"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-replies-and-recasts-for-user.md", "file_name": "neynar_fetch-replies-and-recasts-for-user.md", "file_type": "text/markdown", "file_size": 44478, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "f69422f9-3bbf-42ab-a90b-6dfd4de29c6b": {"node_ids": ["2634fb89-fb15-4512-8377-b2ef79a93946", "8649b97f-3190-4208-aa9c-eaab63e5490e"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribed-to-for-fid.md", "file_name": "neynar_fetch-subscribed-to-for-fid.md", "file_type": "text/markdown", "file_size": 10101, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "b7651718-c022-4b9a-84c6-55af40abf08e": {"node_ids": ["225d592a-5c05-43d8-994c-0fb2e8948929", "5f7a56ab-3811-400f-93f3-ce17f9fd03c3"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscribers-for-fid.md", "file_name": "neynar_fetch-subscribers-for-fid.md", "file_type": "text/markdown", "file_size": 7312, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "e4ace45a-51e2-4bf6-a4bd-c15ac40c1d88": {"node_ids": ["4ca82251-7c02-40ba-9c4e-25a5daa2e6a4"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscription-check.md", "file_name": "neynar_fetch-subscription-check.md", "file_type": "text/markdown", "file_size": 1118, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "615a3998-f805-43b5-abfa-6298517a81c2": {"node_ids": ["0fdb5891-8193-4d80-ba81-5215e5899e04"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-subscriptions-for-fid.md", "file_name": "neynar_fetch-subscriptions-for-fid.md", "file_type": "text/markdown", "file_size": 4334, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "a460c8ee-dc48-4652-a367-01965f59667d": {"node_ids": ["85951a62-48e2-42a0-8342-2bb8dda24b17", "4be74f8d-4aed-444f-beea-13918db68784"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-channels.md", "file_name": "neynar_fetch-trending-channels.md", "file_type": "text/markdown", "file_size": 9294, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "15c15a95-fc5f-4b58-8490-aa52eaed33ef": {"node_ids": ["abc9aed4-4149-4c30-a31a-68da53bab925", "f0cc3f11-4ab4-4ddc-946d-d3165a0b0c04", "edd03f20-bb9a-44a9-b058-f4ff46fdbbc1", "1726f152-9d02-489d-aec5-555acf9f7b62", "d8ba8dc5-7c29-4941-bb42-8a74e07d080f", "6364689a-092b-405b-ae4f-91b09e296e92", "dfe04ab0-37d8-4de1-b912-84a4324f08d5"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-trending-feed.md", "file_name": "neynar_fetch-trending-feed.md", "file_type": "text/markdown", "file_size": 44912, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "5f2edb2f-eb39-44c4-a3b6-cc756152e550": {"node_ids": ["e93a5b0f-61bf-4144-acfb-df1f1a6197e9"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-balance.md", "file_name": "neynar_fetch-user-balance.md", "file_type": "text/markdown", "file_size": 3777, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "c4f348d0-ee7d-4342-8e5a-ba0c45af1230": {"node_ids": ["f1553cf6-ef2c-46ab-ba6a-94807f0401b1", "2df0cae3-e4c3-44e7-9a5b-9ebe31cd0f06"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channel-memberships.md", "file_name": "neynar_fetch-user-channel-memberships.md", "file_type": "text/markdown", "file_size": 9855, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "2a2db8b3-1661-4454-930a-9f7e80dcc03e": {"node_ids": ["c53b6e61-705b-43c8-83a6-2f6fa74d62e6", "600a2904-a510-4a00-b7ae-6192c0b8ed3e"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-channels.md", "file_name": "neynar_fetch-user-channels.md", "file_type": "text/markdown", "file_size": 7939, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "480aee47-3d73-4005-a011-a2cdf3e5c36b": {"node_ids": ["54ec65b9-d035-44e4-8854-78882ec4f3cf", "8798443a-ce21-4ebb-be9c-07168555f445"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-followers.md", "file_name": "neynar_fetch-user-followers.md", "file_type": "text/markdown", "file_size": 6528, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "b538b4d3-fb8a-4f2e-9349-c0f9d4620e3f": {"node_ids": ["f283b1a9-9e29-4d74-83ba-25416ddb85b4", "966cc906-fe3f-4c41-b893-bfec380c136b", "c308d7f5-db1c-408c-99e3-fed6e9dc2500", "9acbed65-3e96-4ec8-94a5-e0f41dfa6906", "38cb9f32-05ac-41b0-a0b6-34f9bcab0c1e", "ea729bc7-7309-4996-9fd7-511296e1a9fe", "15093888-59b3-40f4-bdcf-b940b1d5507f"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following-feed.md", "file_name": "neynar_fetch-user-following-feed.md", "file_type": "text/markdown", "file_size": 44416, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "1c7be2fa-8287-4845-a5e1-d12a3f1f8b6a": {"node_ids": ["3aed001b-20fe-4f0d-a1d5-2480e18b45ea", "92df86b5-3739-4ac5-8c2d-657ff353e45c"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-following.md", "file_name": "neynar_fetch-user-following.md", "file_type": "text/markdown", "file_size": 6593, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "9163378a-17bd-44d7-99ca-4db49ce71038": {"node_ids": ["c5cb6f00-e26c-45b5-804d-f1642a20730e", "7572a6f0-85cf-40f9-9c6c-a61069b48bc1", "b92aeba7-6504-49f0-bbab-675078bc7579", "d08fbc0b-24a6-4d45-a789-9f3bc37d909e", "64fdb6e5-4bbf-488d-b4dc-2d898d1a2d7a", "b82268ef-daae-46bd-94c4-344ded6b6108", "c1a871cb-a7ae-4fd6-928f-9c40439d67c7"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-user-reactions.md", "file_name": "neynar_fetch-user-reactions.md", "file_type": "text/markdown", "file_size": 49341, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "0841d887-6c2e-4726-8d80-e1b1276bfbf4": {"node_ids": ["c7a77f1c-8dcd-40e8-b4e1-fc598601b2da", "bceaeffd-6772-4372-8a11-0dcd55169289"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-active-channels.md", "file_name": "neynar_fetch-users-active-channels.md", "file_type": "text/markdown", "file_size": 7942, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "88854f72-5bc3-4eb6-9d97-37a11e6d00cb": {"node_ids": ["cb809c7f-4dfd-4772-b78f-f6a4f89090b5", "cd197ac2-243a-4973-8c62-7c2bacc19cc8"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-users-by-location.md", "file_name": "neynar_fetch-users-by-location.md", "file_type": "text/markdown", "file_size": 5714, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "ee109f25-ba0c-4a93-af47-c7737d3534fe": {"node_ids": ["df9c95c5-4b47-4699-8491-652639d49c33"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-validate-frame-analytics.md", "file_name": "neynar_fetch-validate-frame-analytics.md", "file_type": "text/markdown", "file_size": 2117, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "21fc4d23-2342-4854-9d3a-9c182580c80b": {"node_ids": ["51efda83-c5ec-497c-a1a5-4d7870c8eff6"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_fetch-validate-frame-list.md", "file_name": "neynar_fetch-validate-frame-list.md", "file_type": "text/markdown", "file_size": 290, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "c072613c-baec-4287-9adc-d80350737e07": {"node_ids": ["baec1a96-838d-4dcc-8a75-8d9f401d77c1"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_follow-channel.md", "file_name": "neynar_follow-channel.md", "file_type": "text/markdown", "file_size": 205, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "7c38a766-2006-49e9-8faf-523c26f7e9bb": {"node_ids": ["d62f0f91-d4c8-4acc-93bd-a29438537f2b"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_get-fresh-account-FID.md", "file_name": "neynar_get-fresh-account-FID.md", "file_type": "text/markdown", "file_size": 278, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "0a18e2e4-3fdf-4cf6-b442-4e8d1f6f08cd": {"node_ids": ["2b09d979-9795-4cfa-92d1-dddc06c18fa3"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_invite-channel-member.md", "file_name": "neynar_invite-channel-member.md", "file_type": "text/markdown", "file_size": 229, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "122838c8-d639-4921-93fb-5955862e46b1": {"node_ids": ["53072224-d8b7-4075-9422-40253e9021ae"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_is-fname-available.md", "file_name": "neynar_is-fname-available.md", "file_type": "text/markdown", "file_size": 276, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "05701ad3-36a7-453a-8b0b-c9307eaa10fa": {"node_ids": ["d8fe4b90-02d4-4699-aacb-b776f76f85ad", "c6e52d0c-f10c-4439-a553-a72462761dce", "9f3f25ee-5bcd-4a9a-8213-a82119c42509", "117f86ad-147c-4fe5-902d-b99d4a74bf01", "aa3a14e5-fba5-42eb-93b2-0fcf9d6ea1ca", "af799cb2-cf85-4ec8-b63e-e1f654c99f68", "97150e0c-1c44-45fe-86eb-c48322f4edd2"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_name": "neynar_lookup-cast-by-hash-or-warpcast-url.md", "file_type": "text/markdown", "file_size": 41916, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "ad321512-8ac2-4b6d-ba02-5224d7e8bf31": {"node_ids": ["996de952-92fd-435b-932d-785c21e0bd05", "53bba905-f6e5-4fbb-86f2-f501c0a7936b"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation-summary.md", "file_name": "neynar_lookup-cast-conversation-summary.md", "file_type": "text/markdown", "file_size": 6704, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "bd615567-0e53-4243-a9d7-ddc0f6531d78": {"node_ids": ["bee3f728-6e21-4e72-8a42-2d53f6ae5955", "03b2fcf5-5c41-4cff-8d79-37a1c1db88ba", "b75469d9-a4ce-4552-80d0-31121dfb1109", "844a40ca-56e2-4377-80e9-a5012cdb116e", "1f444111-b07e-4bcd-9d0a-8a1f138f253a", "392ceefc-6532-4b38-afdd-213eef62fcf2", "98207a61-5f10-46bf-a3be-7510e79c6f42"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-cast-conversation.md", "file_name": "neynar_lookup-cast-conversation.md", "file_type": "text/markdown", "file_size": 50693, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "f98d43a4-c75c-44e1-8b88-783448616469": {"node_ids": ["731e05a3-dbc8-478e-9cdc-644d711fde13", "aaf0f4c8-36bf-4d75-980a-fddf25eecda6"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-channel.md", "file_name": "neynar_lookup-channel.md", "file_type": "text/markdown", "file_size": 7300, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "018571e4-d492-4eb5-ad51-6e9535271bea": {"node_ids": ["c84318ca-5580-4c61-9504-ffa964f49d9b"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-neynar-frame.md", "file_name": "neynar_lookup-neynar-frame.md", "file_type": "text/markdown", "file_size": 3783, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "8da3c507-947f-42fd-8338-09dfc8efc536": {"node_ids": ["1a75a8a2-89f6-4904-ac55-f3188b1af7f7"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-by-custody-address.md", "file_name": "neynar_lookup-user-by-custody-address.md", "file_type": "text/markdown", "file_size": 4895, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "6b008b47-fd07-4e11-997f-e35767657214": {"node_ids": ["0fc6f802-5794-46cd-b803-8e885db7b013"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-by-username.md", "file_name": "neynar_lookup-user-by-username.md", "file_type": "text/markdown", "file_size": 4927, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "196038fc-1366-4d00-9964-9a79a3506aca": {"node_ids": ["6f345aad-b1ff-408b-8b08-c2cce9c565b0"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-storage-allocations.md", "file_name": "neynar_lookup-user-storage-allocations.md", "file_type": "text/markdown", "file_size": 1451, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "65a4e1ae-01df-4a75-8dab-d2614b3f90f4": {"node_ids": ["d5c82260-cf1e-4f11-94a8-ddad6ef7f565"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_lookup-user-storage-usage.md", "file_name": "neynar_lookup-user-storage-usage.md", "file_type": "text/markdown", "file_size": 1207, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "1638439e-312c-49db-a171-783fba222374": {"node_ids": ["e62ad495-8263-45e0-800a-71a35f0e728b"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_remove-channel-member.md", "file_name": "neynar_remove-channel-member.md", "file_type": "text/markdown", "file_size": 263, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "b4d27173-2a9e-4a5d-9c7e-df39b946ef87": {"node_ids": ["2fdd2a99-9f51-4791-ac11-8d3b0226d61a"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_respond-channel-invite.md", "file_name": "neynar_respond-channel-invite.md", "file_type": "text/markdown", "file_size": 236, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "0d5366e3-720d-4296-b3b8-0bc8ea181d53": {"node_ids": ["60f77b64-44c4-4f02-a112-2c6ebd82cfe8", "5e7726f2-6863-4c98-b8fb-98cf4e47dfff", "2ec69cdd-6a38-4d5b-8f4d-b9e896bba69d", "65dc91a1-1dc1-407c-9dd2-5285ff3c3128", "d3d45944-c42e-4e07-818c-3308de054334", "b78d9453-ea28-40a6-9f6d-0f380b707ac9", "4e0a404c-4696-4e79-b79b-6bc80db8a821"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-casts.md", "file_name": "neynar_search-casts.md", "file_type": "text/markdown", "file_size": 49434, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "42794a6d-e39a-408f-b501-25d2e5075e43": {"node_ids": ["e4d6595c-5848-4df5-8971-8c6cae4fcaa5", "3ed0f161-780b-4520-9ac4-676a60c50d47"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-channels.md", "file_name": "neynar_search-channels.md", "file_type": "text/markdown", "file_size": 7946, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "645beb4b-3593-4ade-a39a-049bc36835ef": {"node_ids": ["571503e2-b319-4536-9d5c-143ddab4f8e9", "62febbfa-f5aa-4749-999e-2d9e47252b78"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/neynar_search-user.md", "file_name": "neynar_search-user.md", "file_type": "text/markdown", "file_size": 6996, "creation_date": "2025-02-15", "last_modified_date": "2025-02-15"}}, "4723f997-cf60-41aa-8790-7e5946369504": {"node_ids": ["303d5504-c8ac-4b26-9ca0-e4f1808cb673"], "metadata": {"file_path": "/Users/hellno/dev/farcaster/frameception/backend/llm_context/docs/neynar/shared.md", "file_name": "shared.md", "file_type": "text/markdown", "file_size": 208, "creation_date": "2025-02-14", "last_modified_date": "2025-02-14"}}}}